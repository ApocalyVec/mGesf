<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: XeThru::DataPlayer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_xe_thru.xhtml">XeThru</a></li><li class="navelem"><a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_xe_thru_1_1_data_player-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">XeThru::DataPlayer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> class allows playback of telegrams / binary packets from a recording generated by <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a>.  
 <a href="class_xe_thru_1_1_data_player.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_data_player_8hpp_source.xhtml">DataPlayer.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a7cd8c9e1cba02abacb4087d34dd8c3d6"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">State</a> { <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6ad17825e66c225059f04d17f4b93b58fc">StoppedState</a> = 0, 
<a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6ae3ba18bd8daa359f24c4866b075126d1">PlayingState</a> = 1, 
<a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6a65dda0bcfb3af382e0b7434d93dc94b0">PausedState</a> = 2
 }<tr class="memdesc:a7cd8c9e1cba02abacb4087d34dd8c3d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum specifies the state of the player.  <a href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a7cd8c9e1cba02abacb4087d34dd8c3d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2b5ba8648c19443d3780cea25bd02fdc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a2b5ba8648c19443d3780cea25bd02fdc">DataPlayer</a> (const std::string &amp;<a class="el" href="class_xe_thru_1_1_data_player.xhtml#ac875805a1b51ea31e38d7a4c30a4dcc4">meta_filename</a>, int depth=-1)</td></tr>
<tr class="memdesc:a2b5ba8648c19443d3780cea25bd02fdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the player and opens the recording specified by the given meta filename.  <a href="#a2b5ba8648c19443d3780cea25bd02fdc">More...</a><br /></td></tr>
<tr class="separator:a2b5ba8648c19443d3780cea25bd02fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6351c23586bf814577e255f6a60c194c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a6351c23586bf814577e255f6a60c194c">~DataPlayer</a> ()</td></tr>
<tr class="memdesc:a6351c23586bf814577e255f6a60c194c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the player.  <a href="#a6351c23586bf814577e255f6a60c194c">More...</a><br /></td></tr>
<tr class="separator:a6351c23586bf814577e255f6a60c194c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecec5e0a32e0a19ce62b5a61fc700a2c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c">play</a> ()</td></tr>
<tr class="memdesc:aecec5e0a32e0a19ce62b5a61fc700a2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start or resume playback.  <a href="#aecec5e0a32e0a19ce62b5a61fc700a2c">More...</a><br /></td></tr>
<tr class="separator:aecec5e0a32e0a19ce62b5a61fc700a2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a270465e983757223d4ca744c59453bef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef">pause</a> ()</td></tr>
<tr class="memdesc:a270465e983757223d4ca744c59453bef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause playback.  <a href="#a270465e983757223d4ca744c59453bef">More...</a><br /></td></tr>
<tr class="separator:a270465e983757223d4ca744c59453bef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e23f8b96534e2d854ce26042e15100"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a34e23f8b96534e2d854ce26042e15100">stop</a> ()</td></tr>
<tr class="memdesc:a34e23f8b96534e2d854ce26042e15100"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop playback and reset the play position to the beginning.  <a href="#a34e23f8b96534e2d854ce26042e15100">More...</a><br /></td></tr>
<tr class="separator:a34e23f8b96534e2d854ce26042e15100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fad27057199896cde820b994400afa5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a6fad27057199896cde820b994400afa5">set_state</a> (<a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">State</a> state)</td></tr>
<tr class="memdesc:a6fad27057199896cde820b994400afa5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the player's state as specified.  <a href="#a6fad27057199896cde820b994400afa5">More...</a><br /></td></tr>
<tr class="separator:a6fad27057199896cde820b994400afa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92dede0b7dc6194a3f1a39d89e8a44a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">State</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a92dede0b7dc6194a3f1a39d89e8a44a5">get_state</a> () const</td></tr>
<tr class="separator:a92dede0b7dc6194a3f1a39d89e8a44a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3fe64b45fa3c8f97418620675571703"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703">set_filter</a> (uint32_t data_types)</td></tr>
<tr class="memdesc:af3fe64b45fa3c8f97418620675571703"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which data types to play.  <a href="#af3fe64b45fa3c8f97418620675571703">More...</a><br /></td></tr>
<tr class="separator:af3fe64b45fa3c8f97418620675571703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a548906ae5ee32680b5d31c9404f5e160"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a548906ae5ee32680b5d31c9404f5e160">get_filter</a> () const</td></tr>
<tr class="separator:a548906ae5ee32680b5d31c9404f5e160"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eb5726303ed85e661fe0131e80a6781"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781">set_playback_rate</a> (float rate)</td></tr>
<tr class="memdesc:a8eb5726303ed85e661fe0131e80a6781"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the playback rate specified as a multiplier.  <a href="#a8eb5726303ed85e661fe0131e80a6781">More...</a><br /></td></tr>
<tr class="separator:a8eb5726303ed85e661fe0131e80a6781"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af05a306b4bf38235ee438823a814780c"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#af05a306b4bf38235ee438823a814780c">get_playback_rate</a> () const</td></tr>
<tr class="separator:af05a306b4bf38235ee438823a814780c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e0ba8bfc96fa0f5012a1a812a428c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#ad5e0ba8bfc96fa0f5012a1a812a428c3">set_loop_mode_enabled</a> (bool enabled)</td></tr>
<tr class="memdesc:ad5e0ba8bfc96fa0f5012a1a812a428c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables loop mode as specified.  <a href="#ad5e0ba8bfc96fa0f5012a1a812a428c3">More...</a><br /></td></tr>
<tr class="separator:ad5e0ba8bfc96fa0f5012a1a812a428c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972055478ad4a3abea722187b5a15641"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a972055478ad4a3abea722187b5a15641">get_loop_mode_enabled</a> () const</td></tr>
<tr class="separator:a972055478ad4a3abea722187b5a15641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd76cefb839a6496e6f95c29d50e2f36"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#acd76cefb839a6496e6f95c29d50e2f36">set_position</a> (int64_t position)</td></tr>
<tr class="memdesc:acd76cefb839a6496e6f95c29d50e2f36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current position (ms) as specified.  <a href="#acd76cefb839a6496e6f95c29d50e2f36">More...</a><br /></td></tr>
<tr class="separator:acd76cefb839a6496e6f95c29d50e2f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9965c7f421755e43ddc23209815398b6"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a9965c7f421755e43ddc23209815398b6">get_position</a> () const</td></tr>
<tr class="separator:a9965c7f421755e43ddc23209815398b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7666b80df8e88aaf479edc17c5385b42"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7666b80df8e88aaf479edc17c5385b42">get_duration</a> () const</td></tr>
<tr class="separator:a7666b80df8e88aaf479edc17c5385b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac875805a1b51ea31e38d7a4c30a4dcc4"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#ac875805a1b51ea31e38d7a4c30a4dcc4">meta_filename</a> () const</td></tr>
<tr class="separator:ac875805a1b51ea31e38d7a4c30a4dcc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> class allows playback of telegrams / binary packets from a recording generated by <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a>. </p>
<p>The <a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> class is a high level data playback class. It provides the user with the ability to playback recorded data as if it was coming from a physical device. So rather than initialising <a class="el" href="class_xe_thru_1_1_module_connector.xhtml">ModuleConnector</a> with a physical device (serial port), it is possible to construct <a class="el" href="class_xe_thru_1_1_module_connector.xhtml">ModuleConnector</a> with a <a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> object and receive telegrams / binary packets as one would normally receive from a physical <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> device. For example, CSV data on disk is converted back to its original telegram / binary format before it is dispatched via <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a>.</p>
<p>Moreover, it is possible to control the playback via functions such as <a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c">play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef">pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a34e23f8b96534e2d854ce26042e15100">stop</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781">set_playback_rate</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703">set_filter</a>.</p>
<div class="fragment"><div class="line">    <span class="keyword">using namespace </span><a class="code" href="namespace_xe_thru.xhtml">XeThru</a>;</div><div class="line"></div><div class="line">    <a class="code" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> player(meta_filename);</div><div class="line">    player.set_filter(BasebandIqDataType | PresenceSingleDataType);</div><div class="line"></div><div class="line">    <a class="code" href="class_xe_thru_1_1_module_connector.xhtml">ModuleConnector</a> mc(player, 0);</div><div class="line"></div><div class="line">    <span class="comment">// Get read-only interface and receive telegrams / binary packets from recording</span></div><div class="line">    <a class="code" href="class_xe_thru_1_1_x4_m300.xhtml">X4M300</a> &amp;x4m300 = mc.get_x4m300();</div><div class="line"></div><div class="line">    <span class="comment">// Control output</span></div><div class="line">    player.play();</div><div class="line">    <span class="comment">// ...</span></div><div class="line">    player.pause();</div><div class="line">    <span class="comment">// ...</span></div><div class="line">    player.set_playback_rate(2.0);</div><div class="line"></div></div><!-- fragment --><p> This class uses the <a class="el" href="class_xe_thru_1_1_data_reader.xhtml">DataReader</a> class to read records from disk before it converts them into telegrams / binary packets.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a>, <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a>, <a class="el" href="class_xe_thru_1_1_data_reader.xhtml" title="The DataReader class allows reading of xethru data records from a recording generated by DataRecorder...">DataReader</a> </dd></dl>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a7cd8c9e1cba02abacb4087d34dd8c3d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cd8c9e1cba02abacb4087d34dd8c3d6">&sect;&nbsp;</a></span>State</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">XeThru::DataPlayer::State</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This enum specifies the state of the player. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c" title="Start or resume playback. ">play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef" title="Pause playback. ">pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a34e23f8b96534e2d854ce26042e15100" title="Stop playback and reset the play position to the beginning. ">stop</a> </dd></dl>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a7cd8c9e1cba02abacb4087d34dd8c3d6ad17825e66c225059f04d17f4b93b58fc"></a>StoppedState&#160;</td><td class="fielddoc"><p>(0) Stopped state (default) </p>
</td></tr>
<tr><td class="fieldname"><a id="a7cd8c9e1cba02abacb4087d34dd8c3d6ae3ba18bd8daa359f24c4866b075126d1"></a>PlayingState&#160;</td><td class="fielddoc"><p>(1) Playing state </p>
</td></tr>
<tr><td class="fieldname"><a id="a7cd8c9e1cba02abacb4087d34dd8c3d6a65dda0bcfb3af382e0b7434d93dc94b0"></a>PausedState&#160;</td><td class="fielddoc"><p>(2) Paused state </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2b5ba8648c19443d3780cea25bd02fdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b5ba8648c19443d3780cea25bd02fdc">&sect;&nbsp;</a></span>DataPlayer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::DataPlayer::DataPlayer </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>meta_filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>depth</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs the player and opens the recording specified by the given meta filename. </p>
<p>One recording may contain several meta files, for example as a result of file/directory splitting. The meta file contains information about which files and data types were written to disk during a recording session. Common for all use cases is that <em>xethru_recording_meta.dat</em> is always present in the output folder generated by <em><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a></em>. Use that file as input argument to this constructor.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">meta_filename</td><td>Specifies which recording (<em>xethru_recording_meta.dat</em>) to open. </td></tr>
    <tr><td class="paramname">depth</td><td>Specifies the number of meta files to open in 'chained mode'. By default, this parameter is -1 (automatically open all files, i.e. the entire recording).</td></tr>
  </table>
  </dd>
</dl>
<p>Constructor throws an runtime exception if the recording could not be opened. </p>

</div>
</div>
<a id="a6351c23586bf814577e255f6a60c194c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6351c23586bf814577e255f6a60c194c">&sect;&nbsp;</a></span>~DataPlayer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::DataPlayer::~DataPlayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys the player. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7666b80df8e88aaf479edc17c5385b42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7666b80df8e88aaf479edc17c5385b42">&sect;&nbsp;</a></span>get_duration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t XeThru::DataPlayer::get_duration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the total duration of the recording specified as number of milliseconds (ms). </dd></dl>

</div>
</div>
<a id="a548906ae5ee32680b5d31c9404f5e160"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a548906ae5ee32680b5d31c9404f5e160">&sect;&nbsp;</a></span>get_filter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t XeThru::DataPlayer::get_filter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the filter used to specify which data types to play. By default this value is all data types. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703" title="Specifies which data types to play. ">set_filter</a> </dd></dl>

</div>
</div>
<a id="a972055478ad4a3abea722187b5a15641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a972055478ad4a3abea722187b5a15641">&sect;&nbsp;</a></span>get_loop_mode_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool XeThru::DataPlayer::get_loop_mode_enabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if loop mode is enabled, otherwise returns false. By default, this value is false. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#ad5e0ba8bfc96fa0f5012a1a812a428c3" title="Enables or disables loop mode as specified. ">set_loop_mode_enabled</a> </dd></dl>

</div>
</div>
<a id="af05a306b4bf38235ee438823a814780c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af05a306b4bf38235ee438823a814780c">&sect;&nbsp;</a></span>get_playback_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float XeThru::DataPlayer::get_playback_rate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the multiplayer used for the playback rate. By default, this value is 1.0. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781" title="Sets the playback rate specified as a multiplier. ">set_playback_rate</a> </dd></dl>

</div>
</div>
<a id="a9965c7f421755e43ddc23209815398b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9965c7f421755e43ddc23209815398b6">&sect;&nbsp;</a></span>get_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t XeThru::DataPlayer::get_position </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the player's current position specified as number of milliseconds (ms). </dd></dl>

</div>
</div>
<a id="a92dede0b7dc6194a3f1a39d89e8a44a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92dede0b7dc6194a3f1a39d89e8a44a5">&sect;&nbsp;</a></span>get_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">State</a> XeThru::DataPlayer::get_state </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the player's current state. By default, the player is in <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6ad17825e66c225059f04d17f4b93b58fc">StoppedState</a>. </dd></dl>

</div>
</div>
<a id="ac875805a1b51ea31e38d7a4c30a4dcc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac875805a1b51ea31e38d7a4c30a4dcc4">&sect;&nbsp;</a></span>meta_filename()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string XeThru::DataPlayer::meta_filename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the meta filename used when constructing this class. </dd></dl>

</div>
</div>
<a id="a270465e983757223d4ca744c59453bef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a270465e983757223d4ca744c59453bef">&sect;&nbsp;</a></span>pause()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::pause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pause playback. </p>
<p>Convenience function, equivalent to set_state(DataPlayer::PausedState). </p>

</div>
</div>
<a id="aecec5e0a32e0a19ce62b5a61fc700a2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecec5e0a32e0a19ce62b5a61fc700a2c">&sect;&nbsp;</a></span>play()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::play </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start or resume playback. </p>
<p>Convenience function, equivalent to set_state(DataPlayer::PlayingState). </p>

</div>
</div>
<a id="af3fe64b45fa3c8f97418620675571703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3fe64b45fa3c8f97418620675571703">&sect;&nbsp;</a></span>set_filter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::DataPlayer::set_filter </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>data_types</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies which data types to play. </p>
<p>By default, the filter is set to all data types.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data_types</td><td>Specifies the filter as a bitmask that consists of a combination of <a class="el" href="datatypes_8h.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> flags. These flags can be combined with the bitwise OR operator (|). For example: BasebandIqDataType | SleepDataType. A convenience value <a class="el" href="datatypes_8h.xhtml#ad8f6c77f86c26225ae61a6e07ded41f8">AllDataTypes</a> can also be specified.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 success, otherwise returns 1 </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c" title="Start or resume playback. ">play</a> </dd></dl>

</div>
</div>
<a id="ad5e0ba8bfc96fa0f5012a1a812a428c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5e0ba8bfc96fa0f5012a1a812a428c3">&sect;&nbsp;</a></span>set_loop_mode_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::set_loop_mode_enabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables loop mode as specified. </p>
<p>When loop mode is enabled the, the player's position is reset to the beginning when the player reaches the end. This allows for playback forever.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enabled</td><td>Specifies if loop mode is enabled or disabled. By default, loop mode is disabled (i.e. false). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8eb5726303ed85e661fe0131e80a6781"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eb5726303ed85e661fe0131e80a6781">&sect;&nbsp;</a></span>set_playback_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::set_playback_rate </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the playback rate specified as a multiplier. </p>
<p>By default, this value is 1.0 indicating that the player is playing at the standard pace. Values higher than 1.0 will increase the pace, whereas a lower value will decrease the pace. Values less than zero indicate the player should play as fast as possible. Value zero is essentially the same as <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6a65dda0bcfb3af382e0b7434d93dc94b0">PausedState</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rate</td><td>Specifies the multiplier for the playback rate. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c" title="Start or resume playback. ">play</a> </dd></dl>

</div>
</div>
<a id="acd76cefb839a6496e6f95c29d50e2f36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd76cefb839a6496e6f95c29d50e2f36">&sect;&nbsp;</a></span>set_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::DataPlayer::set_position </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current position (ms) as specified. </p>
<p>The value must be in range [0, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7666b80df8e88aaf479edc17c5385b42">get_duration()</a>]. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>Specifies the position as number of milliseconds (ms). </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 on success, otherwise returns 1 </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7666b80df8e88aaf479edc17c5385b42">get_duration</a> </dd></dl>

</div>
</div>
<a id="a6fad27057199896cde820b994400afa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fad27057199896cde820b994400afa5">&sect;&nbsp;</a></span>set_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::set_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6">State</a>&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the player's state as specified. </p>
<p>By default, the player is in <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a7cd8c9e1cba02abacb4087d34dd8c3d6ad17825e66c225059f04d17f4b93b58fc">StoppedState</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">state</td><td>Specifies the state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c" title="Start or resume playback. ">play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef" title="Pause playback. ">pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a34e23f8b96534e2d854ce26042e15100" title="Stop playback and reset the play position to the beginning. ">stop</a> </dd></dl>

</div>
</div>
<a id="a34e23f8b96534e2d854ce26042e15100"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34e23f8b96534e2d854ce26042e15100">&sect;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::DataPlayer::stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop playback and reset the play position to the beginning. </p>
<p>Convenience function, equivalent to set_state(DataPlayer::StoppedState). </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/<a class="el" href="_data_player_8hpp_source.xhtml">DataPlayer.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
