<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: XeThru::XEP Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_xe_thru.xhtml">XeThru</a></li><li class="navelem"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml">XEP</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_xe_thru_1_1_x_e_p-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">XeThru::XEP Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> class gives access to <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> functionality on target via module connector.  
 <a href="class_xe_thru_1_1_x_e_p.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_x_e_p_8hpp_source.xhtml">XEP.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a11f91e334a06585e07f1b1334aa9ea1a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a11f91e334a06585e07f1b1334aa9ea1a">XEP</a> (LockedRadarInterfacePtr &amp;radar_interface)</td></tr>
<tr class="memdesc:a11f91e334a06585e07f1b1334aa9ea1a"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> constructor.  <a href="#a11f91e334a06585e07f1b1334aa9ea1a">More...</a><br /></td></tr>
<tr class="separator:a11f91e334a06585e07f1b1334aa9ea1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed879e751f6a7032cd52207c9050d24"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a9ed879e751f6a7032cd52207c9050d24">~XEP</a> ()</td></tr>
<tr class="memdesc:a9ed879e751f6a7032cd52207c9050d24"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> destructor.  <a href="#a9ed879e751f6a7032cd52207c9050d24">More...</a><br /></td></tr>
<tr class="separator:a9ed879e751f6a7032cd52207c9050d24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac22d3cd2635dee15d56d5fe96fc1760"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aac22d3cd2635dee15d56d5fe96fc1760">module_reset</a> ()</td></tr>
<tr class="memdesc:aac22d3cd2635dee15d56d5fe96fc1760"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets module.  <a href="#aac22d3cd2635dee15d56d5fe96fc1760">More...</a><br /></td></tr>
<tr class="separator:aac22d3cd2635dee15d56d5fe96fc1760"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4cfa70db069dd38e4167995bf64f37a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af4cfa70db069dd38e4167995bf64f37a">set_baudrate</a> (uint32_t baudrate)</td></tr>
<tr class="memdesc:af4cfa70db069dd38e4167995bf64f37a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set baudrate for serial communication during <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> operation.  <a href="#af4cfa70db069dd38e4167995bf64f37a">More...</a><br /></td></tr>
<tr class="separator:af4cfa70db069dd38e4167995bf64f37a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af80e7037177b9625ba5d3e5330dccc73"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af80e7037177b9625ba5d3e5330dccc73">get_system_info</a> (uint8_t info_code, std::string *system_info)</td></tr>
<tr class="memdesc:af80e7037177b9625ba5d3e5330dccc73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string containing system information given by infocode: XTS_SSIC_FIRMWAREID = 0x02 -&gt; Returns the installed Firmware ID, "XEP" XTS_SSIC_VERSION = 0x03 -&gt; Returns the installed Firmware Version.  <a href="#af80e7037177b9625ba5d3e5330dccc73">More...</a><br /></td></tr>
<tr class="separator:af80e7037177b9625ba5d3e5330dccc73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9edbf700a674659330afb771f84485ef"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a9edbf700a674659330afb771f84485ef">ping</a> (uint32_t *pong_value)</td></tr>
<tr class="memdesc:a9edbf700a674659330afb771f84485ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send ping to module in order to validate that connection both ways is OK.  <a href="#a9edbf700a674659330afb771f84485ef">More...</a><br /></td></tr>
<tr class="separator:a9edbf700a674659330afb771f84485ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb95f81b9fb6a689f89cb7f6decdebd7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#abb95f81b9fb6a689f89cb7f6decdebd7">set_normalization</a> (uint8_t normalization)</td></tr>
<tr class="separator:abb95f81b9fb6a689f89cb7f6decdebd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae300b793ddf1eea8a07bf326ab9ebbaa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ae300b793ddf1eea8a07bf326ab9ebbaa">get_normalization</a> (uint8_t *normalization)</td></tr>
<tr class="separator:ae300b793ddf1eea8a07bf326ab9ebbaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22d28fc41a0b365f2d7a54bb0190691c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a22d28fc41a0b365f2d7a54bb0190691c">set_phase_noise_correction</a> (uint8_t enable, float correction_distance)</td></tr>
<tr class="separator:a22d28fc41a0b365f2d7a54bb0190691c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ae85a7927105e5bc04c69804fb11ba"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ac0ae85a7927105e5bc04c69804fb11ba">get_phase_noise_correction</a> (float *correction_distance)</td></tr>
<tr class="separator:ac0ae85a7927105e5bc04c69804fb11ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6eb5c21c9cab7e1ed3b1bc108b0e1e8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af6eb5c21c9cab7e1ed3b1bc108b0e1e8">set_decimation_factor</a> (uint32_t decimation_factor)</td></tr>
<tr class="separator:af6eb5c21c9cab7e1ed3b1bc108b0e1e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa2baadb7b475bfd910a8355e8d18302"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#afa2baadb7b475bfd910a8355e8d18302">get_decimation_factor</a> (uint32_t *decimation_factor)</td></tr>
<tr class="separator:afa2baadb7b475bfd910a8355e8d18302"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902b45f7ddcd0928f92281ea37afd6a2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a902b45f7ddcd0928f92281ea37afd6a2">set_number_format</a> (uint8_t number_format)</td></tr>
<tr class="separator:a902b45f7ddcd0928f92281ea37afd6a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a464bc504614f12e4ce43208b327802de"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a464bc504614f12e4ce43208b327802de">get_number_format</a> (uint8_t *number_format)</td></tr>
<tr class="separator:a464bc504614f12e4ce43208b327802de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabae633e5dc25df7f97d48c762928c7e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aabae633e5dc25df7f97d48c762928c7e">set_legacy_output</a> (uint8_t legacy_output)</td></tr>
<tr class="separator:aabae633e5dc25df7f97d48c762928c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6709762f684fd75fb0d8f95be39be869"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a6709762f684fd75fb0d8f95be39be869">get_legacy_output</a> (uint8_t *legacy_output)</td></tr>
<tr class="separator:a6709762f684fd75fb0d8f95be39be869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfea3e9ba403e4de7749516a4ecb6f41"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#adfea3e9ba403e4de7749516a4ecb6f41">x4driver_set_fps</a> (float fps)</td></tr>
<tr class="memdesc:adfea3e9ba403e4de7749516a4ecb6f41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets frame rate for frame streaming.  <a href="#adfea3e9ba403e4de7749516a4ecb6f41">More...</a><br /></td></tr>
<tr class="separator:adfea3e9ba403e4de7749516a4ecb6f41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57fde2b290f81e4c4ed7ed57e3a61e2b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a57fde2b290f81e4c4ed7ed57e3a61e2b">x4driver_get_fps</a> (float *fps)</td></tr>
<tr class="memdesc:a57fde2b290f81e4c4ed7ed57e3a61e2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets configured FPS.  <a href="#a57fde2b290f81e4c4ed7ed57e3a61e2b">More...</a><br /></td></tr>
<tr class="separator:a57fde2b290f81e4c4ed7ed57e3a61e2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acde188fb7f9945b007437793661fdbbc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#acde188fb7f9945b007437793661fdbbc">x4driver_set_enable</a> (uint8_t value)</td></tr>
<tr class="memdesc:acde188fb7f9945b007437793661fdbbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set enable for X4 enable pin.  <a href="#acde188fb7f9945b007437793661fdbbc">More...</a><br /></td></tr>
<tr class="separator:acde188fb7f9945b007437793661fdbbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7b3014b432d966b91e4f3103997d12e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ad7b3014b432d966b91e4f3103997d12e">x4driver_init</a> ()</td></tr>
<tr class="memdesc:ad7b3014b432d966b91e4f3103997d12e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will make sure that enable is set, X4 controller is programmed, ldos are enabled, and that the external oscillator has been enabled.  <a href="#ad7b3014b432d966b91e4f3103997d12e">More...</a><br /></td></tr>
<tr class="separator:ad7b3014b432d966b91e4f3103997d12e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a374525416885f85a9aa23d2b01b41f13"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a374525416885f85a9aa23d2b01b41f13">x4driver_set_iterations</a> (uint32_t iterations)</td></tr>
<tr class="memdesc:a374525416885f85a9aa23d2b01b41f13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets Iterations.  <a href="#a374525416885f85a9aa23d2b01b41f13">More...</a><br /></td></tr>
<tr class="separator:a374525416885f85a9aa23d2b01b41f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9fcc263bf081a4cfa64e474d67e3266"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af9fcc263bf081a4cfa64e474d67e3266">x4driver_get_iterations</a> (uint32_t *iterations)</td></tr>
<tr class="memdesc:af9fcc263bf081a4cfa64e474d67e3266"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Iterations.  <a href="#af9fcc263bf081a4cfa64e474d67e3266">More...</a><br /></td></tr>
<tr class="separator:af9fcc263bf081a4cfa64e474d67e3266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb248233c6df1f90c1787ee10b571ddc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#adb248233c6df1f90c1787ee10b571ddc">x4driver_set_pulses_per_step</a> (uint32_t pps)</td></tr>
<tr class="memdesc:adb248233c6df1f90c1787ee10b571ddc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets pulses per step.  <a href="#adb248233c6df1f90c1787ee10b571ddc">More...</a><br /></td></tr>
<tr class="separator:adb248233c6df1f90c1787ee10b571ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48582c442d9749035aee429bcada16e7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a48582c442d9749035aee429bcada16e7">x4driver_get_pulses_per_step</a> (uint32_t *pps)</td></tr>
<tr class="memdesc:a48582c442d9749035aee429bcada16e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets pulses per step.  <a href="#a48582c442d9749035aee429bcada16e7">More...</a><br /></td></tr>
<tr class="separator:a48582c442d9749035aee429bcada16e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af32e45649bd91d13588a72e1b3a68f1a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af32e45649bd91d13588a72e1b3a68f1a">x4driver_set_dac_min</a> (uint32_t dac_min)</td></tr>
<tr class="memdesc:af32e45649bd91d13588a72e1b3a68f1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dac min.  <a href="#af32e45649bd91d13588a72e1b3a68f1a">More...</a><br /></td></tr>
<tr class="separator:af32e45649bd91d13588a72e1b3a68f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a896a1b30938c0267551bd702a50b4a73"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a896a1b30938c0267551bd702a50b4a73">x4driver_get_dac_min</a> (uint32_t *dac_min)</td></tr>
<tr class="memdesc:a896a1b30938c0267551bd702a50b4a73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets dac min.  <a href="#a896a1b30938c0267551bd702a50b4a73">More...</a><br /></td></tr>
<tr class="separator:a896a1b30938c0267551bd702a50b4a73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ded649d232ede4a73a7f6f75957450b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a3ded649d232ede4a73a7f6f75957450b">x4driver_set_dac_max</a> (uint32_t dac_max)</td></tr>
<tr class="memdesc:a3ded649d232ede4a73a7f6f75957450b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dac max.  <a href="#a3ded649d232ede4a73a7f6f75957450b">More...</a><br /></td></tr>
<tr class="separator:a3ded649d232ede4a73a7f6f75957450b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052386a043e8059290749ec3e269e58d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a052386a043e8059290749ec3e269e58d">x4driver_get_dac_max</a> (uint32_t *dac_max)</td></tr>
<tr class="memdesc:a052386a043e8059290749ec3e269e58d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets dac max.  <a href="#a052386a043e8059290749ec3e269e58d">More...</a><br /></td></tr>
<tr class="separator:a052386a043e8059290749ec3e269e58d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46536ace6a802bba0109db8703713936"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a46536ace6a802bba0109db8703713936">x4driver_set_tx_power</a> (uint8_t tx_power)</td></tr>
<tr class="memdesc:a46536ace6a802bba0109db8703713936"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the radar transmitter power.  <a href="#a46536ace6a802bba0109db8703713936">More...</a><br /></td></tr>
<tr class="separator:a46536ace6a802bba0109db8703713936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353c7846a1d831857e043e1afb4d4949"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a353c7846a1d831857e043e1afb4d4949">x4driver_get_tx_power</a> (uint8_t *tx_power)</td></tr>
<tr class="memdesc:a353c7846a1d831857e043e1afb4d4949"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the radar transmitter power.  <a href="#a353c7846a1d831857e043e1afb4d4949">More...</a><br /></td></tr>
<tr class="separator:a353c7846a1d831857e043e1afb4d4949"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3683254e413e5fb0cbbad72c28328ab"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aa3683254e413e5fb0cbbad72c28328ab">x4driver_set_downconversion</a> (uint8_t enable)</td></tr>
<tr class="memdesc:aa3683254e413e5fb0cbbad72c28328ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets downconversion.  <a href="#aa3683254e413e5fb0cbbad72c28328ab">More...</a><br /></td></tr>
<tr class="separator:aa3683254e413e5fb0cbbad72c28328ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a112a85a877ee1c06010fcc7ad170bdb8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a112a85a877ee1c06010fcc7ad170bdb8">x4driver_get_downconversion</a> (uint8_t *enable)</td></tr>
<tr class="memdesc:a112a85a877ee1c06010fcc7ad170bdb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets downconversion.  <a href="#a112a85a877ee1c06010fcc7ad170bdb8">More...</a><br /></td></tr>
<tr class="separator:a112a85a877ee1c06010fcc7ad170bdb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a67c5c4aa1c0d87cc5c3cd4932d41e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a86a67c5c4aa1c0d87cc5c3cd4932d41e">x4driver_get_frame_bin_count</a> (uint32_t *bins)</td></tr>
<tr class="memdesc:a86a67c5c4aa1c0d87cc5c3cd4932d41e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Number of bins.  <a href="#a86a67c5c4aa1c0d87cc5c3cd4932d41e">More...</a><br /></td></tr>
<tr class="separator:a86a67c5c4aa1c0d87cc5c3cd4932d41e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b4decc26ac4890faef2cb2b4ede0240"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a5b4decc26ac4890faef2cb2b4ede0240">x4driver_set_frame_area</a> (float start, float end)</td></tr>
<tr class="memdesc:a5b4decc26ac4890faef2cb2b4ede0240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set frame area, i.e.  <a href="#a5b4decc26ac4890faef2cb2b4ede0240">More...</a><br /></td></tr>
<tr class="separator:a5b4decc26ac4890faef2cb2b4ede0240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6935b9729aadf1150e21c1c1a38b2b2b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a6935b9729aadf1150e21c1c1a38b2b2b">x4driver_get_frame_area</a> (<a class="el" href="struct_xe_thru_1_1_frame_area.xhtml">FrameArea</a> *frame_area)</td></tr>
<tr class="memdesc:a6935b9729aadf1150e21c1c1a38b2b2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get frame area.  <a href="#a6935b9729aadf1150e21c1c1a38b2b2b">More...</a><br /></td></tr>
<tr class="separator:a6935b9729aadf1150e21c1c1a38b2b2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02ea403a5b48084a3554851873cdd6f1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a02ea403a5b48084a3554851873cdd6f1">x4driver_set_frame_area_offset</a> (float offset)</td></tr>
<tr class="memdesc:a02ea403a5b48084a3554851873cdd6f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set offset to adjust frame area reference point (location of frame area start at zero) depending on sensor hardware.  <a href="#a02ea403a5b48084a3554851873cdd6f1">More...</a><br /></td></tr>
<tr class="separator:a02ea403a5b48084a3554851873cdd6f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8f4e94c4ee029266075e384a13a8af"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a7f8f4e94c4ee029266075e384a13a8af">x4driver_get_frame_area_offset</a> (float *offset)</td></tr>
<tr class="memdesc:a7f8f4e94c4ee029266075e384a13a8af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get offset to adjust frame area reference.  <a href="#a7f8f4e94c4ee029266075e384a13a8af">More...</a><br /></td></tr>
<tr class="separator:a7f8f4e94c4ee029266075e384a13a8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74e6fff2db2c136e69663dffcc0bd02d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a74e6fff2db2c136e69663dffcc0bd02d">x4driver_set_tx_center_frequency</a> (uint8_t tx_frequency)</td></tr>
<tr class="memdesc:a74e6fff2db2c136e69663dffcc0bd02d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set radar TX center frequency.  <a href="#a74e6fff2db2c136e69663dffcc0bd02d">More...</a><br /></td></tr>
<tr class="separator:a74e6fff2db2c136e69663dffcc0bd02d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9e517bb3112b7520d80716fc3bde4db"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ab9e517bb3112b7520d80716fc3bde4db">x4driver_get_tx_center_frequency</a> (uint8_t *tx_frequency)</td></tr>
<tr class="memdesc:ab9e517bb3112b7520d80716fc3bde4db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get radar TX center frequency.  <a href="#ab9e517bb3112b7520d80716fc3bde4db">More...</a><br /></td></tr>
<tr class="separator:ab9e517bb3112b7520d80716fc3bde4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe0995345c6ea19b9788ee864463571"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a9fe0995345c6ea19b9788ee864463571">x4driver_set_spi_register</a> (uint8_t address, uint8_t value)</td></tr>
<tr class="memdesc:a9fe0995345c6ea19b9788ee864463571"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set spi register on radar chip.  <a href="#a9fe0995345c6ea19b9788ee864463571">More...</a><br /></td></tr>
<tr class="separator:a9fe0995345c6ea19b9788ee864463571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab738e1ed08b90a2b82ac6dabd98840eb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ab738e1ed08b90a2b82ac6dabd98840eb">x4driver_get_spi_register</a> (uint8_t address, uint8_t *value)</td></tr>
<tr class="memdesc:ab738e1ed08b90a2b82ac6dabd98840eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get spi register on radar chip.  <a href="#ab738e1ed08b90a2b82ac6dabd98840eb">More...</a><br /></td></tr>
<tr class="separator:ab738e1ed08b90a2b82ac6dabd98840eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01cb112b0b1a5c91aa3138d7946a20e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aa01cb112b0b1a5c91aa3138d7946a20e">x4driver_set_pif_register</a> (uint8_t address, uint8_t value)</td></tr>
<tr class="memdesc:aa01cb112b0b1a5c91aa3138d7946a20e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets PIF register value.  <a href="#aa01cb112b0b1a5c91aa3138d7946a20e">More...</a><br /></td></tr>
<tr class="separator:aa01cb112b0b1a5c91aa3138d7946a20e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6e5e86bb6c50655b5168c7d345c4ed"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#adb6e5e86bb6c50655b5168c7d345c4ed">x4driver_write_to_spi_register</a> (uint8_t address, const Bytes &amp;values)</td></tr>
<tr class="memdesc:adb6e5e86bb6c50655b5168c7d345c4ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write to a spi register on radar chip.  <a href="#adb6e5e86bb6c50655b5168c7d345c4ed">More...</a><br /></td></tr>
<tr class="separator:adb6e5e86bb6c50655b5168c7d345c4ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06587a87652cad3dfbeb9912376d899c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a06587a87652cad3dfbeb9912376d899c">x4driver_read_from_spi_register</a> (uint8_t address, Bytes *values, const uint32_t length)</td></tr>
<tr class="memdesc:a06587a87652cad3dfbeb9912376d899c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read from a spi register.  <a href="#a06587a87652cad3dfbeb9912376d899c">More...</a><br /></td></tr>
<tr class="separator:a06587a87652cad3dfbeb9912376d899c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f61d816f044eff68f4cc886b00dd0e7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a9f61d816f044eff68f4cc886b00dd0e7">x4driver_write_to_i2c_register</a> (uint8_t address, const Bytes &amp;values)</td></tr>
<tr class="memdesc:a9f61d816f044eff68f4cc886b00dd0e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write to a i2c register on radar chip.  <a href="#a9f61d816f044eff68f4cc886b00dd0e7">More...</a><br /></td></tr>
<tr class="separator:a9f61d816f044eff68f4cc886b00dd0e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe8a02a90c9be4314c2f20bfd09e466b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#afe8a02a90c9be4314c2f20bfd09e466b">x4driver_read_from_i2c_register</a> (Bytes *values, const uint32_t length)</td></tr>
<tr class="memdesc:afe8a02a90c9be4314c2f20bfd09e466b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read from a i2c register.  <a href="#afe8a02a90c9be4314c2f20bfd09e466b">More...</a><br /></td></tr>
<tr class="separator:afe8a02a90c9be4314c2f20bfd09e466b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dea1ac5d6528ac3b48b444dcf42cdeb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a0dea1ac5d6528ac3b48b444dcf42cdeb">x4driver_get_pif_register</a> (uint8_t address, uint8_t *value)</td></tr>
<tr class="memdesc:a0dea1ac5d6528ac3b48b444dcf42cdeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets PIF register value.  <a href="#a0dea1ac5d6528ac3b48b444dcf42cdeb">More...</a><br /></td></tr>
<tr class="separator:a0dea1ac5d6528ac3b48b444dcf42cdeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9857ebb7691edbac35d765037a6f689a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a9857ebb7691edbac35d765037a6f689a">x4driver_set_xif_register</a> (uint8_t address, uint8_t value)</td></tr>
<tr class="memdesc:a9857ebb7691edbac35d765037a6f689a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets XIF register value.  <a href="#a9857ebb7691edbac35d765037a6f689a">More...</a><br /></td></tr>
<tr class="separator:a9857ebb7691edbac35d765037a6f689a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99f0d8ffb88c626066077a6a755002ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a99f0d8ffb88c626066077a6a755002ac">x4driver_get_xif_register</a> (uint8_t address, uint8_t *value)</td></tr>
<tr class="memdesc:a99f0d8ffb88c626066077a6a755002ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets XIF register value.  <a href="#a99f0d8ffb88c626066077a6a755002ac">More...</a><br /></td></tr>
<tr class="separator:a99f0d8ffb88c626066077a6a755002ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8337eb72721dbb0b5cb10e2515543c9c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a8337eb72721dbb0b5cb10e2515543c9c">x4driver_set_prf_div</a> (uint8_t prf_div)</td></tr>
<tr class="memdesc:a8337eb72721dbb0b5cb10e2515543c9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets Pulse Repetition Frequency(PRF) divider.  <a href="#a8337eb72721dbb0b5cb10e2515543c9c">More...</a><br /></td></tr>
<tr class="separator:a8337eb72721dbb0b5cb10e2515543c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3549aa102629878efebc7f4cf891b75"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ab3549aa102629878efebc7f4cf891b75">x4driver_get_prf_div</a> (uint8_t *prf_div)</td></tr>
<tr class="memdesc:ab3549aa102629878efebc7f4cf891b75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Pulse Repetition Frequency(PRF) divider.  <a href="#ab3549aa102629878efebc7f4cf891b75">More...</a><br /></td></tr>
<tr class="separator:ab3549aa102629878efebc7f4cf891b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0119832325560cefb58fb10ea27b8955"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a0119832325560cefb58fb10ea27b8955">set_iopin_control</a> (uint32_t pin_id, uint32_t pin_setup, uint32_t pin_feature)</td></tr>
<tr class="memdesc:a0119832325560cefb58fb10ea27b8955"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable GPIO feature.  <a href="#a0119832325560cefb58fb10ea27b8955">More...</a><br /></td></tr>
<tr class="separator:a0119832325560cefb58fb10ea27b8955"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac91bd7cae0cfe6983562ff12ad6d8a48"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ac91bd7cae0cfe6983562ff12ad6d8a48">set_iopin_value</a> (uint32_t pin_id, uint32_t pin_value)</td></tr>
<tr class="memdesc:ac91bd7cae0cfe6983562ff12ad6d8a48"><td class="mdescLeft">&#160;</td><td class="mdescRight">If IO pin control is used to set pin_id as output, the pin level or value will be set to pin_value.  <a href="#ac91bd7cae0cfe6983562ff12ad6d8a48">More...</a><br /></td></tr>
<tr class="separator:ac91bd7cae0cfe6983562ff12ad6d8a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac69ef18b4969b949e28cc4801e3a0fcd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ac69ef18b4969b949e28cc4801e3a0fcd">get_iopin_value</a> (uint32_t pin_id, uint32_t *pin_value)</td></tr>
<tr class="memdesc:ac69ef18b4969b949e28cc4801e3a0fcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read IO pin level or value.  <a href="#ac69ef18b4969b949e28cc4801e3a0fcd">More...</a><br /></td></tr>
<tr class="separator:ac69ef18b4969b949e28cc4801e3a0fcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbbc9b3d54ab859c1cc07c6426d5dedc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#acbbc9b3d54ab859c1cc07c6426d5dedc">peek_message_data_float</a> ()</td></tr>
<tr class="memdesc:acbbc9b3d54ab859c1cc07c6426d5dedc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of data float packets in internal queue.  <a href="#acbbc9b3d54ab859c1cc07c6426d5dedc">More...</a><br /></td></tr>
<tr class="separator:acbbc9b3d54ab859c1cc07c6426d5dedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72d1aef5490d264ddd63f753f3fc347"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aa72d1aef5490d264ddd63f753f3fc347">read_message_data_float</a> (<a class="el" href="struct_xe_thru_1_1_data_float.xhtml">XeThru::DataFloat</a> *data_float)</td></tr>
<tr class="memdesc:aa72d1aef5490d264ddd63f753f3fc347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single data float message from internal queue.  <a href="#aa72d1aef5490d264ddd63f753f3fc347">More...</a><br /></td></tr>
<tr class="separator:aa72d1aef5490d264ddd63f753f3fc347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb8e13679a2080d31de2ce50a1062bb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a3fb8e13679a2080d31de2ce50a1062bb">peek_message_radar_rf</a> ()</td></tr>
<tr class="memdesc:a3fb8e13679a2080d31de2ce50a1062bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of RadarRf messages available in queue.  <a href="#a3fb8e13679a2080d31de2ce50a1062bb">More...</a><br /></td></tr>
<tr class="separator:a3fb8e13679a2080d31de2ce50a1062bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57d4fb80b3356211113783141a8ddd58"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a57d4fb80b3356211113783141a8ddd58">read_message_radar_rf</a> (<a class="el" href="class_xe_thru_1_1_radar_rf_data.xhtml">XeThru::RadarRfData</a> *radar_rf)</td></tr>
<tr class="memdesc:a57d4fb80b3356211113783141a8ddd58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single RadarRf item from the queue.  <a href="#a57d4fb80b3356211113783141a8ddd58">More...</a><br /></td></tr>
<tr class="separator:a57d4fb80b3356211113783141a8ddd58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6c9b126eef7df908b6f3abb45a50be"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a1e6c9b126eef7df908b6f3abb45a50be">peek_message_radar_rf_normalized</a> ()</td></tr>
<tr class="memdesc:a1e6c9b126eef7df908b6f3abb45a50be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of RadarRfNormalized messages available in queue.  <a href="#a1e6c9b126eef7df908b6f3abb45a50be">More...</a><br /></td></tr>
<tr class="separator:a1e6c9b126eef7df908b6f3abb45a50be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab143fea71945662aa77df8470622c56d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ab143fea71945662aa77df8470622c56d">read_message_radar_rf_normalized</a> (<a class="el" href="class_xe_thru_1_1_radar_rf_normalized_data.xhtml">XeThru::RadarRfNormalizedData</a> *radar_rf_normalized)</td></tr>
<tr class="memdesc:ab143fea71945662aa77df8470622c56d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single RadarRfNormalized item from the queue.  <a href="#ab143fea71945662aa77df8470622c56d">More...</a><br /></td></tr>
<tr class="separator:ab143fea71945662aa77df8470622c56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef168c44720a0b9a81bb54f2560f8da3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#aef168c44720a0b9a81bb54f2560f8da3">peek_message_radar_baseband_float</a> ()</td></tr>
<tr class="memdesc:aef168c44720a0b9a81bb54f2560f8da3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of RadarBasebandFloat messages available in queue.  <a href="#aef168c44720a0b9a81bb54f2560f8da3">More...</a><br /></td></tr>
<tr class="separator:aef168c44720a0b9a81bb54f2560f8da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20d415608409df22c03539ac4f6a62ae"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a20d415608409df22c03539ac4f6a62ae">read_message_radar_baseband_float</a> (<a class="el" href="class_xe_thru_1_1_radar_baseband_float_data.xhtml">XeThru::RadarBasebandFloatData</a> *radar_baseband_float)</td></tr>
<tr class="memdesc:a20d415608409df22c03539ac4f6a62ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single RadarBasebandFloat item from the queue.  <a href="#a20d415608409df22c03539ac4f6a62ae">More...</a><br /></td></tr>
<tr class="separator:a20d415608409df22c03539ac4f6a62ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbbf38254e2e6fa1c7994039b7e8412a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#afbbf38254e2e6fa1c7994039b7e8412a">peek_message_radar_baseband_q15</a> ()</td></tr>
<tr class="memdesc:afbbf38254e2e6fa1c7994039b7e8412a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return number of RadarBasebandQ15 messages available in queue.  <a href="#afbbf38254e2e6fa1c7994039b7e8412a">More...</a><br /></td></tr>
<tr class="separator:afbbf38254e2e6fa1c7994039b7e8412a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a694c42a01bb5a2b72d9fd1653c681d95"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a694c42a01bb5a2b72d9fd1653c681d95">read_message_radar_baseband_q15</a> (<a class="el" href="class_xe_thru_1_1_radar_baseband_q15_data.xhtml">XeThru::RadarBasebandQ15Data</a> *radar_baseband_q15)</td></tr>
<tr class="memdesc:a694c42a01bb5a2b72d9fd1653c681d95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read a single RadarBasebandQ15 item from the queue.  <a href="#a694c42a01bb5a2b72d9fd1653c681d95">More...</a><br /></td></tr>
<tr class="separator:a694c42a01bb5a2b72d9fd1653c681d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24e2bfa44095e94d3cdaaaada3ca3d54"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a24e2bfa44095e94d3cdaaaada3ca3d54">peek_message_data_string</a> ()</td></tr>
<tr class="memdesc:a24e2bfa44095e94d3cdaaaada3ca3d54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of data string packets in internal queue.  <a href="#a24e2bfa44095e94d3cdaaaada3ca3d54">More...</a><br /></td></tr>
<tr class="separator:a24e2bfa44095e94d3cdaaaada3ca3d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fee2a9224790e1cdca94ca8d6c10f2f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a3fee2a9224790e1cdca94ca8d6c10f2f">read_message_data_string</a> (uint32_t *content_id, uint32_t *info, std::string *data)</td></tr>
<tr class="memdesc:a3fee2a9224790e1cdca94ca8d6c10f2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single data string message from internal queue.  <a href="#a3fee2a9224790e1cdca94ca8d6c10f2f">More...</a><br /></td></tr>
<tr class="separator:a3fee2a9224790e1cdca94ca8d6c10f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53f4d48bb6a24e8576679d5251d58a08"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a53f4d48bb6a24e8576679d5251d58a08">peek_message_data_byte</a> ()</td></tr>
<tr class="memdesc:a53f4d48bb6a24e8576679d5251d58a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of data byte packets in internal queue.  <a href="#a53f4d48bb6a24e8576679d5251d58a08">More...</a><br /></td></tr>
<tr class="separator:a53f4d48bb6a24e8576679d5251d58a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac82d12f81b0a4429a50c0bd5df085453"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ac82d12f81b0a4429a50c0bd5df085453">read_message_data_byte</a> (uint32_t *content_id, uint32_t *info, Bytes *data)</td></tr>
<tr class="memdesc:ac82d12f81b0a4429a50c0bd5df085453"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single data byte message from internal queue.  <a href="#ac82d12f81b0a4429a50c0bd5df085453">More...</a><br /></td></tr>
<tr class="separator:ac82d12f81b0a4429a50c0bd5df085453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad602fa7b2caf6a577506fcd105fc56ad"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#ad602fa7b2caf6a577506fcd105fc56ad">peek_message_system</a> ()</td></tr>
<tr class="memdesc:ad602fa7b2caf6a577506fcd105fc56ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of system packets in internal queue.  <a href="#ad602fa7b2caf6a577506fcd105fc56ad">More...</a><br /></td></tr>
<tr class="separator:ad602fa7b2caf6a577506fcd105fc56ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c4f5061a6eeb2794d22c8cfc18917d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a04c4f5061a6eeb2794d22c8cfc18917d">read_message_system</a> (uint32_t *responsecode)</td></tr>
<tr class="memdesc:a04c4f5061a6eeb2794d22c8cfc18917d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single data system message from internal queue.  <a href="#a04c4f5061a6eeb2794d22c8cfc18917d">More...</a><br /></td></tr>
<tr class="separator:a04c4f5061a6eeb2794d22c8cfc18917d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c2e728297698979065b610f00710476"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a5c2e728297698979065b610f00710476">search_for_file_by_type</a> (uint32_t type, std::vector&lt; int32_t &gt; &amp;result)</td></tr>
<tr class="memdesc:a5c2e728297698979065b610f00710476"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for and returns a list of identifiers for all files of the specified type.  <a href="#a5c2e728297698979065b610f00710476">More...</a><br /></td></tr>
<tr class="separator:a5c2e728297698979065b610f00710476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a093710fe6044a78d6e52523a6bc3696c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a093710fe6044a78d6e52523a6bc3696c">find_all_files</a> (<a class="el" href="struct_xe_thru_1_1_files.xhtml">XeThru::Files</a> &amp;result)</td></tr>
<tr class="memdesc:a093710fe6044a78d6e52523a6bc3696c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds all files and stores the type and identifier of each file in the given buffers.  <a href="#a093710fe6044a78d6e52523a6bc3696c">More...</a><br /></td></tr>
<tr class="separator:a093710fe6044a78d6e52523a6bc3696c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e237ed17b416dc51af5aa833b83ad40"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a7e237ed17b416dc51af5aa833b83ad40">create_file</a> (uint32_t file_type, uint32_t identifier, uint32_t length)</td></tr>
<tr class="memdesc:a7e237ed17b416dc51af5aa833b83ad40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates and opens a new file with given type, identifiers and length.  <a href="#a7e237ed17b416dc51af5aa833b83ad40">More...</a><br /></td></tr>
<tr class="separator:a7e237ed17b416dc51af5aa833b83ad40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77948021f4bceb9aca8c3ba0f776bf94"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a77948021f4bceb9aca8c3ba0f776bf94">open_file</a> (uint32_t file_type, uint32_t identifier)</td></tr>
<tr class="memdesc:a77948021f4bceb9aca8c3ba0f776bf94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens the file with given type band identifiers.  <a href="#a77948021f4bceb9aca8c3ba0f776bf94">More...</a><br /></td></tr>
<tr class="separator:a77948021f4bceb9aca8c3ba0f776bf94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a181d3dca73b84c0666800c5c05109972"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a181d3dca73b84c0666800c5c05109972">set_file_data</a> (uint32_t type, uint32_t identifier, uint32_t offset, const Bytes &amp;data)</td></tr>
<tr class="memdesc:a181d3dca73b84c0666800c5c05109972"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes data at offset to the file.  <a href="#a181d3dca73b84c0666800c5c05109972">More...</a><br /></td></tr>
<tr class="separator:a181d3dca73b84c0666800c5c05109972"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71f642ff208ad65ea2725eddb66f6731"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a71f642ff208ad65ea2725eddb66f6731">close_file</a> (uint32_t type, uint32_t identifier, bool commit)</td></tr>
<tr class="memdesc:a71f642ff208ad65ea2725eddb66f6731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the file.  <a href="#a71f642ff208ad65ea2725eddb66f6731">More...</a><br /></td></tr>
<tr class="separator:a71f642ff208ad65ea2725eddb66f6731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89cff1edd7553ee14f0c4c1dfc73d0f3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a89cff1edd7553ee14f0c4c1dfc73d0f3">get_file_length</a> (uint32_t type, uint32_t identifier, uint32_t &amp;result)</td></tr>
<tr class="memdesc:a89cff1edd7553ee14f0c4c1dfc73d0f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the length of a file.  <a href="#a89cff1edd7553ee14f0c4c1dfc73d0f3">More...</a><br /></td></tr>
<tr class="separator:a89cff1edd7553ee14f0c4c1dfc73d0f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387e83362ce391c5324358e43fb7aefb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a387e83362ce391c5324358e43fb7aefb">delete_file</a> (uint32_t type, uint32_t identifier)</td></tr>
<tr class="memdesc:a387e83362ce391c5324358e43fb7aefb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a file.  <a href="#a387e83362ce391c5324358e43fb7aefb">More...</a><br /></td></tr>
<tr class="separator:a387e83362ce391c5324358e43fb7aefb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af06a968fa10ee9692f637b9f7c00a58b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af06a968fa10ee9692f637b9f7c00a58b">get_file_data</a> (uint32_t type, uint32_t identifier, uint32_t offset, uint32_t length, Bytes &amp;result)</td></tr>
<tr class="memdesc:af06a968fa10ee9692f637b9f7c00a58b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a subsection of the file at an offset.  <a href="#af06a968fa10ee9692f637b9f7c00a58b">More...</a><br /></td></tr>
<tr class="separator:af06a968fa10ee9692f637b9f7c00a58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4898bb8a285fff45f231ac8460e17f94"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a4898bb8a285fff45f231ac8460e17f94">format_filesystem</a> (uint32_t key)</td></tr>
<tr class="separator:a4898bb8a285fff45f231ac8460e17f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7e96063960dbad0c199a5b5ad696d09"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#af7e96063960dbad0c199a5b5ad696d09">set_file</a> (uint32_t type, uint32_t identifier, const Bytes &amp;data)</td></tr>
<tr class="separator:af7e96063960dbad0c199a5b5ad696d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a771fe0b03d6896d0c75ac7c828b1bf38"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml#a771fe0b03d6896d0c75ac7c828b1bf38">get_file</a> (uint32_t type, uint32_t identifier, Bytes *result)</td></tr>
<tr class="separator:a771fe0b03d6896d0c75ac7c828b1bf38"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> class gives access to <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> functionality on target via module connector. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a11f91e334a06585e07f1b1334aa9ea1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11f91e334a06585e07f1b1334aa9ea1a">&sect;&nbsp;</a></span>XEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::XEP::XEP </td>
          <td>(</td>
          <td class="paramtype">LockedRadarInterfacePtr &amp;&#160;</td>
          <td class="paramname"><em>radar_interface</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> constructor. </p>
<dl class="section return"><dt>Returns</dt><dd>instance </dd></dl>

</div>
</div>
<a id="a9ed879e751f6a7032cd52207c9050d24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed879e751f6a7032cd52207c9050d24">&sect;&nbsp;</a></span>~XEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::XEP::~XEP </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> destructor. </p>
<dl class="section return"><dt>Returns</dt><dd>destroys instance. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a71f642ff208ad65ea2725eddb66f6731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71f642ff208ad65ea2725eddb66f6731">&sect;&nbsp;</a></span>close_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::close_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>commit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close the file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file. </td></tr>
    <tr><td class="paramname">commit</td><td>wheter to save changes made to the file closing.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a7e237ed17b416dc51af5aa833b83ad40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e237ed17b416dc51af5aa833b83ad40">&sect;&nbsp;</a></span>create_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::create_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>file_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates and opens a new file with given type, identifiers and length. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file. </td></tr>
    <tr><td class="paramname">length</td><td>length of the file to create</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a387e83362ce391c5324358e43fb7aefb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387e83362ce391c5324358e43fb7aefb">&sect;&nbsp;</a></span>delete_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::delete_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a093710fe6044a78d6e52523a6bc3696c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a093710fe6044a78d6e52523a6bc3696c">&sect;&nbsp;</a></span>find_all_files()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::find_all_files </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_xe_thru_1_1_files.xhtml">XeThru::Files</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds all files and stores the type and identifier of each file in the given buffers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">result</td><td>The result from the search is copied into the result parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a4898bb8a285fff45f231ac8460e17f94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4898bb8a285fff45f231ac8460e17f94">&sect;&nbsp;</a></span>format_filesystem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::format_filesystem </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afa2baadb7b475bfd910a8355e8d18302"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa2baadb7b475bfd910a8355e8d18302">&sect;&nbsp;</a></span>get_decimation_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_decimation_factor </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>decimation_factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a771fe0b03d6896d0c75ac7c828b1bf38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a771fe0b03d6896d0c75ac7c828b1bf38">&sect;&nbsp;</a></span>get_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Bytes *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af06a968fa10ee9692f637b9f7c00a58b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af06a968fa10ee9692f637b9f7c00a58b">&sect;&nbsp;</a></span>get_file_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_file_data </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Bytes &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a subsection of the file at an offset. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file. </td></tr>
    <tr><td class="paramname">offset</td><td>The offset to read from. </td></tr>
    <tr><td class="paramname">length</td><td>Number of bytes to read. </td></tr>
    <tr><td class="paramname">result</td><td>The resuling data is copied into this parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a89cff1edd7553ee14f0c4c1dfc73d0f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89cff1edd7553ee14f0c4c1dfc73d0f3">&sect;&nbsp;</a></span>get_file_length()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_file_length </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the length of a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ac69ef18b4969b949e28cc4801e3a0fcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac69ef18b4969b949e28cc4801e3a0fcd">&sect;&nbsp;</a></span>get_iopin_value()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_iopin_value </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pin_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read IO pin level or value. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a6709762f684fd75fb0d8f95be39be869"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6709762f684fd75fb0d8f95be39be869">&sect;&nbsp;</a></span>get_legacy_output()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_legacy_output </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>legacy_output</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae300b793ddf1eea8a07bf326ab9ebbaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae300b793ddf1eea8a07bf326ab9ebbaa">&sect;&nbsp;</a></span>get_normalization()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_normalization </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>normalization</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a464bc504614f12e4ce43208b327802de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a464bc504614f12e4ce43208b327802de">&sect;&nbsp;</a></span>get_number_format()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_number_format </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>number_format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0ae85a7927105e5bc04c69804fb11ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0ae85a7927105e5bc04c69804fb11ba">&sect;&nbsp;</a></span>get_phase_noise_correction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_phase_noise_correction </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>correction_distance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af80e7037177b9625ba5d3e5330dccc73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af80e7037177b9625ba5d3e5330dccc73">&sect;&nbsp;</a></span>get_system_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::get_system_info </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>info_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string *&#160;</td>
          <td class="paramname"><em>system_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a string containing system information given by infocode: XTS_SSIC_FIRMWAREID = 0x02 -&gt; Returns the installed Firmware ID, "XEP" XTS_SSIC_VERSION = 0x03 -&gt; Returns the installed Firmware Version. </p>
<p>XTS_SSIC_BUILD = 0x04 -&gt; Returns information of the SW Build installed on the device XTS_SSIC_VERSIONLIST = 0x07 -&gt; Returns ID and version of all components. Calls all components and compound a string. E.g. "XEP:2.3.4.5;X4C51:1.0.0.0"</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="aac22d3cd2635dee15d56d5fe96fc1760"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac22d3cd2635dee15d56d5fe96fc1760">&sect;&nbsp;</a></span>module_reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::module_reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets module. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status. </dd></dl>

</div>
</div>
<a id="a77948021f4bceb9aca8c3ba0f776bf94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77948021f4bceb9aca8c3ba0f776bf94">&sect;&nbsp;</a></span>open_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::open_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>file_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Opens the file with given type band identifiers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a53f4d48bb6a24e8576679d5251d58a08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53f4d48bb6a24e8576679d5251d58a08">&sect;&nbsp;</a></span>peek_message_data_byte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_data_byte </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of data byte packets in internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of data byte packets in internal queue. </dd></dl>

</div>
</div>
<a id="acbbc9b3d54ab859c1cc07c6426d5dedc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbbc9b3d54ab859c1cc07c6426d5dedc">&sect;&nbsp;</a></span>peek_message_data_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_data_float </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of data float packets in internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns number of data float packets in internal queue </dd></dl>

</div>
</div>
<a id="a24e2bfa44095e94d3cdaaaada3ca3d54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24e2bfa44095e94d3cdaaaada3ca3d54">&sect;&nbsp;</a></span>peek_message_data_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_data_string </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of data string packets in internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns number of data string packets in internal queue. </dd></dl>

</div>
</div>
<a id="aef168c44720a0b9a81bb54f2560f8da3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef168c44720a0b9a81bb54f2560f8da3">&sect;&nbsp;</a></span>peek_message_radar_baseband_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_radar_baseband_float </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of RadarBasebandFloat messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number of messages in buffer </dd></dl>

</div>
</div>
<a id="afbbf38254e2e6fa1c7994039b7e8412a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbbf38254e2e6fa1c7994039b7e8412a">&sect;&nbsp;</a></span>peek_message_radar_baseband_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_radar_baseband_q15 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of RadarBasebandQ15 messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number of messages in buffer </dd></dl>

</div>
</div>
<a id="a3fb8e13679a2080d31de2ce50a1062bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fb8e13679a2080d31de2ce50a1062bb">&sect;&nbsp;</a></span>peek_message_radar_rf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_radar_rf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of RadarRf messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number of messages in buffer </dd></dl>

</div>
</div>
<a id="a1e6c9b126eef7df908b6f3abb45a50be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6c9b126eef7df908b6f3abb45a50be">&sect;&nbsp;</a></span>peek_message_radar_rf_normalized()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_radar_rf_normalized </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return number of RadarRfNormalized messages available in queue. </p>
<dl class="section return"><dt>Returns</dt><dd>size: number of messages in buffer </dd></dl>

</div>
</div>
<a id="ad602fa7b2caf6a577506fcd105fc56ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad602fa7b2caf6a577506fcd105fc56ad">&sect;&nbsp;</a></span>peek_message_system()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::peek_message_system </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns number of system packets in internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>void </dd></dl>

</div>
</div>
<a id="a9edbf700a674659330afb771f84485ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9edbf700a674659330afb771f84485ef">&sect;&nbsp;</a></span>ping()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::ping </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pong_value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send ping to module in order to validate that connection both ways is OK. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ac82d12f81b0a4429a50c0bd5df085453"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac82d12f81b0a4429a50c0bd5df085453">&sect;&nbsp;</a></span>read_message_data_byte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_data_byte </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>content_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Bytes *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a single data byte message from internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="aa72d1aef5490d264ddd63f753f3fc347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa72d1aef5490d264ddd63f753f3fc347">&sect;&nbsp;</a></span>read_message_data_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_data_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_xe_thru_1_1_data_float.xhtml">XeThru::DataFloat</a> *&#160;</td>
          <td class="paramname"><em>data_float</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a single data float message from internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a3fee2a9224790e1cdca94ca8d6c10f2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fee2a9224790e1cdca94ca8d6c10f2f">&sect;&nbsp;</a></span>read_message_data_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_data_string </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>content_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a single data string message from internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a20d415608409df22c03539ac4f6a62ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20d415608409df22c03539ac4f6a62ae">&sect;&nbsp;</a></span>read_message_radar_baseband_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_radar_baseband_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_radar_baseband_float_data.xhtml">XeThru::RadarBasebandFloatData</a> *&#160;</td>
          <td class="paramname"><em>radar_baseband_float</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single RadarBasebandFloat item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">radar_baseband_float</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_radar_baseband_float_data.xhtml" title="Python warning: Accessing vectors directly can cause memory corruption if the parent object goes out ...">RadarBasebandFloatData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a694c42a01bb5a2b72d9fd1653c681d95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a694c42a01bb5a2b72d9fd1653c681d95">&sect;&nbsp;</a></span>read_message_radar_baseband_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_radar_baseband_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_radar_baseband_q15_data.xhtml">XeThru::RadarBasebandQ15Data</a> *&#160;</td>
          <td class="paramname"><em>radar_baseband_q15</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single RadarBasebandQ15 item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">radar_baseband_q15</td><td>pointer to returned RadarBasebandQ15 item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a57d4fb80b3356211113783141a8ddd58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57d4fb80b3356211113783141a8ddd58">&sect;&nbsp;</a></span>read_message_radar_rf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_radar_rf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_radar_rf_data.xhtml">XeThru::RadarRfData</a> *&#160;</td>
          <td class="paramname"><em>radar_rf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single RadarRf item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">radar_rf</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_radar_rf_data.xhtml" title="Python warning: Accessing vectors directly can cause memory corruption if the parent object goes out ...">RadarRfData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="ab143fea71945662aa77df8470622c56d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab143fea71945662aa77df8470622c56d">&sect;&nbsp;</a></span>read_message_radar_rf_normalized()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_radar_rf_normalized </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_radar_rf_normalized_data.xhtml">XeThru::RadarRfNormalizedData</a> *&#160;</td>
          <td class="paramname"><em>radar_rf_normalized</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read a single RadarRfNormalized item from the queue. </p>
<p>Blocks if queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">radar_rf_normalized</td><td>pointer to returned <a class="el" href="class_xe_thru_1_1_radar_rf_normalized_data.xhtml" title="Python warning: Accessing vectors directly can cause memory corruption if the parent object goes out ...">RadarRfNormalizedData</a> item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status : success in case of 0 / failure in any other case </dd></dl>

</div>
</div>
<a id="a04c4f5061a6eeb2794d22c8cfc18917d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04c4f5061a6eeb2794d22c8cfc18917d">&sect;&nbsp;</a></span>read_message_system()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::read_message_system </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>responsecode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a single data system message from internal queue. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a5c2e728297698979065b610f00710476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c2e728297698979065b610f00710476">&sect;&nbsp;</a></span>search_for_file_by_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::search_for_file_by_type </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int32_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Searches for and returns a list of identifiers for all files of the specified type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">result</td><td>vector of file identifiers are copied here as result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="af4cfa70db069dd38e4167995bf64f37a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4cfa70db069dd38e4167995bf64f37a">&sect;&nbsp;</a></span>set_baudrate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_baudrate </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>baudrate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set baudrate for serial communication during <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> operation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">baudrate</td><td>enum representing the baudrate, defined in xtid.h </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af6eb5c21c9cab7e1ed3b1bc108b0e1e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6eb5c21c9cab7e1ed3b1bc108b0e1e8">&sect;&nbsp;</a></span>set_decimation_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_decimation_factor </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>decimation_factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af7e96063960dbad0c199a5b5ad696d09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7e96063960dbad0c199a5b5ad696d09">&sect;&nbsp;</a></span>set_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Bytes &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a181d3dca73b84c0666800c5c05109972"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a181d3dca73b84c0666800c5c05109972">&sect;&nbsp;</a></span>set_file_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_file_data </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Bytes &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes data at offset to the file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The type of file. </td></tr>
    <tr><td class="paramname">identifier</td><td>The identifer of the file. </td></tr>
    <tr><td class="paramname">offset</td><td>Offset where to write the data to. </td></tr>
    <tr><td class="paramname">data</td><td>The data to write.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a0119832325560cefb58fb10ea27b8955"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0119832325560cefb58fb10ea27b8955">&sect;&nbsp;</a></span>set_iopin_control()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_iopin_control </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_feature</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable GPIO feature. </p>
<p>pin_id : which io pin to configure</p>
<p>pin_setup : control pin setup 0 = input 1 = output</p>
<p>pin_feature : control pin feature 0 = Disable all iopin features ( not available, will return error) 1 = Configure according to datasheet default( not available, will return error) 2 = Passive - Set and get iopin level from host</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ac91bd7cae0cfe6983562ff12ad6d8a48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac91bd7cae0cfe6983562ff12ad6d8a48">&sect;&nbsp;</a></span>set_iopin_value()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_iopin_value </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pin_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If IO pin control is used to set pin_id as output, the pin level or value will be set to pin_value. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="aabae633e5dc25df7f97d48c762928c7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabae633e5dc25df7f97d48c762928c7e">&sect;&nbsp;</a></span>set_legacy_output()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_legacy_output </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>legacy_output</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abb95f81b9fb6a689f89cb7f6decdebd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb95f81b9fb6a689f89cb7f6decdebd7">&sect;&nbsp;</a></span>set_normalization()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_normalization </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>normalization</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a902b45f7ddcd0928f92281ea37afd6a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a902b45f7ddcd0928f92281ea37afd6a2">&sect;&nbsp;</a></span>set_number_format()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_number_format </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>number_format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a22d28fc41a0b365f2d7a54bb0190691c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22d28fc41a0b365f2d7a54bb0190691c">&sect;&nbsp;</a></span>set_phase_noise_correction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::set_phase_noise_correction </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>enable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>correction_distance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a052386a043e8059290749ec3e269e58d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a052386a043e8059290749ec3e269e58d">&sect;&nbsp;</a></span>x4driver_get_dac_max()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_dac_max </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>dac_max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets dac max. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a896a1b30938c0267551bd702a50b4a73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a896a1b30938c0267551bd702a50b4a73">&sect;&nbsp;</a></span>x4driver_get_dac_min()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_dac_min </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>dac_min</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets dac min. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a112a85a877ee1c06010fcc7ad170bdb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a112a85a877ee1c06010fcc7ad170bdb8">&sect;&nbsp;</a></span>x4driver_get_downconversion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_downconversion </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets downconversion. </p>
<p>0=no downconversion, i.e. rf data. 1=downconversion.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a57fde2b290f81e4c4ed7ed57e3a61e2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57fde2b290f81e4c4ed7ed57e3a61e2b">&sect;&nbsp;</a></span>x4driver_get_fps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_fps </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets configured FPS. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a6935b9729aadf1150e21c1c1a38b2b2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6935b9729aadf1150e21c1c1a38b2b2b">&sect;&nbsp;</a></span>x4driver_get_frame_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_frame_area </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_xe_thru_1_1_frame_area.xhtml">FrameArea</a> *&#160;</td>
          <td class="paramname"><em>frame_area</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get frame area. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a7f8f4e94c4ee029266075e384a13a8af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8f4e94c4ee029266075e384a13a8af">&sect;&nbsp;</a></span>x4driver_get_frame_area_offset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_frame_area_offset </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get offset to adjust frame area reference. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a86a67c5c4aa1c0d87cc5c3cd4932d41e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86a67c5c4aa1c0d87cc5c3cd4932d41e">&sect;&nbsp;</a></span>x4driver_get_frame_bin_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_frame_bin_count </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>bins</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets Number of bins. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="af9fcc263bf081a4cfa64e474d67e3266"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9fcc263bf081a4cfa64e474d67e3266">&sect;&nbsp;</a></span>x4driver_get_iterations()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_iterations </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>iterations</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets Iterations. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a0dea1ac5d6528ac3b48b444dcf42cdeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dea1ac5d6528ac3b48b444dcf42cdeb">&sect;&nbsp;</a></span>x4driver_get_pif_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_pif_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets PIF register value. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ab3549aa102629878efebc7f4cf891b75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3549aa102629878efebc7f4cf891b75">&sect;&nbsp;</a></span>x4driver_get_prf_div()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_prf_div </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>prf_div</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets Pulse Repetition Frequency(PRF) divider. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a48582c442d9749035aee429bcada16e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48582c442d9749035aee429bcada16e7">&sect;&nbsp;</a></span>x4driver_get_pulses_per_step()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_pulses_per_step </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets pulses per step. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ab738e1ed08b90a2b82ac6dabd98840eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab738e1ed08b90a2b82ac6dabd98840eb">&sect;&nbsp;</a></span>x4driver_get_spi_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_spi_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get spi register on radar chip. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ab9e517bb3112b7520d80716fc3bde4db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9e517bb3112b7520d80716fc3bde4db">&sect;&nbsp;</a></span>x4driver_get_tx_center_frequency()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_tx_center_frequency </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>tx_frequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get radar TX center frequency. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a353c7846a1d831857e043e1afb4d4949"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a353c7846a1d831857e043e1afb4d4949">&sect;&nbsp;</a></span>x4driver_get_tx_power()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_tx_power </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>tx_power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the radar transmitter power. </p>
<p>0 = transmitter off. See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a99f0d8ffb88c626066077a6a755002ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99f0d8ffb88c626066077a6a755002ac">&sect;&nbsp;</a></span>x4driver_get_xif_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_get_xif_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets XIF register value. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="ad7b3014b432d966b91e4f3103997d12e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7b3014b432d966b91e4f3103997d12e">&sect;&nbsp;</a></span>x4driver_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Will make sure that enable is set, X4 controller is programmed, ldos are enabled, and that the external oscillator has been enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="afe8a02a90c9be4314c2f20bfd09e466b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe8a02a90c9be4314c2f20bfd09e466b">&sect;&nbsp;</a></span>x4driver_read_from_i2c_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_read_from_i2c_register </td>
          <td>(</td>
          <td class="paramtype">Bytes *&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read from a i2c register. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">values</td><td>The result is copied into this parameter </td></tr>
    <tr><td class="paramname">length</td><td>Specifies how many bytes to read </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a06587a87652cad3dfbeb9912376d899c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06587a87652cad3dfbeb9912376d899c">&sect;&nbsp;</a></span>x4driver_read_from_spi_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_read_from_spi_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Bytes *&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read from a spi register. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>Specifies the address </td></tr>
    <tr><td class="paramname">values</td><td>The result is copied into this parameter </td></tr>
    <tr><td class="paramname">length</td><td>Specifies how many bytes to read </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a3ded649d232ede4a73a7f6f75957450b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ded649d232ede4a73a7f6f75957450b">&sect;&nbsp;</a></span>x4driver_set_dac_max()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_dac_max </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dac_max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets dac max. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="af32e45649bd91d13588a72e1b3a68f1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af32e45649bd91d13588a72e1b3a68f1a">&sect;&nbsp;</a></span>x4driver_set_dac_min()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_dac_min </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dac_min</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets dac min. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="aa3683254e413e5fb0cbbad72c28328ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3683254e413e5fb0cbbad72c28328ab">&sect;&nbsp;</a></span>x4driver_set_downconversion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_downconversion </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets downconversion. </p>
<p>0=no downconversion, i.e. rf data. 1=downconversion.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="acde188fb7f9945b007437793661fdbbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acde188fb7f9945b007437793661fdbbc">&sect;&nbsp;</a></span>x4driver_set_enable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_enable </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set enable for X4 enable pin. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="adfea3e9ba403e4de7749516a4ecb6f41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfea3e9ba403e4de7749516a4ecb6f41">&sect;&nbsp;</a></span>x4driver_set_fps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_fps </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets frame rate for frame streaming. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a5b4decc26ac4890faef2cb2b4ede0240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b4decc26ac4890faef2cb2b4ede0240">&sect;&nbsp;</a></span>x4driver_set_frame_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_frame_area </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set frame area, i.e. </p>
<p>the range in distance where the radar is observing. Assume air as transmitter medium. Start and end in meter.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a02ea403a5b48084a3554851873cdd6f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02ea403a5b48084a3554851873cdd6f1">&sect;&nbsp;</a></span>x4driver_set_frame_area_offset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_frame_area_offset </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set offset to adjust frame area reference point (location of frame area start at zero) depending on sensor hardware. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a374525416885f85a9aa23d2b01b41f13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a374525416885f85a9aa23d2b01b41f13">&sect;&nbsp;</a></span>x4driver_set_iterations()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_iterations </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iterations</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets Iterations. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="aa01cb112b0b1a5c91aa3138d7946a20e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa01cb112b0b1a5c91aa3138d7946a20e">&sect;&nbsp;</a></span>x4driver_set_pif_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_pif_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets PIF register value. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a8337eb72721dbb0b5cb10e2515543c9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8337eb72721dbb0b5cb10e2515543c9c">&sect;&nbsp;</a></span>x4driver_set_prf_div()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_prf_div </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>prf_div</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets Pulse Repetition Frequency(PRF) divider. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="adb248233c6df1f90c1787ee10b571ddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb248233c6df1f90c1787ee10b571ddc">&sect;&nbsp;</a></span>x4driver_set_pulses_per_step()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_pulses_per_step </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets pulses per step. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a9fe0995345c6ea19b9788ee864463571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fe0995345c6ea19b9788ee864463571">&sect;&nbsp;</a></span>x4driver_set_spi_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_spi_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set spi register on radar chip. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a74e6fff2db2c136e69663dffcc0bd02d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74e6fff2db2c136e69663dffcc0bd02d">&sect;&nbsp;</a></span>x4driver_set_tx_center_frequency()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_tx_center_frequency </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>tx_frequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set radar TX center frequency. </p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a46536ace6a802bba0109db8703713936"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46536ace6a802bba0109db8703713936">&sect;&nbsp;</a></span>x4driver_set_tx_power()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_tx_power </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>tx_power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the radar transmitter power. </p>
<p>0 = transmitter off. See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a9857ebb7691edbac35d765037a6f689a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9857ebb7691edbac35d765037a6f689a">&sect;&nbsp;</a></span>x4driver_set_xif_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_set_xif_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets XIF register value. </p>
<p>See X4 datasheet for details.</p>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="a9f61d816f044eff68f4cc886b00dd0e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f61d816f044eff68f4cc886b00dd0e7">&sect;&nbsp;</a></span>x4driver_write_to_i2c_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_write_to_i2c_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Bytes &amp;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write to a i2c register on radar chip. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>Specifies the address </td></tr>
    <tr><td class="paramname">values</td><td>Specifies the values </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<a id="adb6e5e86bb6c50655b5168c7d345c4ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb6e5e86bb6c50655b5168c7d345c4ed">&sect;&nbsp;</a></span>x4driver_write_to_spi_register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::XEP::x4driver_write_to_spi_register </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Bytes &amp;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write to a spi register on radar chip. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>Specifies the address </td></tr>
    <tr><td class="paramname">values</td><td>Specifies the values </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>execution status </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/<a class="el" href="_x_e_p_8hpp_source.xhtml">XEP.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
