<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: XeThru::ModuleConnector Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_xe_thru.xhtml">XeThru</a></li><li class="navelem"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml">ModuleConnector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_xe_thru_1_1_module_connector-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">XeThru::ModuleConnector Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is responsible for establishing contact with the Xethru module.  
 <a href="class_xe_thru_1_1_module_connector.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_module_connector_8hpp_source.xhtml">ModuleConnector.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac648134d64e86cfc2599258f147826af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#ac648134d64e86cfc2599258f147826af">ModuleConnector</a> (const std::string &amp;device_name, int log_level, AbstractLoggerIo *logger_io)</td></tr>
<tr class="memdesc:ac648134d64e86cfc2599258f147826af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ac648134d64e86cfc2599258f147826af">More...</a><br /></td></tr>
<tr class="separator:ac648134d64e86cfc2599258f147826af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98e0d74a19a3b1b275b482761971eb15"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a98e0d74a19a3b1b275b482761971eb15">ModuleConnector</a> (const std::string &amp;device_name)</td></tr>
<tr class="memdesc:a98e0d74a19a3b1b275b482761971eb15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a98e0d74a19a3b1b275b482761971eb15">More...</a><br /></td></tr>
<tr class="separator:a98e0d74a19a3b1b275b482761971eb15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79ba250d002970a4598d3b32187462a2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a79ba250d002970a4598d3b32187462a2">ModuleConnector</a> (const std::string &amp;device_name, int log_level)</td></tr>
<tr class="memdesc:a79ba250d002970a4598d3b32187462a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a79ba250d002970a4598d3b32187462a2">More...</a><br /></td></tr>
<tr class="separator:a79ba250d002970a4598d3b32187462a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd571e3cfce67e387073efc46ed16a73"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#afd571e3cfce67e387073efc46ed16a73">ModuleConnector</a> (<a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;player, int log_level, AbstractLoggerIo *logger_io)</td></tr>
<tr class="memdesc:afd571e3cfce67e387073efc46ed16a73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#afd571e3cfce67e387073efc46ed16a73">More...</a><br /></td></tr>
<tr class="separator:afd571e3cfce67e387073efc46ed16a73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d4b9c1988234f5b5e02e622c6fee167"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a8d4b9c1988234f5b5e02e622c6fee167">ModuleConnector</a> (<a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;player, int log_level)</td></tr>
<tr class="memdesc:a8d4b9c1988234f5b5e02e622c6fee167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a8d4b9c1988234f5b5e02e622c6fee167">More...</a><br /></td></tr>
<tr class="separator:a8d4b9c1988234f5b5e02e622c6fee167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cdfa9fe113697d045c235f67aa94ac3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a9cdfa9fe113697d045c235f67aa94ac3">ModuleConnector</a> (<a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;player)</td></tr>
<tr class="memdesc:a9cdfa9fe113697d045c235f67aa94ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a9cdfa9fe113697d045c235f67aa94ac3">More...</a><br /></td></tr>
<tr class="separator:a9cdfa9fe113697d045c235f67aa94ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b103398da5dc6d9e0030c2737eb23a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a60b103398da5dc6d9e0030c2737eb23a">ModuleConnector</a> (in_addr_t ip, in_port_t port, int log_level, AbstractLoggerIo *logger_io)</td></tr>
<tr class="memdesc:a60b103398da5dc6d9e0030c2737eb23a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a60b103398da5dc6d9e0030c2737eb23a">More...</a><br /></td></tr>
<tr class="separator:a60b103398da5dc6d9e0030c2737eb23a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3cc884c539272b7a58cddce689f9d99"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#aa3cc884c539272b7a58cddce689f9d99">ModuleConnector</a> (in_addr_t ip, in_port_t port)</td></tr>
<tr class="memdesc:aa3cc884c539272b7a58cddce689f9d99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#aa3cc884c539272b7a58cddce689f9d99">More...</a><br /></td></tr>
<tr class="separator:aa3cc884c539272b7a58cddce689f9d99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84553defbf693ddca3becaa50d251331"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a84553defbf693ddca3becaa50d251331">ModuleConnector</a> (in_addr_t ip, in_port_t port, int log_level)</td></tr>
<tr class="memdesc:a84553defbf693ddca3becaa50d251331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a84553defbf693ddca3becaa50d251331">More...</a><br /></td></tr>
<tr class="separator:a84553defbf693ddca3becaa50d251331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a5afedd37dd32dc066016fd02f808ef"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a9a5afedd37dd32dc066016fd02f808ef">~ModuleConnector</a> ()</td></tr>
<tr class="memdesc:a9a5afedd37dd32dc066016fd02f808ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a9a5afedd37dd32dc066016fd02f808ef">More...</a><br /></td></tr>
<tr class="separator:a9a5afedd37dd32dc066016fd02f808ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89f2ac50bc31624dfabcb3afdf53f11b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a89f2ac50bc31624dfabcb3afdf53f11b">open</a> (const std::string device_name)</td></tr>
<tr class="memdesc:a89f2ac50bc31624dfabcb3afdf53f11b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens a new connection to a module via some serial device.  <a href="#a89f2ac50bc31624dfabcb3afdf53f11b">More...</a><br /></td></tr>
<tr class="separator:a89f2ac50bc31624dfabcb3afdf53f11b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd152a95595e8aeac7274e00c16f017e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#afd152a95595e8aeac7274e00c16f017e">close</a> ()</td></tr>
<tr class="memdesc:afd152a95595e8aeac7274e00c16f017e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close an open connection to the module.  <a href="#afd152a95595e8aeac7274e00c16f017e">More...</a><br /></td></tr>
<tr class="separator:afd152a95595e8aeac7274e00c16f017e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f395f9cf163b1bb3ac6f7d6b0254d6"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#af1f395f9cf163b1bb3ac6f7d6b0254d6">git_sha</a> ()</td></tr>
<tr class="memdesc:af1f395f9cf163b1bb3ac6f7d6b0254d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides the git sha of the <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> repository.  <a href="#af1f395f9cf163b1bb3ac6f7d6b0254d6">More...</a><br /></td></tr>
<tr class="separator:af1f395f9cf163b1bb3ac6f7d6b0254d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b18412eebe0209453b66c8c8b25a8f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a3b18412eebe0209453b66c8c8b25a8f6">set_log_level</a> (int new_log_level)</td></tr>
<tr class="memdesc:a3b18412eebe0209453b66c8c8b25a8f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set log level during <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> operation.  <a href="#a3b18412eebe0209453b66c8c8b25a8f6">More...</a><br /></td></tr>
<tr class="separator:a3b18412eebe0209453b66c8c8b25a8f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d832059ba7786d69028258609cb9df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#ad8d832059ba7786d69028258609cb9df">set_default_timeout</a> (unsigned int new_default_timeout)</td></tr>
<tr class="memdesc:ad8d832059ba7786d69028258609cb9df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set default timeout for commands sent to the module.  <a href="#ad8d832059ba7786d69028258609cb9df">More...</a><br /></td></tr>
<tr class="separator:ad8d832059ba7786d69028258609cb9df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2654727ba8e8bdd08b52b3058c80e99e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a2654727ba8e8bdd08b52b3058c80e99e">get_data_recorder</a> ()</td></tr>
<tr class="memdesc:a2654727ba8e8bdd08b52b3058c80e99e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a> application interface.  <a href="#a2654727ba8e8bdd08b52b3058c80e99e">More...</a><br /></td></tr>
<tr class="separator:a2654727ba8e8bdd08b52b3058c80e99e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6819c84a181ee9698e537f48b2ae2e3"><td class="memItemLeft" align="right" valign="top">FBDataRecorder &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#ad6819c84a181ee9698e537f48b2ae2e3">get_fb_data_recorder</a> ()</td></tr>
<tr class="memdesc:ad6819c84a181ee9698e537f48b2ae2e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a recorder using the flatbuffers format.  <a href="#ad6819c84a181ee9698e537f48b2ae2e3">More...</a><br /></td></tr>
<tr class="separator:ad6819c84a181ee9698e537f48b2ae2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1257ba83720b49b6902147e1372d426b"><td class="memItemLeft" align="right" valign="top">Transport &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a1257ba83720b49b6902147e1372d426b">get_transport</a> ()</td></tr>
<tr class="memdesc:a1257ba83720b49b6902147e1372d426b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Not supported.  <a href="#a1257ba83720b49b6902147e1372d426b">More...</a><br /></td></tr>
<tr class="separator:a1257ba83720b49b6902147e1372d426b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a74b4e7aa48cec2725a4288eb7eb9c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_x2_m200.xhtml">X2M200</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a3a74b4e7aa48cec2725a4288eb7eb9c1">get_x2m200</a> ()</td></tr>
<tr class="memdesc:a3a74b4e7aa48cec2725a4288eb7eb9c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the <a class="el" href="class_xe_thru_1_1_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module This interface is used to control the XeThruu X2M20...">X2M200</a> module application interface.  <a href="#a3a74b4e7aa48cec2725a4288eb7eb9c1">More...</a><br /></td></tr>
<tr class="separator:a3a74b4e7aa48cec2725a4288eb7eb9c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf6e635753b0fdc5c5d798f74d36e0b7"><td class="memItemLeft" align="right" valign="top">X2 &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#abf6e635753b0fdc5c5d798f74d36e0b7">get_x2</a> ()</td></tr>
<tr class="memdesc:abf6e635753b0fdc5c5d798f74d36e0b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Not supported.  <a href="#abf6e635753b0fdc5c5d798f74d36e0b7">More...</a><br /></td></tr>
<tr class="separator:abf6e635753b0fdc5c5d798f74d36e0b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbd85cf71a364a04fa2344b619cbe180"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml">XEP</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#afbd85cf71a364a04fa2344b619cbe180">get_xep</a> ()</td></tr>
<tr class="memdesc:afbd85cf71a364a04fa2344b619cbe180"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the low level <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> interface.  <a href="#afbd85cf71a364a04fa2344b619cbe180">More...</a><br /></td></tr>
<tr class="separator:afbd85cf71a364a04fa2344b619cbe180"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a452dd3457ca8ab4d109b438bdcba9af2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml">X4M300</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a452dd3457ca8ab4d109b438bdcba9af2">get_x4m300</a> ()</td></tr>
<tr class="memdesc:a452dd3457ca8ab4d109b438bdcba9af2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="Interface to the Xethru X4M300 Application module. ">X4M300</a> module application interface.  <a href="#a452dd3457ca8ab4d109b438bdcba9af2">More...</a><br /></td></tr>
<tr class="separator:a452dd3457ca8ab4d109b438bdcba9af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64bc3313a1c2e12136da147381630c87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_xe_thru_1_1_x4_m200.xhtml">X4M200</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a64bc3313a1c2e12136da147381630c87">get_x4m200</a> ()</td></tr>
<tr class="memdesc:a64bc3313a1c2e12136da147381630c87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the <a class="el" href="class_xe_thru_1_1_x4_m200.xhtml" title="Interface to the Xethru X4M200 Application module. ">X4M200</a> module application interface.  <a href="#a64bc3313a1c2e12136da147381630c87">More...</a><br /></td></tr>
<tr class="separator:a64bc3313a1c2e12136da147381630c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f85278ba73626641865fe9566733ca9"><td class="memItemLeft" align="right" valign="top">X4M210 &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a7f85278ba73626641865fe9566733ca9">get_x4m210</a> ()</td></tr>
<tr class="memdesc:a7f85278ba73626641865fe9566733ca9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the X4M210 module application interface.  <a href="#a7f85278ba73626641865fe9566733ca9">More...</a><br /></td></tr>
<tr class="separator:a7f85278ba73626641865fe9566733ca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba357f4ddd6febd63de7a911d6a2bb81"><td class="memItemLeft" align="right" valign="top">NotSupported &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#aba357f4ddd6febd63de7a911d6a2bb81">get_not_supported</a> ()</td></tr>
<tr class="memdesc:aba357f4ddd6febd63de7a911d6a2bb81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Not supported.  <a href="#aba357f4ddd6febd63de7a911d6a2bb81">More...</a><br /></td></tr>
<tr class="separator:aba357f4ddd6febd63de7a911d6a2bb81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d9b7af568a60329d0fc2411e2af6a1"><td class="memItemLeft" align="right" valign="top">RadarEngine &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#a18d9b7af568a60329d0fc2411e2af6a1">get_radar_engine</a> ()</td></tr>
<tr class="memdesc:a18d9b7af568a60329d0fc2411e2af6a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the Radar Engine application interface.  <a href="#a18d9b7af568a60329d0fc2411e2af6a1">More...</a><br /></td></tr>
<tr class="separator:a18d9b7af568a60329d0fc2411e2af6a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab1a8cc2fc3e017878a459b27bab018b"><td class="memItemLeft" align="right" valign="top">LaptopPresenceApp &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_xe_thru_1_1_module_connector.xhtml#aab1a8cc2fc3e017878a459b27bab018b">get_laptop_presence_app</a> ()</td></tr>
<tr class="memdesc:aab1a8cc2fc3e017878a459b27bab018b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the Laptop Presence application interface.  <a href="#aab1a8cc2fc3e017878a459b27bab018b">More...</a><br /></td></tr>
<tr class="separator:aab1a8cc2fc3e017878a459b27bab018b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is responsible for establishing contact with the Xethru module. </p>
<p>Use one of the get_XXX to access the modules in various ways. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac648134d64e86cfc2599258f147826af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac648134d64e86cfc2599258f147826af">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>device_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">AbstractLoggerIo *&#160;</td>
          <td class="paramname"><em>logger_io</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the device file or COM port given.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device_name</td><td>Name of the device file for example /dev/ttyACM0 or COM4 </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation </td></tr>
    <tr><td class="paramname">logger_io</td><td>The logging io implementation to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a98e0d74a19a3b1b275b482761971eb15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98e0d74a19a3b1b275b482761971eb15">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>device_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the device file or COM port given.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device_name</td><td>Name of the device file for example /dev/ttyACM0 or COM4 </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a79ba250d002970a4598d3b32187462a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79ba250d002970a4598d3b32187462a2">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>device_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the device file or COM port given.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device_name</td><td>Name of the device file for example /dev/ttyACM0 or COM4 </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afd571e3cfce67e387073efc46ed16a73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd571e3cfce67e387073efc46ed16a73">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;&#160;</td>
          <td class="paramname"><em>player</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">AbstractLoggerIo *&#160;</td>
          <td class="paramname"><em>logger_io</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>When constructing <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> with a <a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> object, <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> will read data from a recording via the <em>player</em> reference and convert disk data into binary packets as one would normally receive from a physical <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Device.</p>
<p>Moreover, it is possible to control the output via functions such as <a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c">DataPlayer::play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef" title="Pause playback. ">DataPlayer::pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703" title="Specifies which data types to play. ">DataPlayer::set_filter</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781" title="Sets the playback rate specified as a multiplier. ">DataPlayer::set_playback_rate</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">player</td><td><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> reference </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation </td></tr>
    <tr><td class="paramname">logger_io</td><td>The logging io implementation to use</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> </dd></dl>

</div>
</div>
<a id="a8d4b9c1988234f5b5e02e622c6fee167"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d4b9c1988234f5b5e02e622c6fee167">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;&#160;</td>
          <td class="paramname"><em>player</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>When constructing <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> with a <a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> object, <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> will read data from a recording via the <em>player</em> reference and convert disk data into binary packets as one would normally receive from a physical <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Device.</p>
<p>Moreover, it is possible to control the output via functions such as <a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c">DataPlayer::play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef" title="Pause playback. ">DataPlayer::pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703" title="Specifies which data types to play. ">DataPlayer::set_filter</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781" title="Sets the playback rate specified as a multiplier. ">DataPlayer::set_playback_rate</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">player</td><td><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> reference </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> </dd></dl>

</div>
</div>
<a id="a9cdfa9fe113697d045c235f67aa94ac3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cdfa9fe113697d045c235f67aa94ac3">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> &amp;&#160;</td>
          <td class="paramname"><em>player</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>When constructing <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> with a <a class="el" href="class_xe_thru_1_1_data_player.xhtml">DataPlayer</a> object, <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> will read data from a recording via the <em>player</em> reference and convert disk data into binary packets as one would normally receive from a physical <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Device.</p>
<p>Moreover, it is possible to control the output via functions such as <a class="el" href="class_xe_thru_1_1_data_player.xhtml#aecec5e0a32e0a19ce62b5a61fc700a2c">DataPlayer::play</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a270465e983757223d4ca744c59453bef" title="Pause playback. ">DataPlayer::pause</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#af3fe64b45fa3c8f97418620675571703" title="Specifies which data types to play. ">DataPlayer::set_filter</a>, <a class="el" href="class_xe_thru_1_1_data_player.xhtml#a8eb5726303ed85e661fe0131e80a6781" title="Sets the playback rate specified as a multiplier. ">DataPlayer::set_playback_rate</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">player</td><td><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> reference</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_player.xhtml" title="The DataPlayer class allows playback of telegrams / binary packets from a recording generated by Data...">DataPlayer</a> </dd></dl>

</div>
</div>
<a id="a60b103398da5dc6d9e0030c2737eb23a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b103398da5dc6d9e0030c2737eb23a">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">in_addr_t&#160;</td>
          <td class="paramname"><em>ip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">in_port_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">AbstractLoggerIo *&#160;</td>
          <td class="paramname"><em>logger_io</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the address and port given using TCP/IP.</p>
<p>XXX: The open/close mechanisms will give undefined behaviour if started this way.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ip</td><td>The IP to connect to in network byte order </td></tr>
    <tr><td class="paramname">port</td><td>The TCP port to connect to in network byte order </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation </td></tr>
    <tr><td class="paramname">logger_io</td><td>The logging io implementation to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa3cc884c539272b7a58cddce689f9d99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3cc884c539272b7a58cddce689f9d99">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">in_addr_t&#160;</td>
          <td class="paramname"><em>ip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">in_port_t&#160;</td>
          <td class="paramname"><em>port</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the address and port given using TCP/IP.</p>
<p>XXX: The open/close mechanisms will give undefined behaviour if started this way.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ip</td><td>The IP to connect to in network byte order </td></tr>
    <tr><td class="paramname">port</td><td>The TCP port to connect to in network byte order </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a84553defbf693ddca3becaa50d251331"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84553defbf693ddca3becaa50d251331">&sect;&nbsp;</a></span>ModuleConnector() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XeThru::ModuleConnector::ModuleConnector </td>
          <td>(</td>
          <td class="paramtype">in_addr_t&#160;</td>
          <td class="paramname"><em>ip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">in_port_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The constructor will open the address and port given using TCP/IP.</p>
<p>XXX: The open/close mechanisms will give undefined behaviour if started this way.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ip</td><td>The IP to connect to in network byte order </td></tr>
    <tr><td class="paramname">port</td><td>The TCP port to connect to in network byte order </td></tr>
    <tr><td class="paramname">log_level</td><td>The log level to use during operation </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9a5afedd37dd32dc066016fd02f808ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a5afedd37dd32dc066016fd02f808ef">&sect;&nbsp;</a></span>~ModuleConnector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual XeThru::ModuleConnector::~ModuleConnector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>It invoces <a class="el" href="class_xe_thru_1_1_module_connector.xhtml#afd152a95595e8aeac7274e00c16f017e" title="Close an open connection to the module. ">close()</a> and cleans up all resources in use. It will no longer be possible to use this object or any of its interfaces. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afd152a95595e8aeac7274e00c16f017e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd152a95595e8aeac7274e00c16f017e">&sect;&nbsp;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::ModuleConnector::close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close an open connection to the module. </p>
<dl class="section return"><dt>Returns</dt><dd>0 on success, otherwise return 1 </dd></dl>

</div>
</div>
<a id="a2654727ba8e8bdd08b52b3058c80e99e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2654727ba8e8bdd08b52b3058c80e99e">&sect;&nbsp;</a></span>get_data_recorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">DataRecorder</a>&amp; XeThru::ModuleConnector::get_data_recorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a> application interface. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a> The reference to the <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a> interface </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types to disk. ">DataRecorder</a> </dd></dl>

</div>
</div>
<a id="ad6819c84a181ee9698e537f48b2ae2e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6819c84a181ee9698e537f48b2ae2e3">&sect;&nbsp;</a></span>get_fb_data_recorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FBDataRecorder&amp; XeThru::ModuleConnector::get_fb_data_recorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a recorder using the flatbuffers format. </p>
<dl class="section see"><dt>See also</dt><dd>FBDataRecorder </dd></dl>

</div>
</div>
<a id="aab1a8cc2fc3e017878a459b27bab018b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab1a8cc2fc3e017878a459b27bab018b">&sect;&nbsp;</a></span>get_laptop_presence_app()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">LaptopPresenceApp&amp; XeThru::ModuleConnector::get_laptop_presence_app </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the Laptop Presence application interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the Laptop Presence application interface. </dd></dl>

</div>
</div>
<a id="aba357f4ddd6febd63de7a911d6a2bb81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba357f4ddd6febd63de7a911d6a2bb81">&sect;&nbsp;</a></span>get_not_supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NotSupported&amp; XeThru::ModuleConnector::get_not_supported </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Not supported. </p>
<dl class="section return"><dt>Returns</dt><dd>Not supported </dd></dl>

</div>
</div>
<a id="a18d9b7af568a60329d0fc2411e2af6a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18d9b7af568a60329d0fc2411e2af6a1">&sect;&nbsp;</a></span>get_radar_engine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RadarEngine&amp; XeThru::ModuleConnector::get_radar_engine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the Radar Engine application interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the Radar Engine interface. </dd></dl>

</div>
</div>
<a id="a1257ba83720b49b6902147e1372d426b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1257ba83720b49b6902147e1372d426b">&sect;&nbsp;</a></span>get_transport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Transport&amp; XeThru::ModuleConnector::get_transport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Not supported. </p>
<dl class="section return"><dt>Returns</dt><dd>Not supported </dd></dl>

</div>
</div>
<a id="abf6e635753b0fdc5c5d798f74d36e0b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf6e635753b0fdc5c5d798f74d36e0b7">&sect;&nbsp;</a></span>get_x2()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">X2&amp; XeThru::ModuleConnector::get_x2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Not supported. </p>
<dl class="section return"><dt>Returns</dt><dd>Not supported </dd></dl>

</div>
</div>
<a id="a3a74b4e7aa48cec2725a4288eb7eb9c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a74b4e7aa48cec2725a4288eb7eb9c1">&sect;&nbsp;</a></span>get_x2m200()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_x2_m200.xhtml">X2M200</a>&amp; XeThru::ModuleConnector::get_x2m200 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the <a class="el" href="class_xe_thru_1_1_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module This interface is used to control the XeThruu X2M20...">X2M200</a> module application interface. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_xe_thru_1_1_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module This interface is used to control the XeThruu X2M20...">X2M200</a> The reference to the <a class="el" href="class_xe_thru_1_1_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module This interface is used to control the XeThruu X2M20...">X2M200</a> interface </dd></dl>

</div>
</div>
<a id="a64bc3313a1c2e12136da147381630c87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64bc3313a1c2e12136da147381630c87">&sect;&nbsp;</a></span>get_x4m200()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_x4_m200.xhtml">X4M200</a>&amp; XeThru::ModuleConnector::get_x4m200 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the <a class="el" href="class_xe_thru_1_1_x4_m200.xhtml" title="Interface to the Xethru X4M200 Application module. ">X4M200</a> module application interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the <a class="el" href="class_xe_thru_1_1_x4_m200.xhtml" title="Interface to the Xethru X4M200 Application module. ">X4M200</a> interface. </dd></dl>

</div>
</div>
<a id="a7f85278ba73626641865fe9566733ca9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f85278ba73626641865fe9566733ca9">&sect;&nbsp;</a></span>get_x4m210()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">X4M210&amp; XeThru::ModuleConnector::get_x4m210 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the X4M210 module application interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the X4M210 interface. </dd></dl>

</div>
</div>
<a id="a452dd3457ca8ab4d109b438bdcba9af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a452dd3457ca8ab4d109b438bdcba9af2">&sect;&nbsp;</a></span>get_x4m300()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml">X4M300</a>&amp; XeThru::ModuleConnector::get_x4m300 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="Interface to the Xethru X4M300 Application module. ">X4M300</a> module application interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the <a class="el" href="class_xe_thru_1_1_x4_m300.xhtml" title="Interface to the Xethru X4M300 Application module. ">X4M300</a> interface. </dd></dl>

</div>
</div>
<a id="afbd85cf71a364a04fa2344b619cbe180"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbd85cf71a364a04fa2344b619cbe180">&sect;&nbsp;</a></span>get_xep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml">XEP</a>&amp; XeThru::ModuleConnector::get_xep </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the low level <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> interface. </p>
<dl class="section return"><dt>Returns</dt><dd>The reference to the <a class="el" href="class_xe_thru_1_1_x_e_p.xhtml" title="XEP class gives access to XEP functionality on target via module connector. ">XEP</a> interface. </dd></dl>

</div>
</div>
<a id="af1f395f9cf163b1bb3ac6f7d6b0254d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f395f9cf163b1bb3ac6f7d6b0254d6">&sect;&nbsp;</a></span>git_sha()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string XeThru::ModuleConnector::git_sha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Provides the git sha of the <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> repository. </p>

</div>
</div>
<a id="a89f2ac50bc31624dfabcb3afdf53f11b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89f2ac50bc31624dfabcb3afdf53f11b">&sect;&nbsp;</a></span>open()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int XeThru::ModuleConnector::open </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>device_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Opens a new connection to a module via some serial device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device_name</td><td>Name of the device file for example /dev/ttyACM0 or COM4 </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad8d832059ba7786d69028258609cb9df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8d832059ba7786d69028258609cb9df">&sect;&nbsp;</a></span>set_default_timeout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::ModuleConnector::set_default_timeout </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>new_default_timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set default timeout for commands sent to the module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_default_timeout</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3b18412eebe0209453b66c8c8b25a8f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b18412eebe0209453b66c8c8b25a8f6">&sect;&nbsp;</a></span>set_log_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void XeThru::ModuleConnector::set_log_level </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>new_log_level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set log level during <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">ModuleConnector</a> operation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_log_level</td><td>The new log level to use </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/<a class="el" href="_module_connector_8hpp_source.xhtml">ModuleConnector.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
