<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>pymoduleconnector: pymoduleconnector.moduleconnectorwrapper.PyDataPlayer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">pymoduleconnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">A Python wrapper for XeThru ModuleConnector</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>pymoduleconnector</b></li><li class="navelem"><b>moduleconnectorwrapper</b></li><li class="navelem"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml">PyDataPlayer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pymoduleconnector.moduleconnectorwrapper.PyDataPlayer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0c713a56d97c57f2fa7358db2bb02278"><td class="memItemLeft" align="right" valign="top"><a id="a0c713a56d97c57f2fa7358db2bb02278"></a>
def&#160;</td><td class="memItemRight" valign="bottom"><b>__init__</b> (self, <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#ac9fab2c5b450e250bffeacd9708e4256">meta_filename</a>, depth=-1)</td></tr>
<tr class="separator:a0c713a56d97c57f2fa7358db2bb02278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca9e1a96a3c9c72775995556d27f01f3"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#aca9e1a96a3c9c72775995556d27f01f3">play</a> (self)</td></tr>
<tr class="memdesc:aca9e1a96a3c9c72775995556d27f01f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">play(PyDataPlayer self)  <a href="#aca9e1a96a3c9c72775995556d27f01f3">More...</a><br /></td></tr>
<tr class="separator:aca9e1a96a3c9c72775995556d27f01f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af21c9cfbf1d650e20c0de7a8317cd592"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#af21c9cfbf1d650e20c0de7a8317cd592">pause</a> (self)</td></tr>
<tr class="memdesc:af21c9cfbf1d650e20c0de7a8317cd592"><td class="mdescLeft">&#160;</td><td class="mdescRight">pause(PyDataPlayer self)  <a href="#af21c9cfbf1d650e20c0de7a8317cd592">More...</a><br /></td></tr>
<tr class="separator:af21c9cfbf1d650e20c0de7a8317cd592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2802828e18d240b71d957576e9c68d4e"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a2802828e18d240b71d957576e9c68d4e">stop</a> (self)</td></tr>
<tr class="memdesc:a2802828e18d240b71d957576e9c68d4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">stop(PyDataPlayer self)  <a href="#a2802828e18d240b71d957576e9c68d4e">More...</a><br /></td></tr>
<tr class="separator:a2802828e18d240b71d957576e9c68d4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a146e5b71ee6d4393da6912c31416ca40"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a146e5b71ee6d4393da6912c31416ca40">set_filter</a> (self, data_types)</td></tr>
<tr class="memdesc:a146e5b71ee6d4393da6912c31416ca40"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_filter(PyDataPlayer self, uint32_t data_types) -&gt; int  <a href="#a146e5b71ee6d4393da6912c31416ca40">More...</a><br /></td></tr>
<tr class="separator:a146e5b71ee6d4393da6912c31416ca40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af350926ed1ca74791be9c1dd063f10a5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#af350926ed1ca74791be9c1dd063f10a5">get_filter</a> (self)</td></tr>
<tr class="memdesc:af350926ed1ca74791be9c1dd063f10a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_filter(PyDataPlayer self) -&gt; uint32_t  <a href="#af350926ed1ca74791be9c1dd063f10a5">More...</a><br /></td></tr>
<tr class="separator:af350926ed1ca74791be9c1dd063f10a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf732948214a024ccb10a768427bb29"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a3bf732948214a024ccb10a768427bb29">set_playback_rate</a> (self, rate)</td></tr>
<tr class="memdesc:a3bf732948214a024ccb10a768427bb29"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_playback_rate(PyDataPlayer self, float rate)  <a href="#a3bf732948214a024ccb10a768427bb29">More...</a><br /></td></tr>
<tr class="separator:a3bf732948214a024ccb10a768427bb29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27453b9ee48f41462d2871500735b4e6"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a27453b9ee48f41462d2871500735b4e6">get_playback_rate</a> (self)</td></tr>
<tr class="memdesc:a27453b9ee48f41462d2871500735b4e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_playback_rate(PyDataPlayer self) -&gt; float  <a href="#a27453b9ee48f41462d2871500735b4e6">More...</a><br /></td></tr>
<tr class="separator:a27453b9ee48f41462d2871500735b4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa671088ab303d61d1ab43bd5ef5169de"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#aa671088ab303d61d1ab43bd5ef5169de">set_loop_mode_enabled</a> (self, enabled)</td></tr>
<tr class="memdesc:aa671088ab303d61d1ab43bd5ef5169de"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_loop_mode_enabled(PyDataPlayer self, bool enabled)  <a href="#aa671088ab303d61d1ab43bd5ef5169de">More...</a><br /></td></tr>
<tr class="separator:aa671088ab303d61d1ab43bd5ef5169de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494005cf3782e1919cf09ffca8aa3f13"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a494005cf3782e1919cf09ffca8aa3f13">get_loop_mode_enabled</a> (self)</td></tr>
<tr class="memdesc:a494005cf3782e1919cf09ffca8aa3f13"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_loop_mode_enabled(PyDataPlayer self) -&gt; bool  <a href="#a494005cf3782e1919cf09ffca8aa3f13">More...</a><br /></td></tr>
<tr class="separator:a494005cf3782e1919cf09ffca8aa3f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2843584062fc58d17a91f5c2eb1ea642"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a2843584062fc58d17a91f5c2eb1ea642">set_position</a> (self, position)</td></tr>
<tr class="memdesc:a2843584062fc58d17a91f5c2eb1ea642"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_position(PyDataPlayer self, int64_t position) -&gt; int  <a href="#a2843584062fc58d17a91f5c2eb1ea642">More...</a><br /></td></tr>
<tr class="separator:a2843584062fc58d17a91f5c2eb1ea642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59cc70eb64d60f4a1c17ed7262b6e05c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a59cc70eb64d60f4a1c17ed7262b6e05c">get_position</a> (self)</td></tr>
<tr class="memdesc:a59cc70eb64d60f4a1c17ed7262b6e05c"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_position(PyDataPlayer self) -&gt; int64_t  <a href="#a59cc70eb64d60f4a1c17ed7262b6e05c">More...</a><br /></td></tr>
<tr class="separator:a59cc70eb64d60f4a1c17ed7262b6e05c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a444184cbb27eae81fec3d43d22ec844f"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a444184cbb27eae81fec3d43d22ec844f">get_duration</a> (self)</td></tr>
<tr class="memdesc:a444184cbb27eae81fec3d43d22ec844f"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_duration(PyDataPlayer self) -&gt; int64_t  <a href="#a444184cbb27eae81fec3d43d22ec844f">More...</a><br /></td></tr>
<tr class="separator:a444184cbb27eae81fec3d43d22ec844f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9fab2c5b450e250bffeacd9708e4256"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#ac9fab2c5b450e250bffeacd9708e4256">meta_filename</a> (self)</td></tr>
<tr class="memdesc:ac9fab2c5b450e250bffeacd9708e4256"><td class="mdescLeft">&#160;</td><td class="mdescRight">meta_filename(PyDataPlayer self) -&gt; std::string  <a href="#ac9fab2c5b450e250bffeacd9708e4256">More...</a><br /></td></tr>
<tr class="separator:ac9fab2c5b450e250bffeacd9708e4256"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a125f1df53aa16137495a3533885e461a"><td class="memItemLeft" align="right" valign="top"><a id="a125f1df53aa16137495a3533885e461a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>this</b></td></tr>
<tr class="separator:a125f1df53aa16137495a3533885e461a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a444184cbb27eae81fec3d43d22ec844f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a444184cbb27eae81fec3d43d22ec844f">&sect;&nbsp;</a></span>get_duration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.get_duration </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_duration(PyDataPlayer self) -&gt; int64_t </p>
<h2>Returns </h2>
<p>the total duration of the recording specified as number of milliseconds (ms). </p>

</div>
</div>
<a id="af350926ed1ca74791be9c1dd063f10a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af350926ed1ca74791be9c1dd063f10a5">&sect;&nbsp;</a></span>get_filter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.get_filter </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_filter(PyDataPlayer self) -&gt; uint32_t </p>
<h2>Returns </h2>
<p>the filter used to specify which data types to play. By default this value is all data types.</p>
<p>See set_filter </p>

</div>
</div>
<a id="a494005cf3782e1919cf09ffca8aa3f13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a494005cf3782e1919cf09ffca8aa3f13">&sect;&nbsp;</a></span>get_loop_mode_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.get_loop_mode_enabled </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_loop_mode_enabled(PyDataPlayer self) -&gt; bool </p>
<h2>Returns </h2>
<p>true if loop mode is enabled, otherwise returns false. By default, this value is false.</p>
<p>See set_loop_mode_enabled </p>

</div>
</div>
<a id="a27453b9ee48f41462d2871500735b4e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27453b9ee48f41462d2871500735b4e6">&sect;&nbsp;</a></span>get_playback_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.get_playback_rate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_playback_rate(PyDataPlayer self) -&gt; float </p>
<h2>Returns </h2>
<p>the multiplayer used for the playback rate. By default, this value is 1.0.</p>
<p>See set_playback_rate </p>

</div>
</div>
<a id="a59cc70eb64d60f4a1c17ed7262b6e05c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59cc70eb64d60f4a1c17ed7262b6e05c">&sect;&nbsp;</a></span>get_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.get_position </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_position(PyDataPlayer self) -&gt; int64_t </p>
<h2>Returns </h2>
<p>the player's current position specified as number of milliseconds (ms). </p>

</div>
</div>
<a id="ac9fab2c5b450e250bffeacd9708e4256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9fab2c5b450e250bffeacd9708e4256">&sect;&nbsp;</a></span>meta_filename()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.meta_filename </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>meta_filename(PyDataPlayer self) -&gt; std::string </p>
<h2>Returns </h2>
<p>the meta filename used when constructing this class. </p>

</div>
</div>
<a id="af21c9cfbf1d650e20c0de7a8317cd592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af21c9cfbf1d650e20c0de7a8317cd592">&sect;&nbsp;</a></span>pause()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.pause </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>pause(PyDataPlayer self) </p>
<p>Pause playback.</p>
<p>Convenience function, equivalent to set_state(DataPlayer::PausedState). </p>

</div>
</div>
<a id="aca9e1a96a3c9c72775995556d27f01f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca9e1a96a3c9c72775995556d27f01f3">&sect;&nbsp;</a></span>play()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.play </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>play(PyDataPlayer self) </p>
<p>Start or resume playback.</p>
<p>Convenience function, equivalent to set_state(DataPlayer::PlayingState). </p>

</div>
</div>
<a id="a146e5b71ee6d4393da6912c31416ca40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a146e5b71ee6d4393da6912c31416ca40">&sect;&nbsp;</a></span>set_filter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.set_filter </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data_types</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_filter(PyDataPlayer self, uint32_t data_types) -&gt; int </p>
<p>Specifies which data types to play.</p>
<p>By default, the filter is set to all data types.</p>
<h2>Parameters </h2>
<ul>
<li><code>data_types</code> : Specifies the filter as a bitmask that consists of a combination of <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_data_type.xhtml" title="Proxy of C++ XeThru::DataType class. ">DataType</a> flags. These flags can be combined with the bitwise OR operator (|). For example BasebandIqDataType | SleepDataType. A convenience value AllDataTypes can also be specified.</li>
</ul>
<h2>Returns </h2>
<p>0 success, otherwise returns 1</p>
<p>See play </p>

</div>
</div>
<a id="aa671088ab303d61d1ab43bd5ef5169de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa671088ab303d61d1ab43bd5ef5169de">&sect;&nbsp;</a></span>set_loop_mode_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.set_loop_mode_enabled </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_loop_mode_enabled(PyDataPlayer self, bool enabled) </p>
<p>Enables or disables loop mode as specified.</p>
<p>When loop mode is enabled the, the player's position is reset to the beginning when the player reaches the end. This allows for playback forever.</p>
<h2>Parameters </h2>
<ul>
<li><code>enabled</code> : Specifies if loop mode is enabled or disabled. By default, loop mode is disabled (i.e. false). </li>
</ul>

</div>
</div>
<a id="a3bf732948214a024ccb10a768427bb29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bf732948214a024ccb10a768427bb29">&sect;&nbsp;</a></span>set_playback_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.set_playback_rate </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>rate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_playback_rate(PyDataPlayer self, float rate) </p>
<p>Sets the playback rate specified as a multiplier.</p>
<p>By default, this value is 1.0 indicating that the player is playing at the standard pace. Values higher than 1.0 will increase the pace, whereas a lower value will decrease the pace. Values less than zero indicate the player should play as fast as possible. Value zero is essentially the same as paused state.</p>
<h2>Parameters </h2>
<ul>
<li><code>rate</code> : Specifies the multiplier for the playback rate.</li>
</ul>
<p>See play </p>

</div>
</div>
<a id="a2843584062fc58d17a91f5c2eb1ea642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2843584062fc58d17a91f5c2eb1ea642">&sect;&nbsp;</a></span>set_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.set_position </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>position</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_position(PyDataPlayer self, int64_t position) -&gt; int </p>
<p>Sets the current position (ms) as specified.</p>
<p>The value must be in range [0, <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_player.xhtml#a444184cbb27eae81fec3d43d22ec844f" title="get_duration(PyDataPlayer self) -&gt; int64_t ">get_duration()</a>].</p>
<h2>Parameters </h2>
<ul>
<li><code>position</code> : Specifies the position as number of milliseconds (ms).</li>
</ul>
<h2>Returns </h2>
<p>0 on success, otherwise returns 1</p>
<p>See get_duration </p>

</div>
</div>
<a id="a2802828e18d240b71d957576e9c68d4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2802828e18d240b71d957576e9c68d4e">&sect;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PyDataPlayer.stop </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>stop(PyDataPlayer self) </p>
<p>Stop playback and reset the play position to the beginning.</p>
<p>Convenience function, equivalent to set_state(DataPlayer::StoppedState). </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>pymoduleconnector/moduleconnectorwrapper/__init__.py</li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
