<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: ModuleConnector</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ModuleConnector </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p><a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Module Connector is the SW used to communicate with all <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> modules on a host computer over a serial communication channel. <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Module Connector is implemented and distributed as a Shared Object / Dynamic Link Library (DLL) and can be linked in runtime and accessed through an API from a number of different host environments including Matlab, Python and C++. This document contains all information required to configure <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> Module Connector for the different host environments.</p>
<h3>Supported platforms</h3>
<ul>
<li>Windows 10</li>
<li>Windows 7</li>
<li>OSX</li>
<li>Ubuntu 16.04</li>
<li>Raspbian Jessie</li>
</ul>
<p>ModuleConnector might work with other platforms and versions, but it has not been tested.</p>
<h2>License</h2>
<p><a class="el" href="license.xhtml">License</a></p>
<h2>ModuleConnector functional description</h2>
<p>ModuleConnector use a serial protocol, queues and some threading to implement a convenient way to establish communication with supported <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> modules. The ModuleConnector supports both synchronous and asynchronous messages. Ping is and example of a synchronous message. When ping is called it does not return before it either receives a response (pong) or it times out.</p>
<p>Asynchronous messages are sent from the <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> module based on events in the <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> module itself. For example various radar frames are sent from the module to the host whenever the frames arrive from the radar chip. All the asynchronous packets will be collected in buffers or queues. It is possible to get the length of the queue and retrieve packets from the queue.</p>
<h2>C++ error handling</h2>
<p>Most methods in ModuleConnector return an integer status that indicate a successful or failed method invocation. An integer value of zero indicates successful invocation. Any other value indicate failed invocation. Normally the methods will return a value of 1 in case of failed invocation. ModuleConnector does not throw exceptions from the C++ API.</p>
<h2>Using ModuleConnector</h2>
<p><a class="el" href="link_cpp.xhtml">Compiling and linking ModuleConnector with C++</a></p>
<p><a class="el" href="x2m200_cpp.xhtml">Using ModuleConnector with the XeThru X2M200 module</a></p>
<p><a class="el" href="x4m300_cpp.xhtml">Using ModuleConnector with the XeThru X4M300 and X4M200 modules</a></p>
<p><a class="el" href="xep_cpp.xhtml">Using ModuleConnector with the XeThru XEP module</a></p>
<p>See the readme files in the matlab and python sub folders for usage in Matlab and Python.</p>
<h2>C++ API documentation</h2>
<p>A module can offer different interfaces. All ModuleConnector functionality is available through the <a class="el" href="_module_connector_8hpp.xhtml">ModuleConnector.hpp</a> header file. The <a class="el" href="class_xe_thru_1_1_module_connector.xhtml" title="This class is responsible for establishing contact with the Xethru module. ">XeThru::ModuleConnector</a> class gives access to the different interfaces supported by a module.</p>
<ul>
<li><a class="el" href="class_xe_thru_1_1_module_connector.xhtml">XeThru::ModuleConnector</a></li>
<li><a class="el" href="class_xe_thru_1_1_x2_m200.xhtml">XeThru::X2M200</a></li>
<li><a class="el" href="class_xe_thru_1_1_x4_m300.xhtml">XeThru::X4M300</a></li>
<li><a class="el" href="class_xe_thru_1_1_x4_m200.xhtml">XeThru::X4M200</a></li>
<li><a class="el" href="class_xe_thru_1_1_x_e_p.xhtml">XeThru::XEP</a></li>
</ul>
<h2>Recording and Playback API</h2>
<p>Recording data from a <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> device is easy. ModuleConnector provides a Recording and Playback API that is valid for all interfaces mentioned above. The API consists of three main interfaces:</p><ul>
<li><a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">XeThru::DataRecorder</a></li>
<li><a class="el" href="class_xe_thru_1_1_data_reader.xhtml">XeThru::DataReader</a></li>
<li><a class="el" href="class_xe_thru_1_1_data_player.xhtml">XeThru::DataPlayer</a></li>
</ul>
<p>The <a class="el" href="class_xe_thru_1_1_data_recorder.xhtml">XeThru::DataRecorder</a> class is a high level data recorder class. The purpose of the DataRecorder class is to record all data types sent by a <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> device over serial port or similar. All low-level I/O is handled by the recorder itself with no setup required. Data is stored on disk as specified by the <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> File Formats document and can be easily read back using the DataReader class or the DataPlayer class. DataRecorder generates a meta file that contains information about the recording such as exact timestamps when bytes were written to disk, which formats and data types were included in the data set etc. Basically everything needed in order to reproduce the exact same byte stream as it occurred during recording. DataReader and DataPlayer uses this meta file as input argument. DataRecorder supports advance recording options such as splitting of files and directories.</p>
<p>The <a class="el" href="class_xe_thru_1_1_data_reader.xhtml">XeThru::DataReader</a> class is a high level data reader class. The purpose of the DataReader class it to read disk records stored by the DataRecorder class. It uses the meta file generated by the DataRecorder class as input argument and thus, from the user's point of view the recording appears as one big file even if the recording may contain several files and folders on disk. Data returned from this class is always aligned on complete data records as specified by the <a class="el" href="namespace_xe_thru.xhtml">XeThru</a> File Formats document. One recording may contain several data types, however this class allows for easy filtering and seeking into the data set.</p>
<p>The <a class="el" href="class_xe_thru_1_1_data_player.xhtml">XeThru::DataPlayer</a> class is a high level playback class. The purpose of the DataPlayer class is to provide the user with the ability to playback recorded data as if it was coming from a physical device. So rather than initialising ModuleConnector with a physical device (serial port), it is possible to construct ModuleConnector with a DataPlayer instance and receive telegrams / binary packets as one would normally receive from a physical device. For example, CSV data on disk is converted back to its original telegram / binary format before it is dispatched via ModuleConnector. Moreover, it is possible to control the output via functions such as play, pause, set_playback_rate etc. DataPlayer uses the DataReader class to read records from disk before it converts them into binary packets / telegrams.</p>
<h2>Changelog</h2>
<p><a class="el" href="changelog.xhtml">Changelog</a> </p>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
