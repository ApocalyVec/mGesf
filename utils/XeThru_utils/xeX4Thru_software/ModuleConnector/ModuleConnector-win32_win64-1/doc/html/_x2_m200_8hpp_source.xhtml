<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ModuleConnector: src/X2M200.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">ModuleConnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Project brief</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">X2M200.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_x2_m200_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef X2M200_INTERFACE_HPP</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define X2M200_INTERFACE_HPP</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;Bytes.hpp&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_data_8hpp.xhtml">Data.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_recording_options_8hpp.xhtml">RecordingOptions.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;LockedRadarForward.hpp&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_xe_thru.xhtml">XeThru</a> {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">class </span>X2M200Private;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="class_xe_thru_1_1_x2_m200.xhtml">   28</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_xe_thru_1_1_x2_m200.xhtml">X2M200</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a2fa7922f611073bb4968befd80fe2435">X2M200</a>(LockedRadarInterfacePtr &amp; a_radar_interface);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#aa4c6e45909dbd0834fbe780cab39d5bc">set_debug_level</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> level);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a48694f6519b83d5ad32c166fdb2c7250">set_log_level</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> level);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ad0a9dd13483266cd03739b35dfe349cb">ping</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> * pong);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#afaf11acfc7ae603cea2f3d9b8f5b38bd">get_item_number</a>(std::string * item_number);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#aa852e4be57b804ff782e464b6fafac2e">get_order_code</a>(std::string * order_code);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#afac0abde2d7bbe1bfe1225cd5fb8178c">get_firmware_id</a>(std::string * firmware_id);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ae16a1a9f5551ed9d143001c2676ffeeb">get_firmware_version</a>(std::string * version);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#acad5102237267d59a1eb52897a1323dc">get_serial_number</a>(std::string * serial_number);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a243c58787a9003535b69585d4b663485">get_build_info</a>(std::string * build_info);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#acbd2e02c923f4b9e5a664b072a65e8a3">get_app_id_list</a>(std::string * app_id_list);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ad19fd6e4b808677cbbc2344f81773850">reset</a>();</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a7dcdafd2d8ef42333ab6400669cc834c">start_bootloader</a>();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a390ddbac48157e215a8b0c3f74bb970c">set_sensor_mode_run</a>();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a134af2badcbb71caac089a0b2345c41b">set_sensor_mode_idle</a>();</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a927117597dd01b02dcf1cd09c60044af">load_sleep_profile</a>();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a9df1cb5539ee37bfa4a8ec63ad5a6279">load_respiration_profile</a>();</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a72239884c257737c19d46278ad071655">enable_baseband_ap</a>();</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ae0017e00f2daadaacf4d61397c8351f5">disable_baseband_ap</a>();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a8b3216489e28114882610c4de9468899">enable_baseband_iq</a>();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ab4863171bf162f7f7757aa9cc815468e">disable_baseband_iq</a>();</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#abacb6075489dbfea4f4f06a2d8c5d5c3">set_detection_zone</a>(<span class="keywordtype">float</span> start, <span class="keywordtype">float</span> end);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a946d95b120cc169737d1ba38381d9f79">set_sensitivity</a>(uint32_t sensitivity);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a318669eb1b05d6248961c2d6c5f9885f">set_led_control</a>(</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;      uint8_t mode,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      uint8_t intensity</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    );</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ac4eb4627e55c32b05437956c065335e7">subscribe_to_resp_status</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ac4eb4627e55c32b05437956c065335e7">subscribe_to_resp_status</a>(</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keyword">const</span> std::string &amp; name,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        std::function&lt;<span class="keywordtype">bool</span>(Bytes)&gt; callback);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a6f3e626bb4612d83f6edef2e0800d9f8">subscribe_to_sleep_status</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a6f3e626bb4612d83f6edef2e0800d9f8">subscribe_to_sleep_status</a>(</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keyword">const</span> std::string &amp; name,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        std::function&lt;<span class="keywordtype">bool</span>(Bytes)&gt; callback);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#add20943f2535b9b129e7a221e8a61dc1">subscribe_to_baseband_ap</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#add20943f2535b9b129e7a221e8a61dc1">subscribe_to_baseband_ap</a>(</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keyword">const</span> std::string &amp; name,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        std::function&lt;<span class="keywordtype">bool</span>(Bytes)&gt; callback);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a150e3619d868140c1fbfb732cd62773d">subscribe_to_baseband_iq</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a150e3619d868140c1fbfb732cd62773d">subscribe_to_baseband_iq</a>(</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keyword">const</span> std::string &amp; name,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        std::function&lt;<span class="keywordtype">bool</span>(Bytes)&gt; callback);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#af53f6ec4d5e443b8b8c38e73c5f7fd30">unsubscribe</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a820600edfe94be84400124fcc00022ed">disable_resp_output</a>();</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a4eec995be1236886753c1900b674697d">enable_resp_output</a>();</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a70dc264eda89c26ffa28fb8fa8e5f8e8">get_number_of_packets</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#adfa5df8511f09ee31533c0db9ee08830">get_respiration_data</a>(</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keyword">const</span> std::string name,</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <a class="code" href="class_xe_thru_1_1_respiration_data.xhtml">RespirationData</a> * respiration_data);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a78f8780bb03930600caa368d1f587e79">get_sleep_data</a>(</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <span class="keyword">const</span> std::string name,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <a class="code" href="class_xe_thru_1_1_sleep_data.xhtml">SleepData</a> * sleep_data);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a59fecd0b1eba176295a1415f8449d0c1">get_baseband_ap_data</a>(</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keyword">const</span> std::string name,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <a class="code" href="class_xe_thru_1_1_baseband_ap_data.xhtml">BasebandApData</a> * baseband_ap_data);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#ae05eb33261c8ce1bf38ef015bd477f29">get_baseband_iq_data</a>(</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keyword">const</span> std::string name,</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <a class="code" href="class_xe_thru_1_1_baseband_iq_data.xhtml">BasebandIqData</a> * baseband_iq_data);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_xe_thru_1_1_x2_m200.xhtml#a20cf9bce35a3de767ffba16b11b3c109">clear</a>(<span class="keyword">const</span> std::string &amp; name);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="comment">//RadarInterface &amp; radar_interface;</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    std::shared_ptr&lt;X2M200Private&gt; d_ptr;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;};</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;} <span class="comment">// namespace Novelda</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a8b3216489e28114882610c4de9468899"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a8b3216489e28114882610c4de9468899">XeThru::X2M200::enable_baseband_iq</a></div><div class="ttdeci">int enable_baseband_iq()</div><div class="ttdoc">Enable I/Q baseband output. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml">XeThru::X2M200</a></div><div class="ttdoc">Interface to the Xethru X2M200 Application module This interface is used to control the XeThruu X2M20...</div><div class="ttdef"><b>Definition:</b> X2M200.hpp:28</div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a243c58787a9003535b69585d4b663485"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a243c58787a9003535b69585d4b663485">XeThru::X2M200::get_build_info</a></div><div class="ttdeci">int get_build_info(std::string *build_info)</div><div class="ttdoc">Get information about the SW build installed on the Xethru module. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a72239884c257737c19d46278ad071655"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a72239884c257737c19d46278ad071655">XeThru::X2M200::enable_baseband_ap</a></div><div class="ttdeci">int enable_baseband_ap()</div><div class="ttdoc">Enable amplitude/phase baseband output. </div></div>
<div class="ttc" id="namespace_xe_thru_xhtml"><div class="ttname"><a href="namespace_xe_thru.xhtml">XeThru</a></div><div class="ttdef"><b>Definition:</b> Data.hpp:7</div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a2fa7922f611073bb4968befd80fe2435"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a2fa7922f611073bb4968befd80fe2435">XeThru::X2M200::X2M200</a></div><div class="ttdeci">X2M200(LockedRadarInterfacePtr &amp;a_radar_interface)</div><div class="ttdoc">Constructor. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a48694f6519b83d5ad32c166fdb2c7250"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a48694f6519b83d5ad32c166fdb2c7250">XeThru::X2M200::set_log_level</a></div><div class="ttdeci">int set_log_level(unsigned int level)</div><div class="ttdoc">Set log level of ModuleConnector. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a78f8780bb03930600caa368d1f587e79"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a78f8780bb03930600caa368d1f587e79">XeThru::X2M200::get_sleep_data</a></div><div class="ttdeci">int get_sleep_data(const std::string name, SleepData *sleep_data)</div><div class="ttdoc">Get one sleep data message from subscription queue. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ad19fd6e4b808677cbbc2344f81773850"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ad19fd6e4b808677cbbc2344f81773850">XeThru::X2M200::reset</a></div><div class="ttdeci">int reset()</div><div class="ttdoc">Reset the module. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ae05eb33261c8ce1bf38ef015bd477f29"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ae05eb33261c8ce1bf38ef015bd477f29">XeThru::X2M200::get_baseband_iq_data</a></div><div class="ttdeci">int get_baseband_iq_data(const std::string name, BasebandIqData *baseband_iq_data)</div><div class="ttdoc">Get one baseband data message from subscription queue. </div></div>
<div class="ttc" id="_data_8hpp_xhtml"><div class="ttname"><a href="_data_8hpp.xhtml">Data.hpp</a></div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a20cf9bce35a3de767ffba16b11b3c109"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a20cf9bce35a3de767ffba16b11b3c109">XeThru::X2M200::clear</a></div><div class="ttdeci">void clear(const std::string &amp;name)</div><div class="ttdoc">Empty the buffer of the named data stream subscription. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a6f3e626bb4612d83f6edef2e0800d9f8"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a6f3e626bb4612d83f6edef2e0800d9f8">XeThru::X2M200::subscribe_to_sleep_status</a></div><div class="ttdeci">int subscribe_to_sleep_status(const std::string &amp;name)</div><div class="ttdoc">Adds a subscription for sleep status data packets. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_add20943f2535b9b129e7a221e8a61dc1"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#add20943f2535b9b129e7a221e8a61dc1">XeThru::X2M200::subscribe_to_baseband_ap</a></div><div class="ttdeci">int subscribe_to_baseband_ap(const std::string &amp;name)</div><div class="ttdoc">Adds a subscription for amplitude phase baseband data packets. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a318669eb1b05d6248961c2d6c5f9885f"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a318669eb1b05d6248961c2d6c5f9885f">XeThru::X2M200::set_led_control</a></div><div class="ttdeci">int set_led_control(uint8_t mode, uint8_t intensity)</div><div class="ttdoc">Configures the module LED mode. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_adfa5df8511f09ee31533c0db9ee08830"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#adfa5df8511f09ee31533c0db9ee08830">XeThru::X2M200::get_respiration_data</a></div><div class="ttdeci">int get_respiration_data(const std::string name, RespirationData *respiration_data)</div><div class="ttdoc">Get one respiration data message from subscription queue. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ac4eb4627e55c32b05437956c065335e7"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ac4eb4627e55c32b05437956c065335e7">XeThru::X2M200::subscribe_to_resp_status</a></div><div class="ttdeci">int subscribe_to_resp_status(const std::string &amp;name)</div><div class="ttdoc">Adds a subscription for respiration data packets. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a7dcdafd2d8ef42333ab6400669cc834c"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a7dcdafd2d8ef42333ab6400669cc834c">XeThru::X2M200::start_bootloader</a></div><div class="ttdeci">int start_bootloader()</div></div>
<div class="ttc" id="class_xe_thru_1_1_respiration_data_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_respiration_data.xhtml">XeThru::RespirationData</a></div><div class="ttdoc">Represents the respiration status data coming from the module. </div><div class="ttdef"><b>Definition:</b> Data.hpp:121</div></div>
<div class="ttc" id="class_xe_thru_1_1_baseband_iq_data_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_baseband_iq_data.xhtml">XeThru::BasebandIqData</a></div><div class="ttdoc">Python warning: Accessing vectors directly can cause memory corruption if the parent object goes out ...</div><div class="ttdef"><b>Definition:</b> Data.hpp:298</div></div>
<div class="ttc" id="_recording_options_8hpp_xhtml"><div class="ttname"><a href="_recording_options_8hpp.xhtml">RecordingOptions.hpp</a></div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a9df1cb5539ee37bfa4a8ec63ad5a6279"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a9df1cb5539ee37bfa4a8ec63ad5a6279">XeThru::X2M200::load_respiration_profile</a></div><div class="ttdeci">int load_respiration_profile()</div><div class="ttdoc">Load the respiration profile. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ae16a1a9f5551ed9d143001c2676ffeeb"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ae16a1a9f5551ed9d143001c2676ffeeb">XeThru::X2M200::get_firmware_version</a></div><div class="ttdeci">int get_firmware_version(std::string *version)</div><div class="ttdoc">Get the installed Firmware version. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a946d95b120cc169737d1ba38381d9f79"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a946d95b120cc169737d1ba38381d9f79">XeThru::X2M200::set_sensitivity</a></div><div class="ttdeci">int set_sensitivity(uint32_t sensitivity)</div><div class="ttdoc">Set module sensitivity. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_acbd2e02c923f4b9e5a664b072a65e8a3"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#acbd2e02c923f4b9e5a664b072a65e8a3">XeThru::X2M200::get_app_id_list</a></div><div class="ttdeci">int get_app_id_list(std::string *app_id_list)</div><div class="ttdoc">Get a list of supported profiles. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a70dc264eda89c26ffa28fb8fa8e5f8e8"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a70dc264eda89c26ffa28fb8fa8e5f8e8">XeThru::X2M200::get_number_of_packets</a></div><div class="ttdeci">unsigned int get_number_of_packets(const std::string &amp;name)</div><div class="ttdoc">Get number of packets in a named subscription queue/buffer. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ae0017e00f2daadaacf4d61397c8351f5"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ae0017e00f2daadaacf4d61397c8351f5">XeThru::X2M200::disable_baseband_ap</a></div><div class="ttdeci">int disable_baseband_ap()</div><div class="ttdoc">Disables amplitude/phase baseband output. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a134af2badcbb71caac089a0b2345c41b"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a134af2badcbb71caac089a0b2345c41b">XeThru::X2M200::set_sensor_mode_idle</a></div><div class="ttdeci">int set_sensor_mode_idle()</div><div class="ttdoc">Set the sensor in idle mode. </div></div>
<div class="ttc" id="class_xe_thru_1_1_baseband_ap_data_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_baseband_ap_data.xhtml">XeThru::BasebandApData</a></div><div class="ttdoc">Python warning: Accessing vectors directly can cause memory corruption if the parent object goes out ...</div><div class="ttdef"><b>Definition:</b> Data.hpp:207</div></div>
<div class="ttc" id="class_xe_thru_1_1_sleep_data_xhtml"><div class="ttname"><a href="class_xe_thru_1_1_sleep_data.xhtml">XeThru::SleepData</a></div><div class="ttdoc">Represents the sleep status data coming from the module. </div><div class="ttdef"><b>Definition:</b> Data.hpp:162</div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a927117597dd01b02dcf1cd09c60044af"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a927117597dd01b02dcf1cd09c60044af">XeThru::X2M200::load_sleep_profile</a></div><div class="ttdeci">int load_sleep_profile()</div><div class="ttdoc">Load the sleep profile. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_aa852e4be57b804ff782e464b6fafac2e"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#aa852e4be57b804ff782e464b6fafac2e">XeThru::X2M200::get_order_code</a></div><div class="ttdeci">int get_order_code(std::string *order_code)</div><div class="ttdoc">Get Novelda PCBA Order Code. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_aa4c6e45909dbd0834fbe780cab39d5bc"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#aa4c6e45909dbd0834fbe780cab39d5bc">XeThru::X2M200::set_debug_level</a></div><div class="ttdeci">int set_debug_level(unsigned char level)</div><div class="ttdoc">Sets debug level in the Xethru module. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a150e3619d868140c1fbfb732cd62773d"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a150e3619d868140c1fbfb732cd62773d">XeThru::X2M200::subscribe_to_baseband_iq</a></div><div class="ttdeci">int subscribe_to_baseband_iq(const std::string &amp;name)</div><div class="ttdoc">Adds a subscription for IQ baseband data packets. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_af53f6ec4d5e443b8b8c38e73c5f7fd30"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#af53f6ec4d5e443b8b8c38e73c5f7fd30">XeThru::X2M200::unsubscribe</a></div><div class="ttdeci">void unsubscribe(const std::string &amp;name)</div><div class="ttdoc">Turns off a named subscription. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_abacb6075489dbfea4f4f06a2d8c5d5c3"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#abacb6075489dbfea4f4f06a2d8c5d5c3">XeThru::X2M200::set_detection_zone</a></div><div class="ttdeci">int set_detection_zone(float start, float end)</div><div class="ttdoc">Set the desired detection zone. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ab4863171bf162f7f7757aa9cc815468e"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ab4863171bf162f7f7757aa9cc815468e">XeThru::X2M200::disable_baseband_iq</a></div><div class="ttdeci">int disable_baseband_iq()</div><div class="ttdoc">Disables I/Q baseband output. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a390ddbac48157e215a8b0c3f74bb970c"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a390ddbac48157e215a8b0c3f74bb970c">XeThru::X2M200::set_sensor_mode_run</a></div><div class="ttdeci">int set_sensor_mode_run()</div><div class="ttdoc">Set the sensor in run mode. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_ad0a9dd13483266cd03739b35dfe349cb"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#ad0a9dd13483266cd03739b35dfe349cb">XeThru::X2M200::ping</a></div><div class="ttdeci">int ping(unsigned int *pong)</div><div class="ttdoc">Send a ping message to the module. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_afaf11acfc7ae603cea2f3d9b8f5b38bd"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#afaf11acfc7ae603cea2f3d9b8f5b38bd">XeThru::X2M200::get_item_number</a></div><div class="ttdeci">int get_item_number(std::string *item_number)</div><div class="ttdoc">Get the Novelda PCBA Item Number, including revision. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a59fecd0b1eba176295a1415f8449d0c1"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a59fecd0b1eba176295a1415f8449d0c1">XeThru::X2M200::get_baseband_ap_data</a></div><div class="ttdeci">int get_baseband_ap_data(const std::string name, BasebandApData *baseband_ap_data)</div><div class="ttdoc">Get one baseband data message from subscription queue. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_afac0abde2d7bbe1bfe1225cd5fb8178c"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#afac0abde2d7bbe1bfe1225cd5fb8178c">XeThru::X2M200::get_firmware_id</a></div><div class="ttdeci">int get_firmware_id(std::string *firmware_id)</div><div class="ttdoc">Get the installed Firmware ID. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_acad5102237267d59a1eb52897a1323dc"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#acad5102237267d59a1eb52897a1323dc">XeThru::X2M200::get_serial_number</a></div><div class="ttdeci">int get_serial_number(std::string *serial_number)</div><div class="ttdoc">Get the module serial number. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a820600edfe94be84400124fcc00022ed"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a820600edfe94be84400124fcc00022ed">XeThru::X2M200::disable_resp_output</a></div><div class="ttdeci">int disable_resp_output()</div><div class="ttdoc">Turn off respiration status output from the Xethru X2M200 module. </div></div>
<div class="ttc" id="class_xe_thru_1_1_x2_m200_xhtml_a4eec995be1236886753c1900b674697d"><div class="ttname"><a href="class_xe_thru_1_1_x2_m200.xhtml#a4eec995be1236886753c1900b674697d">XeThru::X2M200::enable_resp_output</a></div><div class="ttdeci">int enable_resp_output()</div><div class="ttdoc">Turn on respiration status output from the Xethru X2M200 module. </div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
