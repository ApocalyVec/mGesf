<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>pymoduleconnector: pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">pymoduleconnector
          &#160;<span id="projectnumber">1.6.2</span>
        </div>
        <div id="projectbrief" class="col-sm-12">A Python wrapper for XeThru ModuleConnector</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>pymoduleconnector</b></li><li class="navelem"><b>moduleconnectorwrapper</b></li><li class="navelem"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml">PythonModuleConnector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is responsible for establishing contact with the XeThru module.  
 <a href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae7e2cc890235462c98ca4754171c8eed"><td class="memItemLeft" align="right" valign="top"><a id="ae7e2cc890235462c98ca4754171c8eed"></a>
def&#160;</td><td class="memItemRight" valign="bottom"><b>__init__</b> (self, args)</td></tr>
<tr class="separator:ae7e2cc890235462c98ca4754171c8eed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb920ea6a4e1076f07063607d568dfab"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#acb920ea6a4e1076f07063607d568dfab">git_sha</a> (self)</td></tr>
<tr class="memdesc:acb920ea6a4e1076f07063607d568dfab"><td class="mdescLeft">&#160;</td><td class="mdescRight">git_sha(PythonModuleConnector self) -&gt; std::string  <a href="#acb920ea6a4e1076f07063607d568dfab">More...</a><br /></td></tr>
<tr class="separator:acb920ea6a4e1076f07063607d568dfab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a827fb0db45c741965d030ccfda2fe4fc"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a827fb0db45c741965d030ccfda2fe4fc">open</a> (self, device)</td></tr>
<tr class="memdesc:a827fb0db45c741965d030ccfda2fe4fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">open(PythonModuleConnector self, std::string const device)  <a href="#a827fb0db45c741965d030ccfda2fe4fc">More...</a><br /></td></tr>
<tr class="separator:a827fb0db45c741965d030ccfda2fe4fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a058d1d6e4ddee2d9cb62e6c0750b898b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a058d1d6e4ddee2d9cb62e6c0750b898b">close</a> (self)</td></tr>
<tr class="memdesc:a058d1d6e4ddee2d9cb62e6c0750b898b"><td class="mdescLeft">&#160;</td><td class="mdescRight">close(PythonModuleConnector self)  <a href="#a058d1d6e4ddee2d9cb62e6c0750b898b">More...</a><br /></td></tr>
<tr class="separator:a058d1d6e4ddee2d9cb62e6c0750b898b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46827254fbb052ef5c61389873556673"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a46827254fbb052ef5c61389873556673">set_log_level</a> (self, new_log_level)</td></tr>
<tr class="memdesc:a46827254fbb052ef5c61389873556673"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_log_level(PythonModuleConnector self, int new_log_level)  <a href="#a46827254fbb052ef5c61389873556673">More...</a><br /></td></tr>
<tr class="separator:a46827254fbb052ef5c61389873556673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dd86516afa232885afeed91bee0b896"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a1dd86516afa232885afeed91bee0b896">set_default_timeout</a> (self, new_default_timeout)</td></tr>
<tr class="memdesc:a1dd86516afa232885afeed91bee0b896"><td class="mdescLeft">&#160;</td><td class="mdescRight">set_default_timeout(PythonModuleConnector self, unsigned int new_default_timeout)  <a href="#a1dd86516afa232885afeed91bee0b896">More...</a><br /></td></tr>
<tr class="separator:a1dd86516afa232885afeed91bee0b896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dec0e8d5ddb52ebbb072f9acd576ef1"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a7dec0e8d5ddb52ebbb072f9acd576ef1">get_data_recorder</a> (self)</td></tr>
<tr class="memdesc:a7dec0e8d5ddb52ebbb072f9acd576ef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_data_recorder(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types. ">PyDataRecorder</a>  <a href="#a7dec0e8d5ddb52ebbb072f9acd576ef1">More...</a><br /></td></tr>
<tr class="separator:a7dec0e8d5ddb52ebbb072f9acd576ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c97acdd3f2e2209fcc9a50b44710b53"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a3c97acdd3f2e2209fcc9a50b44710b53">get_x2m200</a> (self)</td></tr>
<tr class="memdesc:a3c97acdd3f2e2209fcc9a50b44710b53"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_x2m200(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module. ">PyX2M200</a>  <a href="#a3c97acdd3f2e2209fcc9a50b44710b53">More...</a><br /></td></tr>
<tr class="separator:a3c97acdd3f2e2209fcc9a50b44710b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c38a6ca30e37b27412eef559f3dddd4"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#a6c38a6ca30e37b27412eef559f3dddd4">get_xep</a> (self)</td></tr>
<tr class="memdesc:a6c38a6ca30e37b27412eef559f3dddd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_xep(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x_e_p.xhtml" title="C++ includes: PyXEP.hpp. ">PyXEP</a>  <a href="#a6c38a6ca30e37b27412eef559f3dddd4">More...</a><br /></td></tr>
<tr class="separator:a6c38a6ca30e37b27412eef559f3dddd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3e0b9af8b0b1688d540ebd1ee8eafdc"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#ac3e0b9af8b0b1688d540ebd1ee8eafdc">get_x4m300</a> (self)</td></tr>
<tr class="memdesc:ac3e0b9af8b0b1688d540ebd1ee8eafdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_x4m300(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m300.xhtml" title="C++ includes: PyX4M300.hpp. ">PyX4M300</a>  <a href="#ac3e0b9af8b0b1688d540ebd1ee8eafdc">More...</a><br /></td></tr>
<tr class="separator:ac3e0b9af8b0b1688d540ebd1ee8eafdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4144b8b9498c022d09fb4d530ab4585"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#aa4144b8b9498c022d09fb4d530ab4585">get_x4m200</a> (self)</td></tr>
<tr class="memdesc:aa4144b8b9498c022d09fb4d530ab4585"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_x4m200(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m200.xhtml" title="C++ includes: PyX4M200.hpp. ">PyX4M200</a>  <a href="#aa4144b8b9498c022d09fb4d530ab4585">More...</a><br /></td></tr>
<tr class="separator:aa4144b8b9498c022d09fb4d530ab4585"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbb362e75bc9c9b6fac900543ba2e6a4"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_python_module_connector.xhtml#afbb362e75bc9c9b6fac900543ba2e6a4">get_x4m210</a> (self)</td></tr>
<tr class="memdesc:afbb362e75bc9c9b6fac900543ba2e6a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">get_x4m210(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m210.xhtml" title="Proxy of C++ XeThru::PyX4M210 class. ">PyX4M210</a>  <a href="#afbb362e75bc9c9b6fac900543ba2e6a4">More...</a><br /></td></tr>
<tr class="separator:afbb362e75bc9c9b6fac900543ba2e6a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad4718213b0be564effcbc82e43b21312"><td class="memItemLeft" align="right" valign="top"><a id="ad4718213b0be564effcbc82e43b21312"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>this</b></td></tr>
<tr class="separator:ad4718213b0be564effcbc82e43b21312"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is responsible for establishing contact with the XeThru module. </p>
<p>Use one of the get_XXX methods to access the module-specific functionality.</p>
<p>C++ includes: PythonModuleConnector.hpp </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a058d1d6e4ddee2d9cb62e6c0750b898b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a058d1d6e4ddee2d9cb62e6c0750b898b">&sect;&nbsp;</a></span>close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.close </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>close(PythonModuleConnector self) </p>
<p>Close an open connection to the module. </p>

</div>
</div>
<a id="a7dec0e8d5ddb52ebbb072f9acd576ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dec0e8d5ddb52ebbb072f9acd576ef1">&sect;&nbsp;</a></span>get_data_recorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_data_recorder </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_data_recorder(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types. ">PyDataRecorder</a> </p>
<p>Returns a reference to the <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types. ">PyDataRecorder</a> application interface.</p>
<h2>Returns </h2>
<p>The reference to the <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types. ">PyDataRecorder</a> interface</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_data_recorder.xhtml" title="The DataRecorder class allows recording of xethru data types. ">pymoduleconnector.moduleconnectorwrapper.PyDataRecorder</a> </p>

</div>
</div>
<a id="a3c97acdd3f2e2209fcc9a50b44710b53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c97acdd3f2e2209fcc9a50b44710b53">&sect;&nbsp;</a></span>get_x2m200()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_x2m200 </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_x2m200(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module. ">PyX2M200</a> </p>
<p>Returns a reference to the X2M200 module application interface.</p>
<h2>Returns </h2>
<p>The reference to the X2M200 interface.</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x2_m200.xhtml" title="Interface to the Xethru X2M200 Application module. ">pymoduleconnector.moduleconnectorwrapper.PyX2M200</a> </p>

</div>
</div>
<a id="aa4144b8b9498c022d09fb4d530ab4585"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4144b8b9498c022d09fb4d530ab4585">&sect;&nbsp;</a></span>get_x4m200()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_x4m200 </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_x4m200(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m200.xhtml" title="C++ includes: PyX4M200.hpp. ">PyX4M200</a> </p>
<p>Returns a reference to the X4M200 module application interface.</p>
<h2>Returns </h2>
<p>The reference to the X4M200 interface.</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m200.xhtml" title="C++ includes: PyX4M200.hpp. ">pymoduleconnector.moduleconnectorwrapper.PyX4M200</a> </p>

</div>
</div>
<a id="afbb362e75bc9c9b6fac900543ba2e6a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbb362e75bc9c9b6fac900543ba2e6a4">&sect;&nbsp;</a></span>get_x4m210()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_x4m210 </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_x4m210(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m210.xhtml" title="Proxy of C++ XeThru::PyX4M210 class. ">PyX4M210</a> </p>
<p>Returns a reference to the X4M210 module application interface.</p>
<h2>Returns </h2>
<p>The reference to the X4M210 interface.</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m210.xhtml" title="Proxy of C++ XeThru::PyX4M210 class. ">pymoduleconnector.moduleconnectorwrapper.PyX4M210</a> </p>

</div>
</div>
<a id="ac3e0b9af8b0b1688d540ebd1ee8eafdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3e0b9af8b0b1688d540ebd1ee8eafdc">&sect;&nbsp;</a></span>get_x4m300()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_x4m300 </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_x4m300(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m300.xhtml" title="C++ includes: PyX4M300.hpp. ">PyX4M300</a> </p>
<p>Returns a reference to the X4M300 module application interface.</p>
<h2>Returns </h2>
<p>The reference to the X4M300 interface.</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x4_m300.xhtml" title="C++ includes: PyX4M300.hpp. ">pymoduleconnector.moduleconnectorwrapper.PyX4M300</a> </p>

</div>
</div>
<a id="a6c38a6ca30e37b27412eef559f3dddd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c38a6ca30e37b27412eef559f3dddd4">&sect;&nbsp;</a></span>get_xep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.get_xep </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get_xep(PythonModuleConnector self) -&gt; <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x_e_p.xhtml" title="C++ includes: PyXEP.hpp. ">PyXEP</a> </p>
<p>Returns a reference to the low level XEP interface.</p>
<h2>Returns </h2>
<p>The reference to the XEP interface.</p>
<p>See <a class="el" href="classpymoduleconnector_1_1moduleconnectorwrapper_1_1_py_x_e_p.xhtml" title="C++ includes: PyXEP.hpp. ">pymoduleconnector.moduleconnectorwrapper.PyXEP</a> </p>

</div>
</div>
<a id="acb920ea6a4e1076f07063607d568dfab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb920ea6a4e1076f07063607d568dfab">&sect;&nbsp;</a></span>git_sha()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.git_sha </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>git_sha(PythonModuleConnector self) -&gt; std::string </p>
<p>Provides the git sha of the ModuleConnector repository. </p>

</div>
</div>
<a id="a827fb0db45c741965d030ccfda2fe4fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a827fb0db45c741965d030ccfda2fe4fc">&sect;&nbsp;</a></span>open()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.open </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>open(PythonModuleConnector self, std::string const device) </p>
<p>Opens a new connection to a module via some serial device.</p>
<h2>Parameters </h2>
<ul>
<li><code>device</code> : Name of the device file for example /dev/ttyACM0 or COM4 </li>
</ul>

</div>
</div>
<a id="a1dd86516afa232885afeed91bee0b896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dd86516afa232885afeed91bee0b896">&sect;&nbsp;</a></span>set_default_timeout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.set_default_timeout </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>new_default_timeout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_default_timeout(PythonModuleConnector self, unsigned int new_default_timeout) </p>
<p>Set default timeout for commands sent to the module.</p>
<h2>Parameters </h2>
<ul>
<li><code>new_default_timeout</code> : New timeout to use </li>
</ul>

</div>
</div>
<a id="a46827254fbb052ef5c61389873556673"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46827254fbb052ef5c61389873556673">&sect;&nbsp;</a></span>set_log_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def pymoduleconnector.moduleconnectorwrapper.PythonModuleConnector.set_log_level </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>new_log_level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set_log_level(PythonModuleConnector self, int new_log_level) </p>
<p>Set log level during ModuleConnector operation.</p>
<h2>Parameters </h2>
<ul>
<li><code>new_log_level</code> : The new log level to use </li>
</ul>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>pymoduleconnector/moduleconnectorwrapper/__init__.py</li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
