<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libusb/device/hal_examples/hal_udp.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_608da0ca01c56cd314839049683ac68c.xhtml">libusb</a></li><li class="navelem"><a class="el" href="dir_d2da8e13eb5c48e27ac81e92e0b056f1.xhtml">device</a></li><li class="navelem"><a class="el" href="dir_c98808c63876b0bdc8f8c5660747733a.xhtml">hal_examples</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">hal_udp.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_u_s_b_d___h_a_l_8h_source.xhtml">USBD_HAL.h</a>&quot;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
<code>#include &lt;stdio.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for hal_udp.c:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="hal__udp_8c__incl.svg" width="368" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_transfer_header.xhtml">TransferHeader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes header for UDP endpoint transfer.  <a href="struct_transfer_header.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_transfer.xhtml">Transfer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes a transfer on a UDP endpoint.  <a href="struct_transfer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mbl_transfer.xhtml">MblTransfer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes Multi Buffer List transfer on a UDP endpoint.  <a href="struct_mbl_transfer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_endpoint.xhtml">Endpoint</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes the state of an endpoint of the UDP controller.  <a href="struct_endpoint.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga0d5301f4b6b7c4dc59bdd76d725c9517"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga0d5301f4b6b7c4dc59bdd76d725c9517">CHIP_USB_UDP</a></td></tr>
<tr class="memdesc:ga0d5301f4b6b7c4dc59bdd76d725c9517"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates chip has an UDP Full Speed.  <a href="group__usbd__hal.xhtml#ga0d5301f4b6b7c4dc59bdd76d725c9517">More...</a><br /></td></tr>
<tr class="separator:ga0d5301f4b6b7c4dc59bdd76d725c9517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4bcc957f1288dac54003f5a0045b2cd7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4bcc957f1288dac54003f5a0045b2cd7">CHIP_USB_PULLUP_INTERNAL</a></td></tr>
<tr class="memdesc:ga4bcc957f1288dac54003f5a0045b2cd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates chip has an internal pull-up.  <a href="group__usbd__hal.xhtml#ga4bcc957f1288dac54003f5a0045b2cd7">More...</a><br /></td></tr>
<tr class="separator:ga4bcc957f1288dac54003f5a0045b2cd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1098bd73746d6f0b0ab28975d2a5043"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gab1098bd73746d6f0b0ab28975d2a5043">CHIP_USB_NUMENDPOINTS</a>&#160;&#160;&#160;8</td></tr>
<tr class="memdesc:gab1098bd73746d6f0b0ab28975d2a5043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of USB endpoints.  <a href="group__usbd__hal.xhtml#gab1098bd73746d6f0b0ab28975d2a5043">More...</a><br /></td></tr>
<tr class="separator:gab1098bd73746d6f0b0ab28975d2a5043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05ac6230a39d6e5cf5cd31ec020a80eb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga05ac6230a39d6e5cf5cd31ec020a80eb">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(i)</td></tr>
<tr class="memdesc:ga05ac6230a39d6e5cf5cd31ec020a80eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints max paxcket size.  <a href="group__usbd__hal.xhtml#ga05ac6230a39d6e5cf5cd31ec020a80eb">More...</a><br /></td></tr>
<tr class="separator:ga05ac6230a39d6e5cf5cd31ec020a80eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad991f853260be887e8d336296a1ed18"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaad991f853260be887e8d336296a1ed18">CHIP_USB_ENDPOINTS_BANKS</a>(i)</td></tr>
<tr class="memdesc:gaad991f853260be887e8d336296a1ed18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints Number of Bank.  <a href="group__usbd__hal.xhtml#gaad991f853260be887e8d336296a1ed18">More...</a><br /></td></tr>
<tr class="separator:gaad991f853260be887e8d336296a1ed18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c239fd97064879e5477a2ec1ab8b80e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga9c239fd97064879e5477a2ec1ab8b80e">UDP_CSR_RXDATA_BK</a>&#160;&#160;&#160;(UDP_CSR_RX_DATA_BK0 | UDP_CSR_RX_DATA_BK1)</td></tr>
<tr class="memdesc:ga9c239fd97064879e5477a2ec1ab8b80e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit mask for both banks of the UDP_CSR register.  <a href="group__usbd__hal.xhtml#ga9c239fd97064879e5477a2ec1ab8b80e">More...</a><br /></td></tr>
<tr class="separator:ga9c239fd97064879e5477a2ec1ab8b80e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02cc470b0850e42c28b933bd34999bb8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga02cc470b0850e42c28b933bd34999bb8">UDP_ENDPOINT_DISABLED</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:ga02cc470b0850e42c28b933bd34999bb8"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is disabled.  <a href="group__usbd__hal.xhtml#ga02cc470b0850e42c28b933bd34999bb8">More...</a><br /></td></tr>
<tr class="separator:ga02cc470b0850e42c28b933bd34999bb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad84f009de857253b3bc1a553c9a598f8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gad84f009de857253b3bc1a553c9a598f8">UDP_ENDPOINT_HALTED</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:gad84f009de857253b3bc1a553c9a598f8"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is halted (i.e.  <a href="group__usbd__hal.xhtml#gad84f009de857253b3bc1a553c9a598f8">More...</a><br /></td></tr>
<tr class="separator:gad84f009de857253b3bc1a553c9a598f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2a8875863be602aea2d35caf2ab6a5a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaf2a8875863be602aea2d35caf2ab6a5a">UDP_ENDPOINT_IDLE</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:gaf2a8875863be602aea2d35caf2ab6a5a"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is idle (i.e.  <a href="group__usbd__hal.xhtml#gaf2a8875863be602aea2d35caf2ab6a5a">More...</a><br /></td></tr>
<tr class="separator:gaf2a8875863be602aea2d35caf2ab6a5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafbeaad990d4a3ecf3468b0028b294e5f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gafbeaad990d4a3ecf3468b0028b294e5f">UDP_ENDPOINT_SENDING</a>&#160;&#160;&#160;3</td></tr>
<tr class="memdesc:gafbeaad990d4a3ecf3468b0028b294e5f"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is sending data.  <a href="group__usbd__hal.xhtml#gafbeaad990d4a3ecf3468b0028b294e5f">More...</a><br /></td></tr>
<tr class="separator:gafbeaad990d4a3ecf3468b0028b294e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace0e1ba8c4b4b45dd4b4e33bcaa5c1ff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gace0e1ba8c4b4b45dd4b4e33bcaa5c1ff">UDP_ENDPOINT_RECEIVING</a>&#160;&#160;&#160;4</td></tr>
<tr class="memdesc:gace0e1ba8c4b4b45dd4b4e33bcaa5c1ff"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is receiving data.  <a href="group__usbd__hal.xhtml#gace0e1ba8c4b4b45dd4b4e33bcaa5c1ff">More...</a><br /></td></tr>
<tr class="separator:gace0e1ba8c4b4b45dd4b4e33bcaa5c1ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15c8429cff9c7eeb3a870550b4d061ae"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga15c8429cff9c7eeb3a870550b4d061ae">UDP_ENDPOINT_SENDINGM</a>&#160;&#160;&#160;5</td></tr>
<tr class="memdesc:ga15c8429cff9c7eeb3a870550b4d061ae"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is sending MBL.  <a href="group__usbd__hal.xhtml#ga15c8429cff9c7eeb3a870550b4d061ae">More...</a><br /></td></tr>
<tr class="separator:ga15c8429cff9c7eeb3a870550b4d061ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3cf34c9b039691e6bfc26273de8b9c7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gac3cf34c9b039691e6bfc26273de8b9c7">UDP_ENDPOINT_RECEIVINGM</a>&#160;&#160;&#160;6</td></tr>
<tr class="memdesc:gac3cf34c9b039691e6bfc26273de8b9c7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is receiving MBL.  <a href="group__usbd__hal.xhtml#gac3cf34c9b039691e6bfc26273de8b9c7">More...</a><br /></td></tr>
<tr class="separator:gac3cf34c9b039691e6bfc26273de8b9c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6c0c722527692b35b834763a966b3f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaa6c0c722527692b35b834763a966b3f5">REG_NO_EFFECT_1_ALL</a></td></tr>
<tr class="memdesc:gaa6c0c722527692b35b834763a966b3f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitmap for all status bits in CSR.  <a href="group__usbd__hal.xhtml#gaa6c0c722527692b35b834763a966b3f5">More...</a><br /></td></tr>
<tr class="separator:gaa6c0c722527692b35b834763a966b3f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8eb78c466adbf66f9b5c780267df7279"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga8eb78c466adbf66f9b5c780267df7279">SET_CSR</a>(endpoint,  flags)</td></tr>
<tr class="memdesc:ga8eb78c466adbf66f9b5c780267df7279"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the specified bit(s) in the UDP_CSR register.  <a href="group__usbd__hal.xhtml#ga8eb78c466adbf66f9b5c780267df7279">More...</a><br /></td></tr>
<tr class="separator:ga8eb78c466adbf66f9b5c780267df7279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac980e0ecf14ac94d338d3dc995e39eee"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gac980e0ecf14ac94d338d3dc995e39eee">CLEAR_CSR</a>(endpoint,  flags)</td></tr>
<tr class="memdesc:gac980e0ecf14ac94d338d3dc995e39eee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the specified bit(s) in the UDP_CSR register.  <a href="group__usbd__hal.xhtml#gac980e0ecf14ac94d338d3dc995e39eee">More...</a><br /></td></tr>
<tr class="separator:gac980e0ecf14ac94d338d3dc995e39eee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58081bc990ddb9737252e5794b703850"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga58081bc990ddb9737252e5794b703850">MBL_NbBuffer</a>(i,  o,  size)&#160;&#160;&#160;(((i)&gt;(o))?((i)-(o)):((i)+(size)-(o)))</td></tr>
<tr class="memdesc:ga58081bc990ddb9737252e5794b703850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Number of buffer in Multi-Buffer-List.  <a href="group__usbd__hal.xhtml#ga58081bc990ddb9737252e5794b703850">More...</a><br /></td></tr>
<tr class="separator:ga58081bc990ddb9737252e5794b703850"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefb1ead0b778081953b1a3dabca312c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaefb1ead0b778081953b1a3dabca312c4">MBL_FULL</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:gaefb1ead0b778081953b1a3dabca312c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer list is full.  <a href="group__usbd__hal.xhtml#gaefb1ead0b778081953b1a3dabca312c4">More...</a><br /></td></tr>
<tr class="separator:gaefb1ead0b778081953b1a3dabca312c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fea9931b5288124d11803122002ac70"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga7fea9931b5288124d11803122002ac70">MBL_NULL</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:ga7fea9931b5288124d11803122002ac70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer list is null.  <a href="group__usbd__hal.xhtml#ga7fea9931b5288124d11803122002ac70">More...</a><br /></td></tr>
<tr class="separator:ga7fea9931b5288124d11803122002ac70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga738c63d27bd4c464410b95c7aea8126b"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga738c63d27bd4c464410b95c7aea8126b">UDP_EnablePeripheralClock</a> (void)</td></tr>
<tr class="memdesc:ga738c63d27bd4c464410b95c7aea8126b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the clock of the UDP peripheral.  <a href="group__usbd__hal.xhtml#ga738c63d27bd4c464410b95c7aea8126b">More...</a><br /></td></tr>
<tr class="separator:ga738c63d27bd4c464410b95c7aea8126b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41f4f97292c90b1e6fc3f2e36434d42e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga41f4f97292c90b1e6fc3f2e36434d42e">UDP_DisablePeripheralClock</a> (void)</td></tr>
<tr class="memdesc:ga41f4f97292c90b1e6fc3f2e36434d42e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the UDP peripheral clock.  <a href="group__usbd__hal.xhtml#ga41f4f97292c90b1e6fc3f2e36434d42e">More...</a><br /></td></tr>
<tr class="separator:ga41f4f97292c90b1e6fc3f2e36434d42e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d375ca2b67daca629ff15bcce4fc310"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga0d375ca2b67daca629ff15bcce4fc310">UDP_EnableUsbClock</a> (void)</td></tr>
<tr class="memdesc:ga0d375ca2b67daca629ff15bcce4fc310"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the 48MHz USB clock.  <a href="group__usbd__hal.xhtml#ga0d375ca2b67daca629ff15bcce4fc310">More...</a><br /></td></tr>
<tr class="separator:ga0d375ca2b67daca629ff15bcce4fc310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4661ff96623955e71a90e436b0d69a8f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4661ff96623955e71a90e436b0d69a8f">UDP_DisableUsbClock</a> (void)</td></tr>
<tr class="memdesc:ga4661ff96623955e71a90e436b0d69a8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the 48MHz USB clock.  <a href="group__usbd__hal.xhtml#ga4661ff96623955e71a90e436b0d69a8f">More...</a><br /></td></tr>
<tr class="separator:ga4661ff96623955e71a90e436b0d69a8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga63cba31a9a5b031f76644e0b90420beb"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga63cba31a9a5b031f76644e0b90420beb">UDP_EnableTransceiver</a> (void)</td></tr>
<tr class="memdesc:ga63cba31a9a5b031f76644e0b90420beb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the UDP transceiver.  <a href="group__usbd__hal.xhtml#ga63cba31a9a5b031f76644e0b90420beb">More...</a><br /></td></tr>
<tr class="separator:ga63cba31a9a5b031f76644e0b90420beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4abbdc6d713587267daa50dfc60eed4e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4abbdc6d713587267daa50dfc60eed4e">UDP_DisableTransceiver</a> (void)</td></tr>
<tr class="memdesc:ga4abbdc6d713587267daa50dfc60eed4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the UDP transceiver.  <a href="group__usbd__hal.xhtml#ga4abbdc6d713587267daa50dfc60eed4e">More...</a><br /></td></tr>
<tr class="separator:ga4abbdc6d713587267daa50dfc60eed4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d8e51486d26751c22c5e4e23f67e8cd"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga5d8e51486d26751c22c5e4e23f67e8cd">UDP_EndOfTransfer</a> (uint8_t bEndpoint, uint8_t bStatus)</td></tr>
<tr class="memdesc:ga5d8e51486d26751c22c5e4e23f67e8cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles a completed transfer on the given endpoint, invoking the configured callback if any.  <a href="group__usbd__hal.xhtml#ga5d8e51486d26751c22c5e4e23f67e8cd">More...</a><br /></td></tr>
<tr class="separator:ga5d8e51486d26751c22c5e4e23f67e8cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74e4196d75983a88c070f786a0247a69"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga74e4196d75983a88c070f786a0247a69">UDP_ClearRxFlag</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga74e4196d75983a88c070f786a0247a69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the correct reception flag (bank 0 or bank 1) of an endpoint.  <a href="group__usbd__hal.xhtml#ga74e4196d75983a88c070f786a0247a69">More...</a><br /></td></tr>
<tr class="separator:ga74e4196d75983a88c070f786a0247a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c4dab6cc24584488058e654fd11b91b"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga8c4dab6cc24584488058e654fd11b91b">UDP_MblUpdate</a> (<a class="el" href="struct_mbl_transfer.xhtml">MblTransfer</a> *pTransfer, <a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a> *pBi, uint16_t size, uint8_t forceEnd)</td></tr>
<tr class="memdesc:ga8c4dab6cc24584488058e654fd11b91b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update multi-buffer-transfer descriptors.  <a href="group__usbd__hal.xhtml#ga8c4dab6cc24584488058e654fd11b91b">More...</a><br /></td></tr>
<tr class="separator:ga8c4dab6cc24584488058e654fd11b91b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57e97248d68838ee318ebeb26a85edaa"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga57e97248d68838ee318ebeb26a85edaa">UDP_MblWriteFifo</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga57e97248d68838ee318ebeb26a85edaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from the current tranfer buffer to the endpoint FIFO.  <a href="group__usbd__hal.xhtml#ga57e97248d68838ee318ebeb26a85edaa">More...</a><br /></td></tr>
<tr class="separator:ga57e97248d68838ee318ebeb26a85edaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4722799f8987177bdfb273007447089f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4722799f8987177bdfb273007447089f">UDP_WritePayload</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga4722799f8987177bdfb273007447089f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from the current tranfer buffer to the endpoint FIFO.  <a href="group__usbd__hal.xhtml#ga4722799f8987177bdfb273007447089f">More...</a><br /></td></tr>
<tr class="separator:ga4722799f8987177bdfb273007447089f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga37b785d1e538172549f05f51f5bfa7b9"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga37b785d1e538172549f05f51f5bfa7b9">UDP_ReadPayload</a> (uint8_t bEndpoint, int32_t wPacketSize)</td></tr>
<tr class="memdesc:ga37b785d1e538172549f05f51f5bfa7b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from an endpoint FIFO to the current transfer buffer.  <a href="group__usbd__hal.xhtml#ga37b785d1e538172549f05f51f5bfa7b9">More...</a><br /></td></tr>
<tr class="separator:ga37b785d1e538172549f05f51f5bfa7b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab8b038b4d329d70d2db1b0a75bca99c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaab8b038b4d329d70d2db1b0a75bca99c">UDP_ReadRequest</a> (<a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *pRequest)</td></tr>
<tr class="memdesc:gaab8b038b4d329d70d2db1b0a75bca99c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Received SETUP packet from endpoint 0 FIFO.  <a href="group__usbd__hal.xhtml#gaab8b038b4d329d70d2db1b0a75bca99c">More...</a><br /></td></tr>
<tr class="separator:gaab8b038b4d329d70d2db1b0a75bca99c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4096b052093ba2cdd9b19dc11fd086a2"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4096b052093ba2cdd9b19dc11fd086a2">UDP_IsTransferFinished</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga4096b052093ba2cdd9b19dc11fd086a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if an ongoing transfer on an endpoint has been completed.  <a href="group__usbd__hal.xhtml#ga4096b052093ba2cdd9b19dc11fd086a2">More...</a><br /></td></tr>
<tr class="separator:ga4096b052093ba2cdd9b19dc11fd086a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa6295dfe0e4e2eaaec7818940d64b18"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gafa6295dfe0e4e2eaaec7818940d64b18">UDP_EndpointHandler</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:gafa6295dfe0e4e2eaaec7818940d64b18"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> interrupt handler.  <a href="group__usbd__hal.xhtml#gafa6295dfe0e4e2eaaec7818940d64b18">More...</a><br /></td></tr>
<tr class="separator:gafa6295dfe0e4e2eaaec7818940d64b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7517d633d0a994384241035fc72268d1"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga7517d633d0a994384241035fc72268d1">UDP_Write</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:ga7517d633d0a994384241035fc72268d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#ga7517d633d0a994384241035fc72268d1">More...</a><br /></td></tr>
<tr class="separator:ga7517d633d0a994384241035fc72268d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedece2a858b9ec25badf17f20ef8a7a7"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaedece2a858b9ec25badf17f20ef8a7a7">UDP_AddWr</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gaedece2a858b9ec25badf17f20ef8a7a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#gaedece2a858b9ec25badf17f20ef8a7a7">More...</a><br /></td></tr>
<tr class="separator:gaedece2a858b9ec25badf17f20ef8a7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb6f5bb30dce6e74bbc0e08b057b1477"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gadb6f5bb30dce6e74bbc0e08b057b1477">UDP_Read</a> (uint8_t bEndpoint, void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gadb6f5bb30dce6e74bbc0e08b057b1477"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt.  <a href="group__usbd__hal.xhtml#gadb6f5bb30dce6e74bbc0e08b057b1477">More...</a><br /></td></tr>
<tr class="separator:gadb6f5bb30dce6e74bbc0e08b057b1477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga571a674fe9f9a1bba6ad08b3b0b28a80"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga571a674fe9f9a1bba6ad08b3b0b28a80">USBD_IrqHandler</a> (void)</td></tr>
<tr class="memdesc:ga571a674fe9f9a1bba6ad08b3b0b28a80"><td class="mdescLeft">&#160;</td><td class="mdescRight">USBD (UDP) interrupt handler Manages device resume, suspend, end of bus reset.  <a href="group__usbd__hal.xhtml#ga571a674fe9f9a1bba6ad08b3b0b28a80">More...</a><br /></td></tr>
<tr class="separator:ga571a674fe9f9a1bba6ad08b3b0b28a80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9aba8ccdad2272b61db48b43466043b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaa9aba8ccdad2272b61db48b43466043b">USBD_HAL_ResetEPs</a> (uint32_t bmEPs, uint8_t bStatus, uint8_t bKeepCfg)</td></tr>
<tr class="memdesc:gaa9aba8ccdad2272b61db48b43466043b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset endpoints and disable them.  <a href="group__usbd__hal.xhtml#gaa9aba8ccdad2272b61db48b43466043b">More...</a><br /></td></tr>
<tr class="separator:gaa9aba8ccdad2272b61db48b43466043b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac15d66e72d7daa9d05116370a36aa91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaac15d66e72d7daa9d05116370a36aa91">USBD_HAL_CancelIo</a> (uint32_t bmEPs)</td></tr>
<tr class="memdesc:gaac15d66e72d7daa9d05116370a36aa91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancel pending READ/WRITE.  <a href="group__usbd__hal.xhtml#gaac15d66e72d7daa9d05116370a36aa91">More...</a><br /></td></tr>
<tr class="separator:gaac15d66e72d7daa9d05116370a36aa91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaf17d4fe67932fa6a5dcc05f4c6d611ff">USBD_HAL_ConfigureEP</a> (const <a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *pDescriptor)</td></tr>
<tr class="memdesc:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures an endpoint according to its endpoint Descriptor.  <a href="group__usbd__hal.xhtml#gaf17d4fe67932fa6a5dcc05f4c6d611ff">More...</a><br /></td></tr>
<tr class="separator:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gafcb94bdd4c0ea327621a187814ab4f9f">USBD_HAL_SetTransferCallback</a> (uint8_t bEP, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pCbData)</td></tr>
<tr class="memdesc:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set callback for a USB endpoint for transfer (read/write).  <a href="group__usbd__hal.xhtml#gafcb94bdd4c0ea327621a187814ab4f9f">More...</a><br /></td></tr>
<tr class="separator:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62263446ee46cfc2ca48856e446f1a79"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga62263446ee46cfc2ca48856e446f1a79">USBD_HAL_SetupMblTransfer</a> (uint8_t bEndpoint, <a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a> *pMbList, uint16_t mblSize, uint16_t startOffset)</td></tr>
<tr class="memdesc:ga62263446ee46cfc2ca48856e446f1a79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure an endpoint to use multi-buffer-list transfer mode.  <a href="group__usbd__hal.xhtml#ga62263446ee46cfc2ca48856e446f1a79">More...</a><br /></td></tr>
<tr class="separator:ga62263446ee46cfc2ca48856e446f1a79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8293616e390cb94e93529673367acb4"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gab8293616e390cb94e93529673367acb4">USBD_HAL_Write</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gab8293616e390cb94e93529673367acb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#gab8293616e390cb94e93529673367acb4">More...</a><br /></td></tr>
<tr class="separator:gab8293616e390cb94e93529673367acb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1c6c76201a5c49c7e40c60c8dbdeae68">USBD_HAL_Read</a> (uint8_t bEndpoint, void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt.  <a href="group__usbd__hal.xhtml#ga1c6c76201a5c49c7e40c60c8dbdeae68">More...</a><br /></td></tr>
<tr class="separator:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga214508a8f0f824cdcf40bca9ddac10f6">USBD_HAL_Connect</a> (void)</td></tr>
<tr class="memdesc:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Pull-up, connect.  <a href="group__usbd__hal.xhtml#ga214508a8f0f824cdcf40bca9ddac10f6">More...</a><br /></td></tr>
<tr class="separator:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaded744daaee15b55f41fb2175f343b69"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaded744daaee15b55f41fb2175f343b69">USBD_HAL_Disconnect</a> (void)</td></tr>
<tr class="memdesc:gaded744daaee15b55f41fb2175f343b69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable Pull-up, disconnect.  <a href="group__usbd__hal.xhtml#gaded744daaee15b55f41fb2175f343b69">More...</a><br /></td></tr>
<tr class="separator:gaded744daaee15b55f41fb2175f343b69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24f5a47f6815de571752ba22c98073f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga24f5a47f6815de571752ba22c98073f5">USBD_HAL_RemoteWakeUp</a> (void)</td></tr>
<tr class="memdesc:ga24f5a47f6815de571752ba22c98073f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a remote wake-up procedure.  <a href="group__usbd__hal.xhtml#ga24f5a47f6815de571752ba22c98073f5">More...</a><br /></td></tr>
<tr class="separator:ga24f5a47f6815de571752ba22c98073f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8a317bd985d2ab3d3b82d093015379e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gac8a317bd985d2ab3d3b82d093015379e">USBD_HAL_SetAddress</a> (uint8_t address)</td></tr>
<tr class="memdesc:gac8a317bd985d2ab3d3b82d093015379e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the device address to the given value.  <a href="group__usbd__hal.xhtml#gac8a317bd985d2ab3d3b82d093015379e">More...</a><br /></td></tr>
<tr class="separator:gac8a317bd985d2ab3d3b82d093015379e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05c8714f0e31ed119a4ab594d687691a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga05c8714f0e31ed119a4ab594d687691a">USBD_HAL_SetConfiguration</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga05c8714f0e31ed119a4ab594d687691a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current device configuration.  <a href="group__usbd__hal.xhtml#ga05c8714f0e31ed119a4ab594d687691a">More...</a><br /></td></tr>
<tr class="separator:ga05c8714f0e31ed119a4ab594d687691a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga3699059b9b9b52b7e55af6d070a7fe61">USBD_HAL_Init</a> (void)</td></tr>
<tr class="memdesc:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB HW Access driver.  <a href="group__usbd__hal.xhtml#ga3699059b9b9b52b7e55af6d070a7fe61">More...</a><br /></td></tr>
<tr class="separator:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad95d239687843031e2af3aac51ba33ad"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gad95d239687843031e2af3aac51ba33ad">USBD_HAL_Stall</a> (uint8_t bEP)</td></tr>
<tr class="memdesc:gad95d239687843031e2af3aac51ba33ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the given endpoint to acknowledge the next packet it receives with a STALL handshake except setup request.  <a href="group__usbd__hal.xhtml#gad95d239687843031e2af3aac51ba33ad">More...</a><br /></td></tr>
<tr class="separator:gad95d239687843031e2af3aac51ba33ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1a1fd7ed1af2be8e202879458a6cfda7">USBD_HAL_Halt</a> (uint8_t bEndpoint, uint8_t ctl)</td></tr>
<tr class="memdesc:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets/Clear/Get the HALT state on the endpoint.  <a href="group__usbd__hal.xhtml#ga1a1fd7ed1af2be8e202879458a6cfda7">More...</a><br /></td></tr>
<tr class="separator:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga946b2d10dfc497b6b24e602be6f3bd05">USBD_HAL_IsHighSpeed</a> (void)</td></tr>
<tr class="memdesc:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the device is running in high or full-speed.  <a href="group__usbd__hal.xhtml#ga946b2d10dfc497b6b24e602be6f3bd05">More...</a><br /></td></tr>
<tr class="separator:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab80a4355417d88e290c88c233d5d435b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gab80a4355417d88e290c88c233d5d435b">USBD_HAL_Suspend</a> (void)</td></tr>
<tr class="memdesc:gab80a4355417d88e290c88c233d5d435b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspend USB Device HW Interface.  <a href="group__usbd__hal.xhtml#gab80a4355417d88e290c88c233d5d435b">More...</a><br /></td></tr>
<tr class="separator:gab80a4355417d88e290c88c233d5d435b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72c29d7c5767f5af8df7ba1603a02619"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga72c29d7c5767f5af8df7ba1603a02619">USBD_HAL_Activate</a> (void)</td></tr>
<tr class="memdesc:ga72c29d7c5767f5af8df7ba1603a02619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activate USB Device HW Interface</p><ol type="1">
<li>Enable USB Peripheral</li>
<li>Enable USB Clock</li>
<li>Enable transceiver. </li>
</ol>
 <a href="group__usbd__hal.xhtml#ga72c29d7c5767f5af8df7ba1603a02619">More...</a><br /></td></tr>
<tr class="separator:ga72c29d7c5767f5af8df7ba1603a02619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c996a1e96701350e2c298521b7f8630"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga3c996a1e96701350e2c298521b7f8630">USBD_HAL_Test</a> (uint8_t bIndex)</td></tr>
<tr class="memdesc:ga3c996a1e96701350e2c298521b7f8630"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certification test for High Speed device.  <a href="group__usbd__hal.xhtml#ga3c996a1e96701350e2c298521b7f8630">More...</a><br /></td></tr>
<tr class="separator:ga3c996a1e96701350e2c298521b7f8630"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gae5ead95894bdd220e35880db62b8c3d1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="struct_endpoint.xhtml">Endpoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gae5ead95894bdd220e35880db62b8c3d1">endpoints</a> [<a class="el" href="group__usbd__hal.xhtml#gab1098bd73746d6f0b0ab28975d2a5043">CHIP_USB_NUMENDPOINTS</a>]</td></tr>
<tr class="memdesc:gae5ead95894bdd220e35880db62b8c3d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the internal state for each endpoint of the UDP.  <a href="group__usbd__hal.xhtml#gae5ead95894bdd220e35880db62b8c3d1">More...</a><br /></td></tr>
<tr class="separator:gae5ead95894bdd220e35880db62b8c3d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h1><a class="anchor" id="Purpose"></a>
Purpose</h1>
<p>Implementation of USB device functions on a UDP controller.</p>
<p>See usbd_api_method USBD API Methods. </p>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
