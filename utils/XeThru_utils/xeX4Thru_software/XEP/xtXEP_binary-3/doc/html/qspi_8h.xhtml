<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/qspi.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">qspi.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for Serial Peripheral Interface (SPI) controller.  
<a href="#details">More...</a></p>
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h__dep__incl.svg" width="808" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="qspi_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_qspi_mem_cmd__t.xhtml">QspiMemCmd_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi command structure  <a href="struct_qspi_mem_cmd__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_qspi_buffer__t.xhtml">QspiBuffer_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi buffer structure  <a href="struct_qspi_buffer__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_qspi_inst_frame__t.xhtml">QspiInstFrame_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi frame structure for QSPI mode  <a href="struct_qspi_inst_frame__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_qspi_inst_frame__t_1_1___qspi_inst_frame.xhtml">QspiInstFrame_t::_QspiInstFrame</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_qspi_inst_frame__t_1_1___qspi_inst_frame_1_1___qspi_inst_frame_b_m.xhtml">QspiInstFrame_t::_QspiInstFrame::_QspiInstFrameBM</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi driver structure  <a href="struct_qspid__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a0a4553e97aec60af4728131ccf0d79cf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a0a4553e97aec60af4728131ccf0d79cf">QSPI_SCBR</a>(baudrate,  masterClock)&#160;&#160;&#160;((uint32_t) (masterClock / baudrate) &lt;&lt; 8)</td></tr>
<tr class="memdesc:a0a4553e97aec60af4728131ccf0d79cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Here are several macros which should be used when configuring a SPI peripheral.  <a href="#a0a4553e97aec60af4728131ccf0d79cf">More...</a><br /></td></tr>
<tr class="separator:a0a4553e97aec60af4728131ccf0d79cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a015aa48b9646da4ecf488b4f9d0b5f34"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a015aa48b9646da4ecf488b4f9d0b5f34">QSPI_DLYBS</a>(delay,  masterClock)&#160;&#160;&#160;((uint32_t) (((masterClock / 1000000) * delay) / 1000) &lt;&lt; 16)</td></tr>
<tr class="memdesc:a015aa48b9646da4ecf488b4f9d0b5f34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the value of the CSR DLYBS field given the desired delay (in ns)  <a href="#a015aa48b9646da4ecf488b4f9d0b5f34">More...</a><br /></td></tr>
<tr class="separator:a015aa48b9646da4ecf488b4f9d0b5f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5518874d6b4a0cc1cff5ba9e69b96329"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a5518874d6b4a0cc1cff5ba9e69b96329">QSPI_DLYBCT</a>(delay,  masterClock)&#160;&#160;&#160;((uint32_t) (((masterClock / 1000000) * delay) / 32000) &lt;&lt; 24)</td></tr>
<tr class="memdesc:a5518874d6b4a0cc1cff5ba9e69b96329"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the value of the CSR DLYBCT field given the desired delay (in ns)  <a href="#a5518874d6b4a0cc1cff5ba9e69b96329">More...</a><br /></td></tr>
<tr class="separator:a5518874d6b4a0cc1cff5ba9e69b96329"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:adf94e21942d0dff736d1e65a129be37f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37f">Access_t</a> { <a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37fa3d10a301e4735367be3461251da23fb7">CmdAccess</a> = 0, 
<a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37fa09d8685b250ef06c579cc973fbab14f4">ReadAccess</a>, 
<a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37fa2190857f52b5721b4b58e0ffbff0a31e">WriteAccess</a>
 }<tr class="memdesc:adf94e21942d0dff736d1e65a129be37f"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi access modes  <a href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37f">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:adf94e21942d0dff736d1e65a129be37f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4d7775cab4dd1c0cd15e3049c00d11"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11">QspiMode_t</a> { <a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11ad6343b50c92c2e13e4f30497a6028476">SpiMode</a> = QSPI_MR_SMM_SPI, 
<a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11ac04ee86fad887354e2d18b308b2fa156">QspiMemMode</a> = QSPI_MR_SMM_MEMORY
 }<tr class="memdesc:aca4d7775cab4dd1c0cd15e3049c00d11"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi modes SPI or QSPI  <a href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:aca4d7775cab4dd1c0cd15e3049c00d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c09fb43bfc53b97def105d830fd07c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07c">QspiClockMode_t</a> { <a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07cac5bd8b60780386dfa575096132e2583e">ClockMode_00</a> = 0, 
<a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07ca89904b5c486d2e327e0559b6d9edf3d9">ClockMode_10</a>, 
<a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07ca0d9e40653de111253c60f0277c5a8482">ClockMode_01</a>, 
<a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07ca691fe024df85b0fb219ea75dfff5c764">ClockMode_11</a>
 }<tr class="memdesc:a86c09fb43bfc53b97def105d830fd07c"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi clock modes , regarding clock phase and clock polarity  <a href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07c">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a86c09fb43bfc53b97def105d830fd07c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a987c9d7d95a4e2fc7a2036950194dc73"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> { <br />
&#160;&#160;<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a3404772eb18dd572a4cf9a15d5c826bd">QSPI_SUCCESS</a> = 0, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a387e55b694dc5c3de0e4cf84a9b4374f">QSPI_BUSY</a>, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a66ccc45ebe45787f2c2ee7dbd58af82d">QSPI_BUSY_SENDING</a>, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a0f6955932d9790631ba7a15b7c128fce">QSPI_READ_ERROR</a>, 
<br />
&#160;&#160;<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73adcfec22b95cad8d078f4f850cf393c9b">QSPI_WRITE_ERROR</a>, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a72ff72b27a5bfad1d0f0f47d497223b7">QSPI_UNKNOWN_ERROR</a>, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a88ff4f11995c0718f9b24a6c5ce9c587">QSPI_INIT_ERROR</a>, 
<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73a3970b478d421d93bcb443c5a709bda04">QSPI_INPUT_ERROR</a>, 
<br />
&#160;&#160;<a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73aa8fc4a090f9f652a13c64152c2bd69d8">QSPI_TOTAL_ERROR</a>
<br />
 }<tr class="memdesc:a987c9d7d95a4e2fc7a2036950194dc73"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi status codes  <a href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a987c9d7d95a4e2fc7a2036950194dc73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae37cb359fc4a6c363cb7f6f38986a2b1"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1">QspiStatus_t</a> { <br />
&#160;&#160;<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1abeb2bf5bbf2d401f1f8de96cc52329fa">IsReceived</a> = QSPI_SR_RDRF, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a2e8e94592b66b7b493c954cae806673d">IsTxSent</a> = QSPI_SR_TDRE, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a587e30e7d10446debf1647f0a926eaa9">IsTxEmpty</a> = QSPI_SR_TXEMPTY, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a9a1b0cfb9f25fd256d447ccb9301c0f5">IsOverrun</a> = QSPI_SR_OVRES, 
<br />
&#160;&#160;<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a4370a96ec6213a757112340abadf57f8">IsCsRise</a> = QSPI_SR_CSR, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a8c5e0ff00648eb5edf422c69a22cfa4a">IsCsAsserted</a> = QSPI_SR_CSS, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1ac4dfd91e9ceca1848a33668ebae48ba3">IsEofInst</a> = QSPI_SR_INSTRE, 
<a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1a730c04181943e7754b90cc4fbaccef08">IsEnabled</a> = QSPI_SR_QSPIENS
<br />
 }<tr class="memdesc:ae37cb359fc4a6c363cb7f6f38986a2b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">qspi status regiter bits  <a href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ae37cb359fc4a6c363cb7f6f38986a2b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ad41ddc810992fae62c42f245a989381a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#ad41ddc810992fae62c42f245a989381a">QSPI_SwReset</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:ad41ddc810992fae62c42f245a989381a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets a QSPI peripheral.  <a href="#ad41ddc810992fae62c42f245a989381a">More...</a><br /></td></tr>
<tr class="separator:ad41ddc810992fae62c42f245a989381a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24e4ad68361409458213083438db8449"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a24e4ad68361409458213083438db8449">QSPI_Disable</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:a24e4ad68361409458213083438db8449"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables a QSPI peripheral.  <a href="#a24e4ad68361409458213083438db8449">More...</a><br /></td></tr>
<tr class="separator:a24e4ad68361409458213083438db8449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a481f9cf7a40eb4de632cfef883abbafd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a481f9cf7a40eb4de632cfef883abbafd">QSPI_Enable</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:a481f9cf7a40eb4de632cfef883abbafd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables a QSPI peripheral.  <a href="#a481f9cf7a40eb4de632cfef883abbafd">More...</a><br /></td></tr>
<tr class="separator:a481f9cf7a40eb4de632cfef883abbafd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cee5ee97a2b6575ccf9d56d3c5fce64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a0cee5ee97a2b6575ccf9d56d3c5fce64">QSPI_EndTransfer</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:a0cee5ee97a2b6575ccf9d56d3c5fce64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends ongoing transfer by releasing CS of QSPI peripheral.  <a href="#a0cee5ee97a2b6575ccf9d56d3c5fce64">More...</a><br /></td></tr>
<tr class="separator:a0cee5ee97a2b6575ccf9d56d3c5fce64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84307d724b3e124e1d4cced163d3074d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a84307d724b3e124e1d4cced163d3074d">QSPI_GetStatus</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi, const <a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1">QspiStatus_t</a> rStatus)</td></tr>
<tr class="memdesc:a84307d724b3e124e1d4cced163d3074d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current status register of the given QSPI peripheral.  <a href="#a84307d724b3e124e1d4cced163d3074d">More...</a><br /></td></tr>
<tr class="separator:a84307d724b3e124e1d4cced163d3074d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e1476d765491527f175aaf80b74fd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a97e1476d765491527f175aaf80b74fd3">QSPI_ConfigureClock</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi, <a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07c">QspiClockMode_t</a> ClockMode, uint32_t dwClockCfg)</td></tr>
<tr class="memdesc:a97e1476d765491527f175aaf80b74fd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures peripheral clock of a QSPI/SPI peripheral.  <a href="#a97e1476d765491527f175aaf80b74fd3">More...</a><br /></td></tr>
<tr class="separator:a97e1476d765491527f175aaf80b74fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa891e040401e77f8f68068c6751a558"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#aaa891e040401e77f8f68068c6751a558">QSPI_SingleReadSPI</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, uint16_t *const pData)</td></tr>
<tr class="memdesc:aaa891e040401e77f8f68068c6751a558"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the data received by a SPI peripheral.  <a href="#aaa891e040401e77f8f68068c6751a558">More...</a><br /></td></tr>
<tr class="separator:aaa891e040401e77f8f68068c6751a558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8e703416d8faf7e6ca68d18c1da6115"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#aa8e703416d8faf7e6ca68d18c1da6115">QSPI_MultiReadSPI</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, uint16_t *const pData, uint32_t NumOfBytes)</td></tr>
<tr class="memdesc:aa8e703416d8faf7e6ca68d18c1da6115"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads multiple data received by a SPI peripheral.  <a href="#aa8e703416d8faf7e6ca68d18c1da6115">More...</a><br /></td></tr>
<tr class="separator:aa8e703416d8faf7e6ca68d18c1da6115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e91dc0a09fbf99a27f36836807b1a60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a2e91dc0a09fbf99a27f36836807b1a60">QSPI_SingleWriteSPI</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, uint16_t const *pData)</td></tr>
<tr class="memdesc:a2e91dc0a09fbf99a27f36836807b1a60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a single data through a SPI peripheral.  <a href="#a2e91dc0a09fbf99a27f36836807b1a60">More...</a><br /></td></tr>
<tr class="separator:a2e91dc0a09fbf99a27f36836807b1a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade81d33cb14e6aa8701d4824de0656a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#ade81d33cb14e6aa8701d4824de0656a2">QSPI_MultiWriteSPI</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, uint16_t const *pData, uint32_t NumOfBytes)</td></tr>
<tr class="memdesc:ade81d33cb14e6aa8701d4824de0656a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends multiple data through a SPI peripheral.  <a href="#ade81d33cb14e6aa8701d4824de0656a2">More...</a><br /></td></tr>
<tr class="separator:ade81d33cb14e6aa8701d4824de0656a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace1bf311062b09e0d1a8015e44c3642"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#aace1bf311062b09e0d1a8015e44c3642">QSPI_EnableIt</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi, uint32_t dwSources)</td></tr>
<tr class="memdesc:aace1bf311062b09e0d1a8015e44c3642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables one or more interrupt sources of a QSPI peripheral.  <a href="#aace1bf311062b09e0d1a8015e44c3642">More...</a><br /></td></tr>
<tr class="separator:aace1bf311062b09e0d1a8015e44c3642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ae8efc09afd108ffd081d8fb4afd9ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a2ae8efc09afd108ffd081d8fb4afd9ea">QSPI_DisableIt</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi, uint32_t dwSources)</td></tr>
<tr class="memdesc:a2ae8efc09afd108ffd081d8fb4afd9ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables one or more interrupt sources of a QSPI peripheral.  <a href="#a2ae8efc09afd108ffd081d8fb4afd9ea">More...</a><br /></td></tr>
<tr class="separator:a2ae8efc09afd108ffd081d8fb4afd9ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53794fcaeb3a2b56c8d40e045129226"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#af53794fcaeb3a2b56c8d40e045129226">QSPI_GetItMask</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:af53794fcaeb3a2b56c8d40e045129226"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the interrupt mask register.  <a href="#af53794fcaeb3a2b56c8d40e045129226">More...</a><br /></td></tr>
<tr class="separator:af53794fcaeb3a2b56c8d40e045129226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f2bf0afdcfd71a444a5d3fec654a96e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a6f2bf0afdcfd71a444a5d3fec654a96e">QSPI_GetEnabledItStatus</a> (<a class="el" href="struct_qspi.xhtml">Qspi</a> *pQspi)</td></tr>
<tr class="memdesc:a6f2bf0afdcfd71a444a5d3fec654a96e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns enabled interrupt status.  <a href="#a6f2bf0afdcfd71a444a5d3fec654a96e">More...</a><br /></td></tr>
<tr class="separator:a6f2bf0afdcfd71a444a5d3fec654a96e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6aebb1622380bf45bc83e7ca20a17f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#ac6aebb1622380bf45bc83e7ca20a17f9">QSPI_ConfigureInterface</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, <a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11">QspiMode_t</a> Mode, uint32_t dwConfiguration)</td></tr>
<tr class="memdesc:ac6aebb1622380bf45bc83e7ca20a17f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures QSPI/SPI.  <a href="#ac6aebb1622380bf45bc83e7ca20a17f9">More...</a><br /></td></tr>
<tr class="separator:ac6aebb1622380bf45bc83e7ca20a17f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6b5d392d35016bb59ad1b3b9cdb72d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#aa6b5d392d35016bb59ad1b3b9cdb72d9">QSPI_SendCommand</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspi, uint8_t const KeepCfg)</td></tr>
<tr class="memdesc:aa6b5d392d35016bb59ad1b3b9cdb72d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send an instruction over QSPI (oly a flash command no data)  <a href="#aa6b5d392d35016bb59ad1b3b9cdb72d9">More...</a><br /></td></tr>
<tr class="separator:aa6b5d392d35016bb59ad1b3b9cdb72d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d28b23fbb2385d5e3a8479b02c10bb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a6d28b23fbb2385d5e3a8479b02c10bb8">QSPI_SendCommandWithData</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspi, uint8_t const KeepCfg)</td></tr>
<tr class="memdesc:a6d28b23fbb2385d5e3a8479b02c10bb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send instruction over QSPI with data.  <a href="#a6d28b23fbb2385d5e3a8479b02c10bb8">More...</a><br /></td></tr>
<tr class="separator:a6d28b23fbb2385d5e3a8479b02c10bb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b59ff979a47404bc86c60118ec3d30d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a8b59ff979a47404bc86c60118ec3d30d">QSPI_ReadCommand</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspi, uint8_t const KeepCfg)</td></tr>
<tr class="memdesc:a8b59ff979a47404bc86c60118ec3d30d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send instruction over QSPI to read data.  <a href="#a8b59ff979a47404bc86c60118ec3d30d">More...</a><br /></td></tr>
<tr class="separator:a8b59ff979a47404bc86c60118ec3d30d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a399520c124a1931a313645b5011888db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a399520c124a1931a313645b5011888db">QSPI_EnableMemAccess</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspi, uint8_t const KeepCfg, uint8_t ScrambleFlag)</td></tr>
<tr class="memdesc:a399520c124a1931a313645b5011888db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends an instruction over QSPI and configures other related address like Addr , Frame and synchronise bus access before data read or write.  <a href="#a399520c124a1931a313645b5011888db">More...</a><br /></td></tr>
<tr class="separator:a399520c124a1931a313645b5011888db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61a250e1df8fc3d9823aa8d0af159cff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qspi_8h.xhtml#a61a250e1df8fc3d9823aa8d0af159cff">QSPI_ReadWriteMem</a> (<a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *pQspid, <a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37f">Access_t</a> const ReadWrite)</td></tr>
<tr class="memdesc:a61a250e1df8fc3d9823aa8d0af159cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes or reads the QSPI memory (0x80000000) to transmit or receive data from Flash memory.  <a href="#a61a250e1df8fc3d9823aa8d0af159cff">More...</a><br /></td></tr>
<tr class="separator:a61a250e1df8fc3d9823aa8d0af159cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for Serial Peripheral Interface (SPI) controller. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a5518874d6b4a0cc1cff5ba9e69b96329"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5518874d6b4a0cc1cff5ba9e69b96329">&sect;&nbsp;</a></span>QSPI_DLYBCT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define QSPI_DLYBCT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">delay, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">masterClock&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((uint32_t) (((masterClock / 1000000) * delay) / 32000) &lt;&lt; 24)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the value of the CSR DLYBCT field given the desired delay (in ns) </p>

</div>
</div>
<a id="a015aa48b9646da4ecf488b4f9d0b5f34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a015aa48b9646da4ecf488b4f9d0b5f34">&sect;&nbsp;</a></span>QSPI_DLYBS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define QSPI_DLYBS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">delay, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">masterClock&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((uint32_t) (((masterClock / 1000000) * delay) / 1000) &lt;&lt; 16)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the value of the CSR DLYBS field given the desired delay (in ns) </p>

</div>
</div>
<a id="a0a4553e97aec60af4728131ccf0d79cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a4553e97aec60af4728131ccf0d79cf">&sect;&nbsp;</a></span>QSPI_SCBR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define QSPI_SCBR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">baudrate, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">masterClock&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((uint32_t) (masterClock / baudrate) &lt;&lt; 8)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Here are several macros which should be used when configuring a SPI peripheral. </p>
<h1><a class="anchor" id="qspi_configuration_macros"></a>
SPI Configuration Macros</h1>
<ul>
<li>QSPI_PCS</li>
<li><a class="el" href="qspi_8h.xhtml#a0a4553e97aec60af4728131ccf0d79cf">QSPI_SCBR</a></li>
<li><a class="el" href="qspi_8h.xhtml#a015aa48b9646da4ecf488b4f9d0b5f34">QSPI_DLYBS</a></li>
<li>QSPI_DLYBCTCalculates the value of the CSR SCBR field given the baudrate and MCK. </li>
</ul>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="adf94e21942d0dff736d1e65a129be37f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf94e21942d0dff736d1e65a129be37f">&sect;&nbsp;</a></span>Access_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37f">Access_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>qspi access modes </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="adf94e21942d0dff736d1e65a129be37fa3d10a301e4735367be3461251da23fb7"></a>CmdAccess&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adf94e21942d0dff736d1e65a129be37fa09d8685b250ef06c579cc973fbab14f4"></a>ReadAccess&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="adf94e21942d0dff736d1e65a129be37fa2190857f52b5721b4b58e0ffbff0a31e"></a>WriteAccess&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a86c09fb43bfc53b97def105d830fd07c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86c09fb43bfc53b97def105d830fd07c">&sect;&nbsp;</a></span>QspiClockMode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07c">QspiClockMode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>qspi clock modes , regarding clock phase and clock polarity </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a86c09fb43bfc53b97def105d830fd07cac5bd8b60780386dfa575096132e2583e"></a>ClockMode_00&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a86c09fb43bfc53b97def105d830fd07ca89904b5c486d2e327e0559b6d9edf3d9"></a>ClockMode_10&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a86c09fb43bfc53b97def105d830fd07ca0d9e40653de111253c60f0277c5a8482"></a>ClockMode_01&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a86c09fb43bfc53b97def105d830fd07ca691fe024df85b0fb219ea75dfff5c764"></a>ClockMode_11&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a987c9d7d95a4e2fc7a2036950194dc73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a987c9d7d95a4e2fc7a2036950194dc73">&sect;&nbsp;</a></span>QspidStatus_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>qspi status codes </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a3404772eb18dd572a4cf9a15d5c826bd"></a>QSPI_SUCCESS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a387e55b694dc5c3de0e4cf84a9b4374f"></a>QSPI_BUSY&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a66ccc45ebe45787f2c2ee7dbd58af82d"></a>QSPI_BUSY_SENDING&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a0f6955932d9790631ba7a15b7c128fce"></a>QSPI_READ_ERROR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73adcfec22b95cad8d078f4f850cf393c9b"></a>QSPI_WRITE_ERROR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a72ff72b27a5bfad1d0f0f47d497223b7"></a>QSPI_UNKNOWN_ERROR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a88ff4f11995c0718f9b24a6c5ce9c587"></a>QSPI_INIT_ERROR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73a3970b478d421d93bcb443c5a709bda04"></a>QSPI_INPUT_ERROR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a987c9d7d95a4e2fc7a2036950194dc73aa8fc4a090f9f652a13c64152c2bd69d8"></a>QSPI_TOTAL_ERROR&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="aca4d7775cab4dd1c0cd15e3049c00d11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca4d7775cab4dd1c0cd15e3049c00d11">&sect;&nbsp;</a></span>QspiMode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11">QspiMode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>qspi modes SPI or QSPI </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aca4d7775cab4dd1c0cd15e3049c00d11ad6343b50c92c2e13e4f30497a6028476"></a>SpiMode&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aca4d7775cab4dd1c0cd15e3049c00d11ac04ee86fad887354e2d18b308b2fa156"></a>QspiMemMode&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ae37cb359fc4a6c363cb7f6f38986a2b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae37cb359fc4a6c363cb7f6f38986a2b1">&sect;&nbsp;</a></span>QspiStatus_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1">QspiStatus_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>qspi status regiter bits </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1abeb2bf5bbf2d401f1f8de96cc52329fa"></a>IsReceived&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a2e8e94592b66b7b493c954cae806673d"></a>IsTxSent&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a587e30e7d10446debf1647f0a926eaa9"></a>IsTxEmpty&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a9a1b0cfb9f25fd256d447ccb9301c0f5"></a>IsOverrun&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a4370a96ec6213a757112340abadf57f8"></a>IsCsRise&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a8c5e0ff00648eb5edf422c69a22cfa4a"></a>IsCsAsserted&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1ac4dfd91e9ceca1848a33668ebae48ba3"></a>IsEofInst&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ae37cb359fc4a6c363cb7f6f38986a2b1a730c04181943e7754b90cc4fbaccef08"></a>IsEnabled&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a97e1476d765491527f175aaf80b74fd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e1476d765491527f175aaf80b74fd3">&sect;&nbsp;</a></span>QSPI_ConfigureClock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void QSPI_ConfigureClock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="qspi_8h.xhtml#a86c09fb43bfc53b97def105d830fd07c">QspiClockMode_t</a>&#160;</td>
          <td class="paramname"><em>ClockMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwClockCfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures peripheral clock of a QSPI/SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">dwConfiguration</td><td>Desired clock configuration. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a97e1476d765491527f175aaf80b74fd3_icgraph.svg" width="408" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac6aebb1622380bf45bc83e7ca20a17f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6aebb1622380bf45bc83e7ca20a17f9">&sect;&nbsp;</a></span>QSPI_ConfigureInterface()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_ConfigureInterface </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11">QspiMode_t</a>&#160;</td>
          <td class="paramname"><em>Mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwConfiguration</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures QSPI/SPI. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">Mode</td><td>Mode for QSPI or SPI </td></tr>
    <tr><td class="paramname">dwConfiguration</td><td>Config of SPI or QSPI mode </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_ac6aebb1622380bf45bc83e7ca20a17f9_cgraph.svg" width="390" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_ac6aebb1622380bf45bc83e7ca20a17f9_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a24e4ad68361409458213083438db8449"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24e4ad68361409458213083438db8449">&sect;&nbsp;</a></span>QSPI_Disable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void QSPI_Disable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables a QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a24e4ad68361409458213083438db8449_icgraph.svg" width="342" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2ae8efc09afd108ffd081d8fb4afd9ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ae8efc09afd108ffd081d8fb4afd9ea">&sect;&nbsp;</a></span>QSPI_DisableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_DisableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables one or more interrupt sources of a QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a481f9cf7a40eb4de632cfef883abbafd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a481f9cf7a40eb4de632cfef883abbafd">&sect;&nbsp;</a></span>QSPI_Enable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void QSPI_Enable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables a QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a481f9cf7a40eb4de632cfef883abbafd_icgraph.svg" width="356" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aace1bf311062b09e0d1a8015e44c3642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace1bf311062b09e0d1a8015e44c3642">&sect;&nbsp;</a></span>QSPI_EnableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_EnableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables one or more interrupt sources of a QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a399520c124a1931a313645b5011888db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a399520c124a1931a313645b5011888db">&sect;&nbsp;</a></span>QSPI_EnableMemAccess()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_EnableMemAccess </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t const&#160;</td>
          <td class="paramname"><em>KeepCfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ScrambleFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends an instruction over QSPI and configures other related address like Addr , Frame and synchronise bus access before data read or write. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">KeepCfg</td><td>To keep Instruction from value or resets to zero </td></tr>
    <tr><td class="paramname">ScrambleFlag</td><td>Enable or disable scramble on QSPI</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if At least one instruction end has been detected since the last read of QSPI_SR.; otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a399520c124a1931a313645b5011888db_cgraph.svg" width="388" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a399520c124a1931a313645b5011888db_icgraph.svg" width="420" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0cee5ee97a2b6575ccf9d56d3c5fce64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cee5ee97a2b6575ccf9d56d3c5fce64">&sect;&nbsp;</a></span>QSPI_EndTransfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_EndTransfer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Ends ongoing transfer by releasing CS of QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a0cee5ee97a2b6575ccf9d56d3c5fce64_cgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a0cee5ee97a2b6575ccf9d56d3c5fce64_icgraph.svg" width="644" height="380"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6f2bf0afdcfd71a444a5d3fec654a96e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f2bf0afdcfd71a444a5d3fec654a96e">&sect;&nbsp;</a></span>QSPI_GetEnabledItStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t QSPI_GetEnabledItStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns enabled interrupt status. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> interrupt mask register. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a6f2bf0afdcfd71a444a5d3fec654a96e_cgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af53794fcaeb3a2b56c8d40e045129226"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af53794fcaeb3a2b56c8d40e045129226">&sect;&nbsp;</a></span>QSPI_GetItMask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t QSPI_GetItMask </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the interrupt mask register. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> interrupt mask register. </dd></dl>

</div>
</div>
<a id="a84307d724b3e124e1d4cced163d3074d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84307d724b3e124e1d4cced163d3074d">&sect;&nbsp;</a></span>QSPI_GetStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t QSPI_GetStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="qspi_8h.xhtml#ae37cb359fc4a6c363cb7f6f38986a2b1">QspiStatus_t</a>&#160;</td>
          <td class="paramname"><em>rStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current status register of the given QSPI peripheral. </p>
<dl class="section note"><dt>Note</dt><dd>This resets the internal value of the status register, so further read may yield different values. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">rStatus</td><td>Compare status with given status bit </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>QSPI status register. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a84307d724b3e124e1d4cced163d3074d_icgraph.svg" width="563" height="478"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa8e703416d8faf7e6ca68d18c1da6115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8e703416d8faf7e6ca68d18c1da6115">&sect;&nbsp;</a></span>QSPI_MultiReadSPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_MultiReadSPI </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *const&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>NumOfBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads multiple data received by a SPI peripheral. </p>
<p>This method must be called after a successful SPI_Write call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspid</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to read buffer </td></tr>
    <tr><td class="paramname">NumOfBytes</td><td>Num of bytes to read</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> status </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_aa8e703416d8faf7e6ca68d18c1da6115_cgraph.svg" width="482" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_aa8e703416d8faf7e6ca68d18c1da6115_icgraph.svg" width="386" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ade81d33cb14e6aa8701d4824de0656a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade81d33cb14e6aa8701d4824de0656a2">&sect;&nbsp;</a></span>QSPI_MultiWriteSPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_MultiWriteSPI </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t const *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>NumOfBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends multiple data through a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspid</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to a Tx buffer </td></tr>
    <tr><td class="paramname">NumOfBytes</td><td>Num of data to send. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_ade81d33cb14e6aa8701d4824de0656a2_cgraph.svg" width="482" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_ade81d33cb14e6aa8701d4824de0656a2_icgraph.svg" width="386" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8b59ff979a47404bc86c60118ec3d30d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b59ff979a47404bc86c60118ec3d30d">&sect;&nbsp;</a></span>QSPI_ReadCommand()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_ReadCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t const&#160;</td>
          <td class="paramname"><em>KeepCfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send instruction over QSPI to read data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">KeepCfg</td><td>To keep Instruction from value or resets to zero</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if At least one instruction end has been detected since the last read of QSPI_SR.; otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a8b59ff979a47404bc86c60118ec3d30d_cgraph.svg" width="362" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a8b59ff979a47404bc86c60118ec3d30d_icgraph.svg" width="403" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a61a250e1df8fc3d9823aa8d0af159cff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61a250e1df8fc3d9823aa8d0af159cff">&sect;&nbsp;</a></span>QSPI_ReadWriteMem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_ReadWriteMem </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="qspi_8h.xhtml#adf94e21942d0dff736d1e65a129be37f">Access_t</a> const&#160;</td>
          <td class="paramname"><em>ReadWrite</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes or reads the QSPI memory (0x80000000) to transmit or receive data from Flash memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">ReadWrite</td><td>Flag to indicate read/write QSPI memory access</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if At least one instruction end has been detected since the last read of QSPI_SR.; otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a61a250e1df8fc3d9823aa8d0af159cff_cgraph.svg" width="346" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a61a250e1df8fc3d9823aa8d0af159cff_icgraph.svg" width="395" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa6b5d392d35016bb59ad1b3b9cdb72d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6b5d392d35016bb59ad1b3b9cdb72d9">&sect;&nbsp;</a></span>QSPI_SendCommand()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_SendCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t const&#160;</td>
          <td class="paramname"><em>KeepCfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send an instruction over QSPI (oly a flash command no data) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">KeepCfg</td><td>To keep Instruction fram value or restes to zero</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if At least one instruction end has been detected since the last read of QSPI_SR.; otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_aa6b5d392d35016bb59ad1b3b9cdb72d9_cgraph.svg" width="362" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_aa6b5d392d35016bb59ad1b3b9cdb72d9_icgraph.svg" width="404" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6d28b23fbb2385d5e3a8479b02c10bb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d28b23fbb2385d5e3a8479b02c10bb8">&sect;&nbsp;</a></span>QSPI_SendCommandWithData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_SendCommandWithData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t const&#160;</td>
          <td class="paramname"><em>KeepCfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send instruction over QSPI with data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to an <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">KeepCfg</td><td>To keep Instruction fram value or restes to zero</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if At least one instruction end has been detected since the last read of QSPI_SR.; otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a6d28b23fbb2385d5e3a8479b02c10bb8_cgraph.svg" width="422" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a6d28b23fbb2385d5e3a8479b02c10bb8_icgraph.svg" width="463" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaa891e040401e77f8f68068c6751a558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa891e040401e77f8f68068c6751a558">&sect;&nbsp;</a></span>QSPI_SingleReadSPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_SingleReadSPI </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *const&#160;</td>
          <td class="paramname"><em>pData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads the data received by a SPI peripheral. </p>
<p>This method must be called after a successful SPI_Write call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspid</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Buffer to put read value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> status </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_aaa891e040401e77f8f68068c6751a558_cgraph.svg" width="491" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2e91dc0a09fbf99a27f36836807b1a60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e91dc0a09fbf99a27f36836807b1a60">&sect;&nbsp;</a></span>QSPI_SingleWriteSPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="qspi_8h.xhtml#a987c9d7d95a4e2fc7a2036950194dc73">QspidStatus_t</a> QSPI_SingleWriteSPI </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspid__t.xhtml">Qspid_t</a> *&#160;</td>
          <td class="paramname"><em>pQspid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t const *&#160;</td>
          <td class="paramname"><em>pData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a single data through a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspid</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to Tx data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> status </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a2e91dc0a09fbf99a27f36836807b1a60_cgraph.svg" width="491" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_a2e91dc0a09fbf99a27f36836807b1a60_icgraph.svg" width="395" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad41ddc810992fae62c42f245a989381a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad41ddc810992fae62c42f245a989381a">&sect;&nbsp;</a></span>QSPI_SwReset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void QSPI_SwReset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_qspi.xhtml">Qspi</a> *&#160;</td>
          <td class="paramname"><em>pQspi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets a QSPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pQspi</td><td>Pointer to a <a class="el" href="struct_qspi.xhtml" title="Qspi hardware registers. ">Qspi</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="qspi_8h_ad41ddc810992fae62c42f245a989381a_icgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
