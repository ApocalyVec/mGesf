<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/source/spi.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_3d0e1f04b892c8e303e2a36887d7dc95.xhtml">source</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">spi.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of Serial Peripheral Interface (SPI) controller.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for spi.c:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c__incl.svg" width="206" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ad983db901253eb7cc58874a4d495a106"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#ad983db901253eb7cc58874a4d495a106">SPI_Enable</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:ad983db901253eb7cc58874a4d495a106"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables a SPI peripheral.  <a href="#ad983db901253eb7cc58874a4d495a106">More...</a><br /></td></tr>
<tr class="separator:ad983db901253eb7cc58874a4d495a106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8212f6819071a9ca247a0236b109e98"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#aa8212f6819071a9ca247a0236b109e98">SPI_Disable</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:aa8212f6819071a9ca247a0236b109e98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables a SPI peripheral.  <a href="#aa8212f6819071a9ca247a0236b109e98">More...</a><br /></td></tr>
<tr class="separator:aa8212f6819071a9ca247a0236b109e98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b21dac92bc25ba80264fe26d0bd0d7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a8b21dac92bc25ba80264fe26d0bd0d7e">SPI_EnableIt</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwSources)</td></tr>
<tr class="memdesc:a8b21dac92bc25ba80264fe26d0bd0d7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables one or more interrupt sources of a SPI peripheral.  <a href="#a8b21dac92bc25ba80264fe26d0bd0d7e">More...</a><br /></td></tr>
<tr class="separator:a8b21dac92bc25ba80264fe26d0bd0d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe62fe37b2185b40c33f3659618ef010"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#afe62fe37b2185b40c33f3659618ef010">SPI_DisableIt</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwSources)</td></tr>
<tr class="memdesc:afe62fe37b2185b40c33f3659618ef010"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables one or more interrupt sources of a SPI peripheral.  <a href="#afe62fe37b2185b40c33f3659618ef010">More...</a><br /></td></tr>
<tr class="separator:afe62fe37b2185b40c33f3659618ef010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ebb1d25f8889b00a9dd846059456175"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a0ebb1d25f8889b00a9dd846059456175">SPI_Configure</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwId, uint32_t dwConfiguration)</td></tr>
<tr class="memdesc:a0ebb1d25f8889b00a9dd846059456175"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a SPI peripheral as specified.  <a href="#a0ebb1d25f8889b00a9dd846059456175">More...</a><br /></td></tr>
<tr class="separator:a0ebb1d25f8889b00a9dd846059456175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43013aa88577daf7494eec9bfc4359aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a43013aa88577daf7494eec9bfc4359aa">SPI_ChipSelect</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint8_t cS)</td></tr>
<tr class="memdesc:a43013aa88577daf7494eec9bfc4359aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures SPI chip select.  <a href="#a43013aa88577daf7494eec9bfc4359aa">More...</a><br /></td></tr>
<tr class="separator:a43013aa88577daf7494eec9bfc4359aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfe4aa422995a3177b95d49e7c090e18"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#abfe4aa422995a3177b95d49e7c090e18">SPI_SetMode</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwConfiguration)</td></tr>
<tr class="memdesc:abfe4aa422995a3177b95d49e7c090e18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures SPI Mode Register.  <a href="#abfe4aa422995a3177b95d49e7c090e18">More...</a><br /></td></tr>
<tr class="separator:abfe4aa422995a3177b95d49e7c090e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afec585b57cc1c95453808449f5d74fcd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#afec585b57cc1c95453808449f5d74fcd">SPI_ReleaseCS</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:afec585b57cc1c95453808449f5d74fcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures SPI to release last used CS line.  <a href="#afec585b57cc1c95453808449f5d74fcd">More...</a><br /></td></tr>
<tr class="separator:afec585b57cc1c95453808449f5d74fcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f06d5a5d0d4475c4a2a46657235ac92"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a3f06d5a5d0d4475c4a2a46657235ac92">SPI_ConfigureNPCS</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwNpcs, uint32_t dwConfiguration)</td></tr>
<tr class="memdesc:a3f06d5a5d0d4475c4a2a46657235ac92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a chip select of a SPI peripheral.  <a href="#a3f06d5a5d0d4475c4a2a46657235ac92">More...</a><br /></td></tr>
<tr class="separator:a3f06d5a5d0d4475c4a2a46657235ac92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac7454e325a4827d0f43cb8102c9462"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#aaac7454e325a4827d0f43cb8102c9462">SPI_ConfigureCSMode</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwNpcs, uint32_t bReleaseOnLast)</td></tr>
<tr class="memdesc:aaac7454e325a4827d0f43cb8102c9462"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a chip select active mode of a SPI peripheral.  <a href="#aaac7454e325a4827d0f43cb8102c9462">More...</a><br /></td></tr>
<tr class="separator:aaac7454e325a4827d0f43cb8102c9462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd28805d667314cb874428c10349731"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a8dd28805d667314cb874428c10349731">SPI_GetStatus</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:a8dd28805d667314cb874428c10349731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current status register of the given SPI peripheral.  <a href="#a8dd28805d667314cb874428c10349731">More...</a><br /></td></tr>
<tr class="separator:a8dd28805d667314cb874428c10349731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e757f48d1ee59e6027ac4c4319556ca"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a3e757f48d1ee59e6027ac4c4319556ca">SPI_Read</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:a3e757f48d1ee59e6027ac4c4319556ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads and returns the last word of data received by a SPI peripheral.  <a href="#a3e757f48d1ee59e6027ac4c4319556ca">More...</a><br /></td></tr>
<tr class="separator:a3e757f48d1ee59e6027ac4c4319556ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a564ab3c6c710a126ae9fc731e46c1294"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a564ab3c6c710a126ae9fc731e46c1294">SPI_Write</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwNpcs, uint16_t wData)</td></tr>
<tr class="memdesc:a564ab3c6c710a126ae9fc731e46c1294"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a SPI peripheral.  <a href="#a564ab3c6c710a126ae9fc731e46c1294">More...</a><br /></td></tr>
<tr class="separator:a564ab3c6c710a126ae9fc731e46c1294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1fbc924f96427094bdc17f75f8996e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a9f1fbc924f96427094bdc17f75f8996e">SPI_WriteLast</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi, uint32_t dwNpcs, uint16_t wData)</td></tr>
<tr class="memdesc:a9f1fbc924f96427094bdc17f75f8996e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends last data through a SPI peripheral.  <a href="#a9f1fbc924f96427094bdc17f75f8996e">More...</a><br /></td></tr>
<tr class="separator:a9f1fbc924f96427094bdc17f75f8996e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aefc65f3be0c185005d995a238990ba"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi_8c.xhtml#a3aefc65f3be0c185005d995a238990ba">SPI_IsFinished</a> (<a class="el" href="struct_spi.xhtml">Spi</a> *spi)</td></tr>
<tr class="memdesc:a3aefc65f3be0c185005d995a238990ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if SPI transfer finish.  <a href="#a3aefc65f3be0c185005d995a238990ba">More...</a><br /></td></tr>
<tr class="separator:a3aefc65f3be0c185005d995a238990ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implementation of Serial Peripheral Interface (SPI) controller. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="a43013aa88577daf7494eec9bfc4359aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43013aa88577daf7494eec9bfc4359aa">&sect;&nbsp;</a></span>SPI_ChipSelect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_ChipSelect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cS</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures SPI chip select. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">cS</td><td>Chip select of NPSCx. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_a43013aa88577daf7494eec9bfc4359aa_icgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0ebb1d25f8889b00a9dd846059456175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ebb1d25f8889b00a9dd846059456175">&sect;&nbsp;</a></span>SPI_Configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_Configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwConfiguration</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a SPI peripheral as specified. </p>
<p>The configuration can be computed using several macros (see <a class="el" href="spi_8h.xhtml#spi_configuration_macros">SPI Configuration Macros</a>).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">id</td><td>Peripheral ID of the SPI. </td></tr>
    <tr><td class="paramname">configuration</td><td>Value of the SPI configuration register. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_a0ebb1d25f8889b00a9dd846059456175_cgraph.svg" width="334" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_a0ebb1d25f8889b00a9dd846059456175_icgraph.svg" width="290" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaac7454e325a4827d0f43cb8102c9462"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaac7454e325a4827d0f43cb8102c9462">&sect;&nbsp;</a></span>SPI_ConfigureCSMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_ConfigureCSMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwNpcs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bReleaseOnLast</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a chip select active mode of a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">dwNpcs</td><td>Chip select to configure (0, 1, 2 or 3). </td></tr>
    <tr><td class="paramname">bReleaseOnLast</td><td>CS controlled by last transfer. <a class="el" href="spi_8c.xhtml#afec585b57cc1c95453808449f5d74fcd" title="Configures SPI to release last used CS line. ">SPI_ReleaseCS()</a> is used to release CS. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3f06d5a5d0d4475c4a2a46657235ac92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f06d5a5d0d4475c4a2a46657235ac92">&sect;&nbsp;</a></span>SPI_ConfigureNPCS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_ConfigureNPCS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwNpcs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwConfiguration</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a chip select of a SPI peripheral. </p>
<p>The chip select configuration is computed using several macros (see <a class="el" href="spi_8h.xhtml#spi_configuration_macros">SPI Configuration Macros</a>).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">npcs</td><td>Chip select to configure (0, 1, 2 or 3). </td></tr>
    <tr><td class="paramname">configuration</td><td>Desired chip select configuration. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_a3f06d5a5d0d4475c4a2a46657235ac92_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa8212f6819071a9ca247a0236b109e98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8212f6819071a9ca247a0236b109e98">&sect;&nbsp;</a></span>SPI_Disable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_Disable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_aa8212f6819071a9ca247a0236b109e98_icgraph.svg" width="254" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afe62fe37b2185b40c33f3659618ef010"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe62fe37b2185b40c33f3659618ef010">&sect;&nbsp;</a></span>SPI_DisableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_DisableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables one or more interrupt sources of a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad983db901253eb7cc58874a4d495a106"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad983db901253eb7cc58874a4d495a106">&sect;&nbsp;</a></span>SPI_Enable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_Enable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_ad983db901253eb7cc58874a4d495a106_icgraph.svg" width="310" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8b21dac92bc25ba80264fe26d0bd0d7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b21dac92bc25ba80264fe26d0bd0d7e">&sect;&nbsp;</a></span>SPI_EnableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_EnableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables one or more interrupt sources of a SPI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8dd28805d667314cb874428c10349731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dd28805d667314cb874428c10349731">&sect;&nbsp;</a></span>SPI_GetStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPI_GetStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current status register of the given SPI peripheral. </p>
<dl class="section note"><dt>Note</dt><dd>This resets the internal value of the status register, so further read may yield different values. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to a <a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>SPI status register. </dd></dl>

</div>
</div>
<a id="a3aefc65f3be0c185005d995a238990ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aefc65f3be0c185005d995a238990ba">&sect;&nbsp;</a></span>SPI_IsFinished()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPI_IsFinished </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if SPI transfer finish. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns 1 if there is no pending write operation on the SPI; otherwise returns 0. </dd></dl>

</div>
</div>
<a id="a3e757f48d1ee59e6027ac4c4319556ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e757f48d1ee59e6027ac4c4319556ca">&sect;&nbsp;</a></span>SPI_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPI_Read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads and returns the last word of data received by a SPI peripheral. </p>
<p>This method must be called after a successful SPI_Write call.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an <a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>read data. </dd></dl>

</div>
</div>
<a id="afec585b57cc1c95453808449f5d74fcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afec585b57cc1c95453808449f5d74fcd">&sect;&nbsp;</a></span>SPI_ReleaseCS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_ReleaseCS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures SPI to release last used CS line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi_8c_afec585b57cc1c95453808449f5d74fcd_icgraph.svg" width="274" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abfe4aa422995a3177b95d49e7c090e18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfe4aa422995a3177b95d49e7c090e18">&sect;&nbsp;</a></span>SPI_SetMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_SetMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwConfiguration</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures SPI Mode Register. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">configuration</td><td>Value of the SPI mode register. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a564ab3c6c710a126ae9fc731e46c1294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a564ab3c6c710a126ae9fc731e46c1294">&sect;&nbsp;</a></span>SPI_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwNpcs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends data through a SPI peripheral. </p>
<p>If the SPI is configured to use a fixed peripheral select, the npcs value is meaningless. Otherwise, it identifies the component which shall be addressed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">npcs</td><td>Chip select of the component to address (0, 1, 2 or 3). </td></tr>
    <tr><td class="paramname">data</td><td>Word of data to send. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9f1fbc924f96427094bdc17f75f8996e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1fbc924f96427094bdc17f75f8996e">&sect;&nbsp;</a></span>SPI_WriteLast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPI_WriteLast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>spi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwNpcs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends last data through a SPI peripheral. </p>
<p>If the SPI is configured to use a fixed peripheral select, the npcs value is meaningless. Otherwise, it identifies the component which shall be addressed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">spi</td><td>Pointer to an SPI instance. </td></tr>
    <tr><td class="paramname">npcs</td><td>Chip select of the component to address (0, 1, 2 or 3). </td></tr>
    <tr><td class="paramname">data</td><td>Word of data to send. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
