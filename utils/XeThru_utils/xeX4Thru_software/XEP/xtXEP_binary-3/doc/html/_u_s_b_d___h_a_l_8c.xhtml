<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libusb/common/core/USBD_HAL.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_608da0ca01c56cd314839049683ac68c.xhtml">libusb</a></li><li class="navelem"><a class="el" href="dir_76e457bf7c3f660e1321e31261c3eba1.xhtml">common</a></li><li class="navelem"><a class="el" href="dir_880741e3be899b9b55bb42e821867013.xhtml">core</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">USBD_HAL.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of USB device functions on a UDP controller.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_u_s_b_d___h_a_l_8h_source.xhtml">USBD_HAL.h</a>&quot;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
<code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;string.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for USBD_HAL.c:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="_u_s_b_d___h_a_l_8c__incl.svg" width="450" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_transfer_header.xhtml">TransferHeader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes header for UDP endpoint transfer.  <a href="struct_transfer_header.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_transfer.xhtml">Transfer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes a transfer on a UDP endpoint.  <a href="struct_transfer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mbl_transfer.xhtml">MblTransfer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes Multi Buffer List transfer on a UDP endpoint.  <a href="struct_mbl_transfer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_endpoint.xhtml">Endpoint</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes the state of an endpoint of the UDP controller.  <a href="struct_endpoint.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_udphs_dma_descriptor.xhtml">UdphsDmaDescriptor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">DMA Descriptor.  <a href="struct_udphs_dma_descriptor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga137c9e7c0bc9e12f455df0a6e41c0287"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga137c9e7c0bc9e12f455df0a6e41c0287">DMA</a></td></tr>
<tr class="separator:ga137c9e7c0bc9e12f455df0a6e41c0287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a3966a3e34cf6f45d5c49158a47370b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1a3966a3e34cf6f45d5c49158a47370b">SHIFT_INTERUPT</a>&#160;&#160;&#160;12</td></tr>
<tr class="memdesc:ga1a3966a3e34cf6f45d5c49158a47370b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bits that should be shifted to access interrupt bits.  <a href="group__usbd__hal.xhtml#ga1a3966a3e34cf6f45d5c49158a47370b">More...</a><br /></td></tr>
<tr class="separator:ga1a3966a3e34cf6f45d5c49158a47370b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fab52c7032d2314d73ced9188dce52f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1fab52c7032d2314d73ced9188dce52f">UDPHS_ENDPOINT_DISABLED</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:ga1fab52c7032d2314d73ced9188dce52f"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is disabled.  <a href="group__usbd__hal.xhtml#ga1fab52c7032d2314d73ced9188dce52f">More...</a><br /></td></tr>
<tr class="separator:ga1fab52c7032d2314d73ced9188dce52f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54f28f8061173dba5b54970d732f3016"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga54f28f8061173dba5b54970d732f3016">UDPHS_ENDPOINT_HALTED</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:ga54f28f8061173dba5b54970d732f3016"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is halted (i.e.  <a href="group__usbd__hal.xhtml#ga54f28f8061173dba5b54970d732f3016">More...</a><br /></td></tr>
<tr class="separator:ga54f28f8061173dba5b54970d732f3016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4042f4c27fb1a59fa4e837a179f9cec1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4042f4c27fb1a59fa4e837a179f9cec1">UDPHS_ENDPOINT_IDLE</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:ga4042f4c27fb1a59fa4e837a179f9cec1"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is idle (i.e.  <a href="group__usbd__hal.xhtml#ga4042f4c27fb1a59fa4e837a179f9cec1">More...</a><br /></td></tr>
<tr class="separator:ga4042f4c27fb1a59fa4e837a179f9cec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga761fbc08534b1b3308ddd4897e1dd4bd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga761fbc08534b1b3308ddd4897e1dd4bd">UDPHS_ENDPOINT_SENDING</a>&#160;&#160;&#160;3</td></tr>
<tr class="memdesc:ga761fbc08534b1b3308ddd4897e1dd4bd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is sending data.  <a href="group__usbd__hal.xhtml#ga761fbc08534b1b3308ddd4897e1dd4bd">More...</a><br /></td></tr>
<tr class="separator:ga761fbc08534b1b3308ddd4897e1dd4bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga57bdba8e2cf76761b4d9a1aebff63a54"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga57bdba8e2cf76761b4d9a1aebff63a54">UDPHS_ENDPOINT_RECEIVING</a>&#160;&#160;&#160;4</td></tr>
<tr class="memdesc:ga57bdba8e2cf76761b4d9a1aebff63a54"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is receiving data.  <a href="group__usbd__hal.xhtml#ga57bdba8e2cf76761b4d9a1aebff63a54">More...</a><br /></td></tr>
<tr class="separator:ga57bdba8e2cf76761b4d9a1aebff63a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84adc62db8c2e90f323b2b0a802df0a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga84adc62db8c2e90f323b2b0a802df0a4">UDPHS_ENDPOINT_SENDINGM</a>&#160;&#160;&#160;5</td></tr>
<tr class="memdesc:ga84adc62db8c2e90f323b2b0a802df0a4"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is sending MBL.  <a href="group__usbd__hal.xhtml#ga84adc62db8c2e90f323b2b0a802df0a4">More...</a><br /></td></tr>
<tr class="separator:ga84adc62db8c2e90f323b2b0a802df0a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga318439ae43fc0f1f83cc4c61f22b50b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga318439ae43fc0f1f83cc4c61f22b50b3">UDPHS_ENDPOINT_RECEIVINGM</a>&#160;&#160;&#160;6</td></tr>
<tr class="memdesc:ga318439ae43fc0f1f83cc4c61f22b50b3"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> states: <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is receiving MBL.  <a href="group__usbd__hal.xhtml#ga318439ae43fc0f1f83cc4c61f22b50b3">More...</a><br /></td></tr>
<tr class="separator:ga318439ae43fc0f1f83cc4c61f22b50b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58081bc990ddb9737252e5794b703850"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga58081bc990ddb9737252e5794b703850">MBL_NbBuffer</a>(i,  o,  size)&#160;&#160;&#160;(((i)&gt;(o))?((i)-(o)):((i)+(size)-(o)))</td></tr>
<tr class="memdesc:ga58081bc990ddb9737252e5794b703850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Number of buffer in Multi-Buffer-List.  <a href="group__usbd__hal.xhtml#ga58081bc990ddb9737252e5794b703850">More...</a><br /></td></tr>
<tr class="separator:ga58081bc990ddb9737252e5794b703850"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefb1ead0b778081953b1a3dabca312c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaefb1ead0b778081953b1a3dabca312c4">MBL_FULL</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:gaefb1ead0b778081953b1a3dabca312c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer list is full.  <a href="group__usbd__hal.xhtml#gaefb1ead0b778081953b1a3dabca312c4">More...</a><br /></td></tr>
<tr class="separator:gaefb1ead0b778081953b1a3dabca312c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fea9931b5288124d11803122002ac70"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga7fea9931b5288124d11803122002ac70">MBL_NULL</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:ga7fea9931b5288124d11803122002ac70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer list is null.  <a href="group__usbd__hal.xhtml#ga7fea9931b5288124d11803122002ac70">More...</a><br /></td></tr>
<tr class="separator:ga7fea9931b5288124d11803122002ac70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga8acadaacd74f48254d2f05a2f7ee8803"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga8acadaacd74f48254d2f05a2f7ee8803">COMPILER_ALIGNED</a> (16)</td></tr>
<tr class="memdesc:ga8acadaacd74f48254d2f05a2f7ee8803"><td class="mdescLeft">&#160;</td><td class="mdescRight">DMA link list.  <a href="group__usbd__hal.xhtml#ga8acadaacd74f48254d2f05a2f7ee8803">More...</a><br /></td></tr>
<tr class="separator:ga8acadaacd74f48254d2f05a2f7ee8803"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga03f1cd55f5d5ed368dec0aa6ad6ccb3f"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga03f1cd55f5d5ed368dec0aa6ad6ccb3f">UDPHS_MblUpdate</a> (<a class="el" href="struct_mbl_transfer.xhtml">MblTransfer</a> *pTransfer, <a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a> *pBi, uint16_t size, uint8_t forceEnd)</td></tr>
<tr class="memdesc:ga03f1cd55f5d5ed368dec0aa6ad6ccb3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update multi-buffer-transfer descriptors.  <a href="group__usbd__hal.xhtml#ga03f1cd55f5d5ed368dec0aa6ad6ccb3f">More...</a><br /></td></tr>
<tr class="separator:ga03f1cd55f5d5ed368dec0aa6ad6ccb3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5295f6d8b5a54cbe6b365e4ae1bb9633"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga5295f6d8b5a54cbe6b365e4ae1bb9633">UDPHS_MblWriteFifo</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga5295f6d8b5a54cbe6b365e4ae1bb9633"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from the current transfer buffer to the endpoint FIFO.  <a href="group__usbd__hal.xhtml#ga5295f6d8b5a54cbe6b365e4ae1bb9633">More...</a><br /></td></tr>
<tr class="separator:ga5295f6d8b5a54cbe6b365e4ae1bb9633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga118d9d128a56e31f230bee94ac30f91e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga118d9d128a56e31f230bee94ac30f91e">UDPHS_WritePayload</a> (uint8_t bEndpoint, int32_t size)</td></tr>
<tr class="memdesc:ga118d9d128a56e31f230bee94ac30f91e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from the current transfer buffer to the endpoint FIFO.  <a href="group__usbd__hal.xhtml#ga118d9d128a56e31f230bee94ac30f91e">More...</a><br /></td></tr>
<tr class="separator:ga118d9d128a56e31f230bee94ac30f91e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga562412b12d966ee5ea983881184d51f6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga562412b12d966ee5ea983881184d51f6">UDPHS_ReadPayload</a> (uint8_t bEndpoint, int32_t wPacketSize)</td></tr>
<tr class="memdesc:ga562412b12d966ee5ea983881184d51f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfers a data payload from an endpoint FIFO to the current transfer buffer.  <a href="group__usbd__hal.xhtml#ga562412b12d966ee5ea983881184d51f6">More...</a><br /></td></tr>
<tr class="separator:ga562412b12d966ee5ea983881184d51f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51f483eefa9753c15806dfc1cfeb214a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga51f483eefa9753c15806dfc1cfeb214a">UDPHS_ReadRequest</a> (<a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *pRequest)</td></tr>
<tr class="memdesc:ga51f483eefa9753c15806dfc1cfeb214a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Received SETUP packet from endpoint 0 FIFO.  <a href="group__usbd__hal.xhtml#ga51f483eefa9753c15806dfc1cfeb214a">More...</a><br /></td></tr>
<tr class="separator:ga51f483eefa9753c15806dfc1cfeb214a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4daf62d090af26b8e55aaf9549926622"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4daf62d090af26b8e55aaf9549926622">UDPHS_EndpointHandler</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga4daf62d090af26b8e55aaf9549926622"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> interrupt handler.  <a href="group__usbd__hal.xhtml#ga4daf62d090af26b8e55aaf9549926622">More...</a><br /></td></tr>
<tr class="separator:ga4daf62d090af26b8e55aaf9549926622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3050097643684759b64beda54283f1e4"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga3050097643684759b64beda54283f1e4">UDPHS_DmaSingle</a> (uint8_t bEndpoint, <a class="el" href="struct_transfer.xhtml">Transfer</a> *pXfr, uint32_t dwCfg)</td></tr>
<tr class="memdesc:ga3050097643684759b64beda54283f1e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">DMA Single transfer.  <a href="group__usbd__hal.xhtml#ga3050097643684759b64beda54283f1e4">More...</a><br /></td></tr>
<tr class="separator:ga3050097643684759b64beda54283f1e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e6f054068ed99c861c50f2eeeb30216"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga5e6f054068ed99c861c50f2eeeb30216">UDPHS_DmaHandler</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga5e6f054068ed99c861c50f2eeeb30216"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> DMA interrupt handler.  <a href="group__usbd__hal.xhtml#ga5e6f054068ed99c861c50f2eeeb30216">More...</a><br /></td></tr>
<tr class="separator:ga5e6f054068ed99c861c50f2eeeb30216"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81935b1ed57f1d4e636df4565de436a5"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga81935b1ed57f1d4e636df4565de436a5">UDPHS_Write</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:ga81935b1ed57f1d4e636df4565de436a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#ga81935b1ed57f1d4e636df4565de436a5">More...</a><br /></td></tr>
<tr class="separator:ga81935b1ed57f1d4e636df4565de436a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada855d5452052e08f36853a81e3b016d"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gada855d5452052e08f36853a81e3b016d">UDPHS_AddWr</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gada855d5452052e08f36853a81e3b016d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#gada855d5452052e08f36853a81e3b016d">More...</a><br /></td></tr>
<tr class="separator:gada855d5452052e08f36853a81e3b016d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf1deb2219e27bcf29d2598d4aa04c1d"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gadf1deb2219e27bcf29d2598d4aa04c1d">UDPHS_Read</a> (uint8_t bEndpoint, void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gadf1deb2219e27bcf29d2598d4aa04c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt.  <a href="group__usbd__hal.xhtml#gadf1deb2219e27bcf29d2598d4aa04c1d">More...</a><br /></td></tr>
<tr class="separator:gadf1deb2219e27bcf29d2598d4aa04c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcd12a00544aac7645deb694ec611e7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gafcd12a00544aac7645deb694ec611e7a">USBHS_Handler</a> (void)</td></tr>
<tr class="memdesc:gafcd12a00544aac7645deb694ec611e7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">USBD (UDP) interrupt handler Manages device resume, suspend, end of bus reset.  <a href="group__usbd__hal.xhtml#gafcd12a00544aac7645deb694ec611e7a">More...</a><br /></td></tr>
<tr class="separator:gafcd12a00544aac7645deb694ec611e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9aba8ccdad2272b61db48b43466043b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaa9aba8ccdad2272b61db48b43466043b">USBD_HAL_ResetEPs</a> (uint32_t bmEPs, uint8_t bStatus, uint8_t bKeepCfg)</td></tr>
<tr class="memdesc:gaa9aba8ccdad2272b61db48b43466043b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset endpoints and disable them.  <a href="group__usbd__hal.xhtml#gaa9aba8ccdad2272b61db48b43466043b">More...</a><br /></td></tr>
<tr class="separator:gaa9aba8ccdad2272b61db48b43466043b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac15d66e72d7daa9d05116370a36aa91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaac15d66e72d7daa9d05116370a36aa91">USBD_HAL_CancelIo</a> (uint32_t bmEPs)</td></tr>
<tr class="memdesc:gaac15d66e72d7daa9d05116370a36aa91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancel pending READ/WRITE.  <a href="group__usbd__hal.xhtml#gaac15d66e72d7daa9d05116370a36aa91">More...</a><br /></td></tr>
<tr class="separator:gaac15d66e72d7daa9d05116370a36aa91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaf17d4fe67932fa6a5dcc05f4c6d611ff">USBD_HAL_ConfigureEP</a> (const <a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *pDescriptor)</td></tr>
<tr class="memdesc:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures an endpoint according to its endpoint Descriptor.  <a href="group__usbd__hal.xhtml#gaf17d4fe67932fa6a5dcc05f4c6d611ff">More...</a><br /></td></tr>
<tr class="separator:gaf17d4fe67932fa6a5dcc05f4c6d611ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gafcb94bdd4c0ea327621a187814ab4f9f">USBD_HAL_SetTransferCallback</a> (uint8_t bEP, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pCbData)</td></tr>
<tr class="memdesc:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set callback for a USB endpoint for transfer (read/write).  <a href="group__usbd__hal.xhtml#gafcb94bdd4c0ea327621a187814ab4f9f">More...</a><br /></td></tr>
<tr class="separator:gafcb94bdd4c0ea327621a187814ab4f9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62263446ee46cfc2ca48856e446f1a79"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga62263446ee46cfc2ca48856e446f1a79">USBD_HAL_SetupMblTransfer</a> (uint8_t bEndpoint, <a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a> *pMbList, uint16_t mblSize, uint16_t startOffset)</td></tr>
<tr class="memdesc:ga62263446ee46cfc2ca48856e446f1a79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure an endpoint to use multi-buffer-list transfer mode.  <a href="group__usbd__hal.xhtml#ga62263446ee46cfc2ca48856e446f1a79">More...</a><br /></td></tr>
<tr class="separator:ga62263446ee46cfc2ca48856e446f1a79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8293616e390cb94e93529673367acb4"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gab8293616e390cb94e93529673367acb4">USBD_HAL_Write</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:gab8293616e390cb94e93529673367acb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="group__usbd__hal.xhtml#gab8293616e390cb94e93529673367acb4">More...</a><br /></td></tr>
<tr class="separator:gab8293616e390cb94e93529673367acb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ebf6dcf09581aa66fbfc89862516e60"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga8ebf6dcf09581aa66fbfc89862516e60">USBD_HAL_WrWithHdr</a> (uint8_t bEndpoint, const void *pHdr, uint8_t bHdrLen, const void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:ga8ebf6dcf09581aa66fbfc89862516e60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special write function.  <a href="group__usbd__hal.xhtml#ga8ebf6dcf09581aa66fbfc89862516e60">More...</a><br /></td></tr>
<tr class="separator:ga8ebf6dcf09581aa66fbfc89862516e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1c6c76201a5c49c7e40c60c8dbdeae68">USBD_HAL_Read</a> (uint8_t bEndpoint, void *pData, uint32_t dLength)</td></tr>
<tr class="memdesc:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt.  <a href="group__usbd__hal.xhtml#ga1c6c76201a5c49c7e40c60c8dbdeae68">More...</a><br /></td></tr>
<tr class="separator:ga1c6c76201a5c49c7e40c60c8dbdeae68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga214508a8f0f824cdcf40bca9ddac10f6">USBD_HAL_Connect</a> (void)</td></tr>
<tr class="memdesc:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Pull-up, connect.  <a href="group__usbd__hal.xhtml#ga214508a8f0f824cdcf40bca9ddac10f6">More...</a><br /></td></tr>
<tr class="separator:ga214508a8f0f824cdcf40bca9ddac10f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaded744daaee15b55f41fb2175f343b69"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gaded744daaee15b55f41fb2175f343b69">USBD_HAL_Disconnect</a> (void)</td></tr>
<tr class="memdesc:gaded744daaee15b55f41fb2175f343b69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable Pull-up, disconnect.  <a href="group__usbd__hal.xhtml#gaded744daaee15b55f41fb2175f343b69">More...</a><br /></td></tr>
<tr class="separator:gaded744daaee15b55f41fb2175f343b69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24f5a47f6815de571752ba22c98073f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga24f5a47f6815de571752ba22c98073f5">USBD_HAL_RemoteWakeUp</a> (void)</td></tr>
<tr class="memdesc:ga24f5a47f6815de571752ba22c98073f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a remote wake-up procedure.  <a href="group__usbd__hal.xhtml#ga24f5a47f6815de571752ba22c98073f5">More...</a><br /></td></tr>
<tr class="separator:ga24f5a47f6815de571752ba22c98073f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8a317bd985d2ab3d3b82d093015379e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gac8a317bd985d2ab3d3b82d093015379e">USBD_HAL_SetAddress</a> (uint8_t address)</td></tr>
<tr class="memdesc:gac8a317bd985d2ab3d3b82d093015379e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the device address to the given value.  <a href="group__usbd__hal.xhtml#gac8a317bd985d2ab3d3b82d093015379e">More...</a><br /></td></tr>
<tr class="separator:gac8a317bd985d2ab3d3b82d093015379e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05c8714f0e31ed119a4ab594d687691a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga05c8714f0e31ed119a4ab594d687691a">USBD_HAL_SetConfiguration</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga05c8714f0e31ed119a4ab594d687691a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current device configuration.  <a href="group__usbd__hal.xhtml#ga05c8714f0e31ed119a4ab594d687691a">More...</a><br /></td></tr>
<tr class="separator:ga05c8714f0e31ed119a4ab594d687691a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga3699059b9b9b52b7e55af6d070a7fe61">USBD_HAL_Init</a> (void)</td></tr>
<tr class="memdesc:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB HW Access driver.  <a href="group__usbd__hal.xhtml#ga3699059b9b9b52b7e55af6d070a7fe61">More...</a><br /></td></tr>
<tr class="separator:ga3699059b9b9b52b7e55af6d070a7fe61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad95d239687843031e2af3aac51ba33ad"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gad95d239687843031e2af3aac51ba33ad">USBD_HAL_Stall</a> (uint8_t bEP)</td></tr>
<tr class="memdesc:gad95d239687843031e2af3aac51ba33ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the given endpoint to acknowledge the next packet it receives with a STALL handshake except setup request.  <a href="group__usbd__hal.xhtml#gad95d239687843031e2af3aac51ba33ad">More...</a><br /></td></tr>
<tr class="separator:gad95d239687843031e2af3aac51ba33ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga1a1fd7ed1af2be8e202879458a6cfda7">USBD_HAL_Halt</a> (uint8_t bEndpoint, uint8_t ctl)</td></tr>
<tr class="memdesc:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets/Clear/Get the HALT state on the endpoint.  <a href="group__usbd__hal.xhtml#ga1a1fd7ed1af2be8e202879458a6cfda7">More...</a><br /></td></tr>
<tr class="separator:ga1a1fd7ed1af2be8e202879458a6cfda7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42391c0d642db3869248a8fa3f167ec7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga42391c0d642db3869248a8fa3f167ec7">USBD_HAL_WaitReadData</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga42391c0d642db3869248a8fa3f167ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for data to read and then return.  <a href="group__usbd__hal.xhtml#ga42391c0d642db3869248a8fa3f167ec7">More...</a><br /></td></tr>
<tr class="separator:ga42391c0d642db3869248a8fa3f167ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga946b2d10dfc497b6b24e602be6f3bd05">USBD_HAL_IsHighSpeed</a> (void)</td></tr>
<tr class="memdesc:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the device is running in high or full-speed.  <a href="group__usbd__hal.xhtml#ga946b2d10dfc497b6b24e602be6f3bd05">More...</a><br /></td></tr>
<tr class="separator:ga946b2d10dfc497b6b24e602be6f3bd05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab80a4355417d88e290c88c233d5d435b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gab80a4355417d88e290c88c233d5d435b">USBD_HAL_Suspend</a> (void)</td></tr>
<tr class="memdesc:gab80a4355417d88e290c88c233d5d435b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspend USB Device HW Interface.  <a href="group__usbd__hal.xhtml#gab80a4355417d88e290c88c233d5d435b">More...</a><br /></td></tr>
<tr class="separator:gab80a4355417d88e290c88c233d5d435b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72c29d7c5767f5af8df7ba1603a02619"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga72c29d7c5767f5af8df7ba1603a02619">USBD_HAL_Activate</a> (void)</td></tr>
<tr class="memdesc:ga72c29d7c5767f5af8df7ba1603a02619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activate USB Device HW Interface</p><ol type="1">
<li>Enable USB Peripheral</li>
<li>Enable USB Clock</li>
<li>Enable transceiver. </li>
</ol>
 <a href="group__usbd__hal.xhtml#ga72c29d7c5767f5af8df7ba1603a02619">More...</a><br /></td></tr>
<tr class="separator:ga72c29d7c5767f5af8df7ba1603a02619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfe54e3efd82dfd6df3074679402833d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gacfe54e3efd82dfd6df3074679402833d">USBD_HAL_Disable</a> (void)</td></tr>
<tr class="separator:gacfe54e3efd82dfd6df3074679402833d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c996a1e96701350e2c298521b7f8630"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga3c996a1e96701350e2c298521b7f8630">USBD_HAL_Test</a> (uint8_t bIndex)</td></tr>
<tr class="memdesc:ga3c996a1e96701350e2c298521b7f8630"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certification test for High Speed device.  <a href="group__usbd__hal.xhtml#ga3c996a1e96701350e2c298521b7f8630">More...</a><br /></td></tr>
<tr class="separator:ga3c996a1e96701350e2c298521b7f8630"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gae5ead95894bdd220e35880db62b8c3d1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="struct_endpoint.xhtml">Endpoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#gae5ead95894bdd220e35880db62b8c3d1">endpoints</a> [<a class="el" href="group__usbd__hal.xhtml#gab1098bd73746d6f0b0ab28975d2a5043">CHIP_USB_NUMENDPOINTS</a>]</td></tr>
<tr class="memdesc:gae5ead95894bdd220e35880db62b8c3d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the internal state for each endpoint of the UDP.  <a href="group__usbd__hal.xhtml#gae5ead95894bdd220e35880db62b8c3d1">More...</a><br /></td></tr>
<tr class="separator:gae5ead95894bdd220e35880db62b8c3d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4280b03060f2ed7b255b622a27ce2b18"><td class="memItemLeft" align="right" valign="top">static const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hal.xhtml#ga4280b03060f2ed7b255b622a27ce2b18">test_packet_buffer</a> []</td></tr>
<tr class="memdesc:ga4280b03060f2ed7b255b622a27ce2b18"><td class="mdescLeft">&#160;</td><td class="mdescRight">7.1.20 Test Mode Support Test codes for the USB HS test mode.  <a href="group__usbd__hal.xhtml#ga4280b03060f2ed7b255b622a27ce2b18">More...</a><br /></td></tr>
<tr class="separator:ga4280b03060f2ed7b255b622a27ce2b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implementation of USB device functions on a UDP controller. </p>
<p>See usbd_api_method USBD API Methods. </p>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
