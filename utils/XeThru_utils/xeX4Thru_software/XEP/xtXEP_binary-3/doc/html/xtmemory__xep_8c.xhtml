<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/Tools/xtmemory_xep.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b90d73d79b67ccd72c2aaf78972ad885.xhtml">Tools</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">xtmemory_xep.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="xtmemory_8h_source.xhtml">xtmemory.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="xep__hal_8h_source.xhtml">xep_hal.h</a>&quot;</code><br />
<code>#include &lt;FreeRTOS.h&gt;</code><br />
<code>#include &quot;<a class="el" href="heap__4__default_8h_source.xhtml">heap_4_default.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="heap__4__slow_8h_source.xhtml">heap_4_slow.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="heap__4__fast_8h_source.xhtml">heap_4_fast.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for xtmemory_xep.c:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c__incl.svg" width="767" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae5f25e9ba366d9dc9290e882c78bb8dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#ae5f25e9ba366d9dc9290e882c78bb8dc">xtmemory_set_new_memory_type</a> (<a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a> type)</td></tr>
<tr class="memdesc:ae5f25e9ba366d9dc9290e882c78bb8dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set which memory store to use for C++ new operator.  <a href="#ae5f25e9ba366d9dc9290e882c78bb8dc">More...</a><br /></td></tr>
<tr class="separator:ae5f25e9ba366d9dc9290e882c78bb8dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab63d498fd4907ccea64f2130815c76f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#ab63d498fd4907ccea64f2130815c76f7">xtmemory_get_new_memory_type</a> ()</td></tr>
<tr class="memdesc:ab63d498fd4907ccea64f2130815c76f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get which memory store is used for C++ new operator.  <a href="#ab63d498fd4907ccea64f2130815c76f7">More...</a><br /></td></tr>
<tr class="separator:ab63d498fd4907ccea64f2130815c76f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73b030fe9def6538cd2f1c5ec4448adb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a73b030fe9def6538cd2f1c5ec4448adb">xtmemory_classify</a> (void *ptr)</td></tr>
<tr class="memdesc:a73b030fe9def6538cd2f1c5ec4448adb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get which memory type the pointer has.  <a href="#a73b030fe9def6538cd2f1c5ec4448adb">More...</a><br /></td></tr>
<tr class="separator:a73b030fe9def6538cd2f1c5ec4448adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac094f55ba76fe2ae6e6b584f62ede7e0"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#ac094f55ba76fe2ae6e6b584f62ede7e0">xtmemory_malloc_default</a> (uint32_t size)</td></tr>
<tr class="memdesc:ac094f55ba76fe2ae6e6b584f62ede7e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate memory from default location.  <a href="#ac094f55ba76fe2ae6e6b584f62ede7e0">More...</a><br /></td></tr>
<tr class="separator:ac094f55ba76fe2ae6e6b584f62ede7e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e516b79f5a147905446ff71d1fc98fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a7e516b79f5a147905446ff71d1fc98fb">xtmemory_free_default</a> (void *ptr)</td></tr>
<tr class="memdesc:a7e516b79f5a147905446ff71d1fc98fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free memory allocated by xtmemory_malloc_default.  <a href="#a7e516b79f5a147905446ff71d1fc98fb">More...</a><br /></td></tr>
<tr class="separator:a7e516b79f5a147905446ff71d1fc98fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af78fb7d15faa1f15a6fe9c7649c40e7a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#af78fb7d15faa1f15a6fe9c7649c40e7a">xtmemory_heap_watermark_default</a> (void)</td></tr>
<tr class="memdesc:af78fb7d15faa1f15a6fe9c7649c40e7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the default memory usage watermark indicated by historically lowest amount of available memory.  <a href="#af78fb7d15faa1f15a6fe9c7649c40e7a">More...</a><br /></td></tr>
<tr class="separator:af78fb7d15faa1f15a6fe9c7649c40e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dad555618641e748aaefde24f170e94"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a2dad555618641e748aaefde24f170e94">xtmemory_heap_available_default</a> (void)</td></tr>
<tr class="memdesc:a2dad555618641e748aaefde24f170e94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get amount of default heap memory available.  <a href="#a2dad555618641e748aaefde24f170e94">More...</a><br /></td></tr>
<tr class="separator:a2dad555618641e748aaefde24f170e94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6865e14d8f1f60f5c34807e4c1a990a7"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a6865e14d8f1f60f5c34807e4c1a990a7">xtmemory_malloc_slow</a> (uint32_t size)</td></tr>
<tr class="memdesc:a6865e14d8f1f60f5c34807e4c1a990a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate memory from slow location.  <a href="#a6865e14d8f1f60f5c34807e4c1a990a7">More...</a><br /></td></tr>
<tr class="separator:a6865e14d8f1f60f5c34807e4c1a990a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b0d147f3ba8bc658585e26e12c46a76"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a1b0d147f3ba8bc658585e26e12c46a76">xtmemory_free_slow</a> (void *ptr)</td></tr>
<tr class="memdesc:a1b0d147f3ba8bc658585e26e12c46a76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free memory allocated by xtmemory_malloc_slow.  <a href="#a1b0d147f3ba8bc658585e26e12c46a76">More...</a><br /></td></tr>
<tr class="separator:a1b0d147f3ba8bc658585e26e12c46a76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a4c8bf7fca2d2cc41ac41e8877bee6"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a45a4c8bf7fca2d2cc41ac41e8877bee6">xtmemory_heap_watermark_slow</a> (void)</td></tr>
<tr class="memdesc:a45a4c8bf7fca2d2cc41ac41e8877bee6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the slow memory usage watermark indicated by historically lowest amount of available memory.  <a href="#a45a4c8bf7fca2d2cc41ac41e8877bee6">More...</a><br /></td></tr>
<tr class="separator:a45a4c8bf7fca2d2cc41ac41e8877bee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a120dae9f612ca07248261a387247721c"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a120dae9f612ca07248261a387247721c">xtmemory_heap_available_slow</a> (void)</td></tr>
<tr class="memdesc:a120dae9f612ca07248261a387247721c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get amount of slow heap memory available.  <a href="#a120dae9f612ca07248261a387247721c">More...</a><br /></td></tr>
<tr class="separator:a120dae9f612ca07248261a387247721c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a074cb46fba954fb164b67e59ea69efb2"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a074cb46fba954fb164b67e59ea69efb2">xtmemory_malloc_fast</a> (uint32_t size)</td></tr>
<tr class="memdesc:a074cb46fba954fb164b67e59ea69efb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate memory from fast location.  <a href="#a074cb46fba954fb164b67e59ea69efb2">More...</a><br /></td></tr>
<tr class="separator:a074cb46fba954fb164b67e59ea69efb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec65d5206617a7838830f17b9cf8583"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a8ec65d5206617a7838830f17b9cf8583">xtmemory_free_fast</a> (void *ptr)</td></tr>
<tr class="memdesc:a8ec65d5206617a7838830f17b9cf8583"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free memory allocated by xtmemory_malloc_fast.  <a href="#a8ec65d5206617a7838830f17b9cf8583">More...</a><br /></td></tr>
<tr class="separator:a8ec65d5206617a7838830f17b9cf8583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac619e2caa7125b6211f53d680a9f03fb"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#ac619e2caa7125b6211f53d680a9f03fb">xtmemory_heap_watermark_fast</a> (void)</td></tr>
<tr class="memdesc:ac619e2caa7125b6211f53d680a9f03fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the fast memory usage watermark indicated by historically lowest amount of available memory.  <a href="#ac619e2caa7125b6211f53d680a9f03fb">More...</a><br /></td></tr>
<tr class="separator:ac619e2caa7125b6211f53d680a9f03fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af215d1f4153a20b4fae548227681035b"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#af215d1f4153a20b4fae548227681035b">xtmemory_heap_available_fast</a> (void)</td></tr>
<tr class="memdesc:af215d1f4153a20b4fae548227681035b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get amount of fast heap memory available.  <a href="#af215d1f4153a20b4fae548227681035b">More...</a><br /></td></tr>
<tr class="separator:af215d1f4153a20b4fae548227681035b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6260ce245cdbb6c9d61276eec8c0ec79"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a6260ce245cdbb6c9d61276eec8c0ec79">_end_default_heap_memory</a></td></tr>
<tr class="separator:a6260ce245cdbb6c9d61276eec8c0ec79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a717643f8008e792e43d96d506dec6d4b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a717643f8008e792e43d96d506dec6d4b">_start_default_heap_memory</a></td></tr>
<tr class="separator:a717643f8008e792e43d96d506dec6d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20a18651e683353184b2ba8e4fa9b306"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a20a18651e683353184b2ba8e4fa9b306">_end_fast_heap_memory</a></td></tr>
<tr class="separator:a20a18651e683353184b2ba8e4fa9b306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfe98445da670387fc96c687f29e05ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#abfe98445da670387fc96c687f29e05ee">_start_fast_heap_memory</a></td></tr>
<tr class="separator:abfe98445da670387fc96c687f29e05ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967f99f9ac83eefa38f65deccc20c80d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a967f99f9ac83eefa38f65deccc20c80d">_end_slow_heap_memory</a></td></tr>
<tr class="separator:a967f99f9ac83eefa38f65deccc20c80d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e50571a31fab764246e3ac30cd29d9"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#a03e50571a31fab764246e3ac30cd29d9">_start_slow_heap_memory</a></td></tr>
<tr class="separator:a03e50571a31fab764246e3ac30cd29d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa825143da40e2d295fa20e628f6edd82"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xtmemory__xep_8c.xhtml#aa825143da40e2d295fa20e628f6edd82">xtmemory_new_memory_type</a> = <a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492aa712b146522c9b01de7a63bfb02ff703c">XTMEMORY_DEFAULT</a></td></tr>
<tr class="separator:aa825143da40e2d295fa20e628f6edd82"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a73b030fe9def6538cd2f1c5ec4448adb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73b030fe9def6538cd2f1c5ec4448adb">&sect;&nbsp;</a></span>xtmemory_classify()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a> xtmemory_classify </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get which memory type the pointer has. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a73b030fe9def6538cd2f1c5ec4448adb_icgraph.svg" width="322" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7e516b79f5a147905446ff71d1fc98fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e516b79f5a147905446ff71d1fc98fb">&sect;&nbsp;</a></span>xtmemory_free_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void xtmemory_free_default </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free memory allocated by xtmemory_malloc_default. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>Pointer to memory </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a7e516b79f5a147905446ff71d1fc98fb_cgraph.svg" width="312" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a7e516b79f5a147905446ff71d1fc98fb_icgraph.svg" width="554" height="164"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8ec65d5206617a7838830f17b9cf8583"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ec65d5206617a7838830f17b9cf8583">&sect;&nbsp;</a></span>xtmemory_free_fast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void xtmemory_free_fast </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free memory allocated by xtmemory_malloc_fast. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>Pointer to memory </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a8ec65d5206617a7838830f17b9cf8583_cgraph.svg" width="394" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a8ec65d5206617a7838830f17b9cf8583_icgraph.svg" width="331" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1b0d147f3ba8bc658585e26e12c46a76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b0d147f3ba8bc658585e26e12c46a76">&sect;&nbsp;</a></span>xtmemory_free_slow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void xtmemory_free_slow </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free memory allocated by xtmemory_malloc_slow. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>Pointer to memory </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a1b0d147f3ba8bc658585e26e12c46a76_cgraph.svg" width="384" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a1b0d147f3ba8bc658585e26e12c46a76_icgraph.svg" width="415" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab63d498fd4907ccea64f2130815c76f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab63d498fd4907ccea64f2130815c76f7">&sect;&nbsp;</a></span>xtmemory_get_new_memory_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a> xtmemory_get_new_memory_type </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get which memory store is used for C++ new operator. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_ab63d498fd4907ccea64f2130815c76f7_icgraph.svg" width="410" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2dad555618641e748aaefde24f170e94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2dad555618641e748aaefde24f170e94">&sect;&nbsp;</a></span>xtmemory_heap_available_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_available_default </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get amount of default heap memory available. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes available. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a2dad555618641e748aaefde24f170e94_cgraph.svg" width="416" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a2dad555618641e748aaefde24f170e94_icgraph.svg" width="576" height="82"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af215d1f4153a20b4fae548227681035b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af215d1f4153a20b4fae548227681035b">&sect;&nbsp;</a></span>xtmemory_heap_available_fast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_available_fast </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get amount of fast heap memory available. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes available. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_af215d1f4153a20b4fae548227681035b_cgraph.svg" width="478" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_af215d1f4153a20b4fae548227681035b_icgraph.svg" width="607" height="75"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a120dae9f612ca07248261a387247721c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a120dae9f612ca07248261a387247721c">&sect;&nbsp;</a></span>xtmemory_heap_available_slow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_available_slow </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get amount of slow heap memory available. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes available. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a120dae9f612ca07248261a387247721c_cgraph.svg" width="483" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a120dae9f612ca07248261a387247721c_icgraph.svg" width="610" height="75"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af78fb7d15faa1f15a6fe9c7649c40e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af78fb7d15faa1f15a6fe9c7649c40e7a">&sect;&nbsp;</a></span>xtmemory_heap_watermark_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_watermark_default </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the default memory usage watermark indicated by historically lowest amount of available memory. </p>
<dl class="section return"><dt>Returns</dt><dd>Historical minimum amount of free memory. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_af78fb7d15faa1f15a6fe9c7649c40e7a_cgraph.svg" width="515" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_af78fb7d15faa1f15a6fe9c7649c40e7a_icgraph.svg" width="588" height="82"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac619e2caa7125b6211f53d680a9f03fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac619e2caa7125b6211f53d680a9f03fb">&sect;&nbsp;</a></span>xtmemory_heap_watermark_fast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_watermark_fast </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the fast memory usage watermark indicated by historically lowest amount of available memory. </p>
<dl class="section return"><dt>Returns</dt><dd>Historical minimum amount of free memory. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_ac619e2caa7125b6211f53d680a9f03fb_cgraph.svg" width="519" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_ac619e2caa7125b6211f53d680a9f03fb_icgraph.svg" width="619" height="75"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a45a4c8bf7fca2d2cc41ac41e8877bee6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a4c8bf7fca2d2cc41ac41e8877bee6">&sect;&nbsp;</a></span>xtmemory_heap_watermark_slow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtmemory_heap_watermark_slow </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the slow memory usage watermark indicated by historically lowest amount of available memory. </p>
<dl class="section return"><dt>Returns</dt><dd>Historical minimum amount of free memory. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a45a4c8bf7fca2d2cc41ac41e8877bee6_cgraph.svg" width="522" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a45a4c8bf7fca2d2cc41ac41e8877bee6_icgraph.svg" width="622" height="75"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac094f55ba76fe2ae6e6b584f62ede7e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac094f55ba76fe2ae6e6b584f62ede7e0">&sect;&nbsp;</a></span>xtmemory_malloc_default()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* xtmemory_malloc_default </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate memory from default location. </p>
<p>Use operating system mechanism to allocate default memory. Normally internal SRAM.</p>
<p>Size of memory segment is defined in linker script - <a class="el" href="xep_memory.xhtml">XEP memory management</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to memory </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_ac094f55ba76fe2ae6e6b584f62ede7e0_cgraph.svg" width="350" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_ac094f55ba76fe2ae6e6b584f62ede7e0_icgraph.svg" width="803" height="595"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a074cb46fba954fb164b67e59ea69efb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a074cb46fba954fb164b67e59ea69efb2">&sect;&nbsp;</a></span>xtmemory_malloc_fast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* xtmemory_malloc_fast </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate memory from fast location. </p>
<p>Use operating system mechanism to allocate special fast memory. This can be Tightly Coupled Memory.</p>
<p>Size of memory segment is defined in linker script - <a class="el" href="xep_memory.xhtml">XEP memory management</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to memory </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a074cb46fba954fb164b67e59ea69efb2_cgraph.svg" width="415" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a074cb46fba954fb164b67e59ea69efb2_icgraph.svg" width="378" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6865e14d8f1f60f5c34807e4c1a990a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6865e14d8f1f60f5c34807e4c1a990a7">&sect;&nbsp;</a></span>xtmemory_malloc_slow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* xtmemory_malloc_slow </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate memory from slow location. </p>
<p>Use operating system mechanism to allocate slow memory. Normally external SRAM/SDRAM.</p>
<p>Size of memory segment is defined in linker script - <a class="el" href="xep_memory.xhtml">XEP memory management</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to memory </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a6865e14d8f1f60f5c34807e4c1a990a7_cgraph.svg" width="418" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xtmemory__xep_8c_a6865e14d8f1f60f5c34807e4c1a990a7_icgraph.svg" width="431" height="322"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae5f25e9ba366d9dc9290e882c78bb8dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5f25e9ba366d9dc9290e882c78bb8dc">&sect;&nbsp;</a></span>xtmemory_set_new_memory_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void xtmemory_set_new_memory_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set which memory store to use for C++ new operator. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a6260ce245cdbb6c9d61276eec8c0ec79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6260ce245cdbb6c9d61276eec8c0ec79">&sect;&nbsp;</a></span>_end_default_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _end_default_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a20a18651e683353184b2ba8e4fa9b306"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20a18651e683353184b2ba8e4fa9b306">&sect;&nbsp;</a></span>_end_fast_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _end_fast_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a967f99f9ac83eefa38f65deccc20c80d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a967f99f9ac83eefa38f65deccc20c80d">&sect;&nbsp;</a></span>_end_slow_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _end_slow_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a717643f8008e792e43d96d506dec6d4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a717643f8008e792e43d96d506dec6d4b">&sect;&nbsp;</a></span>_start_default_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _start_default_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abfe98445da670387fc96c687f29e05ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfe98445da670387fc96c687f29e05ee">&sect;&nbsp;</a></span>_start_fast_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _start_fast_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a03e50571a31fab764246e3ac30cd29d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03e50571a31fab764246e3ac30cd29d9">&sect;&nbsp;</a></span>_start_slow_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _start_slow_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa825143da40e2d295fa20e628f6edd82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa825143da40e2d295fa20e628f6edd82">&sect;&nbsp;</a></span>xtmemory_new_memory_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492a">xtmemory_types_t</a> xtmemory_new_memory_type = <a class="el" href="xtmemory_8h.xhtml#a1143309132fbc08c5ee49744492b492aa712b146522c9b01de7a63bfb02ff703c">XTMEMORY_DEFAULT</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
