<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/usbhs.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">usbhs.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h__dep__incl.svg" width="206" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="usbhs_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a11838ca412e5e6a51e9a3769bfa989f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a11838ca412e5e6a51e9a3769bfa989f5">UHD_PIPE_MAX_TRANS</a>&#160;&#160;&#160;0x8000</td></tr>
<tr class="memdesc:a11838ca412e5e6a51e9a3769bfa989f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum transfer size on USB DMA.  <a href="#a11838ca412e5e6a51e9a3769bfa989f5">More...</a><br /></td></tr>
<tr class="separator:a11838ca412e5e6a51e9a3769bfa989f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f0b960f10c286e7cd0e0b736aa1e4db"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8f0b960f10c286e7cd0e0b736aa1e4db">CHIP_USB_NUMPIPE</a>&#160;&#160;&#160;10</td></tr>
<tr class="memdesc:a8f0b960f10c286e7cd0e0b736aa1e4db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of USB endpoints.  <a href="#a8f0b960f10c286e7cd0e0b736aa1e4db">More...</a><br /></td></tr>
<tr class="separator:a8f0b960f10c286e7cd0e0b736aa1e4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e17be7a8b9f3a7fa532293e5a776fed"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a1e17be7a8b9f3a7fa532293e5a776fed">CHIP_USB_DMA_NUMPIPE</a>&#160;&#160;&#160;7</td></tr>
<tr class="memdesc:a1e17be7a8b9f3a7fa532293e5a776fed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of USB endpoints.  <a href="#a1e17be7a8b9f3a7fa532293e5a776fed">More...</a><br /></td></tr>
<tr class="separator:a1e17be7a8b9f3a7fa532293e5a776fed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5ac656db4059a4b765bf4e239d8fe5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7d5ac656db4059a4b765bf4e239d8fe5">CHIP_USB_PIPE_MAXPACKETSIZE</a>(ep)&#160;&#160;&#160;((ep == 0) ? 64 : 1024)</td></tr>
<tr class="memdesc:a7d5ac656db4059a4b765bf4e239d8fe5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints max paxcket size.  <a href="#a7d5ac656db4059a4b765bf4e239d8fe5">More...</a><br /></td></tr>
<tr class="separator:a7d5ac656db4059a4b765bf4e239d8fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd7d33f558f878925c4aa8f2f6dc96d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a0dd7d33f558f878925c4aa8f2f6dc96d">CHIP_USB_PIPE_BANKS</a>(ep)&#160;&#160;&#160;((ep==0)?1:((ep&lt;=2)?3:2))</td></tr>
<tr class="memdesc:a0dd7d33f558f878925c4aa8f2f6dc96d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints Number of Bank.  <a href="#a0dd7d33f558f878925c4aa8f2f6dc96d">More...</a><br /></td></tr>
<tr class="separator:a0dd7d33f558f878925c4aa8f2f6dc96d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c5810023965f423d4f2870a8d5c42d8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4c5810023965f423d4f2870a8d5c42d8">CHIP_USB_PIPE_HBW</a>(ep)&#160;&#160;&#160;((((ep)&gt;=1) &amp;&amp;((ep)&lt;=2))?true:false)</td></tr>
<tr class="separator:a4c5810023965f423d4f2870a8d5c42d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a375cc1a475941bb356f59c53aae6c951"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a375cc1a475941bb356f59c53aae6c951">CHIP_USB_PIPE_DMA</a>(ep)&#160;&#160;&#160;((((ep)&gt;=1)&amp;&amp;((ep)&lt;=7))?true:false)</td></tr>
<tr class="memdesc:a375cc1a475941bb356f59c53aae6c951"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints DMA support.  <a href="#a375cc1a475941bb356f59c53aae6c951">More...</a><br /></td></tr>
<tr class="separator:a375cc1a475941bb356f59c53aae6c951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr class="memitem:a6173ff7dcc4e8e590311c774d7214e9b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6173ff7dcc4e8e590311c774d7214e9b">USB_DEVICE_HS_SUPPORT</a></td></tr>
<tr class="memdesc:a6173ff7dcc4e8e590311c774d7214e9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">addtogroup usbd_hal  <a href="#a6173ff7dcc4e8e590311c774d7214e9b">More...</a><br /></td></tr>
<tr class="separator:a6173ff7dcc4e8e590311c774d7214e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67d99007f1886e516e6705e19c38b541"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a67d99007f1886e516e6705e19c38b541">USB_DEVICE_EP_CTRL_SIZE</a>&#160;&#160;&#160;64</td></tr>
<tr class="memdesc:a67d99007f1886e516e6705e19c38b541"><td class="mdescLeft">&#160;</td><td class="mdescRight">Control endpoint size.  <a href="#a67d99007f1886e516e6705e19c38b541">More...</a><br /></td></tr>
<tr class="separator:a67d99007f1886e516e6705e19c38b541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d5301f4b6b7c4dc59bdd76d725c9517"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a0d5301f4b6b7c4dc59bdd76d725c9517">CHIP_USB_UDP</a></td></tr>
<tr class="memdesc:a0d5301f4b6b7c4dc59bdd76d725c9517"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates chip has an UDP High Speed.  <a href="#a0d5301f4b6b7c4dc59bdd76d725c9517">More...</a><br /></td></tr>
<tr class="separator:a0d5301f4b6b7c4dc59bdd76d725c9517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bcc957f1288dac54003f5a0045b2cd7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4bcc957f1288dac54003f5a0045b2cd7">CHIP_USB_PULLUP_INTERNAL</a></td></tr>
<tr class="memdesc:a4bcc957f1288dac54003f5a0045b2cd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates chip has an internal pull-up.  <a href="#a4bcc957f1288dac54003f5a0045b2cd7">More...</a><br /></td></tr>
<tr class="separator:a4bcc957f1288dac54003f5a0045b2cd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1098bd73746d6f0b0ab28975d2a5043"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ab1098bd73746d6f0b0ab28975d2a5043">CHIP_USB_NUMENDPOINTS</a>&#160;&#160;&#160;10</td></tr>
<tr class="memdesc:ab1098bd73746d6f0b0ab28975d2a5043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of USB endpoints.  <a href="#ab1098bd73746d6f0b0ab28975d2a5043">More...</a><br /></td></tr>
<tr class="separator:ab1098bd73746d6f0b0ab28975d2a5043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5865e5e766958f78b10bee61f42abd44"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(ep)&#160;&#160;&#160;((ep == 0) ? 64 : 1024)</td></tr>
<tr class="memdesc:a5865e5e766958f78b10bee61f42abd44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints max packet size.  <a href="#a5865e5e766958f78b10bee61f42abd44">More...</a><br /></td></tr>
<tr class="separator:a5865e5e766958f78b10bee61f42abd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab66857dec68cedaa0b3d3008296ffd97"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ab66857dec68cedaa0b3d3008296ffd97">CHIP_USB_ENDPOINTS_BANKS</a>(ep)&#160;&#160;&#160;((ep==0)?1:((ep&lt;=2)?3:2))</td></tr>
<tr class="memdesc:ab66857dec68cedaa0b3d3008296ffd97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints Number of Bank.  <a href="#ab66857dec68cedaa0b3d3008296ffd97">More...</a><br /></td></tr>
<tr class="separator:ab66857dec68cedaa0b3d3008296ffd97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e2e1c55a12f4f9bbe7752da20a2fd96"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7e2e1c55a12f4f9bbe7752da20a2fd96">CHIP_USB_ENDPOINTS_HBW</a>(ep)&#160;&#160;&#160;((((ep)&gt;=1) &amp;&amp;((ep)&lt;=2))?true:false)</td></tr>
<tr class="separator:a7e2e1c55a12f4f9bbe7752da20a2fd96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3e0780955f1f3796b59c297a9ce778"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a3d3e0780955f1f3796b59c297a9ce778">CHIP_USB_ENDPOINTS_DMA</a>(ep)&#160;&#160;&#160;((((ep)&gt;=1)&amp;&amp;((ep)&lt;=7))?true:false)</td></tr>
<tr class="memdesc:a3d3e0780955f1f3796b59c297a9ce778"><td class="mdescLeft">&#160;</td><td class="mdescRight">Endpoints DMA support.  <a href="#a3d3e0780955f1f3796b59c297a9ce778">More...</a><br /></td></tr>
<tr class="separator:a3d3e0780955f1f3796b59c297a9ce778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74fb9f0009ae61530ac99e19744fc7f1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a74fb9f0009ae61530ac99e19744fc7f1">DMA_MAX_FIFO_SIZE</a>&#160;&#160;&#160;(65536/1)</td></tr>
<tr class="memdesc:a74fb9f0009ae61530ac99e19744fc7f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Max size of the FMA FIFO.  <a href="#a74fb9f0009ae61530ac99e19744fc7f1">More...</a><br /></td></tr>
<tr class="separator:a74fb9f0009ae61530ac99e19744fc7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e18c1683b682fc01056cbf2b2b92f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a19e18c1683b682fc01056cbf2b2b92f6">EPT_VIRTUAL_SIZE</a>&#160;&#160;&#160;8192</td></tr>
<tr class="memdesc:a19e18c1683b682fc01056cbf2b2b92f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">fifo space size in DW  <a href="#a19e18c1683b682fc01056cbf2b2b92f6">More...</a><br /></td></tr>
<tr class="separator:a19e18c1683b682fc01056cbf2b2b92f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">USBHS Host IP properties</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Get maximal number of endpoints </p>
</div></td></tr>
<tr class="memitem:aa5f5ca88197f685002326eec705dbbc5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa5f5ca88197f685002326eec705dbbc5">uhd_get_pipe_max_nbr</a>()&#160;&#160;&#160;(9)</td></tr>
<tr class="separator:aa5f5ca88197f685002326eec705dbbc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6095628336ad1cdd9336b4c1f5baef35"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6095628336ad1cdd9336b4c1f5baef35">USBHS_EPT_NUM</a>&#160;&#160;&#160;(<a class="el" href="usbhs_8h.xhtml#aa5f5ca88197f685002326eec705dbbc5">uhd_get_pipe_max_nbr</a>()+1)</td></tr>
<tr class="separator:a6095628336ad1cdd9336b4c1f5baef35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e9a4982629968460f6472cf7813788c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8e9a4982629968460f6472cf7813788c">uhd_get_pipe_bank_max_nbr</a>(ep)&#160;&#160;&#160;((ep == 0) ? 1 : ((ep &lt;= 2) ? 3 : 2))</td></tr>
<tr class="memdesc:a8e9a4982629968460f6472cf7813788c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get maximal number of banks of endpoints.  <a href="#a8e9a4982629968460f6472cf7813788c">More...</a><br /></td></tr>
<tr class="separator:a8e9a4982629968460f6472cf7813788c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5775674eb9ca9bb966daf595adc66c76"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5775674eb9ca9bb966daf595adc66c76">uhd_get_pipe_size_max</a>(ep)&#160;&#160;&#160;(((ep) == 0) ? 64 : 1024)</td></tr>
<tr class="memdesc:a5775674eb9ca9bb966daf595adc66c76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get maximal size of endpoint (3X, 1024/64)  <a href="#a5775674eb9ca9bb966daf595adc66c76">More...</a><br /></td></tr>
<tr class="separator:a5775674eb9ca9bb966daf595adc66c76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaafe4bea8556d5c5450ea0ccd9c3a5a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#adaafe4bea8556d5c5450ea0ccd9c3a5a">Is_uhd_pipe_dma_supported</a>(ep)&#160;&#160;&#160;((((ep) &gt;= 1) &amp;&amp; ((ep) &lt;= 7)) ? <a class="el" href="group__interrupt__deprecated__group.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a> : <a class="el" href="group__interrupt__deprecated__group.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>)</td></tr>
<tr class="memdesc:adaafe4bea8556d5c5450ea0ccd9c3a5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get DMA support of endpoints.  <a href="#adaafe4bea8556d5c5450ea0ccd9c3a5a">More...</a><br /></td></tr>
<tr class="separator:adaafe4bea8556d5c5450ea0ccd9c3a5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76e49fb3750180b6ccea5ac32d116750"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a76e49fb3750180b6ccea5ac32d116750">Is_uhd_pipe_high_bw_supported</a>(ep)&#160;&#160;&#160;(((ep) &gt;= 2) ? <a class="el" href="group__interrupt__deprecated__group.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a> : <a class="el" href="group__interrupt__deprecated__group.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>)</td></tr>
<tr class="memdesc:a76e49fb3750180b6ccea5ac32d116750"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get High Band Width support of endpoints.  <a href="#a76e49fb3750180b6ccea5ac32d116750">More...</a><br /></td></tr>
<tr class="separator:a76e49fb3750180b6ccea5ac32d116750"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ac7b897ea707bd670c7b3898ac266a5f8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8">USB_Mode_t</a> { <a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8ae491a780283b565b0b53517c74ffb6ec">HOST_MODE</a> = 0, 
<a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8a56f1a0d172408f729f14b187693fc770">DEVICE_MODE</a> = 1
 }</td></tr>
<tr class="separator:ac7b897ea707bd670c7b3898ac266a5f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a07183fee11fbf4c00401b455bdfed9dd"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a07183fee11fbf4c00401b455bdfed9dd">USBHS_FreezeClock</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a07183fee11fbf4c00401b455bdfed9dd"><td class="mdescLeft">&#160;</td><td class="mdescRight"><hr/>
 <h1>USBHS_CTRL </h1>
 <a href="#a07183fee11fbf4c00401b455bdfed9dd">More...</a><br /></td></tr>
<tr class="separator:a07183fee11fbf4c00401b455bdfed9dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78d27724945f587c54cba1d9617979c8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a78d27724945f587c54cba1d9617979c8">USBHS_UnFreezeClock</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a78d27724945f587c54cba1d9617979c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Freeze or unfreeze USB clock.  <a href="#a78d27724945f587c54cba1d9617979c8">More...</a><br /></td></tr>
<tr class="separator:a78d27724945f587c54cba1d9617979c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a737215891d431406a22e7627cb15f337"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a737215891d431406a22e7627cb15f337">USBHS_VBusHWC</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:a737215891d431406a22e7627cb15f337"><td class="mdescLeft">&#160;</td><td class="mdescRight">Freeze or unfreeze USB clock.  <a href="#a737215891d431406a22e7627cb15f337">More...</a><br /></td></tr>
<tr class="separator:a737215891d431406a22e7627cb15f337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a271a9d7a4f68db5bfab4401f8e67d347"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a271a9d7a4f68db5bfab4401f8e67d347">USBHS_UsbEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:a271a9d7a4f68db5bfab4401f8e67d347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables USB.  <a href="#a271a9d7a4f68db5bfab4401f8e67d347">More...</a><br /></td></tr>
<tr class="separator:a271a9d7a4f68db5bfab4401f8e67d347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a636f49939838c8348470310e71e1cd70"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a636f49939838c8348470310e71e1cd70">USBHS_UsbMode</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, <a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8">USB_Mode_t</a> Mode)</td></tr>
<tr class="memdesc:a636f49939838c8348470310e71e1cd70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Device or Host Mode.  <a href="#a636f49939838c8348470310e71e1cd70">More...</a><br /></td></tr>
<tr class="separator:a636f49939838c8348470310e71e1cd70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53df9330077448ac0d721dbef847c9f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af53df9330077448ac0d721dbef847c9f">USBHS_ISUsableClock</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:af53df9330077448ac0d721dbef847c9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if clock is usable or not.  <a href="#af53df9330077448ac0d721dbef847c9f">More...</a><br /></td></tr>
<tr class="separator:af53df9330077448ac0d721dbef847c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a231788fb630937b8e77227018e29b3aa"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a231788fb630937b8e77227018e29b3aa">USBHS_ReadStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a231788fb630937b8e77227018e29b3aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raise interrupt for endpoint.  <a href="#a231788fb630937b8e77227018e29b3aa">More...</a><br /></td></tr>
<tr class="separator:a231788fb630937b8e77227018e29b3aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23bc7c30ae1779f56b28b82cf5153866"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a23bc7c30ae1779f56b28b82cf5153866">USBHS_GetUsbSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a23bc7c30ae1779f56b28b82cf5153866"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable USB address.  <a href="#a23bc7c30ae1779f56b28b82cf5153866">More...</a><br /></td></tr>
<tr class="separator:a23bc7c30ae1779f56b28b82cf5153866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f09972d45a5f4b21841f41f490d2a2b"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8f09972d45a5f4b21841f41f490d2a2b">USBHS_IsUsbFullSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a8f09972d45a5f4b21841f41f490d2a2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable USB address.  <a href="#a8f09972d45a5f4b21841f41f490d2a2b">More...</a><br /></td></tr>
<tr class="separator:a8f09972d45a5f4b21841f41f490d2a2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a003f0bc5f5ed08ba3253028bd04923"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a3a003f0bc5f5ed08ba3253028bd04923">USBHS_IsUsbHighSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a3a003f0bc5f5ed08ba3253028bd04923"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable USB address.  <a href="#a3a003f0bc5f5ed08ba3253028bd04923">More...</a><br /></td></tr>
<tr class="separator:a3a003f0bc5f5ed08ba3253028bd04923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a017b00c66ba92abe86f341381e3795ee"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a017b00c66ba92abe86f341381e3795ee">USBHS_IsUsbLowSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a017b00c66ba92abe86f341381e3795ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable USB address.  <a href="#a017b00c66ba92abe86f341381e3795ee">More...</a><br /></td></tr>
<tr class="separator:a017b00c66ba92abe86f341381e3795ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb9881c68cce5603acf01ad61966bf07"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abb9881c68cce5603acf01ad61966bf07">USBHS_Ack</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t AckType)</td></tr>
<tr class="memdesc:abb9881c68cce5603acf01ad61966bf07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raise interrupt for endpoint.  <a href="#abb9881c68cce5603acf01ad61966bf07">More...</a><br /></td></tr>
<tr class="separator:abb9881c68cce5603acf01ad61966bf07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace6971cff0c4aeb589dd3caf663a2756"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ace6971cff0c4aeb589dd3caf663a2756">USBHS_Set</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t SetStatus)</td></tr>
<tr class="memdesc:ace6971cff0c4aeb589dd3caf663a2756"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raise interrupt for endpoint.  <a href="#ace6971cff0c4aeb589dd3caf663a2756">More...</a><br /></td></tr>
<tr class="separator:ace6971cff0c4aeb589dd3caf663a2756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae12eb708d1efa8847725bfbef153b21f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae12eb708d1efa8847725bfbef153b21f">USBHS_EnableAddress</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:ae12eb708d1efa8847725bfbef153b21f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable USB address.  <a href="#ae12eb708d1efa8847725bfbef153b21f">More...</a><br /></td></tr>
<tr class="separator:ae12eb708d1efa8847725bfbef153b21f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28587f66d68df1900ea52afc944f74c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af28587f66d68df1900ea52afc944f74c">USBHS_SetAddress</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Addr)</td></tr>
<tr class="memdesc:af28587f66d68df1900ea52afc944f74c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure USB address and enable or disable it.  <a href="#af28587f66d68df1900ea52afc944f74c">More...</a><br /></td></tr>
<tr class="separator:af28587f66d68df1900ea52afc944f74c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3cab362870739aaf4e5fe4dfc224710"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa3cab362870739aaf4e5fe4dfc224710">USBHS_GetAddress</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:aa3cab362870739aaf4e5fe4dfc224710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get USB address.  <a href="#aa3cab362870739aaf4e5fe4dfc224710">More...</a><br /></td></tr>
<tr class="separator:aa3cab362870739aaf4e5fe4dfc224710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad50e0487f36c3b575f0a509be89a103c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad50e0487f36c3b575f0a509be89a103c">USBHS_DetachUsb</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:ad50e0487f36c3b575f0a509be89a103c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attach or detach USB.  <a href="#ad50e0487f36c3b575f0a509be89a103c">More...</a><br /></td></tr>
<tr class="separator:ad50e0487f36c3b575f0a509be89a103c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01683824f83ab460ca383457ca156051"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a01683824f83ab460ca383457ca156051">USBHS_ForceLowSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:a01683824f83ab460ca383457ca156051"><td class="mdescLeft">&#160;</td><td class="mdescRight">Force Low Speed mode.  <a href="#a01683824f83ab460ca383457ca156051">More...</a><br /></td></tr>
<tr class="separator:a01683824f83ab460ca383457ca156051"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46ba14559a5a635598a47d24943769ba"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a46ba14559a5a635598a47d24943769ba">USBHS_EnableHighSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Enable)</td></tr>
<tr class="memdesc:a46ba14559a5a635598a47d24943769ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable/Enables High Speed mode.  <a href="#a46ba14559a5a635598a47d24943769ba">More...</a><br /></td></tr>
<tr class="separator:a46ba14559a5a635598a47d24943769ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93317007fdfef8aaa76672033a5293ba"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a93317007fdfef8aaa76672033a5293ba">USBHS_SetRemoteWakeUp</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a93317007fdfef8aaa76672033a5293ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Remote WakeUp mode.  <a href="#a93317007fdfef8aaa76672033a5293ba">More...</a><br /></td></tr>
<tr class="separator:a93317007fdfef8aaa76672033a5293ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526a6421c946527e98a5cd7a426f5254"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a526a6421c946527e98a5cd7a426f5254">USBHS_EnableTestMode</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t mode)</td></tr>
<tr class="memdesc:a526a6421c946527e98a5cd7a426f5254"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable/Enables Test mode.  <a href="#a526a6421c946527e98a5cd7a426f5254">More...</a><br /></td></tr>
<tr class="separator:a526a6421c946527e98a5cd7a426f5254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a77c8c380dc3c3bf46b533682d02602"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a0a77c8c380dc3c3bf46b533682d02602">USBHS_EnableHSTestMode</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a0a77c8c380dc3c3bf46b533682d02602"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable/Enables HS Test mode.  <a href="#a0a77c8c380dc3c3bf46b533682d02602">More...</a><br /></td></tr>
<tr class="separator:a0a77c8c380dc3c3bf46b533682d02602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40bc8caea176293a06352e8341572c5e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a40bc8caea176293a06352e8341572c5e">USBHS_ReadIntStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a40bc8caea176293a06352e8341572c5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read status for an interrupt.  <a href="#a40bc8caea176293a06352e8341572c5e">More...</a><br /></td></tr>
<tr class="separator:a40bc8caea176293a06352e8341572c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4ce4550510a58d657322a4648e495f3"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa4ce4550510a58d657322a4648e495f3">USBHS_ReadEpIntStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t EpNum)</td></tr>
<tr class="memdesc:aa4ce4550510a58d657322a4648e495f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read status for an <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>.  <a href="#aa4ce4550510a58d657322a4648e495f3">More...</a><br /></td></tr>
<tr class="separator:aa4ce4550510a58d657322a4648e495f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52b1ff1fa6a7c80b1a19465351cc9a3d"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a52b1ff1fa6a7c80b1a19465351cc9a3d">USBHS_ReadDmaIntStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t DmaNum)</td></tr>
<tr class="memdesc:a52b1ff1fa6a7c80b1a19465351cc9a3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read status for a DMA <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>.  <a href="#a52b1ff1fa6a7c80b1a19465351cc9a3d">More...</a><br /></td></tr>
<tr class="separator:a52b1ff1fa6a7c80b1a19465351cc9a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe473ec759ec7837e7105d001df93c88"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abe473ec759ec7837e7105d001df93c88">USBHS_AckInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:abe473ec759ec7837e7105d001df93c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acknowledge interrupt for endpoint.  <a href="#abe473ec759ec7837e7105d001df93c88">More...</a><br /></td></tr>
<tr class="separator:abe473ec759ec7837e7105d001df93c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d60c6a4b9400dfc62fd64fad75543c2"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6d60c6a4b9400dfc62fd64fad75543c2">USBHS_RaiseInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a6d60c6a4b9400dfc62fd64fad75543c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raise interrupt for endpoint.  <a href="#a6d60c6a4b9400dfc62fd64fad75543c2">More...</a><br /></td></tr>
<tr class="separator:a6d60c6a4b9400dfc62fd64fad75543c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a832191e7aa7941e54317cf567167d2fb"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a832191e7aa7941e54317cf567167d2fb">USBHS_RaiseDmaInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Dma)</td></tr>
<tr class="memdesc:a832191e7aa7941e54317cf567167d2fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raise DMA interrupt for endpoint.  <a href="#a832191e7aa7941e54317cf567167d2fb">More...</a><br /></td></tr>
<tr class="separator:a832191e7aa7941e54317cf567167d2fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a36f3ee5b1c36992ecd002f2b0ddb5c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a9a36f3ee5b1c36992ecd002f2b0ddb5c">USBHS_IsIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a9a36f3ee5b1c36992ecd002f2b0ddb5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">check for interrupt of endpoint.  <a href="#a9a36f3ee5b1c36992ecd002f2b0ddb5c">More...</a><br /></td></tr>
<tr class="separator:a9a36f3ee5b1c36992ecd002f2b0ddb5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21efaafe4db8b7a40ecfb3b226c20c8d"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a21efaafe4db8b7a40ecfb3b226c20c8d">USBHS_IsIntEnableEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t EpNum)</td></tr>
<tr class="memdesc:a21efaafe4db8b7a40ecfb3b226c20c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if endpoint's interrupt is enabled for a given endpoint number.  <a href="#a21efaafe4db8b7a40ecfb3b226c20c8d">More...</a><br /></td></tr>
<tr class="separator:a21efaafe4db8b7a40ecfb3b226c20c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c5b24b3bb969945eb34f5603539374"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a66c5b24b3bb969945eb34f5603539374">USBHS_IsDmaIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t DmaNum)</td></tr>
<tr class="memdesc:a66c5b24b3bb969945eb34f5603539374"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if endpoint's DMA interrupt is enabled for a given endpoint DMA number.  <a href="#a66c5b24b3bb969945eb34f5603539374">More...</a><br /></td></tr>
<tr class="separator:a66c5b24b3bb969945eb34f5603539374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a792065de6dd29d4153426526555d4d07"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a792065de6dd29d4153426526555d4d07">USBHS_EnableInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a792065de6dd29d4153426526555d4d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables Interrupt.  <a href="#a792065de6dd29d4153426526555d4d07">More...</a><br /></td></tr>
<tr class="separator:a792065de6dd29d4153426526555d4d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaefdcd5f8be021f6ebffcbb4e7630079"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aaefdcd5f8be021f6ebffcbb4e7630079">USBHS_EnableIntEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t EpNum)</td></tr>
<tr class="memdesc:aaefdcd5f8be021f6ebffcbb4e7630079"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables interrupt for a given endpoint.  <a href="#aaefdcd5f8be021f6ebffcbb4e7630079">More...</a><br /></td></tr>
<tr class="separator:aaefdcd5f8be021f6ebffcbb4e7630079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1cea33281f84fba93b0b4ecd554ce3a"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad1cea33281f84fba93b0b4ecd554ce3a">USBHS_EnableDMAIntEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t DmaEp)</td></tr>
<tr class="memdesc:ad1cea33281f84fba93b0b4ecd554ce3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables DMA interrupt for a given endpoint.  <a href="#ad1cea33281f84fba93b0b4ecd554ce3a">More...</a><br /></td></tr>
<tr class="separator:ad1cea33281f84fba93b0b4ecd554ce3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6f755e0017750683a52c6d2640ce9b"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a1e6f755e0017750683a52c6d2640ce9b">USBHS_DisableInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a1e6f755e0017750683a52c6d2640ce9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables interrupt for endpoint.  <a href="#a1e6f755e0017750683a52c6d2640ce9b">More...</a><br /></td></tr>
<tr class="separator:a1e6f755e0017750683a52c6d2640ce9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b0323c3e931a4c757ca8cbb2987869f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6b0323c3e931a4c757ca8cbb2987869f">USBHS_DisableIntEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a6b0323c3e931a4c757ca8cbb2987869f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables interrupt for endpoint.  <a href="#a6b0323c3e931a4c757ca8cbb2987869f">More...</a><br /></td></tr>
<tr class="separator:a6b0323c3e931a4c757ca8cbb2987869f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0d4d68174be285f39499774b2edb1d8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa0d4d68174be285f39499774b2edb1d8">USBHS_DisableDMAIntEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t DmaEp)</td></tr>
<tr class="memdesc:aa0d4d68174be285f39499774b2edb1d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables DMA interrupt for endpoint.  <a href="#aa0d4d68174be285f39499774b2edb1d8">More...</a><br /></td></tr>
<tr class="separator:aa0d4d68174be285f39499774b2edb1d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe79c1addd8c03522a0228ae4b6dae3"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aafe79c1addd8c03522a0228ae4b6dae3">USBHS_EnableEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint8_t Enable)</td></tr>
<tr class="memdesc:aafe79c1addd8c03522a0228ae4b6dae3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables endpoint.  <a href="#aafe79c1addd8c03522a0228ae4b6dae3">More...</a><br /></td></tr>
<tr class="separator:aafe79c1addd8c03522a0228ae4b6dae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bb9811e54a0d8cab3a62b62d6dd536d"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8bb9811e54a0d8cab3a62b62d6dd536d">USBHS_ResetEP</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a8bb9811e54a0d8cab3a62b62d6dd536d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rests <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>.  <a href="#a8bb9811e54a0d8cab3a62b62d6dd536d">More...</a><br /></td></tr>
<tr class="separator:a8bb9811e54a0d8cab3a62b62d6dd536d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af24a65ae5dca2e299082d592ca445c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8af24a65ae5dca2e299082d592ca445c">USBHS_IsEPEnabled</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a8af24a65ae5dca2e299082d592ca445c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is enable.  <a href="#a8af24a65ae5dca2e299082d592ca445c">More...</a><br /></td></tr>
<tr class="separator:a8af24a65ae5dca2e299082d592ca445c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae10710fce7d4eadf4434669daa7f2620"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae10710fce7d4eadf4434669daa7f2620">USBHS_GetMicroFrameNum</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:ae10710fce7d4eadf4434669daa7f2620"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get MicrFrame number.  <a href="#ae10710fce7d4eadf4434669daa7f2620">More...</a><br /></td></tr>
<tr class="separator:ae10710fce7d4eadf4434669daa7f2620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab049b9cefa0454da5a5cadaa30e7ca03"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ab049b9cefa0454da5a5cadaa30e7ca03">USBHS_GetFrameNum</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:ab049b9cefa0454da5a5cadaa30e7ca03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Frame number.  <a href="#ab049b9cefa0454da5a5cadaa30e7ca03">More...</a><br /></td></tr>
<tr class="separator:ab049b9cefa0454da5a5cadaa30e7ca03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e5d575fa1cbd5197c3877e4905353c7"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6e5d575fa1cbd5197c3877e4905353c7">USBHS_GetFrameNumCrcErr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a6e5d575fa1cbd5197c3877e4905353c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Frame number CRC error.  <a href="#a6e5d575fa1cbd5197c3877e4905353c7">More...</a><br /></td></tr>
<tr class="separator:a6e5d575fa1cbd5197c3877e4905353c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23400301b1f5ce8e97834db2a2a2cc1b"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a23400301b1f5ce8e97834db2a2a2cc1b">USBHS_ConfigureEPs</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, const uint8_t Ep, const uint8_t Type, const uint8_t Dir, const uint8_t <a class="el" href="s25fl1_8h.xhtml#a3dc088793a337b555691cd7b9bddee08">Size</a>, const uint8_t Bank)</td></tr>
<tr class="memdesc:a23400301b1f5ce8e97834db2a2a2cc1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Endpoints configuration Bank size, type and direction.  <a href="#a23400301b1f5ce8e97834db2a2a2cc1b">More...</a><br /></td></tr>
<tr class="separator:a23400301b1f5ce8e97834db2a2a2cc1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af318fefb03c995978a740a8b1733aaa0"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af318fefb03c995978a740a8b1733aaa0">USBHS_AutoSwitchBankEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint8_t Enable)</td></tr>
<tr class="memdesc:af318fefb03c995978a740a8b1733aaa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable Auto switch of banks.  <a href="#af318fefb03c995978a740a8b1733aaa0">More...</a><br /></td></tr>
<tr class="separator:af318fefb03c995978a740a8b1733aaa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95e89705c54999e79a3a53b6505e95e6"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a95e89705c54999e79a3a53b6505e95e6">USBHS_AllocateMemory</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a95e89705c54999e79a3a53b6505e95e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> memory.  <a href="#a95e89705c54999e79a3a53b6505e95e6">More...</a><br /></td></tr>
<tr class="separator:a95e89705c54999e79a3a53b6505e95e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f0c342daf3fd2154c551af251aeac9b"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a3f0c342daf3fd2154c551af251aeac9b">USBHS_FreeMemory</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a3f0c342daf3fd2154c551af251aeac9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free allocated <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> memory.  <a href="#a3f0c342daf3fd2154c551af251aeac9b">More...</a><br /></td></tr>
<tr class="separator:a3f0c342daf3fd2154c551af251aeac9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3485ec2d4cc77a04795d2047ccb7d5"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4e3485ec2d4cc77a04795d2047ccb7d5">USBHS_GetConfigureEPs</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t IntType)</td></tr>
<tr class="memdesc:a4e3485ec2d4cc77a04795d2047ccb7d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> configuration.  <a href="#a4e3485ec2d4cc77a04795d2047ccb7d5">More...</a><br /></td></tr>
<tr class="separator:a4e3485ec2d4cc77a04795d2047ccb7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d57f0978079a4c218c3c4642bd4faa0"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a2d57f0978079a4c218c3c4642bd4faa0">USBHS_GetEpType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a2d57f0978079a4c218c3c4642bd4faa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Type.  <a href="#a2d57f0978079a4c218c3c4642bd4faa0">More...</a><br /></td></tr>
<tr class="separator:a2d57f0978079a4c218c3c4642bd4faa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af11bea4c155867153ce6a0ae7700d671"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af11bea4c155867153ce6a0ae7700d671">USBHS_GetEpSize</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:af11bea4c155867153ce6a0ae7700d671"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Size.  <a href="#af11bea4c155867153ce6a0ae7700d671">More...</a><br /></td></tr>
<tr class="separator:af11bea4c155867153ce6a0ae7700d671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b1095cf2511e7d84ba5e9f47f017c0e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a3b1095cf2511e7d84ba5e9f47f017c0e">USBHS_SetIsoTrans</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint8_t nbTrans)</td></tr>
<tr class="memdesc:a3b1095cf2511e7d84ba5e9f47f017c0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets ISO endpoint's Number of <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> for High Speed.  <a href="#a3b1095cf2511e7d84ba5e9f47f017c0e">More...</a><br /></td></tr>
<tr class="separator:a3b1095cf2511e7d84ba5e9f47f017c0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c55fa48fbb95b2e0f67b58ca4cde49"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a53c55fa48fbb95b2e0f67b58ca4cde49">USBHS_IsEpIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpIntType)</td></tr>
<tr class="memdesc:a53c55fa48fbb95b2e0f67b58ca4cde49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check for interrupt types enabled for a given endpoint.  <a href="#a53c55fa48fbb95b2e0f67b58ca4cde49">More...</a><br /></td></tr>
<tr class="separator:a53c55fa48fbb95b2e0f67b58ca4cde49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9251af935e4867afa52cd306e8c699"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6e9251af935e4867afa52cd306e8c699">USBHS_EnableEPIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpInt)</td></tr>
<tr class="memdesc:a6e9251af935e4867afa52cd306e8c699"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables an interrupt type for a given endpoint.  <a href="#a6e9251af935e4867afa52cd306e8c699">More...</a><br /></td></tr>
<tr class="separator:a6e9251af935e4867afa52cd306e8c699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e6709db254f3275a10b9725847c95a3"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5e6709db254f3275a10b9725847c95a3">USBHS_IsBankKilled</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a5e6709db254f3275a10b9725847c95a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables an interrupt type for a given endpoint.  <a href="#a5e6709db254f3275a10b9725847c95a3">More...</a><br /></td></tr>
<tr class="separator:a5e6709db254f3275a10b9725847c95a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9bf1bccb73956ec13630d2e60a8c5ad"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae9bf1bccb73956ec13630d2e60a8c5ad">USBHS_KillBank</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:ae9bf1bccb73956ec13630d2e60a8c5ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables an interrupt type for a given endpoint.  <a href="#ae9bf1bccb73956ec13630d2e60a8c5ad">More...</a><br /></td></tr>
<tr class="separator:ae9bf1bccb73956ec13630d2e60a8c5ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed77f2f7b0383514691381d53de5605f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aed77f2f7b0383514691381d53de5605f">USBHS_DisableEPIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpInt)</td></tr>
<tr class="memdesc:aed77f2f7b0383514691381d53de5605f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables an interrupt type for a given endpoint.  <a href="#aed77f2f7b0383514691381d53de5605f">More...</a><br /></td></tr>
<tr class="separator:aed77f2f7b0383514691381d53de5605f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6af2b5fe38366a2ff6922c00f8f4252e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6af2b5fe38366a2ff6922c00f8f4252e">USBHS_AckEpInterrupt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpInt)</td></tr>
<tr class="memdesc:a6af2b5fe38366a2ff6922c00f8f4252e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears register/acknowledge for a given endpoint.  <a href="#a6af2b5fe38366a2ff6922c00f8f4252e">More...</a><br /></td></tr>
<tr class="separator:a6af2b5fe38366a2ff6922c00f8f4252e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e969e0c7fb49b1d25dd4e97afe3b0f7"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7e969e0c7fb49b1d25dd4e97afe3b0f7">USBHS_RaiseEPInt</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpInt)</td></tr>
<tr class="memdesc:a7e969e0c7fb49b1d25dd4e97afe3b0f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets/Raise register for a given endpoint.  <a href="#a7e969e0c7fb49b1d25dd4e97afe3b0f7">More...</a><br /></td></tr>
<tr class="separator:a7e969e0c7fb49b1d25dd4e97afe3b0f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc21e0a5d2ce477178c31b3a3049bd33"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abc21e0a5d2ce477178c31b3a3049bd33">USBHS_ReadEPStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep, uint32_t EpInt)</td></tr>
<tr class="memdesc:abc21e0a5d2ce477178c31b3a3049bd33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets interrupt status for a given EP.  <a href="#abc21e0a5d2ce477178c31b3a3049bd33">More...</a><br /></td></tr>
<tr class="separator:abc21e0a5d2ce477178c31b3a3049bd33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8d5c4b9a4a142b1c587fcfaa7532596"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa8d5c4b9a4a142b1c587fcfaa7532596">USBHS_IsBankFree</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:aa8d5c4b9a4a142b1c587fcfaa7532596"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if given endpoint's bank is free.  <a href="#aa8d5c4b9a4a142b1c587fcfaa7532596">More...</a><br /></td></tr>
<tr class="separator:aa8d5c4b9a4a142b1c587fcfaa7532596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d81aab8cc8040ea0ff66544608efc50"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a9d81aab8cc8040ea0ff66544608efc50">USBHS_NumOfBanksInUse</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a9d81aab8cc8040ea0ff66544608efc50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read endpoint's bank number in use.  <a href="#a9d81aab8cc8040ea0ff66544608efc50">More...</a><br /></td></tr>
<tr class="separator:a9d81aab8cc8040ea0ff66544608efc50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a707dc91ebe546e554ca6e64223ef426f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a707dc91ebe546e554ca6e64223ef426f">USBHS_ByteCount</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Ep)</td></tr>
<tr class="memdesc:a707dc91ebe546e554ca6e64223ef426f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read endpoint's byte count of the FIFO.  <a href="#a707dc91ebe546e554ca6e64223ef426f">More...</a><br /></td></tr>
<tr class="separator:a707dc91ebe546e554ca6e64223ef426f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa20d88900497b237fa89404ae14b140"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#afa20d88900497b237fa89404ae14b140">USBHS_SetDmaNDA</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma, uint32_t Desc)</td></tr>
<tr class="memdesc:afa20d88900497b237fa89404ae14b140"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets DMA next descriptor address.  <a href="#afa20d88900497b237fa89404ae14b140">More...</a><br /></td></tr>
<tr class="separator:afa20d88900497b237fa89404ae14b140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92c0c433bddc911ac0b42dc1a6aa9be7"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a92c0c433bddc911ac0b42dc1a6aa9be7">USBHS_GetDmaNDA</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:a92c0c433bddc911ac0b42dc1a6aa9be7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets DMA next descriptor address.  <a href="#a92c0c433bddc911ac0b42dc1a6aa9be7">More...</a><br /></td></tr>
<tr class="separator:a92c0c433bddc911ac0b42dc1a6aa9be7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9705f77c87a304d55e72f6fd13dd77d"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad9705f77c87a304d55e72f6fd13dd77d">USBHS_SetDmaBuffAdd</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma, uint32_t Addr)</td></tr>
<tr class="memdesc:ad9705f77c87a304d55e72f6fd13dd77d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USBHS's DMA Buffer addresse.  <a href="#ad9705f77c87a304d55e72f6fd13dd77d">More...</a><br /></td></tr>
<tr class="separator:ad9705f77c87a304d55e72f6fd13dd77d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71498936e654a68761986daf5ba0f425"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a71498936e654a68761986daf5ba0f425">USBHS_GetDmaBuffAdd</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:a71498936e654a68761986daf5ba0f425"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USBHS's DMA Buffer addresse.  <a href="#a71498936e654a68761986daf5ba0f425">More...</a><br /></td></tr>
<tr class="separator:a71498936e654a68761986daf5ba0f425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3609af8e5813e7837a44ad8de0946fc5"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a3609af8e5813e7837a44ad8de0946fc5">USBHS_ConfigureDma</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma, uint32_t Cfg)</td></tr>
<tr class="memdesc:a3609af8e5813e7837a44ad8de0946fc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the USBHS DMA.  <a href="#a3609af8e5813e7837a44ad8de0946fc5">More...</a><br /></td></tr>
<tr class="separator:a3609af8e5813e7837a44ad8de0946fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fe3ee05a1f5c5deb68b6c98b35bde96"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6fe3ee05a1f5c5deb68b6c98b35bde96">USBHS_GetDmaConfiguration</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:a6fe3ee05a1f5c5deb68b6c98b35bde96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get DMA configuration.  <a href="#a6fe3ee05a1f5c5deb68b6c98b35bde96">More...</a><br /></td></tr>
<tr class="separator:a6fe3ee05a1f5c5deb68b6c98b35bde96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d65b0e58e932f41022db1020418d779"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a1d65b0e58e932f41022db1020418d779">USBHS_SetDmaStatus</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma, uint32_t Status)</td></tr>
<tr class="memdesc:a1d65b0e58e932f41022db1020418d779"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set DMA status.  <a href="#a1d65b0e58e932f41022db1020418d779">More...</a><br /></td></tr>
<tr class="separator:a1d65b0e58e932f41022db1020418d779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf7bc46296d9353fa33a82ee8a1a2ace"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abf7bc46296d9353fa33a82ee8a1a2ace">USBHS_GetDmaStatus</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:abf7bc46296d9353fa33a82ee8a1a2ace"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Dma Status.  <a href="#abf7bc46296d9353fa33a82ee8a1a2ace">More...</a><br /></td></tr>
<tr class="separator:abf7bc46296d9353fa33a82ee8a1a2ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae864a5b84b9053ceeb6c63bf344a9e98"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae864a5b84b9053ceeb6c63bf344a9e98">USBHS_GetDmaBuffCount</a> (<a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:ae864a5b84b9053ceeb6c63bf344a9e98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get DMA buffer's count.  <a href="#ae864a5b84b9053ceeb6c63bf344a9e98">More...</a><br /></td></tr>
<tr class="separator:ae864a5b84b9053ceeb6c63bf344a9e98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5209f422709bb346dd8906a84594481"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af5209f422709bb346dd8906a84594481">USBHS_SetHostHighSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:af5209f422709bb346dd8906a84594481"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host's speed to Normal , it sets to HS from FS.  <a href="#af5209f422709bb346dd8906a84594481">More...</a><br /></td></tr>
<tr class="separator:af5209f422709bb346dd8906a84594481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a0f50a2b2c067387aea7776a4adb520"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a0a0f50a2b2c067387aea7776a4adb520">USBHS_SetHostLowSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a0a0f50a2b2c067387aea7776a4adb520"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host's speed to Low speed.  <a href="#a0a0f50a2b2c067387aea7776a4adb520">More...</a><br /></td></tr>
<tr class="separator:a0a0f50a2b2c067387aea7776a4adb520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78e6e590ea87684b5db71615ba87caec"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a78e6e590ea87684b5db71615ba87caec">USBHS_SetHostForcedFullSpeed</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a78e6e590ea87684b5db71615ba87caec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host's speed to forced Full speed.  <a href="#a78e6e590ea87684b5db71615ba87caec">More...</a><br /></td></tr>
<tr class="separator:a78e6e590ea87684b5db71615ba87caec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a165ebc9ef9f9199f9c4c7163e8b3872f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a165ebc9ef9f9199f9c4c7163e8b3872f">USBHS_Reset</a> (void)</td></tr>
<tr class="memdesc:a165ebc9ef9f9199f9c4c7163e8b3872f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host sends reste signal on USB Bus.  <a href="#a165ebc9ef9f9199f9c4c7163e8b3872f">More...</a><br /></td></tr>
<tr class="separator:a165ebc9ef9f9199f9c4c7163e8b3872f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac479594b09aba35a095529855449a42"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aac479594b09aba35a095529855449a42">USBHS_StopReset</a> (void)</td></tr>
<tr class="memdesc:aac479594b09aba35a095529855449a42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host sends reste signal on USB Bus.  <a href="#aac479594b09aba35a095529855449a42">More...</a><br /></td></tr>
<tr class="separator:aac479594b09aba35a095529855449a42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe1074ea76550225e959d5628d6b38a4"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abe1074ea76550225e959d5628d6b38a4">USBHS_Resume</a> (void)</td></tr>
<tr class="memdesc:abe1074ea76550225e959d5628d6b38a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host send Resume on USB bus.  <a href="#abe1074ea76550225e959d5628d6b38a4">More...</a><br /></td></tr>
<tr class="separator:abe1074ea76550225e959d5628d6b38a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac783c1af3755deab237694ce7b4579bf"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac783c1af3755deab237694ce7b4579bf">USBHS_EnableSOF</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:ac783c1af3755deab237694ce7b4579bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host Enable the Generation of Start of Frame.  <a href="#ac783c1af3755deab237694ce7b4579bf">More...</a><br /></td></tr>
<tr class="separator:ac783c1af3755deab237694ce7b4579bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c26cb8e5bbda68e2ab8a379a7bd001"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a00c26cb8e5bbda68e2ab8a379a7bd001">USBHS_IsEnableSOF</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs)</td></tr>
<tr class="memdesc:a00c26cb8e5bbda68e2ab8a379a7bd001"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host Enable the Generation of Start of Frame.  <a href="#a00c26cb8e5bbda68e2ab8a379a7bd001">More...</a><br /></td></tr>
<tr class="separator:a00c26cb8e5bbda68e2ab8a379a7bd001"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5061d7281a8104020962d8b6291da1"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a8b5061d7281a8104020962d8b6291da1">USBHS_DisableSOF</a> (void)</td></tr>
<tr class="memdesc:a8b5061d7281a8104020962d8b6291da1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USB host disable the Generation of Start of Frame.  <a href="#a8b5061d7281a8104020962d8b6291da1">More...</a><br /></td></tr>
<tr class="separator:a8b5061d7281a8104020962d8b6291da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40267eb93445cc78fe9b243d25622f9c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a40267eb93445cc78fe9b243d25622f9c">USBHS_GetHostStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t IntType)</td></tr>
<tr class="memdesc:a40267eb93445cc78fe9b243d25622f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a40267eb93445cc78fe9b243d25622f9c">More...</a><br /></td></tr>
<tr class="separator:a40267eb93445cc78fe9b243d25622f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49d4f490d00f476a36e2d0c073dc0af8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a49d4f490d00f476a36e2d0c073dc0af8">USBHS_GetHostPipeStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a49d4f490d00f476a36e2d0c073dc0af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a49d4f490d00f476a36e2d0c073dc0af8">More...</a><br /></td></tr>
<tr class="separator:a49d4f490d00f476a36e2d0c073dc0af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09970f012dc42f48d361f4a40e36b1bc"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a09970f012dc42f48d361f4a40e36b1bc">USBHS_GetHostDmaPipeStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a09970f012dc42f48d361f4a40e36b1bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a09970f012dc42f48d361f4a40e36b1bc">More...</a><br /></td></tr>
<tr class="separator:a09970f012dc42f48d361f4a40e36b1bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab0688b661054b73b5c9fe45e59ea015"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aab0688b661054b73b5c9fe45e59ea015">USBHS_ClearHostStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:aab0688b661054b73b5c9fe45e59ea015"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aab0688b661054b73b5c9fe45e59ea015">More...</a><br /></td></tr>
<tr class="separator:aab0688b661054b73b5c9fe45e59ea015"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72a8f0387d4cb85e1a3d247e99b1da06"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a72a8f0387d4cb85e1a3d247e99b1da06">USBHS_SetHostStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a72a8f0387d4cb85e1a3d247e99b1da06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a72a8f0387d4cb85e1a3d247e99b1da06">More...</a><br /></td></tr>
<tr class="separator:a72a8f0387d4cb85e1a3d247e99b1da06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6712bba37861acf3c7503ef6c8eed409"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6712bba37861acf3c7503ef6c8eed409">USBHS_SetHostDmaStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a6712bba37861acf3c7503ef6c8eed409"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a6712bba37861acf3c7503ef6c8eed409">More...</a><br /></td></tr>
<tr class="separator:a6712bba37861acf3c7503ef6c8eed409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e707992fde3a408663eae6e34b00deb"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a6e707992fde3a408663eae6e34b00deb">USBHS_IsHostIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t IntType)</td></tr>
<tr class="memdesc:a6e707992fde3a408663eae6e34b00deb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a6e707992fde3a408663eae6e34b00deb">More...</a><br /></td></tr>
<tr class="separator:a6e707992fde3a408663eae6e34b00deb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4bc5d3706ce41b5db3a3135b19d24d6"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad4bc5d3706ce41b5db3a3135b19d24d6">USBHS_IsHostPipeIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:ad4bc5d3706ce41b5db3a3135b19d24d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ad4bc5d3706ce41b5db3a3135b19d24d6">More...</a><br /></td></tr>
<tr class="separator:ad4bc5d3706ce41b5db3a3135b19d24d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52553a3b2b96df8b5c9f55789aeb15ad"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a52553a3b2b96df8b5c9f55789aeb15ad">USBHS_IsHostDmaIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a52553a3b2b96df8b5c9f55789aeb15ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a52553a3b2b96df8b5c9f55789aeb15ad">More...</a><br /></td></tr>
<tr class="separator:a52553a3b2b96df8b5c9f55789aeb15ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a5b060519f982e8cd29dc32754b5a9"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa9a5b060519f982e8cd29dc32754b5a9">USBHS_HostIntDisable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:aa9a5b060519f982e8cd29dc32754b5a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aa9a5b060519f982e8cd29dc32754b5a9">More...</a><br /></td></tr>
<tr class="separator:aa9a5b060519f982e8cd29dc32754b5a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4706c65710ae219aab80c2645d24fa81"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4706c65710ae219aab80c2645d24fa81">USBHS_HostPipeIntDisable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a4706c65710ae219aab80c2645d24fa81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a4706c65710ae219aab80c2645d24fa81">More...</a><br /></td></tr>
<tr class="separator:a4706c65710ae219aab80c2645d24fa81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51f04ec0f693b7abf7a10e33faacac04"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a51f04ec0f693b7abf7a10e33faacac04">USBHS_HostDmaIntDisable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:a51f04ec0f693b7abf7a10e33faacac04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a51f04ec0f693b7abf7a10e33faacac04">More...</a><br /></td></tr>
<tr class="separator:a51f04ec0f693b7abf7a10e33faacac04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ac646519dfb6c319d8a60f08b5e4c29"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7ac646519dfb6c319d8a60f08b5e4c29">USBHS_HostIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint32_t IntType)</td></tr>
<tr class="memdesc:a7ac646519dfb6c319d8a60f08b5e4c29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a7ac646519dfb6c319d8a60f08b5e4c29">More...</a><br /></td></tr>
<tr class="separator:a7ac646519dfb6c319d8a60f08b5e4c29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe033170285572938d1ed3fbb01e9c3e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abe033170285572938d1ed3fbb01e9c3e">USBHS_HostPipeIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:abe033170285572938d1ed3fbb01e9c3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#abe033170285572938d1ed3fbb01e9c3e">More...</a><br /></td></tr>
<tr class="separator:abe033170285572938d1ed3fbb01e9c3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca7229dc06a00a9e8cced6870f4a827"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abca7229dc06a00a9e8cced6870f4a827">USBHS_HostDmaIntEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t PipeInt)</td></tr>
<tr class="memdesc:abca7229dc06a00a9e8cced6870f4a827"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#abca7229dc06a00a9e8cced6870f4a827">More...</a><br /></td></tr>
<tr class="separator:abca7229dc06a00a9e8cced6870f4a827"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d5100e84f17f3afd652b4813f7a5b7"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac2d5100e84f17f3afd652b4813f7a5b7">USBHS_HostGetSOF</a> (void)</td></tr>
<tr class="memdesc:ac2d5100e84f17f3afd652b4813f7a5b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ac2d5100e84f17f3afd652b4813f7a5b7">More...</a><br /></td></tr>
<tr class="separator:ac2d5100e84f17f3afd652b4813f7a5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace4d57215e8268e1e934fa376da56c83"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ace4d57215e8268e1e934fa376da56c83">USBHS_HostGetFramePos</a> (void)</td></tr>
<tr class="memdesc:ace4d57215e8268e1e934fa376da56c83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ace4d57215e8268e1e934fa376da56c83">More...</a><br /></td></tr>
<tr class="separator:ace4d57215e8268e1e934fa376da56c83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbd31f8ac6a853c865dbab561cd93683"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#abbd31f8ac6a853c865dbab561cd93683">USBHS_HostGetMSOF</a> (void)</td></tr>
<tr class="memdesc:abbd31f8ac6a853c865dbab561cd93683"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#abbd31f8ac6a853c865dbab561cd93683">More...</a><br /></td></tr>
<tr class="separator:abbd31f8ac6a853c865dbab561cd93683"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d1339dc3607194872a33cffce18e305"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a2d1339dc3607194872a33cffce18e305">USBHS_HostSetAddr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t Addr)</td></tr>
<tr class="separator:a2d1339dc3607194872a33cffce18e305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a963fd2f0eab05393ff85e14bfd909021"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a963fd2f0eab05393ff85e14bfd909021">USBHS_HostGetAddr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="separator:a963fd2f0eab05393ff85e14bfd909021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10f00de072a1cbb4c14e9d125368f3ff"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a10f00de072a1cbb4c14e9d125368f3ff">USBHS_HostPipeEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a10f00de072a1cbb4c14e9d125368f3ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a10f00de072a1cbb4c14e9d125368f3ff">More...</a><br /></td></tr>
<tr class="separator:a10f00de072a1cbb4c14e9d125368f3ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aabd40a9718b4bab7036aa5439a266f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4aabd40a9718b4bab7036aa5439a266f">USBHS_HostPipeDisable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a4aabd40a9718b4bab7036aa5439a266f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a4aabd40a9718b4bab7036aa5439a266f">More...</a><br /></td></tr>
<tr class="separator:a4aabd40a9718b4bab7036aa5439a266f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca1a73918c77f0aaa82395b55d760ae8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aca1a73918c77f0aaa82395b55d760ae8">USBHS_IsHostPipeEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:aca1a73918c77f0aaa82395b55d760ae8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aca1a73918c77f0aaa82395b55d760ae8">More...</a><br /></td></tr>
<tr class="separator:aca1a73918c77f0aaa82395b55d760ae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0f50fcf9d7a16354a3a3a1b22140a4c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af0f50fcf9d7a16354a3a3a1b22140a4c">USBHS_HostPipeReset</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:af0f50fcf9d7a16354a3a3a1b22140a4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#af0f50fcf9d7a16354a3a3a1b22140a4c">More...</a><br /></td></tr>
<tr class="separator:af0f50fcf9d7a16354a3a3a1b22140a4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7321df66563d27e92e3eee190f5f328"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad7321df66563d27e92e3eee190f5f328">USBHS_HostConfigure</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t pipeBank, uint8_t pipeSize, uint32_t pipeType, uint32_t pipeToken, uint8_t pipeEpNum, uint8_t PipeIntFreq)</td></tr>
<tr class="memdesc:ad7321df66563d27e92e3eee190f5f328"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ad7321df66563d27e92e3eee190f5f328">More...</a><br /></td></tr>
<tr class="separator:ad7321df66563d27e92e3eee190f5f328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedf0c19282a4ab894880c582f9cc4706"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aedf0c19282a4ab894880c582f9cc4706">USBHS_HostAllocMem</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:aedf0c19282a4ab894880c582f9cc4706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aedf0c19282a4ab894880c582f9cc4706">More...</a><br /></td></tr>
<tr class="separator:aedf0c19282a4ab894880c582f9cc4706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5af3c325c4029dd2830a88dcf6d8d360"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5af3c325c4029dd2830a88dcf6d8d360">USBHS_HostFreeMem</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a5af3c325c4029dd2830a88dcf6d8d360"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a5af3c325c4029dd2830a88dcf6d8d360">More...</a><br /></td></tr>
<tr class="separator:a5af3c325c4029dd2830a88dcf6d8d360"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13debb9eb4e51de70e9086d6264ee88"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac13debb9eb4e51de70e9086d6264ee88">USBHS_HostGetSize</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:ac13debb9eb4e51de70e9086d6264ee88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ac13debb9eb4e51de70e9086d6264ee88">More...</a><br /></td></tr>
<tr class="separator:ac13debb9eb4e51de70e9086d6264ee88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48f3b4774877abb73ad633b904e4caee"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a48f3b4774877abb73ad633b904e4caee">USBHS_HostSetToken</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t Token)</td></tr>
<tr class="memdesc:a48f3b4774877abb73ad633b904e4caee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a48f3b4774877abb73ad633b904e4caee">More...</a><br /></td></tr>
<tr class="separator:a48f3b4774877abb73ad633b904e4caee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e40c3d1763e18ec62b55c48edadedde"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7e40c3d1763e18ec62b55c48edadedde">USBHS_HostGetToken</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a7e40c3d1763e18ec62b55c48edadedde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a7e40c3d1763e18ec62b55c48edadedde">More...</a><br /></td></tr>
<tr class="separator:a7e40c3d1763e18ec62b55c48edadedde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f6439f7e23f6a6641ffe8e3881efe24"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5f6439f7e23f6a6641ffe8e3881efe24">USBHS_HostSetPipeType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t PipeType)</td></tr>
<tr class="memdesc:a5f6439f7e23f6a6641ffe8e3881efe24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a5f6439f7e23f6a6641ffe8e3881efe24">More...</a><br /></td></tr>
<tr class="separator:a5f6439f7e23f6a6641ffe8e3881efe24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a568fb6f40affb306e060461fe065a516"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a568fb6f40affb306e060461fe065a516">USBHS_HostGetPipeType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a568fb6f40affb306e060461fe065a516"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a568fb6f40affb306e060461fe065a516">More...</a><br /></td></tr>
<tr class="separator:a568fb6f40affb306e060461fe065a516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5b9450b58a00b6b0080285a6296595"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#afc5b9450b58a00b6b0080285a6296595">USBHS_GetPipeEpAddr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="separator:afc5b9450b58a00b6b0080285a6296595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa347527d17e6ee48869cabe3344f0b8e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa347527d17e6ee48869cabe3344f0b8e">USBHS_HostEnableAutoSw</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:aa347527d17e6ee48869cabe3344f0b8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aa347527d17e6ee48869cabe3344f0b8e">More...</a><br /></td></tr>
<tr class="separator:aa347527d17e6ee48869cabe3344f0b8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af33de4a77714a4669ec1d6c52847ce36"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#af33de4a77714a4669ec1d6c52847ce36">USBHS_HostDisableAutoSw</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:af33de4a77714a4669ec1d6c52847ce36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#af33de4a77714a4669ec1d6c52847ce36">More...</a><br /></td></tr>
<tr class="separator:af33de4a77714a4669ec1d6c52847ce36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bed8c57a0a14635f4c4f33ed5a07e3f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5bed8c57a0a14635f4c4f33ed5a07e3f">USBHS_HostSetIntFreq</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t Freq)</td></tr>
<tr class="memdesc:a5bed8c57a0a14635f4c4f33ed5a07e3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a5bed8c57a0a14635f4c4f33ed5a07e3f">More...</a><br /></td></tr>
<tr class="separator:a5bed8c57a0a14635f4c4f33ed5a07e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a732c50b940ba29ef94820ecbce731e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5a732c50b940ba29ef94820ecbce731e">USBHS_HostEnablePing</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a5a732c50b940ba29ef94820ecbce731e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a5a732c50b940ba29ef94820ecbce731e">More...</a><br /></td></tr>
<tr class="separator:a5a732c50b940ba29ef94820ecbce731e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5730218930063afe0ce2cc2b9988eff"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ab5730218930063afe0ce2cc2b9988eff">USBHS_HostGetDataTogSeq</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:ab5730218930063afe0ce2cc2b9988eff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ab5730218930063afe0ce2cc2b9988eff">More...</a><br /></td></tr>
<tr class="separator:ab5730218930063afe0ce2cc2b9988eff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a556066e182615fc6072e5b6ad6a915c0"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a556066e182615fc6072e5b6ad6a915c0">USBHS_HostGetNumOfBusyBank</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a556066e182615fc6072e5b6ad6a915c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a556066e182615fc6072e5b6ad6a915c0">More...</a><br /></td></tr>
<tr class="separator:a556066e182615fc6072e5b6ad6a915c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41abdf2ba203409795e11992182c9e22"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a41abdf2ba203409795e11992182c9e22">USBHS_HostGetCurrentBank</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a41abdf2ba203409795e11992182c9e22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a41abdf2ba203409795e11992182c9e22">More...</a><br /></td></tr>
<tr class="separator:a41abdf2ba203409795e11992182c9e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917ce318855654bd4d1ff18a24248899"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a917ce318855654bd4d1ff18a24248899">USBHS_HostGetPipeByteCount</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a917ce318855654bd4d1ff18a24248899"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a917ce318855654bd4d1ff18a24248899">More...</a><br /></td></tr>
<tr class="separator:a917ce318855654bd4d1ff18a24248899"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80888f7cf448edbebfc2cb99264e0642"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a80888f7cf448edbebfc2cb99264e0642">USBHS_IsHostConfigOk</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a80888f7cf448edbebfc2cb99264e0642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a80888f7cf448edbebfc2cb99264e0642">More...</a><br /></td></tr>
<tr class="separator:a80888f7cf448edbebfc2cb99264e0642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae752afec4dfecc9565eaa4242ce9233f"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae752afec4dfecc9565eaa4242ce9233f">USBHS_HostGetIntTypeStatus</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:ae752afec4dfecc9565eaa4242ce9233f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ae752afec4dfecc9565eaa4242ce9233f">More...</a><br /></td></tr>
<tr class="separator:ae752afec4dfecc9565eaa4242ce9233f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e601451758556ee0591fae627974d8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a97e601451758556ee0591fae627974d8">USBHS_HostAckPipeIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:a97e601451758556ee0591fae627974d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a97e601451758556ee0591fae627974d8">More...</a><br /></td></tr>
<tr class="separator:a97e601451758556ee0591fae627974d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadbfa6cd7ed91815f4a40b2a92c6d9eb"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aadbfa6cd7ed91815f4a40b2a92c6d9eb">USBHS_HostSetPipeIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:aadbfa6cd7ed91815f4a40b2a92c6d9eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aadbfa6cd7ed91815f4a40b2a92c6d9eb">More...</a><br /></td></tr>
<tr class="separator:aadbfa6cd7ed91815f4a40b2a92c6d9eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a8e28b882f4abf73c473980d36c7e06"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a0a8e28b882f4abf73c473980d36c7e06">USBHS_IsHostPipeIntTypeEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:a0a8e28b882f4abf73c473980d36c7e06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a0a8e28b882f4abf73c473980d36c7e06">More...</a><br /></td></tr>
<tr class="separator:a0a8e28b882f4abf73c473980d36c7e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c56acaace52b440a308d9bce8cafff"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a32c56acaace52b440a308d9bce8cafff">USBHS_HostDisablePipeIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:a32c56acaace52b440a308d9bce8cafff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a32c56acaace52b440a308d9bce8cafff">More...</a><br /></td></tr>
<tr class="separator:a32c56acaace52b440a308d9bce8cafff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd60bcdb7e5420ac4cfb8b457838f9ba"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#acd60bcdb7e5420ac4cfb8b457838f9ba">USBHS_HostEnablePipeIntType</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint32_t intType)</td></tr>
<tr class="memdesc:acd60bcdb7e5420ac4cfb8b457838f9ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#acd60bcdb7e5420ac4cfb8b457838f9ba">More...</a><br /></td></tr>
<tr class="separator:acd60bcdb7e5420ac4cfb8b457838f9ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25b8f588492bd5dfd9f527e3cf50d68e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a25b8f588492bd5dfd9f527e3cf50d68e">USBHS_HostEnableInReq</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a25b8f588492bd5dfd9f527e3cf50d68e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a25b8f588492bd5dfd9f527e3cf50d68e">More...</a><br /></td></tr>
<tr class="separator:a25b8f588492bd5dfd9f527e3cf50d68e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d1007b23379af5c4d286a243b4f5e1"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac0d1007b23379af5c4d286a243b4f5e1">USBHS_HostDisableInReq</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:ac0d1007b23379af5c4d286a243b4f5e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ac0d1007b23379af5c4d286a243b4f5e1">More...</a><br /></td></tr>
<tr class="separator:ac0d1007b23379af5c4d286a243b4f5e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e0d01e4f85fa4b0af1e81b3d7efc6e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a23e0d01e4f85fa4b0af1e81b3d7efc6e">USBHS_IsHostInReqEnable</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe)</td></tr>
<tr class="memdesc:a23e0d01e4f85fa4b0af1e81b3d7efc6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a23e0d01e4f85fa4b0af1e81b3d7efc6e">More...</a><br /></td></tr>
<tr class="separator:a23e0d01e4f85fa4b0af1e81b3d7efc6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedba0b8562b6d4aa35096f3db61f18c6"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aedba0b8562b6d4aa35096f3db61f18c6">USBHS_HostInReq</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t InReq)</td></tr>
<tr class="memdesc:aedba0b8562b6d4aa35096f3db61f18c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#aedba0b8562b6d4aa35096f3db61f18c6">More...</a><br /></td></tr>
<tr class="separator:aedba0b8562b6d4aa35096f3db61f18c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0cec1cec3e5e547d74d24f5df8105ac"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac0cec1cec3e5e547d74d24f5df8105ac">USBHS_HostSetErr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t Err)</td></tr>
<tr class="memdesc:ac0cec1cec3e5e547d74d24f5df8105ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ac0cec1cec3e5e547d74d24f5df8105ac">More...</a><br /></td></tr>
<tr class="separator:ac0cec1cec3e5e547d74d24f5df8105ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3696a9240e22b2d40ee76d19633bed5"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ac3696a9240e22b2d40ee76d19633bed5">USBHS_HostGetErr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t Err)</td></tr>
<tr class="memdesc:ac3696a9240e22b2d40ee76d19633bed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#ac3696a9240e22b2d40ee76d19633bed5">More...</a><br /></td></tr>
<tr class="separator:ac3696a9240e22b2d40ee76d19633bed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d2c49f1194cc78dea81c614f36a06e8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a5d2c49f1194cc78dea81c614f36a06e8">USBHS_HostClearErr</a> (<a class="el" href="struct_usbhs.xhtml">Usbhs</a> *pUsbhs, uint8_t Pipe, uint8_t Err)</td></tr>
<tr class="memdesc:a5d2c49f1194cc78dea81c614f36a06e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USB host interrupt status.  <a href="#a5d2c49f1194cc78dea81c614f36a06e8">More...</a><br /></td></tr>
<tr class="separator:a5d2c49f1194cc78dea81c614f36a06e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a925f2d3fbc5551f3dc3968600ae6512c"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a925f2d3fbc5551f3dc3968600ae6512c">USBHS_GetInterruptPipeNum</a> (void)</td></tr>
<tr class="separator:a925f2d3fbc5551f3dc3968600ae6512c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa52d6c3bffaf6b6846f1682eb01c64a2"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#aa52d6c3bffaf6b6846f1682eb01c64a2">USBHS_GetInterruptPipeDmaNum</a> (void)</td></tr>
<tr class="separator:aa52d6c3bffaf6b6846f1682eb01c64a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4828debdb88457e95b11228e17e3272e"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a4828debdb88457e95b11228e17e3272e">USBHS_SetHostDmaNDA</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma, uint32_t Desc)</td></tr>
<tr class="memdesc:a4828debdb88457e95b11228e17e3272e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets DMA next descriptor address.  <a href="#a4828debdb88457e95b11228e17e3272e">More...</a><br /></td></tr>
<tr class="separator:a4828debdb88457e95b11228e17e3272e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1550cd9ab1fca40ec953dcab04ae6321"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a1550cd9ab1fca40ec953dcab04ae6321">USBHS_GetHostDmaNDA</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:a1550cd9ab1fca40ec953dcab04ae6321"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets DMA next descriptor address.  <a href="#a1550cd9ab1fca40ec953dcab04ae6321">More...</a><br /></td></tr>
<tr class="separator:a1550cd9ab1fca40ec953dcab04ae6321"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b7dcd419b41dc75bdf1ed56fea79075"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a7b7dcd419b41dc75bdf1ed56fea79075">USBHS_SetHostDmaBuffAdd</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma, uint32_t Addr)</td></tr>
<tr class="memdesc:a7b7dcd419b41dc75bdf1ed56fea79075"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets USBHS's DMA Buffer addresse.  <a href="#a7b7dcd419b41dc75bdf1ed56fea79075">More...</a><br /></td></tr>
<tr class="separator:a7b7dcd419b41dc75bdf1ed56fea79075"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f0f173c0eba29fbde8f0db687c9937"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae8f0f173c0eba29fbde8f0db687c9937">USBHS_GetHostDmaBuffAdd</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:ae8f0f173c0eba29fbde8f0db687c9937"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets USBHS's DMA Buffer addresse.  <a href="#ae8f0f173c0eba29fbde8f0db687c9937">More...</a><br /></td></tr>
<tr class="separator:ae8f0f173c0eba29fbde8f0db687c9937"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad212cc35348ff023533b9a47aba79345"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad212cc35348ff023533b9a47aba79345">USBHS_HostConfigureDma</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma, uint32_t Cfg)</td></tr>
<tr class="memdesc:ad212cc35348ff023533b9a47aba79345"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup the USBHS DMA.  <a href="#ad212cc35348ff023533b9a47aba79345">More...</a><br /></td></tr>
<tr class="separator:ad212cc35348ff023533b9a47aba79345"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5c1c8dce25698d0d219825643f2ab16"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ad5c1c8dce25698d0d219825643f2ab16">USBHS_GetHostDmaConfiguration</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:ad5c1c8dce25698d0d219825643f2ab16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get DMA configuration.  <a href="#ad5c1c8dce25698d0d219825643f2ab16">More...</a><br /></td></tr>
<tr class="separator:ad5c1c8dce25698d0d219825643f2ab16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0a251b709650e942fdd7d55c8eff5d8"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#ae0a251b709650e942fdd7d55c8eff5d8">USBHS_SetHostPipeDmaStatus</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma, uint32_t Status)</td></tr>
<tr class="memdesc:ae0a251b709650e942fdd7d55c8eff5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set DMA status.  <a href="#ae0a251b709650e942fdd7d55c8eff5d8">More...</a><br /></td></tr>
<tr class="separator:ae0a251b709650e942fdd7d55c8eff5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a867c067ec59082580389661c677469ea"><td class="memItemLeft" align="right" valign="top">__STATIC_INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usbhs_8h.xhtml#a867c067ec59082580389661c677469ea">USBHS_GetHostPipeDmaStatus</a> (<a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *pUsbDma)</td></tr>
<tr class="memdesc:a867c067ec59082580389661c677469ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Dma Status.  <a href="#a867c067ec59082580389661c677469ea">More...</a><br /></td></tr>
<tr class="separator:a867c067ec59082580389661c677469ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a1e17be7a8b9f3a7fa532293e5a776fed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e17be7a8b9f3a7fa532293e5a776fed">&sect;&nbsp;</a></span>CHIP_USB_DMA_NUMPIPE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_DMA_NUMPIPE&#160;&#160;&#160;7</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of USB endpoints. </p>

</div>
</div>
<a id="ab66857dec68cedaa0b3d3008296ffd97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab66857dec68cedaa0b3d3008296ffd97">&sect;&nbsp;</a></span>CHIP_USB_ENDPOINTS_BANKS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_ENDPOINTS_BANKS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((ep==0)?1:((ep&lt;=2)?3:2))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints Number of Bank. </p>

</div>
</div>
<a id="a3d3e0780955f1f3796b59c297a9ce778"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d3e0780955f1f3796b59c297a9ce778">&sect;&nbsp;</a></span>CHIP_USB_ENDPOINTS_DMA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_ENDPOINTS_DMA</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((((ep)&gt;=1)&amp;&amp;((ep)&lt;=7))?true:false)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints DMA support. </p>

</div>
</div>
<a id="a7e2e1c55a12f4f9bbe7752da20a2fd96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e2e1c55a12f4f9bbe7752da20a2fd96">&sect;&nbsp;</a></span>CHIP_USB_ENDPOINTS_HBW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_ENDPOINTS_HBW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((((ep)&gt;=1) &amp;&amp;((ep)&lt;=2))?true:false)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5865e5e766958f78b10bee61f42abd44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5865e5e766958f78b10bee61f42abd44">&sect;&nbsp;</a></span>CHIP_USB_ENDPOINTS_MAXPACKETSIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_ENDPOINTS_MAXPACKETSIZE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((ep == 0) ? 64 : 1024)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints max packet size. </p>

</div>
</div>
<a id="ab1098bd73746d6f0b0ab28975d2a5043"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1098bd73746d6f0b0ab28975d2a5043">&sect;&nbsp;</a></span>CHIP_USB_NUMENDPOINTS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_NUMENDPOINTS&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of USB endpoints. </p>

</div>
</div>
<a id="a8f0b960f10c286e7cd0e0b736aa1e4db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f0b960f10c286e7cd0e0b736aa1e4db">&sect;&nbsp;</a></span>CHIP_USB_NUMPIPE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_NUMPIPE&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of USB endpoints. </p>

</div>
</div>
<a id="a0dd7d33f558f878925c4aa8f2f6dc96d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dd7d33f558f878925c4aa8f2f6dc96d">&sect;&nbsp;</a></span>CHIP_USB_PIPE_BANKS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_PIPE_BANKS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((ep==0)?1:((ep&lt;=2)?3:2))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints Number of Bank. </p>

</div>
</div>
<a id="a375cc1a475941bb356f59c53aae6c951"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a375cc1a475941bb356f59c53aae6c951">&sect;&nbsp;</a></span>CHIP_USB_PIPE_DMA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_PIPE_DMA</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((((ep)&gt;=1)&amp;&amp;((ep)&lt;=7))?true:false)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints DMA support. </p>

</div>
</div>
<a id="a4c5810023965f423d4f2870a8d5c42d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c5810023965f423d4f2870a8d5c42d8">&sect;&nbsp;</a></span>CHIP_USB_PIPE_HBW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_PIPE_HBW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((((ep)&gt;=1) &amp;&amp;((ep)&lt;=2))?true:false)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7d5ac656db4059a4b765bf4e239d8fe5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d5ac656db4059a4b765bf4e239d8fe5">&sect;&nbsp;</a></span>CHIP_USB_PIPE_MAXPACKETSIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_PIPE_MAXPACKETSIZE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((ep == 0) ? 64 : 1024)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Endpoints max paxcket size. </p>

</div>
</div>
<a id="a4bcc957f1288dac54003f5a0045b2cd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bcc957f1288dac54003f5a0045b2cd7">&sect;&nbsp;</a></span>CHIP_USB_PULLUP_INTERNAL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_PULLUP_INTERNAL</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates chip has an internal pull-up. </p>

</div>
</div>
<a id="a0d5301f4b6b7c4dc59bdd76d725c9517"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d5301f4b6b7c4dc59bdd76d725c9517">&sect;&nbsp;</a></span>CHIP_USB_UDP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHIP_USB_UDP</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates chip has an UDP High Speed. </p>

</div>
</div>
<a id="a74fb9f0009ae61530ac99e19744fc7f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74fb9f0009ae61530ac99e19744fc7f1">&sect;&nbsp;</a></span>DMA_MAX_FIFO_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DMA_MAX_FIFO_SIZE&#160;&#160;&#160;(65536/1)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Max size of the FMA FIFO. </p>

</div>
</div>
<a id="a19e18c1683b682fc01056cbf2b2b92f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19e18c1683b682fc01056cbf2b2b92f6">&sect;&nbsp;</a></span>EPT_VIRTUAL_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EPT_VIRTUAL_SIZE&#160;&#160;&#160;8192</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>fifo space size in DW </p>

</div>
</div>
<a id="adaafe4bea8556d5c5450ea0ccd9c3a5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaafe4bea8556d5c5450ea0ccd9c3a5a">&sect;&nbsp;</a></span>Is_uhd_pipe_dma_supported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Is_uhd_pipe_dma_supported</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((((ep) &gt;= 1) &amp;&amp; ((ep) &lt;= 7)) ? <a class="el" href="group__interrupt__deprecated__group.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a> : <a class="el" href="group__interrupt__deprecated__group.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get DMA support of endpoints. </p>

</div>
</div>
<a id="a76e49fb3750180b6ccea5ac32d116750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76e49fb3750180b6ccea5ac32d116750">&sect;&nbsp;</a></span>Is_uhd_pipe_high_bw_supported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Is_uhd_pipe_high_bw_supported</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;(((ep) &gt;= 2) ? <a class="el" href="group__interrupt__deprecated__group.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a> : <a class="el" href="group__interrupt__deprecated__group.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get High Band Width support of endpoints. </p>

</div>
</div>
<a id="a8e9a4982629968460f6472cf7813788c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e9a4982629968460f6472cf7813788c">&sect;&nbsp;</a></span>uhd_get_pipe_bank_max_nbr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define uhd_get_pipe_bank_max_nbr</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;((ep == 0) ? 1 : ((ep &lt;= 2) ? 3 : 2))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get maximal number of banks of endpoints. </p>

</div>
</div>
<a id="aa5f5ca88197f685002326eec705dbbc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5f5ca88197f685002326eec705dbbc5">&sect;&nbsp;</a></span>uhd_get_pipe_max_nbr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define uhd_get_pipe_max_nbr</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;(9)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5775674eb9ca9bb966daf595adc66c76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5775674eb9ca9bb966daf595adc66c76">&sect;&nbsp;</a></span>uhd_get_pipe_size_max</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define uhd_get_pipe_size_max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ep</td><td>)</td>
          <td>&#160;&#160;&#160;(((ep) == 0) ? 64 : 1024)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get maximal size of endpoint (3X, 1024/64) </p>

</div>
</div>
<a id="a11838ca412e5e6a51e9a3769bfa989f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11838ca412e5e6a51e9a3769bfa989f5">&sect;&nbsp;</a></span>UHD_PIPE_MAX_TRANS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHD_PIPE_MAX_TRANS&#160;&#160;&#160;0x8000</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum transfer size on USB DMA. </p>

</div>
</div>
<a id="a67d99007f1886e516e6705e19c38b541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67d99007f1886e516e6705e19c38b541">&sect;&nbsp;</a></span>USB_DEVICE_EP_CTRL_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USB_DEVICE_EP_CTRL_SIZE&#160;&#160;&#160;64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Control endpoint size. </p>

</div>
</div>
<a id="a6173ff7dcc4e8e590311c774d7214e9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6173ff7dcc4e8e590311c774d7214e9b">&sect;&nbsp;</a></span>USB_DEVICE_HS_SUPPORT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USB_DEVICE_HS_SUPPORT</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>addtogroup usbd_hal </p>

</div>
</div>
<a id="a6095628336ad1cdd9336b4c1f5baef35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6095628336ad1cdd9336b4c1f5baef35">&sect;&nbsp;</a></span>USBHS_EPT_NUM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USBHS_EPT_NUM&#160;&#160;&#160;(<a class="el" href="usbhs_8h.xhtml#aa5f5ca88197f685002326eec705dbbc5">uhd_get_pipe_max_nbr</a>()+1)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ac7b897ea707bd670c7b3898ac266a5f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7b897ea707bd670c7b3898ac266a5f8">&sect;&nbsp;</a></span>USB_Mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8">USB_Mode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ac7b897ea707bd670c7b3898ac266a5f8ae491a780283b565b0b53517c74ffb6ec"></a>HOST_MODE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ac7b897ea707bd670c7b3898ac266a5f8a56f1a0d172408f729f14b187693fc770"></a>DEVICE_MODE&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="abb9881c68cce5603acf01ad61966bf07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb9881c68cce5603acf01ad61966bf07">&sect;&nbsp;</a></span>USBHS_Ack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_Ack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>AckType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Raise interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">AckType</td><td>Interrupt Acknowledge type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abb9881c68cce5603acf01ad61966bf07_icgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6af2b5fe38366a2ff6922c00f8f4252e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6af2b5fe38366a2ff6922c00f8f4252e">&sect;&nbsp;</a></span>USBHS_AckEpInterrupt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_AckEpInterrupt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears register/acknowledge for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a6af2b5fe38366a2ff6922c00f8f4252e_icgraph.svg" width="412" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe473ec759ec7837e7105d001df93c88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe473ec759ec7837e7105d001df93c88">&sect;&nbsp;</a></span>USBHS_AckInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_AckInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Acknowledge interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt Type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abe473ec759ec7837e7105d001df93c88_icgraph.svg" width="327" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a95e89705c54999e79a3a53b6505e95e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95e89705c54999e79a3a53b6505e95e6">&sect;&nbsp;</a></span>USBHS_AllocateMemory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_AllocateMemory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> memory. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a95e89705c54999e79a3a53b6505e95e6_icgraph.svg" width="415" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af318fefb03c995978a740a8b1733aaa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af318fefb03c995978a740a8b1733aaa0">&sect;&nbsp;</a></span>USBHS_AutoSwitchBankEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_AutoSwitchBankEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable Auto switch of banks. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af318fefb03c995978a740a8b1733aaa0_icgraph.svg" width="459" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a707dc91ebe546e554ca6e64223ef426f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a707dc91ebe546e554ca6e64223ef426f">&sect;&nbsp;</a></span>USBHS_ByteCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_ByteCount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read endpoint's byte count of the FIFO. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a707dc91ebe546e554ca6e64223ef426f_icgraph.svg" width="390" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aab0688b661054b73b5c9fe45e59ea015"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab0688b661054b73b5c9fe45e59ea015">&sect;&nbsp;</a></span>USBHS_ClearHostStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_ClearHostStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aab0688b661054b73b5c9fe45e59ea015_icgraph.svg" width="448" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3609af8e5813e7837a44ad8de0946fc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3609af8e5813e7837a44ad8de0946fc5">&sect;&nbsp;</a></span>USBHS_ConfigureDma()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_ConfigureDma </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Cfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup the USBHS DMA. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Cfg</td><td>DMA's configuration </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a3609af8e5813e7837a44ad8de0946fc5_icgraph.svg" width="374" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23400301b1f5ce8e97834db2a2a2cc1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23400301b1f5ce8e97834db2a2a2cc1b">&sect;&nbsp;</a></span>USBHS_ConfigureEPs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_ConfigureEPs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>Dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>Size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>Bank</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Endpoints configuration Bank size, type and direction. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a23400301b1f5ce8e97834db2a2a2cc1b_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad50e0487f36c3b575f0a509be89a103c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad50e0487f36c3b575f0a509be89a103c">&sect;&nbsp;</a></span>USBHS_DetachUsb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DetachUsb </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Attach or detach USB. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Attachs or detach USB device </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ad50e0487f36c3b575f0a509be89a103c_icgraph.svg" width="376" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa0d4d68174be285f39499774b2edb1d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0d4d68174be285f39499774b2edb1d8">&sect;&nbsp;</a></span>USBHS_DisableDMAIntEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DisableDMAIntEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>DmaEp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables DMA interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">DmaEp</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>'s DMA number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aed77f2f7b0383514691381d53de5605f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed77f2f7b0383514691381d53de5605f">&sect;&nbsp;</a></span>USBHS_DisableEPIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DisableEPIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables an interrupt type for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aed77f2f7b0383514691381d53de5605f_icgraph.svg" width="424" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1e6f755e0017750683a52c6d2640ce9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6f755e0017750683a52c6d2640ce9b">&sect;&nbsp;</a></span>USBHS_DisableInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DisableInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Int type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a1e6f755e0017750683a52c6d2640ce9b_icgraph.svg" width="324" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6b0323c3e931a4c757ca8cbb2987869f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b0323c3e931a4c757ca8cbb2987869f">&sect;&nbsp;</a></span>USBHS_DisableIntEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DisableIntEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Ep</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a6b0323c3e931a4c757ca8cbb2987869f_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8b5061d7281a8104020962d8b6291da1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b5061d7281a8104020962d8b6291da1">&sect;&nbsp;</a></span>USBHS_DisableSOF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_DisableSOF </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host disable the Generation of Start of Frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a8b5061d7281a8104020962d8b6291da1_icgraph.svg" width="416" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae12eb708d1efa8847725bfbef153b21f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae12eb708d1efa8847725bfbef153b21f">&sect;&nbsp;</a></span>USBHS_EnableAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">SetStatus</td><td>Set USB status </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ae12eb708d1efa8847725bfbef153b21f_icgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad1cea33281f84fba93b0b4ecd554ce3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1cea33281f84fba93b0b4ecd554ce3a">&sect;&nbsp;</a></span>USBHS_EnableDMAIntEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableDMAIntEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>DmaEp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables DMA interrupt for a given endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">DmaEp</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>'s DMA interrupt number </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ad1cea33281f84fba93b0b4ecd554ce3a_icgraph.svg" width="406" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aafe79c1addd8c03522a0228ae4b6dae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafe79c1addd8c03522a0228ae4b6dae3">&sect;&nbsp;</a></span>USBHS_EnableEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enable/disable endpoint </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aafe79c1addd8c03522a0228ae4b6dae3_icgraph.svg" width="371" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6e9251af935e4867afa52cd306e8c699"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9251af935e4867afa52cd306e8c699">&sect;&nbsp;</a></span>USBHS_EnableEPIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableEPIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables an interrupt type for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a6e9251af935e4867afa52cd306e8c699_icgraph.svg" width="415" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a46ba14559a5a635598a47d24943769ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46ba14559a5a635598a47d24943769ba">&sect;&nbsp;</a></span>USBHS_EnableHighSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableHighSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable/Enables High Speed mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enables/disable option </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a46ba14559a5a635598a47d24943769ba_icgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a77c8c380dc3c3bf46b533682d02602"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a77c8c380dc3c3bf46b533682d02602">&sect;&nbsp;</a></span>USBHS_EnableHSTestMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableHSTestMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable/Enables HS Test mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a792065de6dd29d4153426526555d4d07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a792065de6dd29d4153426526555d4d07">&sect;&nbsp;</a></span>USBHS_EnableInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables Interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt Type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a792065de6dd29d4153426526555d4d07_icgraph.svg" width="347" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaefdcd5f8be021f6ebffcbb4e7630079"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaefdcd5f8be021f6ebffcbb4e7630079">&sect;&nbsp;</a></span>USBHS_EnableIntEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableIntEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>EpNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables interrupt for a given endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">DmaNum</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>'s DMA number </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aaefdcd5f8be021f6ebffcbb4e7630079_icgraph.svg" width="387" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac783c1af3755deab237694ce7b4579bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac783c1af3755deab237694ce7b4579bf">&sect;&nbsp;</a></span>USBHS_EnableSOF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableSOF </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host Enable the Generation of Start of Frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ac783c1af3755deab237694ce7b4579bf_icgraph.svg" width="355" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a526a6421c946527e98a5cd7a426f5254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a526a6421c946527e98a5cd7a426f5254">&sect;&nbsp;</a></span>USBHS_EnableTestMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_EnableTestMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable/Enables Test mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">mode</td><td>Enables/disable option </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a526a6421c946527e98a5cd7a426f5254_icgraph.svg" width="363" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a01683824f83ab460ca383457ca156051"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01683824f83ab460ca383457ca156051">&sect;&nbsp;</a></span>USBHS_ForceLowSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_ForceLowSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Force Low Speed mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enables the Full speed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3f0c342daf3fd2154c551af251aeac9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f0c342daf3fd2154c551af251aeac9b">&sect;&nbsp;</a></span>USBHS_FreeMemory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_FreeMemory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free allocated <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> memory. </p>

</div>
</div>
<a id="a07183fee11fbf4c00401b455bdfed9dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07183fee11fbf4c00401b455bdfed9dd">&sect;&nbsp;</a></span>USBHS_FreezeClock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_FreezeClock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><hr/>
 <h1>USBHS_CTRL </h1>
</p>
<p>Freeze or unfreeze USB clock </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enable or disable </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a07183fee11fbf4c00401b455bdfed9dd_icgraph.svg" width="419" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa3cab362870739aaf4e5fe4dfc224710"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3cab362870739aaf4e5fe4dfc224710">&sect;&nbsp;</a></span>USBHS_GetAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4e3485ec2d4cc77a04795d2047ccb7d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e3485ec2d4cc77a04795d2047ccb7d5">&sect;&nbsp;</a></span>USBHS_GetConfigureEPs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetConfigureEPs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> configuration. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a4e3485ec2d4cc77a04795d2047ccb7d5_icgraph.svg" width="407" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a71498936e654a68761986daf5ba0f425"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71498936e654a68761986daf5ba0f425">&sect;&nbsp;</a></span>USBHS_GetDmaBuffAdd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetDmaBuffAdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USBHS's DMA Buffer addresse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>DMA addrs </dd></dl>

</div>
</div>
<a id="ae864a5b84b9053ceeb6c63bf344a9e98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae864a5b84b9053ceeb6c63bf344a9e98">&sect;&nbsp;</a></span>USBHS_GetDmaBuffCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_GetDmaBuffCount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get DMA buffer's count. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Buffer count </dd></dl>

</div>
</div>
<a id="a6fe3ee05a1f5c5deb68b6c98b35bde96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fe3ee05a1f5c5deb68b6c98b35bde96">&sect;&nbsp;</a></span>USBHS_GetDmaConfiguration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetDmaConfiguration </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get DMA configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>DMA control setup </dd></dl>

</div>
</div>
<a id="a92c0c433bddc911ac0b42dc1a6aa9be7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92c0c433bddc911ac0b42dc1a6aa9be7">&sect;&nbsp;</a></span>USBHS_GetDmaNDA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetDmaNDA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets DMA next descriptor address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Next DMA descriptor </dd></dl>

</div>
</div>
<a id="abf7bc46296d9353fa33a82ee8a1a2ace"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf7bc46296d9353fa33a82ee8a1a2ace">&sect;&nbsp;</a></span>USBHS_GetDmaStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetDmaStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Dma Status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Dma status </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abf7bc46296d9353fa33a82ee8a1a2ace_icgraph.svg" width="583" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af11bea4c155867153ce6a0ae7700d671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af11bea4c155867153ce6a0ae7700d671">&sect;&nbsp;</a></span>USBHS_GetEpSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetEpSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Size. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af11bea4c155867153ce6a0ae7700d671_icgraph.svg" width="362" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2d57f0978079a4c218c3c4642bd4faa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d57f0978079a4c218c3c4642bd4faa0">&sect;&nbsp;</a></span>USBHS_GetEpType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetEpType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Type. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a2d57f0978079a4c218c3c4642bd4faa0_icgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab049b9cefa0454da5a5cadaa30e7ca03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab049b9cefa0454da5a5cadaa30e7ca03">&sect;&nbsp;</a></span>USBHS_GetFrameNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetFrameNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Frame number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance.  frame number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6e5d575fa1cbd5197c3877e4905353c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e5d575fa1cbd5197c3877e4905353c7">&sect;&nbsp;</a></span>USBHS_GetFrameNumCrcErr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetFrameNumCrcErr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Frame number CRC error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance.  Frame number error status </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae8f0f173c0eba29fbde8f0db687c9937"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8f0f173c0eba29fbde8f0db687c9937">&sect;&nbsp;</a></span>USBHS_GetHostDmaBuffAdd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostDmaBuffAdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USBHS's DMA Buffer addresse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>DMA addrs </dd></dl>

</div>
</div>
<a id="ad5c1c8dce25698d0d219825643f2ab16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5c1c8dce25698d0d219825643f2ab16">&sect;&nbsp;</a></span>USBHS_GetHostDmaConfiguration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostDmaConfiguration </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get DMA configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>DMA control setup </dd></dl>

</div>
</div>
<a id="a1550cd9ab1fca40ec953dcab04ae6321"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1550cd9ab1fca40ec953dcab04ae6321">&sect;&nbsp;</a></span>USBHS_GetHostDmaNDA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostDmaNDA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets DMA next descriptor address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Next DMA descriptor </dd></dl>

</div>
</div>
<a id="a09970f012dc42f48d361f4a40e36b1bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09970f012dc42f48d361f4a40e36b1bc">&sect;&nbsp;</a></span>USBHS_GetHostDmaPipeStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostDmaPipeStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a867c067ec59082580389661c677469ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a867c067ec59082580389661c677469ea">&sect;&nbsp;</a></span>USBHS_GetHostPipeDmaStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostPipeDmaStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get Dma Status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Dma status </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a867c067ec59082580389661c677469ea_icgraph.svg" width="476" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a49d4f490d00f476a36e2d0c073dc0af8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49d4f490d00f476a36e2d0c073dc0af8">&sect;&nbsp;</a></span>USBHS_GetHostPipeStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostPipeStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a40267eb93445cc78fe9b243d25622f9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40267eb93445cc78fe9b243d25622f9c">&sect;&nbsp;</a></span>USBHS_GetHostStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetHostStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a40267eb93445cc78fe9b243d25622f9c_icgraph.svg" width="438" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa52d6c3bffaf6b6846f1682eb01c64a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa52d6c3bffaf6b6846f1682eb01c64a2">&sect;&nbsp;</a></span>USBHS_GetInterruptPipeDmaNum()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint8_t USBHS_GetInterruptPipeDmaNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aa52d6c3bffaf6b6846f1682eb01c64a2_icgraph.svg" width="428" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a925f2d3fbc5551f3dc3968600ae6512c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a925f2d3fbc5551f3dc3968600ae6512c">&sect;&nbsp;</a></span>USBHS_GetInterruptPipeNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetInterruptPipeNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a925f2d3fbc5551f3dc3968600ae6512c_icgraph.svg" width="398" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae10710fce7d4eadf4434669daa7f2620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae10710fce7d4eadf4434669daa7f2620">&sect;&nbsp;</a></span>USBHS_GetMicroFrameNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetMicroFrameNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get MicrFrame number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance.  Micro frame number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afc5b9450b58a00b6b0080285a6296595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc5b9450b58a00b6b0080285a6296595">&sect;&nbsp;</a></span>USBHS_GetPipeEpAddr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_GetPipeEpAddr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_afc5b9450b58a00b6b0080285a6296595_cgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_afc5b9450b58a00b6b0080285a6296595_icgraph.svg" width="399" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23bc7c30ae1779f56b28b82cf5153866"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23bc7c30ae1779f56b28b82cf5153866">&sect;&nbsp;</a></span>USBHS_GetUsbSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_GetUsbSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USB speed status </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a23bc7c30ae1779f56b28b82cf5153866_icgraph.svg" width="432" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a97e601451758556ee0591fae627974d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e601451758556ee0591fae627974d8">&sect;&nbsp;</a></span>USBHS_HostAckPipeIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostAckPipeIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a97e601451758556ee0591fae627974d8_icgraph.svg" width="992" height="431"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aedf0c19282a4ab894880c582f9cc4706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedf0c19282a4ab894880c582f9cc4706">&sect;&nbsp;</a></span>USBHS_HostAllocMem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostAllocMem </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aedf0c19282a4ab894880c582f9cc4706_icgraph.svg" width="462" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5d2c49f1194cc78dea81c614f36a06e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d2c49f1194cc78dea81c614f36a06e8">&sect;&nbsp;</a></span>USBHS_HostClearErr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostClearErr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a5d2c49f1194cc78dea81c614f36a06e8_icgraph.svg" width="398" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad7321df66563d27e92e3eee190f5f328"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7321df66563d27e92e3eee190f5f328">&sect;&nbsp;</a></span>USBHS_HostConfigure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostConfigure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pipeBank</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipeSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pipeType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pipeToken</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipeEpNum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeIntFreq</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ad7321df66563d27e92e3eee190f5f328_icgraph.svg" width="460" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad212cc35348ff023533b9a47aba79345"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad212cc35348ff023533b9a47aba79345">&sect;&nbsp;</a></span>USBHS_HostConfigureDma()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostConfigureDma </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Cfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup the USBHS DMA. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Cfg</td><td>DMA's configuration </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ad212cc35348ff023533b9a47aba79345_icgraph.svg" width="446" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af33de4a77714a4669ec1d6c52847ce36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af33de4a77714a4669ec1d6c52847ce36">&sect;&nbsp;</a></span>USBHS_HostDisableAutoSw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostDisableAutoSw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af33de4a77714a4669ec1d6c52847ce36_icgraph.svg" width="495" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac0d1007b23379af5c4d286a243b4f5e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d1007b23379af5c4d286a243b4f5e1">&sect;&nbsp;</a></span>USBHS_HostDisableInReq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostDisableInReq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ac0d1007b23379af5c4d286a243b4f5e1_icgraph.svg" width="440" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a32c56acaace52b440a308d9bce8cafff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32c56acaace52b440a308d9bce8cafff">&sect;&nbsp;</a></span>USBHS_HostDisablePipeIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostDisablePipeIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a32c56acaace52b440a308d9bce8cafff_icgraph.svg" width="1016" height="696"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a51f04ec0f693b7abf7a10e33faacac04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51f04ec0f693b7abf7a10e33faacac04">&sect;&nbsp;</a></span>USBHS_HostDmaIntDisable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostDmaIntDisable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abca7229dc06a00a9e8cced6870f4a827"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abca7229dc06a00a9e8cced6870f4a827">&sect;&nbsp;</a></span>USBHS_HostDmaIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostDmaIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abca7229dc06a00a9e8cced6870f4a827_icgraph.svg" width="443" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa347527d17e6ee48869cabe3344f0b8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa347527d17e6ee48869cabe3344f0b8e">&sect;&nbsp;</a></span>USBHS_HostEnableAutoSw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostEnableAutoSw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aa347527d17e6ee48869cabe3344f0b8e_icgraph.svg" width="675" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a25b8f588492bd5dfd9f527e3cf50d68e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25b8f588492bd5dfd9f527e3cf50d68e">&sect;&nbsp;</a></span>USBHS_HostEnableInReq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostEnableInReq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a25b8f588492bd5dfd9f527e3cf50d68e_icgraph.svg" width="420" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5a732c50b940ba29ef94820ecbce731e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a732c50b940ba29ef94820ecbce731e">&sect;&nbsp;</a></span>USBHS_HostEnablePing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostEnablePing </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acd60bcdb7e5420ac4cfb8b457838f9ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd60bcdb7e5420ac4cfb8b457838f9ba">&sect;&nbsp;</a></span>USBHS_HostEnablePipeIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostEnablePipeIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_acd60bcdb7e5420ac4cfb8b457838f9ba_icgraph.svg" width="1024" height="798"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5af3c325c4029dd2830a88dcf6d8d360"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5af3c325c4029dd2830a88dcf6d8d360">&sect;&nbsp;</a></span>USBHS_HostFreeMem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostFreeMem </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a5af3c325c4029dd2830a88dcf6d8d360_icgraph.svg" width="379" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a963fd2f0eab05393ff85e14bfd909021"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a963fd2f0eab05393ff85e14bfd909021">&sect;&nbsp;</a></span>USBHS_HostGetAddr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetAddr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a963fd2f0eab05393ff85e14bfd909021_icgraph.svg" width="884" height="348"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a41abdf2ba203409795e11992182c9e22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41abdf2ba203409795e11992182c9e22">&sect;&nbsp;</a></span>USBHS_HostGetCurrentBank()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetCurrentBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab5730218930063afe0ce2cc2b9988eff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5730218930063afe0ce2cc2b9988eff">&sect;&nbsp;</a></span>USBHS_HostGetDataTogSeq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetDataTogSeq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac3696a9240e22b2d40ee76d19633bed5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3696a9240e22b2d40ee76d19633bed5">&sect;&nbsp;</a></span>USBHS_HostGetErr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetErr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ac3696a9240e22b2d40ee76d19633bed5_icgraph.svg" width="387" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ace4d57215e8268e1e934fa376da56c83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace4d57215e8268e1e934fa376da56c83">&sect;&nbsp;</a></span>USBHS_HostGetFramePos()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_HostGetFramePos </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ace4d57215e8268e1e934fa376da56c83_icgraph.svg" width="459" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae752afec4dfecc9565eaa4242ce9233f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae752afec4dfecc9565eaa4242ce9233f">&sect;&nbsp;</a></span>USBHS_HostGetIntTypeStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_HostGetIntTypeStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ae752afec4dfecc9565eaa4242ce9233f_icgraph.svg" width="711" height="128"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abbd31f8ac6a853c865dbab561cd93683"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbd31f8ac6a853c865dbab561cd93683">&sect;&nbsp;</a></span>USBHS_HostGetMSOF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_HostGetMSOF </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abbd31f8ac6a853c865dbab561cd93683_icgraph.svg" width="454" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a556066e182615fc6072e5b6ad6a915c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a556066e182615fc6072e5b6ad6a915c0">&sect;&nbsp;</a></span>USBHS_HostGetNumOfBusyBank()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetNumOfBusyBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a556066e182615fc6072e5b6ad6a915c0_icgraph.svg" width="479" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a917ce318855654bd4d1ff18a24248899"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917ce318855654bd4d1ff18a24248899">&sect;&nbsp;</a></span>USBHS_HostGetPipeByteCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_HostGetPipeByteCount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a917ce318855654bd4d1ff18a24248899_icgraph.svg" width="476" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a568fb6f40affb306e060461fe065a516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a568fb6f40affb306e060461fe065a516">&sect;&nbsp;</a></span>USBHS_HostGetPipeType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_HostGetPipeType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a568fb6f40affb306e060461fe065a516_icgraph.svg" width="662" height="114"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac13debb9eb4e51de70e9086d6264ee88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac13debb9eb4e51de70e9086d6264ee88">&sect;&nbsp;</a></span>USBHS_HostGetSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_HostGetSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ac13debb9eb4e51de70e9086d6264ee88_icgraph.svg" width="410" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac2d5100e84f17f3afd652b4813f7a5b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d5100e84f17f3afd652b4813f7a5b7">&sect;&nbsp;</a></span>USBHS_HostGetSOF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint16_t USBHS_HostGetSOF </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ac2d5100e84f17f3afd652b4813f7a5b7_icgraph.svg" width="408" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7e40c3d1763e18ec62b55c48edadedde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e40c3d1763e18ec62b55c48edadedde">&sect;&nbsp;</a></span>USBHS_HostGetToken()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_HostGetToken </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a7e40c3d1763e18ec62b55c48edadedde_icgraph.svg" width="412" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aedba0b8562b6d4aa35096f3db61f18c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedba0b8562b6d4aa35096f3db61f18c6">&sect;&nbsp;</a></span>USBHS_HostInReq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostInReq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>InReq</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aedba0b8562b6d4aa35096f3db61f18c6_icgraph.svg" width="387" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa9a5b060519f982e8cd29dc32754b5a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9a5b060519f982e8cd29dc32754b5a9">&sect;&nbsp;</a></span>USBHS_HostIntDisable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostIntDisable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aa9a5b060519f982e8cd29dc32754b5a9_icgraph.svg" width="400" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7ac646519dfb6c319d8a60f08b5e4c29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ac646519dfb6c319d8a60f08b5e4c29">&sect;&nbsp;</a></span>USBHS_HostIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a7ac646519dfb6c319d8a60f08b5e4c29_icgraph.svg" width="432" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4aabd40a9718b4bab7036aa5439a266f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4aabd40a9718b4bab7036aa5439a266f">&sect;&nbsp;</a></span>USBHS_HostPipeDisable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostPipeDisable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a4aabd40a9718b4bab7036aa5439a266f_icgraph.svg" width="474" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a10f00de072a1cbb4c14e9d125368f3ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10f00de072a1cbb4c14e9d125368f3ff">&sect;&nbsp;</a></span>USBHS_HostPipeEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostPipeEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a10f00de072a1cbb4c14e9d125368f3ff_icgraph.svg" width="470" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4706c65710ae219aab80c2645d24fa81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4706c65710ae219aab80c2645d24fa81">&sect;&nbsp;</a></span>USBHS_HostPipeIntDisable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostPipeIntDisable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a4706c65710ae219aab80c2645d24fa81_icgraph.svg" width="680" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe033170285572938d1ed3fbb01e9c3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe033170285572938d1ed3fbb01e9c3e">&sect;&nbsp;</a></span>USBHS_HostPipeIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostPipeIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abe033170285572938d1ed3fbb01e9c3e_icgraph.svg" width="486" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af0f50fcf9d7a16354a3a3a1b22140a4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0f50fcf9d7a16354a3a3a1b22140a4c">&sect;&nbsp;</a></span>USBHS_HostPipeReset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostPipeReset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af0f50fcf9d7a16354a3a3a1b22140a4c_icgraph.svg" width="390" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2d1339dc3607194872a33cffce18e305"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d1339dc3607194872a33cffce18e305">&sect;&nbsp;</a></span>USBHS_HostSetAddr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetAddr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a2d1339dc3607194872a33cffce18e305_icgraph.svg" width="452" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac0cec1cec3e5e547d74d24f5df8105ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0cec1cec3e5e547d74d24f5df8105ac">&sect;&nbsp;</a></span>USBHS_HostSetErr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetErr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Err</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5bed8c57a0a14635f4c4f33ed5a07e3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bed8c57a0a14635f4c4f33ed5a07e3f">&sect;&nbsp;</a></span>USBHS_HostSetIntFreq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetIntFreq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Freq</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aadbfa6cd7ed91815f4a40b2a92c6d9eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadbfa6cd7ed91815f4a40b2a92c6d9eb">&sect;&nbsp;</a></span>USBHS_HostSetPipeIntType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetPipeIntType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aadbfa6cd7ed91815f4a40b2a92c6d9eb_icgraph.svg" width="446" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5f6439f7e23f6a6641ffe8e3881efe24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f6439f7e23f6a6641ffe8e3881efe24">&sect;&nbsp;</a></span>USBHS_HostSetPipeType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetPipeType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a48f3b4774877abb73ad633b904e4caee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48f3b4774877abb73ad633b904e4caee">&sect;&nbsp;</a></span>USBHS_HostSetToken()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_HostSetToken </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Token</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a48f3b4774877abb73ad633b904e4caee_icgraph.svg" width="687" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa8d5c4b9a4a142b1c587fcfaa7532596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8d5c4b9a4a142b1c587fcfaa7532596">&sect;&nbsp;</a></span>USBHS_IsBankFree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_IsBankFree </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if given endpoint's bank is free. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aa8d5c4b9a4a142b1c587fcfaa7532596_icgraph.svg" width="331" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5e6709db254f3275a10b9725847c95a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e6709db254f3275a10b9725847c95a3">&sect;&nbsp;</a></span>USBHS_IsBankKilled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsBankKilled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables an interrupt type for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a5e6709db254f3275a10b9725847c95a3_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a66c5b24b3bb969945eb34f5603539374"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66c5b24b3bb969945eb34f5603539374">&sect;&nbsp;</a></span>USBHS_IsDmaIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsDmaIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>DmaNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if endpoint's DMA interrupt is enabled for a given endpoint DMA number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">DmaNum</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>'s DMA number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a00c26cb8e5bbda68e2ab8a379a7bd001"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00c26cb8e5bbda68e2ab8a379a7bd001">&sect;&nbsp;</a></span>USBHS_IsEnableSOF()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_IsEnableSOF </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host Enable the Generation of Start of Frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a00c26cb8e5bbda68e2ab8a379a7bd001_icgraph.svg" width="396" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8af24a65ae5dca2e299082d592ca445c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8af24a65ae5dca2e299082d592ca445c">&sect;&nbsp;</a></span>USBHS_IsEPEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsEPEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> is enable. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Ep</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a53c55fa48fbb95b2e0f67b58ca4cde49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53c55fa48fbb95b2e0f67b58ca4cde49">&sect;&nbsp;</a></span>USBHS_IsEpIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsEpIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpIntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check for interrupt types enabled for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a53c55fa48fbb95b2e0f67b58ca4cde49_icgraph.svg" width="403" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a80888f7cf448edbebfc2cb99264e0642"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80888f7cf448edbebfc2cb99264e0642">&sect;&nbsp;</a></span>USBHS_IsHostConfigOk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsHostConfigOk </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a80888f7cf448edbebfc2cb99264e0642_icgraph.svg" width="467" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a52553a3b2b96df8b5c9f55789aeb15ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52553a3b2b96df8b5c9f55789aeb15ad">&sect;&nbsp;</a></span>USBHS_IsHostDmaIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsHostDmaIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a23e0d01e4f85fa4b0af1e81b3d7efc6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23e0d01e4f85fa4b0af1e81b3d7efc6e">&sect;&nbsp;</a></span>USBHS_IsHostInReqEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_IsHostInReqEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6e707992fde3a408663eae6e34b00deb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e707992fde3a408663eae6e34b00deb">&sect;&nbsp;</a></span>USBHS_IsHostIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_IsHostIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a6e707992fde3a408663eae6e34b00deb_icgraph.svg" width="360" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aca1a73918c77f0aaa82395b55d760ae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca1a73918c77f0aaa82395b55d760ae8">&sect;&nbsp;</a></span>USBHS_IsHostPipeEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsHostPipeEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aca1a73918c77f0aaa82395b55d760ae8_icgraph.svg" width="480" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad4bc5d3706ce41b5db3a3135b19d24d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4bc5d3706ce41b5db3a3135b19d24d6">&sect;&nbsp;</a></span>USBHS_IsHostPipeIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsHostPipeIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0a8e28b882f4abf73c473980d36c7e06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a8e28b882f4abf73c473980d36c7e06">&sect;&nbsp;</a></span>USBHS_IsHostPipeIntTypeEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsHostPipeIntTypeEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>intType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a0a8e28b882f4abf73c473980d36c7e06_icgraph.svg" width="722" height="164"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9a36f3ee5b1c36992ecd002f2b0ddb5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a36f3ee5b1c36992ecd002f2b0ddb5c">&sect;&nbsp;</a></span>USBHS_IsIntEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsIntEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>check for interrupt of endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt Type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a9a36f3ee5b1c36992ecd002f2b0ddb5c_icgraph.svg" width="331" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a21efaafe4db8b7a40ecfb3b226c20c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21efaafe4db8b7a40ecfb3b226c20c8d">&sect;&nbsp;</a></span>USBHS_IsIntEnableEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_IsIntEnableEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>EpNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if endpoint's interrupt is enabled for a given endpoint number. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">EpNum</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af53df9330077448ac0d721dbef847c9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af53df9330077448ac0d721dbef847c9f">&sect;&nbsp;</a></span>USBHS_ISUsableClock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_ISUsableClock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if clock is usable or not. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if USB clock is usable </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af53df9330077448ac0d721dbef847c9f_icgraph.svg" width="424" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8f09972d45a5f4b21841f41f490d2a2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f09972d45a5f4b21841f41f490d2a2b">&sect;&nbsp;</a></span>USBHS_IsUsbFullSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE bool USBHS_IsUsbFullSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USB speed status </dd></dl>

</div>
</div>
<a id="a3a003f0bc5f5ed08ba3253028bd04923"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a003f0bc5f5ed08ba3253028bd04923">&sect;&nbsp;</a></span>USBHS_IsUsbHighSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE bool USBHS_IsUsbHighSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USB speed status </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a3a003f0bc5f5ed08ba3253028bd04923_icgraph.svg" width="595" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a017b00c66ba92abe86f341381e3795ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a017b00c66ba92abe86f341381e3795ee">&sect;&nbsp;</a></span>USBHS_IsUsbLowSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE bool USBHS_IsUsbLowSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable USB address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USB speed status </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a017b00c66ba92abe86f341381e3795ee_icgraph.svg" width="362" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae9bf1bccb73956ec13630d2e60a8c5ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9bf1bccb73956ec13630d2e60a8c5ad">&sect;&nbsp;</a></span>USBHS_KillBank()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_KillBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables an interrupt type for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ae9bf1bccb73956ec13630d2e60a8c5ad_icgraph.svg" width="311" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9d81aab8cc8040ea0ff66544608efc50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d81aab8cc8040ea0ff66544608efc50">&sect;&nbsp;</a></span>USBHS_NumOfBanksInUse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint8_t USBHS_NumOfBanksInUse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read endpoint's bank number in use. </p>

</div>
</div>
<a id="a832191e7aa7941e54317cf567167d2fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a832191e7aa7941e54317cf567167d2fb">&sect;&nbsp;</a></span>USBHS_RaiseDmaInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_RaiseDmaInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Dma</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Raise DMA interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt Type </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7e969e0c7fb49b1d25dd4e97afe3b0f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e969e0c7fb49b1d25dd4e97afe3b0f7">&sect;&nbsp;</a></span>USBHS_RaiseEPInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_RaiseEPInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets/Raise register for a given endpoint. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a7e969e0c7fb49b1d25dd4e97afe3b0f7_icgraph.svg" width="327" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6d60c6a4b9400dfc62fd64fad75543c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d60c6a4b9400dfc62fd64fad75543c2">&sect;&nbsp;</a></span>USBHS_RaiseInt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_RaiseInt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Raise interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt Type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a6d60c6a4b9400dfc62fd64fad75543c2_icgraph.svg" width="339" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a52b1ff1fa6a7c80b1a19465351cc9a3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52b1ff1fa6a7c80b1a19465351cc9a3d">&sect;&nbsp;</a></span>USBHS_ReadDmaIntStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_ReadDmaIntStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>DmaNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read status for a DMA <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">DmaNum</td><td>DMA <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a52b1ff1fa6a7c80b1a19465351cc9a3d_icgraph.svg" width="382" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa4ce4550510a58d657322a4648e495f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4ce4550510a58d657322a4648e495f3">&sect;&nbsp;</a></span>USBHS_ReadEpIntStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_ReadEpIntStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>EpNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read status for an <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">EpNum</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aa4ce4550510a58d657322a4648e495f3_icgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abc21e0a5d2ce477178c31b3a3049bd33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc21e0a5d2ce477178c31b3a3049bd33">&sect;&nbsp;</a></span>USBHS_ReadEPStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_ReadEPStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>EpInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets interrupt status for a given EP. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abc21e0a5d2ce477178c31b3a3049bd33_icgraph.svg" width="407" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a40bc8caea176293a06352e8341572c5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40bc8caea176293a06352e8341572c5e">&sect;&nbsp;</a></span>USBHS_ReadIntStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_ReadIntStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read status for an interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">IntType</td><td>Interrupt type </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a40bc8caea176293a06352e8341572c5e_icgraph.svg" width="351" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a231788fb630937b8e77227018e29b3aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a231788fb630937b8e77227018e29b3aa">&sect;&nbsp;</a></span>USBHS_ReadStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE uint32_t USBHS_ReadStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Raise interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USB status </dd></dl>

</div>
</div>
<a id="a165ebc9ef9f9199f9c4c7163e8b3872f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a165ebc9ef9f9199f9c4c7163e8b3872f">&sect;&nbsp;</a></span>USBHS_Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_Reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host sends reste signal on USB Bus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a165ebc9ef9f9199f9c4c7163e8b3872f_icgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8bb9811e54a0d8cab3a62b62d6dd536d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bb9811e54a0d8cab3a62b62d6dd536d">&sect;&nbsp;</a></span>USBHS_ResetEP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_ResetEP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rests <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Ep</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Number </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a8bb9811e54a0d8cab3a62b62d6dd536d_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe1074ea76550225e959d5628d6b38a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe1074ea76550225e959d5628d6b38a4">&sect;&nbsp;</a></span>USBHS_Resume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_Resume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host send Resume on USB bus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_abe1074ea76550225e959d5628d6b38a4_icgraph.svg" width="336" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ace6971cff0c4aeb589dd3caf663a2756"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace6971cff0c4aeb589dd3caf663a2756">&sect;&nbsp;</a></span>USBHS_Set()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_Set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>SetStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Raise interrupt for endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">SetStatus</td><td>Set USB status </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ace6971cff0c4aeb589dd3caf663a2756_icgraph.svg" width="284" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af28587f66d68df1900ea52afc944f74c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af28587f66d68df1900ea52afc944f74c">&sect;&nbsp;</a></span>USBHS_SetAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetAddress </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure USB address and enable or disable it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Addr</td><td>USB device status </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af28587f66d68df1900ea52afc944f74c_icgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad9705f77c87a304d55e72f6fd13dd77d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9705f77c87a304d55e72f6fd13dd77d">&sect;&nbsp;</a></span>USBHS_SetDmaBuffAdd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetDmaBuffAdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USBHS's DMA Buffer addresse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Addr</td><td>DMA's buffer Addrs </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_ad9705f77c87a304d55e72f6fd13dd77d_icgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afa20d88900497b237fa89404ae14b140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa20d88900497b237fa89404ae14b140">&sect;&nbsp;</a></span>USBHS_SetDmaNDA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetDmaNDA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets DMA next descriptor address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Desc</td><td>NDA address </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1d65b0e58e932f41022db1020418d779"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d65b0e58e932f41022db1020418d779">&sect;&nbsp;</a></span>USBHS_SetDmaStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetDmaStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_devdma.xhtml">UsbhsDevdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set DMA status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance  Set DMA status </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7b7dcd419b41dc75bdf1ed56fea79075"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b7dcd419b41dc75bdf1ed56fea79075">&sect;&nbsp;</a></span>USBHS_SetHostDmaBuffAdd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostDmaBuffAdd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Addr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USBHS's DMA Buffer addresse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Addr</td><td>DMA's buffer Addrs </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a7b7dcd419b41dc75bdf1ed56fea79075_icgraph.svg" width="456" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4828debdb88457e95b11228e17e3272e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4828debdb88457e95b11228e17e3272e">&sect;&nbsp;</a></span>USBHS_SetHostDmaNDA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostDmaNDA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets DMA next descriptor address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance </td></tr>
    <tr><td class="paramname">Desc</td><td>NDA addrs </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6712bba37861acf3c7503ef6c8eed409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6712bba37861acf3c7503ef6c8eed409">&sect;&nbsp;</a></span>USBHS_SetHostDmaStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostDmaStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>PipeInt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a78e6e590ea87684b5db71615ba87caec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78e6e590ea87684b5db71615ba87caec">&sect;&nbsp;</a></span>USBHS_SetHostForcedFullSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostForcedFullSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host's speed to forced Full speed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af5209f422709bb346dd8906a84594481"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5209f422709bb346dd8906a84594481">&sect;&nbsp;</a></span>USBHS_SetHostHighSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostHighSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host's speed to Normal , it sets to HS from FS. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_af5209f422709bb346dd8906a84594481_icgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a0f50a2b2c067387aea7776a4adb520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a0f50a2b2c067387aea7776a4adb520">&sect;&nbsp;</a></span>USBHS_SetHostLowSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostLowSpeed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host's speed to Low speed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae0a251b709650e942fdd7d55c8eff5d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0a251b709650e942fdd7d55c8eff5d8">&sect;&nbsp;</a></span>USBHS_SetHostPipeDmaStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostPipeDmaStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs_hstdma.xhtml">UsbhsHstdma</a> *&#160;</td>
          <td class="paramname"><em>pUsbDma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set DMA status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbDma</td><td>USBHS device DMA instance  Set DMA status </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a72a8f0387d4cb85e1a3d247e99b1da06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72a8f0387d4cb85e1a3d247e99b1da06">&sect;&nbsp;</a></span>USBHS_SetHostStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetHostStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>IntType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets USB host interrupt status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3b1095cf2511e7d84ba5e9f47f017c0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b1095cf2511e7d84ba5e9f47f017c0e">&sect;&nbsp;</a></span>USBHS_SetIsoTrans()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetIsoTrans </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Ep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>nbTrans</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets ISO endpoint's Number of <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> for High Speed. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a3b1095cf2511e7d84ba5e9f47f017c0e_icgraph.svg" width="386" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a93317007fdfef8aaa76672033a5293ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93317007fdfef8aaa76672033a5293ba">&sect;&nbsp;</a></span>USBHS_SetRemoteWakeUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_SetRemoteWakeUp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Remote WakeUp mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a93317007fdfef8aaa76672033a5293ba_icgraph.svg" width="458" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aac479594b09aba35a095529855449a42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac479594b09aba35a095529855449a42">&sect;&nbsp;</a></span>USBHS_StopReset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_StopReset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets USB host sends reste signal on USB Bus. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>USBHS host instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_aac479594b09aba35a095529855449a42_icgraph.svg" width="327" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a78d27724945f587c54cba1d9617979c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78d27724945f587c54cba1d9617979c8">&sect;&nbsp;</a></span>USBHS_UnFreezeClock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_UnFreezeClock </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Freeze or unfreeze USB clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enable or disable </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a78d27724945f587c54cba1d9617979c8_icgraph.svg" width="428" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a271a9d7a4f68db5bfab4401f8e67d347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a271a9d7a4f68db5bfab4401f8e67d347">&sect;&nbsp;</a></span>USBHS_UsbEnable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_UsbEnable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables USB. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enable or disable </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a271a9d7a4f68db5bfab4401f8e67d347_icgraph.svg" width="402" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a636f49939838c8348470310e71e1cd70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a636f49939838c8348470310e71e1cd70">&sect;&nbsp;</a></span>USBHS_UsbMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_UsbMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="usbhs_8h.xhtml#ac7b897ea707bd670c7b3898ac266a5f8">USB_Mode_t</a>&#160;</td>
          <td class="paramname"><em>Mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Device or Host Mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Mode</td><td>Device or Host Mode </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a636f49939838c8348470310e71e1cd70_icgraph.svg" width="394" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a737215891d431406a22e7627cb15f337"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a737215891d431406a22e7627cb15f337">&sect;&nbsp;</a></span>USBHS_VBusHWC()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__STATIC_INLINE void USBHS_VBusHWC </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usbhs.xhtml">Usbhs</a> *&#160;</td>
          <td class="paramname"><em>pUsbhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Freeze or unfreeze USB clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbhs</td><td>Pointer to an USBHS instance. </td></tr>
    <tr><td class="paramname">Enable</td><td>Enable or disable </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usbhs_8h_a737215891d431406a22e7627cb15f337_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
