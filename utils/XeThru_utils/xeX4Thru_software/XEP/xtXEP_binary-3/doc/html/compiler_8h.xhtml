<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/compiler.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">compiler.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stddef.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for compiler.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="compiler_8h__incl.svg" width="376" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="compiler_8h__dep__incl.svg" width="1848" height="275"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="compiler_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a85a3ab5701281268521f109ed0078668"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(arg)&#160;&#160;&#160;_Pragma(#arg)</td></tr>
<tr class="memdesc:a85a3ab5701281268521f109ed0078668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Emit the compiler pragma <em>arg</em>.  <a href="#a85a3ab5701281268521f109ed0078668">More...</a><br /></td></tr>
<tr class="separator:a85a3ab5701281268521f109ed0078668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2c02ff865ca6538b4b1bddbf2a6876c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#ae2c02ff865ca6538b4b1bddbf2a6876c">COMPILER_PACK_SET</a>(alignment)&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack(alignment))</td></tr>
<tr class="memdesc:ae2c02ff865ca6538b4b1bddbf2a6876c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set maximum alignment for subsequent structure and union definitions to <em>alignment</em>.  <a href="#ae2c02ff865ca6538b4b1bddbf2a6876c">More...</a><br /></td></tr>
<tr class="separator:ae2c02ff865ca6538b4b1bddbf2a6876c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a38d28b622a4bc7b0f3fb2be2ef1e0086">COMPILER_PACK_RESET</a>()&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack())</td></tr>
<tr class="memdesc:a38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set default alignment for subsequent structure and union definitions.  <a href="#a38d28b622a4bc7b0f3fb2be2ef1e0086">More...</a><br /></td></tr>
<tr class="separator:a38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650ecb20996a13e0c0bc530ba83fe5dc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a650ecb20996a13e0c0bc530ba83fe5dc">be32_to_cpu</a>(x)&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td></tr>
<tr class="separator:a650ecb20996a13e0c0bc530ba83fe5dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd3274bb70aea7cf9be403940e001cc7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#afd3274bb70aea7cf9be403940e001cc7">cpu_to_be32</a>(x)&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td></tr>
<tr class="separator:afd3274bb70aea7cf9be403940e001cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6fd2e5e0a54fb6300fe98868141175e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#ad6fd2e5e0a54fb6300fe98868141175e">BE32_TO_CPU</a>(x)&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td></tr>
<tr class="separator:ad6fd2e5e0a54fb6300fe98868141175e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5b68e77b7f6870895076278368d201"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#abe5b68e77b7f6870895076278368d201">CPU_TO_BE32</a>(x)&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td></tr>
<tr class="separator:abe5b68e77b7f6870895076278368d201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada67c62b1c57e07efa04431bc40b9238"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#ada67c62b1c57e07efa04431bc40b9238">UNUSED</a>(v)&#160;&#160;&#160;(void)(v)</td></tr>
<tr class="memdesc:ada67c62b1c57e07efa04431bc40b9238"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marking <em>v</em> as a unused parameter or value.  <a href="#ada67c62b1c57e07efa04431bc40b9238">More...</a><br /></td></tr>
<tr class="separator:ada67c62b1c57e07efa04431bc40b9238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4922a4bd8ba4150211fbc7f2302403c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a>()</td></tr>
<tr class="separator:gae4922a4bd8ba4150211fbc7f2302403c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b77391ed86e2e027f9ee1dd99a06980"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga7b77391ed86e2e027f9ee1dd99a06980">cpu_irq_disable</a>()</td></tr>
<tr class="separator:ga7b77391ed86e2e027f9ee1dd99a06980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1545a2473614564550b9c4015c94978"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gae1545a2473614564550b9c4015c94978">cpu_irq_is_enabled</a>()&#160;&#160;&#160;(<a class="el" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac9e3a67ff722261b89c77ebe49b6f9a7">__get_PRIMASK</a>() == 0)</td></tr>
<tr class="separator:gae1545a2473614564550b9c4015c94978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebdc47e7800e11d79b9e5e2da1fecaa6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gaebdc47e7800e11d79b9e5e2da1fecaa6">Enable_global_interrupt</a>()&#160;&#160;&#160;<a class="el" href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a>()</td></tr>
<tr class="separator:gaebdc47e7800e11d79b9e5e2da1fecaa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4834270e1b8984fe025bce15e7ae1564"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga4834270e1b8984fe025bce15e7ae1564">Disable_global_interrupt</a>()&#160;&#160;&#160;<a class="el" href="group__interrupt__group.xhtml#ga7b77391ed86e2e027f9ee1dd99a06980">cpu_irq_disable</a>()</td></tr>
<tr class="separator:ga4834270e1b8984fe025bce15e7ae1564"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7b13c60d26b190e73e540586f1868f8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gab7b13c60d26b190e73e540586f1868f8">Is_global_interrupt_enabled</a>()&#160;&#160;&#160;<a class="el" href="group__interrupt__group.xhtml#gae1545a2473614564550b9c4015c94978">cpu_irq_is_enabled</a>()</td></tr>
<tr class="separator:gab7b13c60d26b190e73e540586f1868f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab069bfec305db5213465d3b689836404"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(u)</td></tr>
<tr class="memdesc:gab069bfec305db5213465d3b689836404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the trailing zero bits of the given value considered as a 32-bit integer.  <a href="group__interrupt__deprecated__group.xhtml#gab069bfec305db5213465d3b689836404">More...</a><br /></td></tr>
<tr class="separator:gab069bfec305db5213465d3b689836404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Token Paste</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Paste N preprocessing tokens together, these tokens being allowed to be #defined.</p>
<p>May be used only within macros with the tokens passed as arguments if the tokens are #defined.</p>
<p>For example, writing <a class="el" href="compiler_8h.xhtml#a55fb148844f5ba993a992b609728e82e">TPASTE2(U, WIDTH)</a> within a macro #defined by UTYPE(WIDTH) and invoked as UTYPE(UL_WIDTH) with UL_WIDTH #defined as 32 is equivalent to writing U32. </p>
</div></td></tr>
<tr class="memitem:a55fb148844f5ba993a992b609728e82e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a55fb148844f5ba993a992b609728e82e">TPASTE2</a>(a,  b)&#160;&#160;&#160;a##b</td></tr>
<tr class="separator:a55fb148844f5ba993a992b609728e82e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3774e5e321825e6ab4a27fef2a0deb14"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a3774e5e321825e6ab4a27fef2a0deb14">TPASTE3</a>(a,  b,  c)&#160;&#160;&#160;a##b##c</td></tr>
<tr class="separator:a3774e5e321825e6ab4a27fef2a0deb14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Absolute Token Paste</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Paste N preprocessing tokens together, these tokens being allowed to be #defined.</p>
<p>No restriction of use if the tokens are #defined.</p>
<p>For example, writing <a class="el" href="compiler_8h.xhtml#afd3b4e313492a0862292dc3072d8e347">ATPASTE2(U, UL_WIDTH)</a> anywhere with UL_WIDTH #defined as 32 is equivalent to writing U32. </p>
</div></td></tr>
<tr class="memitem:afd3b4e313492a0862292dc3072d8e347"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#afd3b4e313492a0862292dc3072d8e347">ATPASTE2</a>(a,  b)&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a55fb148844f5ba993a992b609728e82e">TPASTE2</a>(a, b)</td></tr>
<tr class="separator:afd3b4e313492a0862292dc3072d8e347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b7594516326045fbcaec54d7759c20"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a80b7594516326045fbcaec54d7759c20">ATPASTE3</a>(a,  b,  c)&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a3774e5e321825e6ab4a27fef2a0deb14">TPASTE3</a>(a, b, c)</td></tr>
<tr class="separator:a80b7594516326045fbcaec54d7759c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Mathematics</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Set user-defined section.</p>
<p>Place a data object or a function in a user-defined section. Set aligned boundary. Set word-aligned boundary.</p>
<p>The same considerations as for clz and ctz apply here but GCC does not provide built-in functions to access the assembly instructions abs, min and max and it does not produce them by itself in most cases, so two sets of macros are defined here:</p><ul>
<li>Abs, Min and Max to apply to constant expressions (values known at compile time);</li>
<li>abs, min and max to apply to non-constant expressions (values unknown at compile time), abs is found in stdlib.h. </li>
</ul>
</div></td></tr>
<tr class="memitem:ae56b0282c58a65969c092e1eeeedd6f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#ae56b0282c58a65969c092e1eeeedd6f5">Abs</a>(a)&#160;&#160;&#160;(((a) &lt;  0) ? -(a) : (a))</td></tr>
<tr class="memdesc:ae56b0282c58a65969c092e1eeeedd6f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the absolute value of <em>a</em>.  <a href="#ae56b0282c58a65969c092e1eeeedd6f5">More...</a><br /></td></tr>
<tr class="separator:ae56b0282c58a65969c092e1eeeedd6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e04209162ea72f9985338596262b657"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a9e04209162ea72f9985338596262b657">Min</a>(a,  b)&#160;&#160;&#160;(((a) &lt; (b)) ?  (a) : (b))</td></tr>
<tr class="memdesc:a9e04209162ea72f9985338596262b657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the minimal value of <em>a</em> and <em>b</em>.  <a href="#a9e04209162ea72f9985338596262b657">More...</a><br /></td></tr>
<tr class="separator:a9e04209162ea72f9985338596262b657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4886a8f966a69949cefc46a6a3468006"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#a4886a8f966a69949cefc46a6a3468006">Max</a>(a,  b)&#160;&#160;&#160;(((a) &gt; (b)) ?  (a) : (b))</td></tr>
<tr class="memdesc:a4886a8f966a69949cefc46a6a3468006"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the maximal value of <em>a</em> and <em>b</em>.  <a href="#a4886a8f966a69949cefc46a6a3468006">More...</a><br /></td></tr>
<tr class="separator:a4886a8f966a69949cefc46a6a3468006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6afabdc09a49a433ee19d8a9486056d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d">min</a>(a,  b)&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a9e04209162ea72f9985338596262b657">Min</a>(a, b)</td></tr>
<tr class="memdesc:ac6afabdc09a49a433ee19d8a9486056d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the minimal value of <em>a</em> and <em>b</em>.  <a href="#ac6afabdc09a49a433ee19d8a9486056d">More...</a><br /></td></tr>
<tr class="separator:ac6afabdc09a49a433ee19d8a9486056d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe776513b24d84b39af8ab0930fef7f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f">max</a>(a,  b)&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a4886a8f966a69949cefc46a6a3468006">Max</a>(a, b)</td></tr>
<tr class="memdesc:affe776513b24d84b39af8ab0930fef7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the maximal value of <em>a</em> and <em>b</em>.  <a href="#affe776513b24d84b39af8ab0930fef7f">More...</a><br /></td></tr>
<tr class="separator:affe776513b24d84b39af8ab0930fef7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Interrupt Service Routine definition</div></td></tr>
<tr class="memitem:ga931b667f6490ad3d8905fa25bebb24b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga931b667f6490ad3d8905fa25bebb24b1">irq_initialize_vectors</a>()</td></tr>
<tr class="memdesc:ga931b667f6490ad3d8905fa25bebb24b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize interrupt vectors.  <a href="group__interrupt__group.xhtml#ga931b667f6490ad3d8905fa25bebb24b1">More...</a><br /></td></tr>
<tr class="separator:ga931b667f6490ad3d8905fa25bebb24b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa746642b1132af054826fb169f541965"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gaa746642b1132af054826fb169f541965">irq_register_handler</a>(int_num,  int_prio)</td></tr>
<tr class="memdesc:gaa746642b1132af054826fb169f541965"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register handler for interrupt.  <a href="group__interrupt__group.xhtml#gaa746642b1132af054826fb169f541965">More...</a><br /></td></tr>
<tr class="separator:gaa746642b1132af054826fb169f541965"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Usual Constants</div></td></tr>
<tr class="memitem:ga99496f7308834e8b220f7894efa0b6ab"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga99496f7308834e8b220f7894efa0b6ab">DISABLE</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga99496f7308834e8b220f7894efa0b6ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga514ad415fb6125ba296793df7d1a468a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga514ad415fb6125ba296793df7d1a468a">ENABLE</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga514ad415fb6125ba296793df7d1a468a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd5c8ab57c190a6522ccdbf0ed7577da"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gabd5c8ab57c190a6522ccdbf0ed7577da">DISABLED</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gabd5c8ab57c190a6522ccdbf0ed7577da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73c228f87e038e8295ee8ea8eceaa5ac"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga73c228f87e038e8295ee8ea8eceaa5ac">ENABLED</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga73c228f87e038e8295ee8ea8eceaa5ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29e413f6725b2ba32d165ffaa35b01e5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga29e413f6725b2ba32d165ffaa35b01e5">OFF</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga29e413f6725b2ba32d165ffaa35b01e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad76d1750a6cdeebd506bfcd6752554d2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gad76d1750a6cdeebd506bfcd6752554d2">ON</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gad76d1750a6cdeebd506bfcd6752554d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa93f0eb578d23995850d61f7d61c55c1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gaa93f0eb578d23995850d61f7d61c55c1">FALSE</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaa93f0eb578d23995850d61f7d61c55c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8cecfc5c5c054d2875c03e77b7be15d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gaa8cecfc5c5c054d2875c03e77b7be15d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65e9886d74aaee76545e83dd09011727"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>&#160;&#160;&#160;<a class="el" href="crc_8h.xhtml#aa93f0eb578d23995850d61f7d61c55c1">FALSE</a></td></tr>
<tr class="separator:ga65e9886d74aaee76545e83dd09011727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41f9c5fb8b08eb5dc3edce4dcb37fee7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>&#160;&#160;&#160;<a class="el" href="crc_8h.xhtml#aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</a></td></tr>
<tr class="separator:ga41f9c5fb8b08eb5dc3edce4dcb37fee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb00992efca56626cdf0907e5edb5b51"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gacb00992efca56626cdf0907e5edb5b51">KO</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gacb00992efca56626cdf0907e5edb5b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba51915c87d64af47fb1cc59348961c9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gaba51915c87d64af47fb1cc59348961c9">OK</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gaba51915c87d64af47fb1cc59348961c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba5c54fadff8d880b1945dde87496e31"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gaba5c54fadff8d880b1945dde87496e31">PASS</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaba5c54fadff8d880b1945dde87496e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb508ea8227673f419e9fe3a86c30d8e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gabb508ea8227673f419e9fe3a86c30d8e">FAIL</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gabb508ea8227673f419e9fe3a86c30d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab811d8c6ff3a505312d3276590444289"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#gab811d8c6ff3a505312d3276590444289">LOW</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gab811d8c6ff3a505312d3276590444289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5bb885982ff66a2e0a0a45a8ee9c35e2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga5bb885982ff66a2e0a0a45a8ee9c35e2">HIGH</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga5bb885982ff66a2e0a0a45a8ee9c35e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ef10ef4f3d493a4fa398cbfcb525495"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga7ef10ef4f3d493a4fa398cbfcb525495">CLR</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga7ef10ef4f3d493a4fa398cbfcb525495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59da1d65e87a723efe808dbabb4fc205"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml#ga59da1d65e87a723efe808dbabb4fc205">SET</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga59da1d65e87a723efe808dbabb4fc205"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga6cb555807af15bd10cbcc4101ab840c7"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga6cb555807af15bd10cbcc4101ab840c7">irqflags_t</a></td></tr>
<tr class="separator:ga6cb555807af15bd10cbcc4101ab840c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9931bf539005d3f12b461928823a0ae2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__interrupt__group.xhtml#ga6cb555807af15bd10cbcc4101ab840c7">irqflags_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga9931bf539005d3f12b461928823a0ae2">cpu_irq_save</a> (void)</td></tr>
<tr class="separator:ga9931bf539005d3f12b461928823a0ae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f318ab08f126dcacbfb7c33c3836a6c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga7f318ab08f126dcacbfb7c33c3836a6c">cpu_irq_is_enabled_flags</a> (<a class="el" href="group__interrupt__group.xhtml#ga6cb555807af15bd10cbcc4101ab840c7">irqflags_t</a> flags)</td></tr>
<tr class="separator:ga7f318ab08f126dcacbfb7c33c3836a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4d6d11a5211f6bd00353f280aa78f6f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gae4d6d11a5211f6bd00353f280aa78f6f">cpu_irq_restore</a> (<a class="el" href="group__interrupt__group.xhtml#ga6cb555807af15bd10cbcc4101ab840c7">irqflags_t</a> flags)</td></tr>
<tr class="separator:gae4d6d11a5211f6bd00353f280aa78f6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga18a272af1cdb2009183461e1647f4e86"><td class="memItemLeft" align="right" valign="top">volatile bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga18a272af1cdb2009183461e1647f4e86">g_interrupt_enabled</a></td></tr>
<tr class="separator:ga18a272af1cdb2009183461e1647f4e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga95fbf1e7bfa9b76eb83d87c8f217b303"><td class="memItemLeft" align="right" valign="top">static volatile uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga95fbf1e7bfa9b76eb83d87c8f217b303">cpu_irq_critical_section_counter</a></td></tr>
<tr class="separator:ga95fbf1e7bfa9b76eb83d87c8f217b303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72ad25cfbc62300764240b6f38505b56"><td class="memItemLeft" align="right" valign="top">static volatile bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga72ad25cfbc62300764240b6f38505b56">cpu_irq_prev_interrupt_state</a></td></tr>
<tr class="separator:ga72ad25cfbc62300764240b6f38505b56"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ae56b0282c58a65969c092e1eeeedd6f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae56b0282c58a65969c092e1eeeedd6f5">&sect;&nbsp;</a></span>Abs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Abs</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a</td><td>)</td>
          <td>&#160;&#160;&#160;(((a) &lt;  0) ? -(a) : (a))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the absolute value of <em>a</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Absolute value of <em>a</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="afd3b4e313492a0862292dc3072d8e347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd3b4e313492a0862292dc3072d8e347">&sect;&nbsp;</a></span>ATPASTE2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ATPASTE2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a55fb148844f5ba993a992b609728e82e">TPASTE2</a>(a, b)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a80b7594516326045fbcaec54d7759c20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80b7594516326045fbcaec54d7759c20">&sect;&nbsp;</a></span>ATPASTE3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ATPASTE3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a3774e5e321825e6ab4a27fef2a0deb14">TPASTE3</a>(a, b, c)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a650ecb20996a13e0c0bc530ba83fe5dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650ecb20996a13e0c0bc530ba83fe5dc">&sect;&nbsp;</a></span>be32_to_cpu</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define be32_to_cpu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6fd2e5e0a54fb6300fe98868141175e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6fd2e5e0a54fb6300fe98868141175e">&sect;&nbsp;</a></span>BE32_TO_CPU</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BE32_TO_CPU</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a38d28b622a4bc7b0f3fb2be2ef1e0086"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38d28b622a4bc7b0f3fb2be2ef1e0086">&sect;&nbsp;</a></span>COMPILER_PACK_RESET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PACK_RESET</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack())</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set default alignment for subsequent structure and union definitions. </p>

</div>
</div>
<a id="ae2c02ff865ca6538b4b1bddbf2a6876c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2c02ff865ca6538b4b1bddbf2a6876c">&sect;&nbsp;</a></span>COMPILER_PACK_SET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PACK_SET</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">alignment</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack(alignment))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set maximum alignment for subsequent structure and union definitions to <em>alignment</em>. </p>

</div>
</div>
<a id="a85a3ab5701281268521f109ed0078668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85a3ab5701281268521f109ed0078668">&sect;&nbsp;</a></span>COMPILER_PRAGMA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PRAGMA</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arg</td><td>)</td>
          <td>&#160;&#160;&#160;_Pragma(#arg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Emit the compiler pragma <em>arg</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arg</td><td>The pragma directive as it would appear after <em>#pragma</em> (i.e. not stringified). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afd3274bb70aea7cf9be403940e001cc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd3274bb70aea7cf9be403940e001cc7">&sect;&nbsp;</a></span>cpu_to_be32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_to_be32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abe5b68e77b7f6870895076278368d201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe5b68e77b7f6870895076278368d201">&sect;&nbsp;</a></span>CPU_TO_BE32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_TO_BE32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga4396627e66be3b45a9074783d1ca507e">__REV</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4886a8f966a69949cefc46a6a3468006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4886a8f966a69949cefc46a6a3468006">&sect;&nbsp;</a></span>Max</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((a) &gt; (b)) ?  (a) : (b))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the maximal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Maximal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="affe776513b24d84b39af8ab0930fef7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe776513b24d84b39af8ab0930fef7f">&sect;&nbsp;</a></span>max</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a4886a8f966a69949cefc46a6a3468006">Max</a>(a, b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the maximal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Maximal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="a9e04209162ea72f9985338596262b657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e04209162ea72f9985338596262b657">&sect;&nbsp;</a></span>Min</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Min</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((a) &lt; (b)) ?  (a) : (b))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the minimal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Minimal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="ac6afabdc09a49a433ee19d8a9486056d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6afabdc09a49a433ee19d8a9486056d">&sect;&nbsp;</a></span>min</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define min</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="compiler_8h.xhtml#a9e04209162ea72f9985338596262b657">Min</a>(a, b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the minimal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Minimal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="a55fb148844f5ba993a992b609728e82e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55fb148844f5ba993a992b609728e82e">&sect;&nbsp;</a></span>TPASTE2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TPASTE2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a##b</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3774e5e321825e6ab4a27fef2a0deb14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3774e5e321825e6ab4a27fef2a0deb14">&sect;&nbsp;</a></span>TPASTE3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TPASTE3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">c&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a##b##c</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ada67c62b1c57e07efa04431bc40b9238"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada67c62b1c57e07efa04431bc40b9238">&sect;&nbsp;</a></span>UNUSED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UNUSED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v</td><td>)</td>
          <td>&#160;&#160;&#160;(void)(v)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marking <em>v</em> as a unused parameter or value. </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
