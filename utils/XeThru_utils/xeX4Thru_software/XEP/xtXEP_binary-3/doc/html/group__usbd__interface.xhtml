<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: Usbd_interface</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Usbd_interface</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Collaboration diagram for Usbd_interface:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface.svg" width="340" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__usbd__rc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__rc.xhtml">USB device API return codes</a></td></tr>
<tr class="memdesc:group__usbd__rc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This section lists the return codes for the USB device driver API. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__states"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__states.xhtml">USB device states</a></td></tr>
<tr class="memdesc:group__usbd__states"><td class="mdescLeft">&#160;</td><td class="mdescRight">This section lists the device states of the USB device driver. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___u_s_b_d_transfer_buffer.xhtml">_USBDTransferBuffer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer struct used for multi-buffer-listed transfer.  <a href="struct___u_s_b_d_transfer_buffer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___u_s_b_d_dma_descriptor.xhtml">_USBDDmaDescriptor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct used for USBD DMA Link List <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Descriptor, must be 16-bytes aligned.  <a href="struct___u_s_b_d_dma_descriptor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___u_s_b_d_driver_descriptors.xhtml">_USBDDriverDescriptors</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___u_s_b_d_driver.xhtml">_USBDDriver</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga63064ab8800bf35183494fd0fe2f6b32"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___u_s_b_d_transfer_buffer.xhtml">_USBDTransferBuffer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a></td></tr>
<tr class="memdesc:ga63064ab8800bf35183494fd0fe2f6b32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer struct used for multi-buffer-listed transfer.  <a href="#ga63064ab8800bf35183494fd0fe2f6b32">More...</a><br /></td></tr>
<tr class="separator:ga63064ab8800bf35183494fd0fe2f6b32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0061699efde9ba206bc65f6a6219ac3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___u_s_b_d_dma_descriptor.xhtml">_USBDDmaDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gad0061699efde9ba206bc65f6a6219ac3">USBDDmaDescriptor</a></td></tr>
<tr class="memdesc:gad0061699efde9ba206bc65f6a6219ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct used for USBD DMA Link List <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Descriptor, must be 16-bytes aligned.  <a href="#gad0061699efde9ba206bc65f6a6219ac3">More...</a><br /></td></tr>
<tr class="separator:gad0061699efde9ba206bc65f6a6219ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga366a570f5d3d658362dbf52b68982bed"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>) (void *pArg, uint8_t status, uint32_t transferred, uint32_t remaining)</td></tr>
<tr class="memdesc:ga366a570f5d3d658362dbf52b68982bed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback used by transfer functions (USBD_Read &amp; USBD_Write) to notify that a transaction is complete.  <a href="#ga366a570f5d3d658362dbf52b68982bed">More...</a><br /></td></tr>
<tr class="separator:ga366a570f5d3d658362dbf52b68982bed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54f8387c394ad0deb5788f44411c70b3"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga54f8387c394ad0deb5788f44411c70b3">MblTransferCallback</a>) (void *pArg, uint8_t status)</td></tr>
<tr class="memdesc:ga54f8387c394ad0deb5788f44411c70b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback used by MBL transfer functions (USBD_Read &amp; USBD_Write) to notify that a transaction is complete.  <a href="#ga54f8387c394ad0deb5788f44411c70b3">More...</a><br /></td></tr>
<tr class="separator:ga54f8387c394ad0deb5788f44411c70b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaacf969faf7bd4bc362fd3c5fc4391ad0"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___u_s_b_d_driver_descriptors.xhtml">_USBDDriverDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a></td></tr>
<tr class="memdesc:gaacf969faf7bd4bc362fd3c5fc4391ad0"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of all descriptors used by a USB device driver.  <a href="#gaacf969faf7bd4bc362fd3c5fc4391ad0">More...</a><br /></td></tr>
<tr class="separator:gaacf969faf7bd4bc362fd3c5fc4391ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5bd095355e5ea2fad51841cce4127ff6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___u_s_b_d_driver.xhtml">_USBDDriver</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a></td></tr>
<tr class="memdesc:ga5bd095355e5ea2fad51841cce4127ff6"><td class="mdescLeft">&#160;</td><td class="mdescRight">USB device driver structure, holding a list of descriptors identifying the device as well as the driver current state.  <a href="#ga5bd095355e5ea2fad51841cce4127ff6">More...</a><br /></td></tr>
<tr class="separator:ga5bd095355e5ea2fad51841cce4127ff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga522cddda5972d92b3c974e6fc8c58956"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga522cddda5972d92b3c974e6fc8c58956">USBD_SuspendHandler</a> (void)</td></tr>
<tr class="memdesc:ga522cddda5972d92b3c974e6fc8c58956"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle the USB suspend event, should be invoked whenever HW reports a suspend signal.  <a href="#ga522cddda5972d92b3c974e6fc8c58956">More...</a><br /></td></tr>
<tr class="separator:ga522cddda5972d92b3c974e6fc8c58956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5931e8b51cc0a708c654a2ede474722a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga5931e8b51cc0a708c654a2ede474722a">USBD_ResumeHandler</a> (void)</td></tr>
<tr class="memdesc:ga5931e8b51cc0a708c654a2ede474722a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle the USB resume event, should be invoked whenever HW reports a resume signal.  <a href="#ga5931e8b51cc0a708c654a2ede474722a">More...</a><br /></td></tr>
<tr class="separator:ga5931e8b51cc0a708c654a2ede474722a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1bf93dee935f232cc0acae8cac8f264"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gad1bf93dee935f232cc0acae8cac8f264">USBD_ResetHandler</a> ()</td></tr>
<tr class="memdesc:gad1bf93dee935f232cc0acae8cac8f264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle the USB reset event, should be invoked whenever HW found USB reset signal on bus, which usually is called "end of bus reset" status.  <a href="#gad1bf93dee935f232cc0acae8cac8f264">More...</a><br /></td></tr>
<tr class="separator:gad1bf93dee935f232cc0acae8cac8f264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab76f94b99aa061efe700867fc400738c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gab76f94b99aa061efe700867fc400738c">USBD_RequestHandler</a> (uint8_t bEndpoint, const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *pRequest)</td></tr>
<tr class="memdesc:gab76f94b99aa061efe700867fc400738c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle the USB setup package received, should be invoked when an endpoint got a setup package as request.  <a href="#gab76f94b99aa061efe700867fc400738c">More...</a><br /></td></tr>
<tr class="separator:gab76f94b99aa061efe700867fc400738c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga026b2622df8f7dfc8b8b510e76a05365"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga026b2622df8f7dfc8b8b510e76a05365">USBD_ConfigureEndpoint</a> (const <a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *pDescriptor)</td></tr>
<tr class="memdesc:ga026b2622df8f7dfc8b8b510e76a05365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures an endpoint according to its <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Descriptor.  <a href="#ga026b2622df8f7dfc8b8b510e76a05365">More...</a><br /></td></tr>
<tr class="separator:ga026b2622df8f7dfc8b8b510e76a05365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc4728f4af70056b3a271f333b759592"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gafc4728f4af70056b3a271f333b759592">USBD_Write</a> (uint8_t bEndpoint, const void *pData, uint32_t dLength, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArgument)</td></tr>
<tr class="memdesc:gafc4728f4af70056b3a271f333b759592"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends data through a USB endpoint.  <a href="#gafc4728f4af70056b3a271f333b759592">More...</a><br /></td></tr>
<tr class="separator:gafc4728f4af70056b3a271f333b759592"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa786fa9bbfd3c2f64b5f486e537ffebb"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaa786fa9bbfd3c2f64b5f486e537ffebb">USBD_Read</a> (uint8_t bEndpoint, void *pData, uint32_t dLength, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArgument)</td></tr>
<tr class="memdesc:gaa786fa9bbfd3c2f64b5f486e537ffebb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt.  <a href="#gaa786fa9bbfd3c2f64b5f486e537ffebb">More...</a><br /></td></tr>
<tr class="separator:gaa786fa9bbfd3c2f64b5f486e537ffebb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02adabcf042f350cc045fb2c798bb4e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga02adabcf042f350cc045fb2c798bb4e9">USBD_Halt</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:ga02adabcf042f350cc045fb2c798bb4e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the HALT feature on the given endpoint (if not already in this state).  <a href="#ga02adabcf042f350cc045fb2c798bb4e9">More...</a><br /></td></tr>
<tr class="separator:ga02adabcf042f350cc045fb2c798bb4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0ae896eb63155735b328c157fdc80a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gae0ae896eb63155735b328c157fdc80a9">USBD_Unhalt</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:gae0ae896eb63155735b328c157fdc80a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the Halt feature on the given endpoint.  <a href="#gae0ae896eb63155735b328c157fdc80a9">More...</a><br /></td></tr>
<tr class="separator:gae0ae896eb63155735b328c157fdc80a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf469bcfbab3b7f7e211d550e79e0b3c8"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaf469bcfbab3b7f7e211d550e79e0b3c8">USBD_IsHalted</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:gaf469bcfbab3b7f7e211d550e79e0b3c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current Halt status of an endpoint.  <a href="#gaf469bcfbab3b7f7e211d550e79e0b3c8">More...</a><br /></td></tr>
<tr class="separator:gaf469bcfbab3b7f7e211d550e79e0b3c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02b4d22818a9e99025383bbc5a2507d7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga02b4d22818a9e99025383bbc5a2507d7">USBD_IsHighSpeed</a> (void)</td></tr>
<tr class="memdesc:ga02b4d22818a9e99025383bbc5a2507d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the device is running in high or full-speed.  <a href="#ga02b4d22818a9e99025383bbc5a2507d7">More...</a><br /></td></tr>
<tr class="separator:ga02b4d22818a9e99025383bbc5a2507d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad846cf5a2a002f83abe01d17d233f644"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gad846cf5a2a002f83abe01d17d233f644">USBD_Stall</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:gad846cf5a2a002f83abe01d17d233f644"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the given endpoint to acknowledge the next packet it receives with a STALL handshake.  <a href="#gad846cf5a2a002f83abe01d17d233f644">More...</a><br /></td></tr>
<tr class="separator:gad846cf5a2a002f83abe01d17d233f644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4cb07ba7dff39ad8c9b331dfaf27e853"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga4cb07ba7dff39ad8c9b331dfaf27e853">USBD_SetAddress</a> (uint8_t address)</td></tr>
<tr class="memdesc:ga4cb07ba7dff39ad8c9b331dfaf27e853"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the device address to the given value.  <a href="#ga4cb07ba7dff39ad8c9b331dfaf27e853">More...</a><br /></td></tr>
<tr class="separator:ga4cb07ba7dff39ad8c9b331dfaf27e853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae148078e201da24b737306d7559bb967"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gae148078e201da24b737306d7559bb967">USBD_SetConfiguration</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:gae148078e201da24b737306d7559bb967"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current device configuration.  <a href="#gae148078e201da24b737306d7559bb967">More...</a><br /></td></tr>
<tr class="separator:gae148078e201da24b737306d7559bb967"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfd4fed846cba74af43e668e47b6dc10"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gacfd4fed846cba74af43e668e47b6dc10">USBD_RemoteWakeUp</a> (void)</td></tr>
<tr class="memdesc:gacfd4fed846cba74af43e668e47b6dc10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a remote wake-up procedure.  <a href="#gacfd4fed846cba74af43e668e47b6dc10">More...</a><br /></td></tr>
<tr class="separator:gacfd4fed846cba74af43e668e47b6dc10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71b9264662d74666e4b058984e3346e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga71b9264662d74666e4b058984e3346e5">USBD_Connect</a> (void)</td></tr>
<tr class="memdesc:ga71b9264662d74666e4b058984e3346e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connects the pull-up on the D+ line of the USB.  <a href="#ga71b9264662d74666e4b058984e3346e5">More...</a><br /></td></tr>
<tr class="separator:ga71b9264662d74666e4b058984e3346e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d952f8cf9bde552cfd5559ae47e70fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga2d952f8cf9bde552cfd5559ae47e70fc">USBD_Disconnect</a> (void)</td></tr>
<tr class="memdesc:ga2d952f8cf9bde552cfd5559ae47e70fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnects the pull-up from the D+ line of the USB.  <a href="#ga2d952f8cf9bde552cfd5559ae47e70fc">More...</a><br /></td></tr>
<tr class="separator:ga2d952f8cf9bde552cfd5559ae47e70fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1fd3982402055e37aa879c199e0b7fee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga1fd3982402055e37aa879c199e0b7fee">USBD_Init</a> (void)</td></tr>
<tr class="memdesc:ga1fd3982402055e37aa879c199e0b7fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB driver.  <a href="#ga1fd3982402055e37aa879c199e0b7fee">More...</a><br /></td></tr>
<tr class="separator:ga1fd3982402055e37aa879c199e0b7fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga804bf63efb2d4420a3bf42984e807e72"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga804bf63efb2d4420a3bf42984e807e72">USBD_GetState</a> (void)</td></tr>
<tr class="memdesc:ga804bf63efb2d4420a3bf42984e807e72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current state of the USB device.  <a href="#ga804bf63efb2d4420a3bf42984e807e72">More...</a><br /></td></tr>
<tr class="separator:ga804bf63efb2d4420a3bf42984e807e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab3264faf4fbfa56f0d6db53f806cbc3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaab3264faf4fbfa56f0d6db53f806cbc3">USBD_Test</a> (uint8_t bIndex)</td></tr>
<tr class="memdesc:gaab3264faf4fbfa56f0d6db53f806cbc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Certification test for High Speed device.  <a href="#gaab3264faf4fbfa56f0d6db53f806cbc3">More...</a><br /></td></tr>
<tr class="separator:gaab3264faf4fbfa56f0d6db53f806cbc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac812ec8561d0e3fc38dc9f91acc10eff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gac812ec8561d0e3fc38dc9f91acc10eff">USBD_ForceFullSpeed</a> (void)</td></tr>
<tr class="separator:gac812ec8561d0e3fc38dc9f91acc10eff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5579e02a71a8f510005e873fc50a0f4a"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga5579e02a71a8f510005e873fc50a0f4a">USBDCallbacks_Initialized</a> (void)</td></tr>
<tr class="memdesc:ga5579e02a71a8f510005e873fc50a0f4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked after the USB driver has been initialized.  <a href="#ga5579e02a71a8f510005e873fc50a0f4a">More...</a><br /></td></tr>
<tr class="separator:ga5579e02a71a8f510005e873fc50a0f4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e41562d2721787dbca41dd5bd574fb3"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga9e41562d2721787dbca41dd5bd574fb3">USBDCallbacks_Reset</a> (void)</td></tr>
<tr class="memdesc:ga9e41562d2721787dbca41dd5bd574fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the USB driver is reset.  <a href="#ga9e41562d2721787dbca41dd5bd574fb3">More...</a><br /></td></tr>
<tr class="separator:ga9e41562d2721787dbca41dd5bd574fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf30332628067d1dd8cd1a177f5dc66ac"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaf30332628067d1dd8cd1a177f5dc66ac">USBDCallbacks_Suspended</a> (void)</td></tr>
<tr class="memdesc:gaf30332628067d1dd8cd1a177f5dc66ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the USB device gets suspended.  <a href="#gaf30332628067d1dd8cd1a177f5dc66ac">More...</a><br /></td></tr>
<tr class="separator:gaf30332628067d1dd8cd1a177f5dc66ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac077464ce6090a99a999031ee2b43abc"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gac077464ce6090a99a999031ee2b43abc">USBDCallbacks_Resumed</a> (void)</td></tr>
<tr class="memdesc:gac077464ce6090a99a999031ee2b43abc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the USB device leaves the Suspended state.  <a href="#gac077464ce6090a99a999031ee2b43abc">More...</a><br /></td></tr>
<tr class="separator:gac077464ce6090a99a999031ee2b43abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf68d1a97f79b62b49e841e77a68c851a"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaf68d1a97f79b62b49e841e77a68c851a">USBDCallbacks_RequestReceived</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gaf68d1a97f79b62b49e841e77a68c851a"><td class="mdescLeft">&#160;</td><td class="mdescRight">USBDCallbacks_RequestReceived - Invoked when a new SETUP request is received.  <a href="#gaf68d1a97f79b62b49e841e77a68c851a">More...</a><br /></td></tr>
<tr class="separator:gaf68d1a97f79b62b49e841e77a68c851a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga343ea3516192c9f6c6b92ef258c811c3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga343ea3516192c9f6c6b92ef258c811c3">TerminateCtrlInWithNull</a> (void *pArg, uint8_t status, uint32_t transferred, uint32_t remaining)</td></tr>
<tr class="memdesc:ga343ea3516192c9f6c6b92ef258c811c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a NULL packet.  <a href="#ga343ea3516192c9f6c6b92ef258c811c3">More...</a><br /></td></tr>
<tr class="separator:ga343ea3516192c9f6c6b92ef258c811c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a20011d336dec2bd5feb197f0da1c80"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga9a20011d336dec2bd5feb197f0da1c80">SetConfiguration</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga9a20011d336dec2bd5feb197f0da1c80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the device by setting it into the Configured state and initializing all endpoints.  <a href="#ga9a20011d336dec2bd5feb197f0da1c80">More...</a><br /></td></tr>
<tr class="separator:ga9a20011d336dec2bd5feb197f0da1c80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d470d7bee3682fff6c69b1a758eba21"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga9d470d7bee3682fff6c69b1a758eba21">GetConfiguration</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver)</td></tr>
<tr class="memdesc:ga9d470d7bee3682fff6c69b1a758eba21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the current configuration number to the host.  <a href="#ga9d470d7bee3682fff6c69b1a758eba21">More...</a><br /></td></tr>
<tr class="separator:ga9d470d7bee3682fff6c69b1a758eba21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga962288f78a55bd84652a388023b53dca"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga962288f78a55bd84652a388023b53dca">GetDeviceStatus</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver)</td></tr>
<tr class="memdesc:ga962288f78a55bd84652a388023b53dca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the current status of the device to the host.  <a href="#ga962288f78a55bd84652a388023b53dca">More...</a><br /></td></tr>
<tr class="separator:ga962288f78a55bd84652a388023b53dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa52d41127f737b06cc6991626de366b9"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaa52d41127f737b06cc6991626de366b9">GetEndpointStatus</a> (uint8_t bEndpoint)</td></tr>
<tr class="memdesc:gaa52d41127f737b06cc6991626de366b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the current status of an endpoints to the USB host.  <a href="#gaa52d41127f737b06cc6991626de366b9">More...</a><br /></td></tr>
<tr class="separator:gaa52d41127f737b06cc6991626de366b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadbb4c8a840d3ff539be6fa5fa9f4a4e0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gadbb4c8a840d3ff539be6fa5fa9f4a4e0">GetDescriptor</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t type, uint8_t indexRDesc, uint32_t <a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>)</td></tr>
<tr class="memdesc:gadbb4c8a840d3ff539be6fa5fa9f4a4e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the requested USB descriptor to the host if available, or STALLs the request.  <a href="#gadbb4c8a840d3ff539be6fa5fa9f4a4e0">More...</a><br /></td></tr>
<tr class="separator:gadbb4c8a840d3ff539be6fa5fa9f4a4e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69728b150794285ecaf38b5383471965"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga69728b150794285ecaf38b5383471965">SetInterface</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t infnum, uint8_t setting)</td></tr>
<tr class="memdesc:ga69728b150794285ecaf38b5383471965"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the active setting of the given interface if the configuration supports it; otherwise, the control pipe is STALLed.  <a href="#ga69728b150794285ecaf38b5383471965">More...</a><br /></td></tr>
<tr class="separator:ga69728b150794285ecaf38b5383471965"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf933d8614b19b074895685836de44361"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaf933d8614b19b074895685836de44361">GetInterface</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t infnum)</td></tr>
<tr class="memdesc:gaf933d8614b19b074895685836de44361"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the currently active setting of the given interface to the USB host.  <a href="#gaf933d8614b19b074895685836de44361">More...</a><br /></td></tr>
<tr class="separator:gaf933d8614b19b074895685836de44361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga001b34862324f5ba4a65ad3195e4896f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga001b34862324f5ba4a65ad3195e4896f">USBDDriver_Test</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t test)</td></tr>
<tr class="memdesc:ga001b34862324f5ba4a65ad3195e4896f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs the selected test on the USB device (high-speed only).  <a href="#ga001b34862324f5ba4a65ad3195e4896f">More...</a><br /></td></tr>
<tr class="separator:ga001b34862324f5ba4a65ad3195e4896f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga01ba3ff549b968edc152cdb23c2027d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga01ba3ff549b968edc152cdb23c2027d1">USBD_GetDriver</a> (void)</td></tr>
<tr class="memdesc:ga01ba3ff549b968edc152cdb23c2027d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return USBDDriver instance pointer for global usage.  <a href="#ga01ba3ff549b968edc152cdb23c2027d1">More...</a><br /></td></tr>
<tr class="separator:ga01ba3ff549b968edc152cdb23c2027d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11868145aba27b8ca63ab6395439cb0d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga11868145aba27b8ca63ab6395439cb0d">USBDDriver_Initialize</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors, uint8_t *pInterfaces, uint8_t intfCount)</td></tr>
<tr class="memdesc:ga11868145aba27b8ca63ab6395439cb0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a USBDDriver instance with a list of descriptors.  <a href="#ga11868145aba27b8ca63ab6395439cb0d">More...</a><br /></td></tr>
<tr class="separator:ga11868145aba27b8ca63ab6395439cb0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadfce99fba013d30648e7a058c7fa6799"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__usb__descriptor.xhtml#ga87ae8d8da7ad53b72fb40b6e8061d5dd">USBConfigurationDescriptor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gadfce99fba013d30648e7a058c7fa6799">USBDDriver_GetCfgDescriptors</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, uint8_t cfgNum)</td></tr>
<tr class="memdesc:gadfce99fba013d30648e7a058c7fa6799"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns configuration descriptor list.  <a href="#gadfce99fba013d30648e7a058c7fa6799">More...</a><br /></td></tr>
<tr class="separator:gadfce99fba013d30648e7a058c7fa6799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae0893893739fb365d088ea946cb2c89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaae0893893739fb365d088ea946cb2c89">USBDDriver_RequestHandler</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver, const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *pRequest)</td></tr>
<tr class="memdesc:gaae0893893739fb365d088ea946cb2c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles the given request if it is standard, otherwise STALLs it.  <a href="#gaae0893893739fb365d088ea946cb2c89">More...</a><br /></td></tr>
<tr class="separator:gaae0893893739fb365d088ea946cb2c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0907be664b7193af543d1032c6de8606"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga0907be664b7193af543d1032c6de8606">USBDDriver_IsRemoteWakeUpEnabled</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver)</td></tr>
<tr class="memdesc:ga0907be664b7193af543d1032c6de8606"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if RemoteWakeUP feature is enabled.  <a href="#ga0907be664b7193af543d1032c6de8606">More...</a><br /></td></tr>
<tr class="separator:ga0907be664b7193af543d1032c6de8606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga814cc2b7953acab5a65c5706cff85e19"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga814cc2b7953acab5a65c5706cff85e19">USBDDriver_returnOTGFeatures</a> (const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver)</td></tr>
<tr class="memdesc:ga814cc2b7953acab5a65c5706cff85e19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return OTG features supported.  <a href="#ga814cc2b7953acab5a65c5706cff85e19">More...</a><br /></td></tr>
<tr class="separator:ga814cc2b7953acab5a65c5706cff85e19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf9456a5f46d0d02baaa34168d69b88f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gaaf9456a5f46d0d02baaa34168d69b88f">USBDDriver_clearOTGFeatures</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pDriver)</td></tr>
<tr class="memdesc:gaaf9456a5f46d0d02baaa34168d69b88f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear OTG features supported.  <a href="#gaaf9456a5f46d0d02baaa34168d69b88f">More...</a><br /></td></tr>
<tr class="separator:gaaf9456a5f46d0d02baaa34168d69b88f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga327985494ab08999fd60e046bfeffdf9"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga327985494ab08999fd60e046bfeffdf9">USBDDriverCallbacks_ConfigurationChanged</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga327985494ab08999fd60e046bfeffdf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates that the current configuration of the device has changed.  <a href="#ga327985494ab08999fd60e046bfeffdf9">More...</a><br /></td></tr>
<tr class="separator:ga327985494ab08999fd60e046bfeffdf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga50bd417ce66ea649094dc9a927d08e81"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga50bd417ce66ea649094dc9a927d08e81">USBDDriverCallbacks_InterfaceSettingChanged</a> (uint8_t interface, uint8_t setting)</td></tr>
<tr class="memdesc:ga50bd417ce66ea649094dc9a927d08e81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies of a change in the currently active setting of an interface.  <a href="#ga50bd417ce66ea649094dc9a927d08e81">More...</a><br /></td></tr>
<tr class="separator:ga50bd417ce66ea649094dc9a927d08e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga6e311d9dfdd5e37b7c52cfeb56d8c28a"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga6e311d9dfdd5e37b7c52cfeb56d8c28a">deviceState</a></td></tr>
<tr class="memdesc:ga6e311d9dfdd5e37b7c52cfeb56d8c28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Device current state.  <a href="#ga6e311d9dfdd5e37b7c52cfeb56d8c28a">More...</a><br /></td></tr>
<tr class="separator:ga6e311d9dfdd5e37b7c52cfeb56d8c28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd92223ea09a727894cf60c159dc6062"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#gabd92223ea09a727894cf60c159dc6062">previousDeviceState</a></td></tr>
<tr class="memdesc:gabd92223ea09a727894cf60c159dc6062"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the previous device state.  <a href="#gabd92223ea09a727894cf60c159dc6062">More...</a><br /></td></tr>
<tr class="separator:gabd92223ea09a727894cf60c159dc6062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a9ae6b6f8d3f88c95f5a7aa1ac6aa24"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga1a9ae6b6f8d3f88c95f5a7aa1ac6aa24">ForceFS</a> = 0</td></tr>
<tr class="separator:ga1a9ae6b6f8d3f88c95f5a7aa1ac6aa24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e181c734ec3f57f4bb7eaa3c6bf97dc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__interface.xhtml#ga3e181c734ec3f57f4bb7eaa3c6bf97dc">usbdDriver</a></td></tr>
<tr class="memdesc:ga3e181c734ec3f57f4bb7eaa3c6bf97dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default device driver instance, for all class drivers in USB Lib.  <a href="#ga3e181c734ec3f57f4bb7eaa3c6bf97dc">More...</a><br /></td></tr>
<tr class="separator:ga3e181c734ec3f57f4bb7eaa3c6bf97dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga54f8387c394ad0deb5788f44411c70b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54f8387c394ad0deb5788f44411c70b3">&sect;&nbsp;</a></span>MblTransferCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* MblTransferCallback) (void *pArg, uint8_t status)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Callback used by MBL transfer functions (USBD_Read &amp; USBD_Write) to notify that a transaction is complete. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pArg</td><td>Pointer to callback arguments. </td></tr>
    <tr><td class="paramname">status</td><td>USBD status. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga366a570f5d3d658362dbf52b68982bed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga366a570f5d3d658362dbf52b68982bed">&sect;&nbsp;</a></span>TransferCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* TransferCallback) (void *pArg, uint8_t status, uint32_t transferred, uint32_t remaining)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Callback used by transfer functions (USBD_Read &amp; USBD_Write) to notify that a transaction is complete. </p>

</div>
</div>
<a id="gad0061699efde9ba206bc65f6a6219ac3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad0061699efde9ba206bc65f6a6219ac3">&sect;&nbsp;</a></span>USBDDmaDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___u_s_b_d_dma_descriptor.xhtml">_USBDDmaDescriptor</a>   <a class="el" href="group__usbd__interface.xhtml#gad0061699efde9ba206bc65f6a6219ac3">USBDDmaDescriptor</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Struct used for USBD DMA Link List <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Descriptor, must be 16-bytes aligned. </p>
<p>(For USB, DMA transfer is linked to EPs and FIFO address is EP defined) </p>

</div>
</div>
<a id="ga5bd095355e5ea2fad51841cce4127ff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5bd095355e5ea2fad51841cce4127ff6">&sect;&nbsp;</a></span>USBDDriver</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>USB device driver structure, holding a list of descriptors identifying the device as well as the driver current state. </p>

</div>
</div>
<a id="gaacf969faf7bd4bc362fd3c5fc4391ad0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaacf969faf7bd4bc362fd3c5fc4391ad0">&sect;&nbsp;</a></span>USBDDriverDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List of all descriptors used by a USB device driver. </p>
<p>Each descriptor can be provided in two versions: full-speed and high-speed. Devices which are not high-speed capable do not need to provided high-speed descriptors and the full-speed qualifier &amp; other speed descriptors. </p>

</div>
</div>
<a id="ga63064ab8800bf35183494fd0fe2f6b32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga63064ab8800bf35183494fd0fe2f6b32">&sect;&nbsp;</a></span>USBDTransferBuffer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___u_s_b_d_transfer_buffer.xhtml">_USBDTransferBuffer</a>  <a class="el" href="group__usbd__interface.xhtml#ga63064ab8800bf35183494fd0fe2f6b32">USBDTransferBuffer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Buffer struct used for multi-buffer-listed transfer. </p>
<p>The driver can process 255 bytes of buffers or buffer list window. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9d470d7bee3682fff6c69b1a758eba21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9d470d7bee3682fff6c69b1a758eba21">&sect;&nbsp;</a></span>GetConfiguration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void GetConfiguration </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the current configuration number to the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga9d470d7bee3682fff6c69b1a758eba21_cgraph.svg" width="315" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga9d470d7bee3682fff6c69b1a758eba21_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gadbb4c8a840d3ff539be6fa5fa9f4a4e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadbb4c8a840d3ff539be6fa5fa9f4a4e0">&sect;&nbsp;</a></span>GetDescriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void GetDescriptor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>indexRDesc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the requested USB descriptor to the host if available, or STALLs the request. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">type</td><td>Type of the requested descriptor </td></tr>
    <tr><td class="paramname">index</td><td>Index of the requested descriptor. </td></tr>
    <tr><td class="paramname">length</td><td>Maximum number of bytes to return. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gadbb4c8a840d3ff539be6fa5fa9f4a4e0_cgraph.svg" width="518" height="374"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gadbb4c8a840d3ff539be6fa5fa9f4a4e0_icgraph.svg" width="376" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga962288f78a55bd84652a388023b53dca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga962288f78a55bd84652a388023b53dca">&sect;&nbsp;</a></span>GetDeviceStatus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void GetDeviceStatus </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the current status of the device to the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga962288f78a55bd84652a388023b53dca_cgraph.svg" width="391" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga962288f78a55bd84652a388023b53dca_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa52d41127f737b06cc6991626de366b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa52d41127f737b06cc6991626de366b9">&sect;&nbsp;</a></span>GetEndpointStatus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void GetEndpointStatus </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the current status of an endpoints to the USB host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaa52d41127f737b06cc6991626de366b9_cgraph.svg" width="328" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaa52d41127f737b06cc6991626de366b9_icgraph.svg" width="408" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf933d8614b19b074895685836de44361"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf933d8614b19b074895685836de44361">&sect;&nbsp;</a></span>GetInterface()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void GetInterface </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>infnum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the currently active setting of the given interface to the USB host. </p>
<p>If alternate settings are not supported, this function STALLs the control pipe. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">infnum</td><td>Interface number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf933d8614b19b074895685836de44361_cgraph.svg" width="259" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf933d8614b19b074895685836de44361_icgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9a20011d336dec2bd5feb197f0da1c80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9a20011d336dec2bd5feb197f0da1c80">&sect;&nbsp;</a></span>SetConfiguration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void SetConfiguration </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures the device by setting it into the Configured state and initializing all endpoints. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">cfgnum</td><td>Configuration number to set. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga9a20011d336dec2bd5feb197f0da1c80_cgraph.svg" width="390" height="323"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga9a20011d336dec2bd5feb197f0da1c80_icgraph.svg" width="395" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga69728b150794285ecaf38b5383471965"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga69728b150794285ecaf38b5383471965">&sect;&nbsp;</a></span>SetInterface()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void SetInterface </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>infnum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>setting</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the active setting of the given interface if the configuration supports it; otherwise, the control pipe is STALLed. </p>
<p>If the setting of an interface changes.  pDriver Pointer to a USBDDriver instance.  infnum Interface number.  setting New active setting for the interface. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga69728b150794285ecaf38b5383471965_cgraph.svg" width="347" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga69728b150794285ecaf38b5383471965_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga343ea3516192c9f6c6b92ef258c811c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga343ea3516192c9f6c6b92ef258c811c3">&sect;&nbsp;</a></span>TerminateCtrlInWithNull()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void TerminateCtrlInWithNull </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>transferred</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>remaining</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Send a NULL packet. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga343ea3516192c9f6c6b92ef258c811c3_cgraph.svg" width="327" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga343ea3516192c9f6c6b92ef258c811c3_icgraph.svg" width="339" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga026b2622df8f7dfc8b8b510e76a05365"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga026b2622df8f7dfc8b8b510e76a05365">&sect;&nbsp;</a></span>USBD_ConfigureEndpoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_ConfigureEndpoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures an endpoint according to its <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> Descriptor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDescriptor</td><td>Pointer to an <a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> descriptor. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga026b2622df8f7dfc8b8b510e76a05365_cgraph.svg" width="420" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga026b2622df8f7dfc8b8b510e76a05365_icgraph.svg" width="395" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga71b9264662d74666e4b058984e3346e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga71b9264662d74666e4b058984e3346e5">&sect;&nbsp;</a></span>USBD_Connect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Connect </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Connects the pull-up on the D+ line of the USB. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga71b9264662d74666e4b058984e3346e5_cgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga71b9264662d74666e4b058984e3346e5_icgraph.svg" width="280" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga2d952f8cf9bde552cfd5559ae47e70fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2d952f8cf9bde552cfd5559ae47e70fc">&sect;&nbsp;</a></span>USBD_Disconnect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Disconnect </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disconnects the pull-up from the D+ line of the USB. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga2d952f8cf9bde552cfd5559ae47e70fc_cgraph.svg" width="368" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac812ec8561d0e3fc38dc9f91acc10eff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac812ec8561d0e3fc38dc9f91acc10eff">&sect;&nbsp;</a></span>USBD_ForceFullSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_ForceFullSpeed </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga01ba3ff549b968edc152cdb23c2027d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga01ba3ff549b968edc152cdb23c2027d1">&sect;&nbsp;</a></span>USBD_GetDriver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> * USBD_GetDriver </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return USBDDriver instance pointer for global usage. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga01ba3ff549b968edc152cdb23c2027d1_icgraph.svg" width="696" height="2096"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga804bf63efb2d4420a3bf42984e807e72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga804bf63efb2d4420a3bf42984e807e72">&sect;&nbsp;</a></span>USBD_GetState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_GetState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current state of the USB device. </p>
<dl class="section return"><dt>Returns</dt><dd>Device current state. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga804bf63efb2d4420a3bf42984e807e72_icgraph.svg" width="384" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga02adabcf042f350cc045fb2c798bb4e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga02adabcf042f350cc045fb2c798bb4e9">&sect;&nbsp;</a></span>USBD_Halt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Halt </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the HALT feature on the given endpoint (if not already in this state). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga02adabcf042f350cc045fb2c798bb4e9_cgraph.svg" width="279" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga02adabcf042f350cc045fb2c798bb4e9_icgraph.svg" width="367" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1fd3982402055e37aa879c199e0b7fee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1fd3982402055e37aa879c199e0b7fee">&sect;&nbsp;</a></span>USBD_Init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB driver. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga1fd3982402055e37aa879c199e0b7fee_cgraph.svg" width="332" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga1fd3982402055e37aa879c199e0b7fee_icgraph.svg" width="356" height="795"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf469bcfbab3b7f7e211d550e79e0b3c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf469bcfbab3b7f7e211d550e79e0b3c8">&sect;&nbsp;</a></span>USBD_IsHalted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_IsHalted </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current Halt status of an endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td>Index of endpoint </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the endpoint is currently halted; otherwise 0 </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf469bcfbab3b7f7e211d550e79e0b3c8_cgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf469bcfbab3b7f7e211d550e79e0b3c8_icgraph.svg" width="584" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga02b4d22818a9e99025383bbc5a2507d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga02b4d22818a9e99025383bbc5a2507d7">&sect;&nbsp;</a></span>USBD_IsHighSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_IsHighSpeed </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates if the device is running in high or full-speed. </p>
<p>Always returns 0 since UDP does not support high-speed mode. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga02b4d22818a9e99025383bbc5a2507d7_cgraph.svg" width="386" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga02b4d22818a9e99025383bbc5a2507d7_icgraph.svg" width="348" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa786fa9bbfd3c2f64b5f486e537ffebb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa786fa9bbfd3c2f64b5f486e537ffebb">&sect;&nbsp;</a></span>USBD_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_Read </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArgument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads incoming data on an USB endpoint This methods sets the transfer descriptor and activate the endpoint interrupt. </p>
<p>The actual transfer is then carried out by the endpoint interrupt handler. The Read operation finishes either when the buffer is full, or a short packet (inferior to endpoint maximum size) is received.</p>
<p><em>The buffer must be kept allocated until the transfer is finished</em>. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to a data buffer. </td></tr>
    <tr><td class="paramname">dLength</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional end-of-transfer callback function. </td></tr>
    <tr><td class="paramname">pArgument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaa786fa9bbfd3c2f64b5f486e537ffebb_cgraph.svg" width="383" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaa786fa9bbfd3c2f64b5f486e537ffebb_icgraph.svg" width="815" height="899"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gacfd4fed846cba74af43e668e47b6dc10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfd4fed846cba74af43e668e47b6dc10">&sect;&nbsp;</a></span>USBD_RemoteWakeUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_RemoteWakeUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts a remote wake-up procedure. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gacfd4fed846cba74af43e668e47b6dc10_cgraph.svg" width="426" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gacfd4fed846cba74af43e668e47b6dc10_icgraph.svg" width="468" height="256"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gab76f94b99aa061efe700867fc400738c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab76f94b99aa061efe700867fc400738c">&sect;&nbsp;</a></span>USBD_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>pRequest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handle the USB setup package received, should be invoked when an endpoint got a setup package as request. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
    <tr><td class="paramname">pRequest</td><td>Pointer to content of request. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gab76f94b99aa061efe700867fc400738c_cgraph.svg" width="462" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gab76f94b99aa061efe700867fc400738c_icgraph.svg" width="410" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gad1bf93dee935f232cc0acae8cac8f264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad1bf93dee935f232cc0acae8cac8f264">&sect;&nbsp;</a></span>USBD_ResetHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_ResetHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handle the USB reset event, should be invoked whenever HW found USB reset signal on bus, which usually is called "end of bus reset" status. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gad1bf93dee935f232cc0acae8cac8f264_cgraph.svg" width="395" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gad1bf93dee935f232cc0acae8cac8f264_icgraph.svg" width="499" height="114"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga5931e8b51cc0a708c654a2ede474722a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5931e8b51cc0a708c654a2ede474722a">&sect;&nbsp;</a></span>USBD_ResumeHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_ResumeHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handle the USB resume event, should be invoked whenever HW reports a resume signal. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga5931e8b51cc0a708c654a2ede474722a_cgraph.svg" width="414" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga5931e8b51cc0a708c654a2ede474722a_icgraph.svg" width="515" height="114"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga4cb07ba7dff39ad8c9b331dfaf27e853"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4cb07ba7dff39ad8c9b331dfaf27e853">&sect;&nbsp;</a></span>USBD_SetAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_SetAddress </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the device address to the given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>New device address. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga4cb07ba7dff39ad8c9b331dfaf27e853_cgraph.svg" width="375" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga4cb07ba7dff39ad8c9b331dfaf27e853_icgraph.svg" width="407" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae148078e201da24b737306d7559bb967"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae148078e201da24b737306d7559bb967">&sect;&nbsp;</a></span>USBD_SetConfiguration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_SetConfiguration </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current device configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfgnum</td><td>- Configuration number to set. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gae148078e201da24b737306d7559bb967_cgraph.svg" width="440" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gae148078e201da24b737306d7559bb967_icgraph.svg" width="363" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gad846cf5a2a002f83abe01d17d233f644"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad846cf5a2a002f83abe01d17d233f644">&sect;&nbsp;</a></span>USBD_Stall()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_Stall </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Causes the given endpoint to acknowledge the next packet it receives with a STALL handshake. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS or USBD_STATUS_LOCKED. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gad846cf5a2a002f83abe01d17d233f644_cgraph.svg" width="282" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gad846cf5a2a002f83abe01d17d233f644_icgraph.svg" width="887" height="1128"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga522cddda5972d92b3c974e6fc8c58956"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga522cddda5972d92b3c974e6fc8c58956">&sect;&nbsp;</a></span>USBD_SuspendHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_SuspendHandler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handle the USB suspend event, should be invoked whenever HW reports a suspend signal. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga522cddda5972d92b3c974e6fc8c58956_cgraph.svg" width="431" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga522cddda5972d92b3c974e6fc8c58956_icgraph.svg" width="520" height="114"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaab3264faf4fbfa56f0d6db53f806cbc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab3264faf4fbfa56f0d6db53f806cbc3">&sect;&nbsp;</a></span>USBD_Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Test </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Certification test for High Speed device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bIndex</td><td>Test to be done </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaab3264faf4fbfa56f0d6db53f806cbc3_cgraph.svg" width="276" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaab3264faf4fbfa56f0d6db53f806cbc3_icgraph.svg" width="282" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae0ae896eb63155735b328c157fdc80a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae0ae896eb63155735b328c157fdc80a9">&sect;&nbsp;</a></span>USBD_Unhalt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBD_Unhalt </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the Halt feature on the given endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td>Index of endpoint </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gae0ae896eb63155735b328c157fdc80a9_cgraph.svg" width="295" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gae0ae896eb63155735b328c157fdc80a9_icgraph.svg" width="575" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafc4728f4af70056b3a271f333b759592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafc4728f4af70056b3a271f333b759592">&sect;&nbsp;</a></span>USBD_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBD_Write </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArgument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends data through a USB endpoint. </p>
<p>Sets up the transfer descriptor, writes one or two data payloads (depending on the number of FIFO bank for the endpoint) and then starts the actual transfer. The operation is complete when all the data has been sent.</p>
<p><em>If the size of the buffer is greater than the size of the endpoint (or twice the size if the endpoint has two FIFO banks), then the buffer must be kept allocated until the transfer is finished</em>. This means that it is not possible to declare it on the stack (i.e. as a local variable of a function which returns after starting a transfer).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bEndpoint</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to a buffer with the data to send. </td></tr>
    <tr><td class="paramname">dLength</td><td>Size of the data buffer. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional callback function to invoke when the transfer is complete. </td></tr>
    <tr><td class="paramname">pArgument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the transfer has been started; otherwise, the corresponding error status code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gafc4728f4af70056b3a271f333b759592_cgraph.svg" width="383" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gafc4728f4af70056b3a271f333b759592_icgraph.svg" width="1187" height="2400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga5579e02a71a8f510005e873fc50a0f4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5579e02a71a8f510005e873fc50a0f4a">&sect;&nbsp;</a></span>USBDCallbacks_Initialized()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK void USBDCallbacks_Initialized </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked after the USB driver has been initialized. </p>
<p>By default, do nothing. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga5579e02a71a8f510005e873fc50a0f4a_icgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf68d1a97f79b62b49e841e77a68c851a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf68d1a97f79b62b49e841e77a68c851a">&sect;&nbsp;</a></span>USBDCallbacks_RequestReceived()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK void USBDCallbacks_RequestReceived </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>USBDCallbacks_RequestReceived - Invoked when a new SETUP request is received. </p>
<p>Optional callback re-implementation.</p>
<p>Does nothing by default. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to the request to handle. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf68d1a97f79b62b49e841e77a68c851a_cgraph.svg" width="500" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9e41562d2721787dbca41dd5bd574fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9e41562d2721787dbca41dd5bd574fb3">&sect;&nbsp;</a></span>USBDCallbacks_Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK void USBDCallbacks_Reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the USB driver is reset. </p>
<p>Does nothing by default. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga9e41562d2721787dbca41dd5bd574fb3_icgraph.svg" width="374" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac077464ce6090a99a999031ee2b43abc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac077464ce6090a99a999031ee2b43abc">&sect;&nbsp;</a></span>USBDCallbacks_Resumed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK void USBDCallbacks_Resumed </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the USB device leaves the Suspended state. </p>
<p>By default, Do nothing. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gac077464ce6090a99a999031ee2b43abc_icgraph.svg" width="414" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf30332628067d1dd8cd1a177f5dc66ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf30332628067d1dd8cd1a177f5dc66ac">&sect;&nbsp;</a></span>USBDCallbacks_Suspended()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK void USBDCallbacks_Suspended </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the USB device gets suspended. </p>
<p>By default, do nothing. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaf30332628067d1dd8cd1a177f5dc66ac_icgraph.svg" width="431" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaaf9456a5f46d0d02baaa34168d69b88f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaf9456a5f46d0d02baaa34168d69b88f">&sect;&nbsp;</a></span>USBDDriver_clearOTGFeatures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBDDriver_clearOTGFeatures </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear OTG features supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to an USBDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="gadfce99fba013d30648e7a058c7fa6799"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadfce99fba013d30648e7a058c7fa6799">&sect;&nbsp;</a></span>USBDDriver_GetCfgDescriptors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usb__descriptor.xhtml#ga87ae8d8da7ad53b72fb40b6e8061d5dd">USBConfigurationDescriptor</a> * USBDDriver_GetCfgDescriptors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgNum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns configuration descriptor list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">cfgNum</td><td>Reserved. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gadfce99fba013d30648e7a058c7fa6799_cgraph.svg" width="462" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gadfce99fba013d30648e7a058c7fa6799_icgraph.svg" width="512" height="640"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga11868145aba27b8ca63ab6395439cb0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11868145aba27b8ca63ab6395439cb0d">&sect;&nbsp;</a></span>USBDDriver_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBDDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pInterfaces</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>intfCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a USBDDriver instance with a list of descriptors. </p>
<p>If interfaces can have multiple alternate settings, an array to store the current setting for each interface must be provided. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">pDescriptors</td><td>Pointer to a USBDDriverDescriptors instance. </td></tr>
    <tr><td class="paramname">pInterfaces</td><td>Pointer to an array for storing the current alternate setting of each interface (optional). </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga11868145aba27b8ca63ab6395439cb0d_icgraph.svg" width="426" height="795"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga0907be664b7193af543d1032c6de8606"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0907be664b7193af543d1032c6de8606">&sect;&nbsp;</a></span>USBDDriver_IsRemoteWakeUpEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBDDriver_IsRemoteWakeUpEnabled </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Test if RemoteWakeUP feature is enabled. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to an USBDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if remote wake up has been enabled by the host; otherwise, returns 0 </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga0907be664b7193af543d1032c6de8606_icgraph.svg" width="516" height="256"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaae0893893739fb365d088ea946cb2c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaae0893893739fb365d088ea946cb2c89">&sect;&nbsp;</a></span>USBDDriver_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBDDriver_RequestHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>pRequest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles the given request if it is standard, otherwise STALLs it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to a USBDDriver instance. </td></tr>
    <tr><td class="paramname">pRequest</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaae0893893739fb365d088ea946cb2c89_cgraph.svg" width="766" height="1444"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_gaae0893893739fb365d088ea946cb2c89_icgraph.svg" width="783" height="926"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga814cc2b7953acab5a65c5706cff85e19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga814cc2b7953acab5a65c5706cff85e19">&sect;&nbsp;</a></span>USBDDriver_returnOTGFeatures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBDDriver_returnOTGFeatures </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return OTG features supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDriver</td><td>Pointer to an USBDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the OTG features </dd></dl>

</div>
</div>
<a id="ga001b34862324f5ba4a65ad3195e4896f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga001b34862324f5ba4a65ad3195e4896f">&sect;&nbsp;</a></span>USBDDriver_Test()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBDDriver_Test </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pDriver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>test</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs the selected test on the USB device (high-speed only). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">test</td><td>Test selector value. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga001b34862324f5ba4a65ad3195e4896f_cgraph.svg" width="284" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga001b34862324f5ba4a65ad3195e4896f_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga327985494ab08999fd60e046bfeffdf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga327985494ab08999fd60e046bfeffdf9">&sect;&nbsp;</a></span>USBDDriverCallbacks_ConfigurationChanged()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBDDriverCallbacks_ConfigurationChanged </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates that the current configuration of the device has changed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfgnum</td><td>New device configuration index. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga327985494ab08999fd60e046bfeffdf9_icgraph.svg" width="359" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga50bd417ce66ea649094dc9a927d08e81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga50bd417ce66ea649094dc9a927d08e81">&sect;&nbsp;</a></span>USBDDriverCallbacks_InterfaceSettingChanged()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBDDriverCallbacks_InterfaceSettingChanged </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>interface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>setting</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notifies of a change in the currently active setting of an interface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">interface</td><td>Number of the interface whose setting has changed. </td></tr>
    <tr><td class="paramname">setting</td><td>New interface setting. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__interface_ga50bd417ce66ea649094dc9a927d08e81_icgraph.svg" width="347" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="ga6e311d9dfdd5e37b7c52cfeb56d8c28a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e311d9dfdd5e37b7c52cfeb56d8c28a">&sect;&nbsp;</a></span>deviceState</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t deviceState</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Device current state. </p>

</div>
</div>
<a id="ga1a9ae6b6f8d3f88c95f5a7aa1ac6aa24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a9ae6b6f8d3f88c95f5a7aa1ac6aa24">&sect;&nbsp;</a></span>ForceFS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t ForceFS = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabd92223ea09a727894cf60c159dc6062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabd92223ea09a727894cf60c159dc6062">&sect;&nbsp;</a></span>previousDeviceState</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t previousDeviceState</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates the previous device state. </p>

</div>
</div>
<a id="ga3e181c734ec3f57f4bb7eaa3c6bf97dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3e181c734ec3f57f4bb7eaa3c6bf97dc">&sect;&nbsp;</a></span>usbdDriver</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> usbdDriver</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default device driver instance, for all class drivers in USB Lib. </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
