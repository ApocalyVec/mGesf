<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/cmsis/CMSIS/Include/arm_math.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_74e208acb2b5db593baf5455224ab674.xhtml">cmsis</a></li><li class="navelem"><a class="el" href="dir_fd2588db4c2c5affdf1bbcee370aa10f.xhtml">CMSIS</a></li><li class="navelem"><a class="el" href="dir_b736d58476c43830a264712b5920737c.xhtml">Include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">arm_math.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="arm__math_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* ----------------------------------------------------------------------</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">* Copyright (C) 2010-2015 ARM Limited. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">* $Date:        25. August 2015</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* $Revision:    V1.4.5  (update)</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">* Project:      CMSIS DSP Library</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">* Title:        arm_math.h</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">* Description:  Public header file for CMSIS DSP Library</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">* Redistribution and use in source and binary forms, with or without</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* modification, are permitted provided that the following conditions</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* are met:</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">*   - Redistributions of source code must retain the above copyright</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">*     notice, this list of conditions and the following disclaimer.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*   - Redistributions in binary form must reproduce the above copyright</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">*     notice, this list of conditions and the following disclaimer in</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">*     the documentation and/or other materials provided with the</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*     distribution.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">*   - Neither the name of ARM LIMITED nor the names of its contributors</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">*     may be used to endorse or promote products derived from this</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">*     software without specific prior written permission.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">* &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">* ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">* POSSIBILITY OF SUCH DAMAGE.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> * -------------------------------------------------------------------- */</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#ifndef _ARM_MATH_H</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">#define _ARM_MATH_H</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a87c3b351c33a90de11a2f23e67867a8a">  291</a></span>&#160;<span class="preprocessor">#define __CMSIS_GENERIC         </span><span class="comment">/* disable NVIC and Systick functions */</span><span class="preprocessor"></span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">#if defined(ARM_MATH_CM7)</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="core__cm7_8h.xhtml">core_cm7.h</a>&quot;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">#elif defined (ARM_MATH_CM4)</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="core__cm4_8h.xhtml">core_cm4.h</a>&quot;</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">#elif defined (ARM_MATH_CM3)</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="core__cm3_8h.xhtml">core_cm3.h</a>&quot;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor">#elif defined (ARM_MATH_CM0)</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">  #include &quot;<a class="code" href="core__cm0_8h.xhtml">core_cm0.h</a>&quot;</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor">#define ARM_MATH_CM0_FAMILY</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor">  #elif defined (ARM_MATH_CM0PLUS)</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core__cm0plus_8h.xhtml">core_cm0plus.h</a>&quot;</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor">  #define ARM_MATH_CM0_FAMILY</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="preprocessor">  #error &quot;Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_CM0PLUS or ARM_MATH_CM0&quot;</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor">#undef  __CMSIS_GENERIC         </span><span class="comment">/* enable NVIC and Systick functions */</span><span class="preprocessor"></span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor">#include &quot;string.h&quot;</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="math_8h.xhtml">math.h</a>&quot;</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#ifdef   __cplusplus</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#aad77ae594e95c5af6ae4129bd6a483c2">  322</a></span>&#160;<span class="preprocessor">#define DELTA_Q31          (0x100)</span></div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a663277ff19ad0b409fb98b64b2c2750b">  323</a></span>&#160;<span class="preprocessor">#define DELTA_Q15          0x5</span></div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a29f839928f4752b73c8858d6dbb55294">  324</a></span>&#160;<span class="preprocessor">#define INDEX_MASK         0x0000003F</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#ifndef PI</span></div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a598a3330b3c21701223ee0ca14316eca">  326</a></span>&#160;<span class="preprocessor">#define PI                 3.14159265358979f</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#afcb9147c96853bea484cfc2dde07463d">  333</a></span>&#160;<span class="preprocessor">#define FAST_MATH_TABLE_SIZE  512</span></div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a4268f77b1811a0c7fc2532a0bf6108b0">  334</a></span>&#160;<span class="preprocessor">#define FAST_MATH_Q31_SHIFT   (32 - 10)</span></div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a34716b73c631e65e8dd855e08384ecb2">  335</a></span>&#160;<span class="preprocessor">#define FAST_MATH_Q15_SHIFT   (16 - 10)</span></div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#aaff6d2358c4ada8de838a279254ab550">  336</a></span>&#160;<span class="preprocessor">#define CONTROLLER_Q31_SHIFT  (32 - 9)</span></div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a032503e76d6f69bc67e99e909c8125da">  337</a></span>&#160;<span class="preprocessor">#define TABLE_SIZE  256</span></div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a8407c9e1347d10e3bcf0a7014f1fb2ff">  338</a></span>&#160;<span class="preprocessor">#define TABLE_SPACING_Q31     0x400000</span></div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a60b0142af7be007902142add27919b82">  339</a></span>&#160;<span class="preprocessor">#define TABLE_SPACING_Q15     0x80</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="comment">/* 1.31(q31) Fixed value of 2/360 */</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="comment">/* -1 to +1 is divided into 360 values so total spacing is (2/360) */</span></div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a1339e9abc11a3870e0c04f822a62166a">  346</a></span>&#160;<span class="preprocessor">#define INPUT_SPACING         0xB60B61</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">#ifndef UNALIGNED_SUPPORT_DISABLE</span></div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a280a402ab28c399fcc4168f2ed631acb">  352</a></span>&#160;<span class="preprocessor">    #define ALIGN4</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="preprocessor">  #if defined  (__GNUC__)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="preprocessor">    #define ALIGN4 __attribute__((aligned(4)))</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="preprocessor">  #else</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="preprocessor">    #define ALIGN4 __align(4)</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor">  #endif</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="preprocessor">#endif   </span><span class="comment">/* #ifndef UNALIGNED_SUPPORT_DISABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">  365</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">enum</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  {</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0">  367</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0">ARM_MATH_SUCCESS</a> = 0,                </div><div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35">  368</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35">ARM_MATH_ARGUMENT_ERROR</a> = -1,        </div><div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1">  369</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1">ARM_MATH_LENGTH_ERROR</a> = -2,          </div><div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b">  370</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b">ARM_MATH_SIZE_MISMATCH</a> = -3,         </div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc">  371</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc">ARM_MATH_NANINF</a> = -4,                </div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc">  372</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc">ARM_MATH_SINGULAR</a> = -5,              </div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376">  373</a></span>&#160;    <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376">ARM_MATH_TEST_FAILURE</a> = -6           </div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  } <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">  379</a></span>&#160;  <span class="keyword">typedef</span> int8_t <a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">  384</a></span>&#160;  <span class="keyword">typedef</span> int16_t <a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">  389</a></span>&#160;  <span class="keyword">typedef</span> int32_t <a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">  394</a></span>&#160;  <span class="keyword">typedef</span> int64_t <a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">  399</a></span>&#160;  <span class="keyword">typedef</span> <span class="keywordtype">float</span> <a class="code" href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">  404</a></span>&#160;  <span class="keyword">typedef</span> <span class="keywordtype">double</span> <a class="code" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="preprocessor">#if defined __CC_ARM</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE int32_t __packed</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED __attribute__((unused))</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="preprocessor">#elif defined __ICCARM__</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE int32_t __packed</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="preprocessor">#elif defined __GNUC__</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE int32_t</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED __attribute__((unused))</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="preprocessor">#elif defined __CSMC__         </span><span class="comment">/* Cosmic */</span><span class="preprocessor"></span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE int32_t</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="preprocessor">#elif defined __TASKING__</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE __unaligned int32_t</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="preprocessor">#elif (__ARMCC_VERSION &gt;= 6010050)</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">  #define __SIMD32_TYPE int32_t</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="preprocessor">  #define CMSIS_UNUSED __attribute__((unused))</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="preprocessor">  #error Unknown compiler</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a9de2e0a5785be82866bcb96012282248">  431</a></span>&#160;<span class="preprocessor">#define __SIMD32(addr)  (*(__SIMD32_TYPE **) &amp; (addr))</span></div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a1185d670d798aaf52eec13f0403f3407">  432</a></span>&#160;<span class="preprocessor">#define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#af0d54ec57b936994a34f073d0049ea3f">  434</a></span>&#160;<span class="preprocessor">#define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))</span></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ad1b053da364f9fd82ca1a381df7590b6">  436</a></span>&#160;<span class="preprocessor">#define __SIMD64(addr)  (*(int64_t **) &amp; (addr))</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="preprocessor">#if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="preprocessor">#define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) &lt;&lt;  0) &amp; (int32_t)0x0000FFFF) | \</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="preprocessor">                                         (((int32_t)(ARG2) &lt;&lt; ARG3) &amp; (int32_t)0xFFFF0000)  )</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="preprocessor">#define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) &lt;&lt;  0) &amp; (int32_t)0xFFFF0000) | \</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="preprocessor">                                         (((int32_t)(ARG2) &gt;&gt; ARG3) &amp; (int32_t)0x0000FFFF)  )</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="preprocessor">#ifndef ARM_MATH_BIG_ENDIAN</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a3ebff224ad44c217fde9f530342e2960">  455</a></span>&#160;<span class="preprocessor">#define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) &lt;&lt;  0) &amp; (int32_t)0x000000FF) |   \</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="preprocessor">                                (((int32_t)(v1) &lt;&lt;  8) &amp; (int32_t)0x0000FF00) |   \</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">                         (((int32_t)(v2) &lt;&lt; 16) &amp; (int32_t)0x00FF0000) |   \</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="preprocessor">                         (((int32_t)(v3) &lt;&lt; 24) &amp; (int32_t)0xFF000000)  )</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="preprocessor">#define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) &lt;&lt;  0) &amp; (int32_t)0x000000FF) |   \</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="preprocessor">                                (((int32_t)(v2) &lt;&lt;  8) &amp; (int32_t)0x0000FF00) |   \</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="preprocessor">                         (((int32_t)(v1) &lt;&lt; 16) &amp; (int32_t)0x00FF0000) |   \</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="preprocessor">                         (((int32_t)(v0) &lt;&lt; 24) &amp; (int32_t)0xFF000000)  )</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">  472</a></span>&#160;  <span class="keyword">static</span> __INLINE q31_t <a class="code" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a>(</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  q63_t x)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (x &gt;&gt; 32) != ((q31_t) x &gt;&gt; 31)) ?</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      ((0x7FFFFFFF ^ ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (x &gt;&gt; 63)))) : (q31_t) x;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  }</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#aa6f1e5d0d276f42217e75f071ca84a2e">  482</a></span>&#160;  <span class="keyword">static</span> __INLINE q15_t <a class="code" href="arm__math_8h.xhtml#aa6f1e5d0d276f42217e75f071ca84a2e">clip_q63_to_q15</a>(</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  q63_t x)</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  {</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (x &gt;&gt; 32) != ((q31_t) x &gt;&gt; 31)) ?</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      ((0x7FFF ^ ((<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) (x &gt;&gt; 63)))) : (q15_t) (x &gt;&gt; 15);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  }</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#aa9918ce19228b0d4f072fb84776eabc1">  492</a></span>&#160;  <span class="keyword">static</span> __INLINE q7_t <a class="code" href="arm__math_8h.xhtml#aa9918ce19228b0d4f072fb84776eabc1">clip_q31_to_q7</a>(</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  q31_t x)</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  {</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (x &gt;&gt; 24) != ((q31_t) x &gt;&gt; 23)) ?</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      ((0x7F ^ ((<a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>) (x &gt;&gt; 31)))) : (q7_t) x;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">  502</a></span>&#160;  <span class="keyword">static</span> __INLINE q15_t <a class="code" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a>(</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  q31_t x)</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  {</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (x &gt;&gt; 16) != ((q31_t) x &gt;&gt; 15)) ?</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;      ((0x7FFF ^ ((<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) (x &gt;&gt; 31)))) : (q15_t) x;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a642a29d71f7951a7f6c0b797c300b711">  513</a></span>&#160;  <span class="keyword">static</span> __INLINE q63_t <a class="code" href="arm__math_8h.xhtml#a642a29d71f7951a7f6c0b797c300b711">mult32x64</a>(</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  q63_t x,</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  q31_t y)</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  {</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">return</span> ((((q63_t) (x &amp; 0x00000000FFFFFFFF) * y) &gt;&gt; 32) +</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            (((q63_t) (x &gt;&gt; 32) * y)));</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  }</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">//#if defined (ARM_MATH_CM0_FAMILY) &amp;&amp; defined ( __CC_ARM   )</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">//#define __CLZ __clz</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">//#endif</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">//note: function can be removed when all toolchain support __CLZ for Cortex-M0</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor">#if defined (ARM_MATH_CM0_FAMILY) &amp;&amp; ((defined (__ICCARM__))  )</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;  <span class="keyword">static</span> __INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  q31_t data);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  <span class="keyword">static</span> __INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  q31_t data)</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  {</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    uint32_t count = 0;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    uint32_t mask = 0x80000000;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keywordflow">while</span>((data &amp; mask) == 0)</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    {</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;      count += 1u;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;      mask = mask &gt;&gt; 1u;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    }</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">return</span> (count);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  }</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a43140f04ca94c2a7394e7a222e2d8fb4">  555</a></span>&#160;  <span class="keyword">static</span> __INLINE uint32_t <a class="code" href="arm__math_8h.xhtml#a43140f04ca94c2a7394e7a222e2d8fb4">arm_recip_q31</a>(</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  q31_t in,</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  q31_t * dst,</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  q31_t * pRecipTable)</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  {</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    uint32_t out, tempVal;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    uint32_t index, i;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    uint32_t signBits;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">if</span>(in &gt; 0)</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    {</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      signBits = <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(in) - 1;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    }</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;      signBits = <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(-in) - 1;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    }</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="comment">/* Convert input sample to 1.31 format */</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    in = in &lt;&lt; signBits;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="comment">/* calculation of index for initial approximated Val */</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    index = (uint32_t) (in &gt;&gt; 24u);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    index = (index &amp; <a class="code" href="arm__math_8h.xhtml#a29f839928f4752b73c8858d6dbb55294">INDEX_MASK</a>);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="comment">/* 1.31 with exp 1 */</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    out = pRecipTable[index];</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="comment">/* calculation of reciprocal value */</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="comment">/* running approximation for two iterations */</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keywordflow">for</span> (i = 0u; i &lt; 2u; i++)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      tempVal = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) in * out) &gt;&gt; 31u);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;      tempVal = 0x7FFFFFFF - tempVal;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;      <span class="comment">/*      1.31 with exp 1 */</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;      <span class="comment">//out = (q31_t) (((q63_t) out * tempVal) &gt;&gt; 30u);</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      out = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) <a class="code" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a>(((q63_t) out * tempVal) &gt;&gt; 30u);</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="comment">/* write output */</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    *dst = out;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="comment">/* return num of signbits of out = 1/in value */</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="keywordflow">return</span> (signBits + 1u);</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  }</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a1c66e370a6ae91aaafbaec5e979198d7">  606</a></span>&#160;  <span class="keyword">static</span> __INLINE uint32_t <a class="code" href="arm__math_8h.xhtml#a1c66e370a6ae91aaafbaec5e979198d7">arm_recip_q15</a>(</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;  q15_t in,</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  q15_t * dst,</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  q15_t * pRecipTable)</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  {</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    uint32_t out = 0, tempVal = 0;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    uint32_t index = 0, i = 0;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    uint32_t signBits = 0;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keywordflow">if</span>(in &gt; 0)</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    {</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;      signBits = <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(in) - 17;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    }</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    {</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;      signBits = <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a>(-in) - 17;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    }</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="comment">/* Convert input sample to 1.15 format */</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    in = in &lt;&lt; signBits;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <span class="comment">/* calculation of index for initial approximated Val */</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    index = in &gt;&gt; 8;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    index = (index &amp; <a class="code" href="arm__math_8h.xhtml#a29f839928f4752b73c8858d6dbb55294">INDEX_MASK</a>);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <span class="comment">/*      1.15 with exp 1  */</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    out = pRecipTable[index];</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="comment">/* calculation of reciprocal value */</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="comment">/* running approximation for two iterations */</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <span class="keywordflow">for</span> (i = 0; i &lt; 2; i++)</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    {</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;      tempVal = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) (((q31_t) in * out) &gt;&gt; 15);</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;      tempVal = 0x7FFF - tempVal;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;      <span class="comment">/*      1.15 with exp 1 */</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      out = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) (((q31_t) out * tempVal) &gt;&gt; 14);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    }</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <span class="comment">/* write output */</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    *dst = out;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="comment">/* return num of signbits of out = 1/in value */</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordflow">return</span> (signBits + 1);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;  }</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment">   * @brief C custom defined intrinisic function for only M0 processors</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="preprocessor">#if defined(ARM_MATH_CM0_FAMILY)</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SSAT(</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;  q31_t x,</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;  uint32_t y)</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  {</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    int32_t posMax, negMin;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    uint32_t i;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    posMax = 1;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keywordflow">for</span> (i = 0; i &lt; (y - 1); i++)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    {</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;      posMax = posMax * 2;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    }</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">if</span>(x &gt; 0)</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    {</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;      posMax = (posMax - 1);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;      <span class="keywordflow">if</span>(x &gt; posMax)</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;      {</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        x = posMax;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;      }</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    }</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    {</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      negMin = -posMax;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;      <span class="keywordflow">if</span>(x &lt; negMin)</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;      {</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        x = negMin;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      }</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    }</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keywordflow">return</span> (x);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;  }</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* end of ARM_MATH_CM0_FAMILY */</span><span class="preprocessor"></span></div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment">   * @brief C custom defined intrinsic function for M3 and M0 processors</span></div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="preprocessor">#if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment">   * @brief C custom defined QADD8 for M3 and M0 processors</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QADD8(</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;  q31_t x,</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;  q31_t y)</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;  {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    q31_t sum;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    q7_t r, s, t, u;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>) x;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>) y;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    r = __SSAT((q31_t) (r + s), 8);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    s = __SSAT(((q31_t) (((x &lt;&lt; 16) &gt;&gt; 24) + ((y &lt;&lt; 16) &gt;&gt; 24))), 8);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    t = __SSAT(((q31_t) (((x &lt;&lt; 8) &gt;&gt; 24) + ((y &lt;&lt; 8) &gt;&gt; 24))), 8);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    u = __SSAT(((q31_t) ((x &gt;&gt; 24) + (y &gt;&gt; 24))), 8);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    sum =</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;      (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) u &lt;&lt; 24) &amp; 0xFF000000) | (((q31_t) t &lt;&lt; 16) &amp; 0x00FF0000) |</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;      (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) s &lt;&lt; 8) &amp; 0x0000FF00) | (r &amp; 0x000000FF);</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;  }</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment">   * @brief C custom defined QSUB8 for M3 and M0 processors</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QSUB8(</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  q31_t x,</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;  q31_t y)</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;  {</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    q31_t sum;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    q31_t r, s, t, u;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>) x;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>) y;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    r = __SSAT((r - s), 8);</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    s = __SSAT(((q31_t) (((x &lt;&lt; 16) &gt;&gt; 24) - ((y &lt;&lt; 16) &gt;&gt; 24))), 8) &lt;&lt; 8;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    t = __SSAT(((q31_t) (((x &lt;&lt; 8) &gt;&gt; 24) - ((y &lt;&lt; 8) &gt;&gt; 24))), 8) &lt;&lt; 16;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    u = __SSAT(((q31_t) ((x &gt;&gt; 24) - (y &gt;&gt; 24))), 8) &lt;&lt; 24;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    sum =</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;      (u &amp; 0xFF000000) | (t &amp; 0x00FF0000) | (s &amp; 0x0000FF00) | (r &amp;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                                                                0x000000FF);</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;  }</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment">   * @brief C custom defined QADD16 for M3 and M0 processors</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="comment">   * @brief C custom defined QADD16 for M3 and M0 processors</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QADD16(</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;  q31_t x,</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  q31_t y)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;  {</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    q31_t sum;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    r = __SSAT(r + s, 16);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    s = __SSAT(((q31_t) ((x &gt;&gt; 16) + (y &gt;&gt; 16))), 16) &lt;&lt; 16;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    sum = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;  }</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="comment">   * @brief C custom defined SHADD16 for M3 and M0 processors</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SHADD16(</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;  q31_t x,</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;  q31_t y)</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;  {</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    q31_t sum;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    r = (r + s) &gt;&gt; 1;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    s = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((x &gt;&gt; 16) + (y &gt;&gt; 16)) &gt;&gt; 1) &lt;&lt; 16);</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    sum = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;  }</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment">   * @brief C custom defined QSUB16 for M3 and M0 processors</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QSUB16(</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;  q31_t x,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;  q31_t y)</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;  {</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    q31_t sum;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    r = __SSAT(r - s, 16);</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    s = __SSAT(((q31_t) ((x &gt;&gt; 16) - (y &gt;&gt; 16))), 16) &lt;&lt; 16;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    sum = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;  }</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="comment">   * @brief C custom defined SHSUB16 for M3 and M0 processors</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SHSUB16(</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  q31_t x,</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;  q31_t y)</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;  {</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    q31_t diff;</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    r = ((r &gt;&gt; 1) - (s &gt;&gt; 1));</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    s = (((x &gt;&gt; 17) - (y &gt;&gt; 17)) &lt;&lt; 16);</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    diff = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="keywordflow">return</span> diff;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;  }</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="comment">   * @brief C custom defined QASX for M3 and M0 processors</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QASX(</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;  q31_t x,</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;  q31_t y)</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;  {</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    q31_t sum = 0;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;     q31_t xL, xH, yL, yH;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;     </div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <span class="comment">// extract bottom halfword and sign extend</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;     xL = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(x &amp; 0xffff);</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="comment">// extract bottom halfword and sign extend</span></div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;     yL = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(y &amp; 0xffff);</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="comment">// extract top halfword and sign extend</span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    xH = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(x &gt;&gt; 16);</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    <span class="comment">// extract top halfword and sign extend</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    yH = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(y &gt;&gt; 16);</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    </div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    sum = (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>)<a class="code" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a>(xH + yL )) &lt;&lt; 16) |</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;          (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>)<a class="code" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a>(xL - yH )) &amp; 0xffff);</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;  }</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment">   * @brief C custom defined SHASX for M3 and M0 processors</span></div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SHASX(</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;  q31_t x,</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;  q31_t y)</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;  {</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    q31_t sum;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    r = (r - (y &gt;&gt; 16)) &gt;&gt; 1;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    s = (((x &gt;&gt; 16) + s) &lt;&lt; 15);</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    sum = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;  }</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="comment">   * @brief C custom defined QSAX for M3 and M0 processors</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QSAX(</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;  q31_t x,</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;  q31_t y)</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;  {</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    q31_t sum = 0;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;     q31_t xL, xH, yL, yH;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;     </div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="comment">// extract bottom halfword and sign extend</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;     xL = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(x &amp; 0xffff);</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;    <span class="comment">// extract bottom halfword and sign extend</span></div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;     yL = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(y &amp; 0xffff);</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    <span class="comment">// extract top halfword and sign extend</span></div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    xH = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(x &gt;&gt; 16);</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    <span class="comment">// extract top halfword and sign extend</span></div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    yH = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>)(y &gt;&gt; 16);</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    </div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    sum = (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>)<a class="code" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a>(xH - yL )) &lt;&lt; 16) |</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;          (((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>)<a class="code" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a>(xL + yH )) &amp; 0xffff);</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;  }</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">   * @brief C custom defined SHSAX for M3 and M0 processors</span></div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SHSAX(</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;  q31_t x,</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;  q31_t y)</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;  {</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;    q31_t sum;</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    q31_t r, s;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    r = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    s = (<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) y;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    r = (r + (y &gt;&gt; 16)) &gt;&gt; 1;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    s = (((x &gt;&gt; 16) - s) &lt;&lt; 15);</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    sum = (s &amp; 0xFFFF0000) | (r &amp; 0x0000FFFF);</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <span class="keywordflow">return</span> sum;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  }</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="comment">   * @brief C custom defined SMUSDX for M3 and M0 processors</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMUSDX(</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;  q31_t x,</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;  q31_t y)</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;  {</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (((q15_t) x * (q15_t) (y &gt;&gt; 16)) -</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                     ((q15_t) (x &gt;&gt; 16) * (q15_t) y)));</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;  }</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">   * @brief C custom defined SMUADX for M3 and M0 processors</span></div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMUADX(</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  q31_t x,</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;  q31_t y)</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;  {</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;    <span class="keywordflow">return</span> ((q31_t) (((q15_t) x * (q15_t) (y &gt;&gt; 16)) +</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                     ((q15_t) (x &gt;&gt; 16) * (q15_t) y)));</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;  }</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;<span class="comment">   * @brief C custom defined QADD for M3 and M0 processors</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QADD(</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;  q31_t x,</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;  q31_t y)</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;  {</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a>((q63_t) x + y);</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;  }</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="comment">   * @brief C custom defined QSUB for M3 and M0 processors</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __QSUB(</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;  q31_t x,</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;  q31_t y)</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;  {</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a>((q63_t) x - y);</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;  }</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;<span class="comment">   * @brief C custom defined SMLAD for M3 and M0 processors</span></div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMLAD(</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;  q31_t x,</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;  q31_t y,</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;  q31_t sum)</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;  {</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <span class="keywordflow">return</span> (sum + ((q15_t) (x &gt;&gt; 16) * (q15_t) (y &gt;&gt; 16)) +</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;            ((q15_t) x * (q15_t) y));</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  }</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;<span class="comment">   * @brief C custom defined SMLADX for M3 and M0 processors</span></div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMLADX(</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;  q31_t x,</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;  q31_t y,</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;  q31_t sum)</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;  {</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    <span class="keywordflow">return</span> (sum + ((q15_t) (x &gt;&gt; 16) * (q15_t) (y)) +</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;            ((q15_t) x * (q15_t) (y &gt;&gt; 16)));</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;  }</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;<span class="comment">   * @brief C custom defined SMLSDX for M3 and M0 processors</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMLSDX(</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;  q31_t x,</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;  q31_t y,</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;  q31_t sum)</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;  {</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <span class="keywordflow">return</span> (sum - ((q15_t) (x &gt;&gt; 16) * (q15_t) (y)) +</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;            ((q15_t) x * (q15_t) (y &gt;&gt; 16)));</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;  }</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="comment">   * @brief C custom defined SMLALD for M3 and M0 processors</span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;  <span class="keyword">static</span> __INLINE q63_t __SMLALD(</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;  q31_t x,</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;  q31_t y,</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;  q63_t sum)</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;  {</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    <span class="keywordflow">return</span> (sum + ((q15_t) (x &gt;&gt; 16) * (q15_t) (y &gt;&gt; 16)) +</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;            ((q15_t) x * (q15_t) y));</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;  }</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="comment">   * @brief C custom defined SMLALDX for M3 and M0 processors</span></div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;  <span class="keyword">static</span> __INLINE q63_t __SMLALDX(</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;  q31_t x,</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;  q31_t y,</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;  q63_t sum)</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;  {</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <span class="keywordflow">return</span> (sum + ((q15_t) (x &gt;&gt; 16) * (q15_t) y)) +</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;      ((<a class="code" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>) x * (q15_t) (y &gt;&gt; 16));</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;  }</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="comment">   * @brief C custom defined SMUAD for M3 and M0 processors</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMUAD(</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;  q31_t x,</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;  q31_t y)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  {</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    <span class="keywordflow">return</span> (((x &gt;&gt; 16) * (y &gt;&gt; 16)) +</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;            (((x &lt;&lt; 16) &gt;&gt; 16) * ((y &lt;&lt; 16) &gt;&gt; 16)));</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;  }</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="comment">   * @brief C custom defined SMUSD for M3 and M0 processors</span></div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SMUSD(</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;  q31_t x,</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;  q31_t y)</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;  {</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    <span class="keywordflow">return</span> (-((x &gt;&gt; 16) * (y &gt;&gt; 16)) +</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;            (((x &lt;&lt; 16) &gt;&gt; 16) * ((y &lt;&lt; 16) &gt;&gt; 16)));</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;  }</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment">   * @brief C custom defined SXTB16 for M3 and M0 processors</span></div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="keyword">static</span> __INLINE q31_t __SXTB16(</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  q31_t x)</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;  {</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;    <span class="keywordflow">return</span> ((((x &lt;&lt; 24) &gt;&gt; 24) &amp; 0x0000FFFF) |</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;            (((x &lt;&lt; 8) &gt;&gt; 8) &amp; 0xFFFF0000));</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;  }</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */</span><span class="preprocessor"></span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;</div><div class="line"><a name="l01100"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q7.xhtml"> 1100</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;  {</div><div class="line"><a name="l01102"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q7.xhtml#a9b50840e2c5ef5b17e1a584fb4cf0d06"> 1102</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__instance__q7.xhtml#a9b50840e2c5ef5b17e1a584fb4cf0d06">numTaps</a>;        </div><div class="line"><a name="l01103"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q7.xhtml#aaddea3b9c7e16ddfd9428b7bf9f9c200"> 1103</a></span>&#160;    q7_t *<a class="code" href="structarm__fir__instance__q7.xhtml#aaddea3b9c7e16ddfd9428b7bf9f9c200">pState</a>;            </div><div class="line"><a name="l01104"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q7.xhtml#a0e45aedefc3fffad6cb315c5b6e5bd49"> 1104</a></span>&#160;    q7_t *<a class="code" href="structarm__fir__instance__q7.xhtml#a0e45aedefc3fffad6cb315c5b6e5bd49">pCoeffs</a>;           </div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;  } <a class="code" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a>;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01110"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q15.xhtml"> 1110</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;  {</div><div class="line"><a name="l01112"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q15.xhtml#a0e46f93cf51bfb18b1be808be9c5bfc9"> 1112</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__instance__q15.xhtml#a0e46f93cf51bfb18b1be808be9c5bfc9">numTaps</a>;         </div><div class="line"><a name="l01113"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q15.xhtml#aa8d25f44f45b6a6c4cf38c31569b8a01"> 1113</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__instance__q15.xhtml#aa8d25f44f45b6a6c4cf38c31569b8a01">pState</a>;            </div><div class="line"><a name="l01114"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q15.xhtml#a6d16db16a5f8f0db54938f2967244d9e"> 1114</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__instance__q15.xhtml#a6d16db16a5f8f0db54938f2967244d9e">pCoeffs</a>;           </div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;  } <a class="code" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a>;</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;</div><div class="line"><a name="l01120"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q31.xhtml"> 1120</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;  {</div><div class="line"><a name="l01122"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q31.xhtml#a918fadd775b7a0482b21bf34dae2f094"> 1122</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__instance__q31.xhtml#a918fadd775b7a0482b21bf34dae2f094">numTaps</a>;         </div><div class="line"><a name="l01123"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q31.xhtml#a409f39c93b744784648bdc365541444d"> 1123</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__instance__q31.xhtml#a409f39c93b744784648bdc365541444d">pState</a>;            </div><div class="line"><a name="l01124"></a><span class="lineno"><a class="line" href="structarm__fir__instance__q31.xhtml#afaae4c884bdf11a4ec2f3b9bb2bb51d0"> 1124</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__instance__q31.xhtml#afaae4c884bdf11a4ec2f3b9bb2bb51d0">pCoeffs</a>;           </div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;  } <a class="code" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a>;</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div><div class="line"><a name="l01130"></a><span class="lineno"><a class="line" href="structarm__fir__instance__f32.xhtml"> 1130</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;  {</div><div class="line"><a name="l01132"></a><span class="lineno"><a class="line" href="structarm__fir__instance__f32.xhtml#a20cf98c92b5323799b7881c9ff4d2f7c"> 1132</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__instance__f32.xhtml#a20cf98c92b5323799b7881c9ff4d2f7c">numTaps</a>;     </div><div class="line"><a name="l01133"></a><span class="lineno"><a class="line" href="structarm__fir__instance__f32.xhtml#a7afcf4022e8560db9b8fd28b0d090a15"> 1133</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__instance__f32.xhtml#a7afcf4022e8560db9b8fd28b0d090a15">pState</a>;    </div><div class="line"><a name="l01134"></a><span class="lineno"><a class="line" href="structarm__fir__instance__f32.xhtml#a1c9cfca901d5902afeb640f2831488f4"> 1134</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__instance__f32.xhtml#a1c9cfca901d5902afeb640f2831488f4">pCoeffs</a>;   </div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;  } <a class="code" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a>;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a31c91a0bf0962327ef8f626fae68ea32">arm_fir_q7</a>(</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> * S,</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a88e48688224d42dc173dbcec702f0c1d">arm_fir_init_q7</a>(</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;  <a class="code" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> * S,</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;  q7_t * pCoeffs,</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;  q7_t * pState,</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a262d173058d6f80fdf60404ba262a8f5">arm_fir_q15</a>(</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> * S,</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac7d35e9472e49ccd88800f37f3476bd3">arm_fir_fast_q15</a>(</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> * S,</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ae2a50f692f41ba57e44ed0719b1368bd">arm_fir_init_q15</a>(</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;  <a class="code" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> * S,</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;  q15_t * pState,</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aadd938c68ab08967cbb5fc696f384bb5">arm_fir_q31</a>(</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> * S,</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a55aa292e057b43c376428ea1d9a938cc">arm_fir_fast_q31</a>(</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> * S,</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac00d53af87684cbbe135767b55e748a5">arm_fir_init_q31</a>(</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;  <a class="code" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> * S,</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;  q31_t * pState,</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae8fb334ea67eb6ecbd31824ddc14cd6a">arm_fir_f32</a>(</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> * S,</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a98d13def6427e29522829f945d0967db">arm_fir_init_f32</a>(</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;  <a class="code" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> * S,</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;  float32_t * pState,</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;</div><div class="line"><a name="l01294"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q15.xhtml"> 1294</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;  {</div><div class="line"><a name="l01296"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q15.xhtml#ad6d95e70abcf4ff1300181415ad92153"> 1296</a></span>&#160;    int8_t <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml#ad6d95e70abcf4ff1300181415ad92153">numStages</a>;         </div><div class="line"><a name="l01297"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q15.xhtml#a5481104ef2f8f81360b80b47d69ae932"> 1297</a></span>&#160;    q15_t *<a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml#a5481104ef2f8f81360b80b47d69ae932">pState</a>;            </div><div class="line"><a name="l01298"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q15.xhtml#a1edaacdebb5b09d7635bf20c779855fc"> 1298</a></span>&#160;    q15_t *<a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml#a1edaacdebb5b09d7635bf20c779855fc">pCoeffs</a>;           </div><div class="line"><a name="l01299"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q15.xhtml#ada7e9d6269e6ed4eacf8f68729e9832d"> 1299</a></span>&#160;    int8_t <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml#ada7e9d6269e6ed4eacf8f68729e9832d">postShift</a>;         </div><div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;  } <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a>;</div><div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;</div><div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;</div><div class="line"><a name="l01307"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q31.xhtml"> 1307</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;  {</div><div class="line"><a name="l01309"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q31.xhtml#a2c2b579f1df1d8273a5d9d945c27e1b2"> 1309</a></span>&#160;    uint32_t <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml#a2c2b579f1df1d8273a5d9d945c27e1b2">numStages</a>;      </div><div class="line"><a name="l01310"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q31.xhtml#a5dcf4727f58eb4e8e8b392508d8657bb"> 1310</a></span>&#160;    q31_t *<a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml#a5dcf4727f58eb4e8e8b392508d8657bb">pState</a>;           </div><div class="line"><a name="l01311"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q31.xhtml#aa62366c632f3b5305086f841f079dbd2"> 1311</a></span>&#160;    q31_t *<a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml#aa62366c632f3b5305086f841f079dbd2">pCoeffs</a>;          </div><div class="line"><a name="l01312"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__q31.xhtml#a636c7fbe09ec4bef0bc0a4b4e2151cbe"> 1312</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml#a636c7fbe09ec4bef0bc0a4b4e2151cbe">postShift</a>;       </div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;  } <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a>;</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;</div><div class="line"><a name="l01319"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__f32.xhtml"> 1319</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;  {</div><div class="line"><a name="l01321"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__f32.xhtml#af69820c37a87252c46453e4cfe120585"> 1321</a></span>&#160;    uint32_t <a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml#af69820c37a87252c46453e4cfe120585">numStages</a>;         </div><div class="line"><a name="l01322"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__f32.xhtml#a8c245d79e0d8cfabc82409d4b54fb682"> 1322</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml#a8c245d79e0d8cfabc82409d4b54fb682">pState</a>;          </div><div class="line"><a name="l01323"></a><span class="lineno"><a class="line" href="structarm__biquad__casd__df1__inst__f32.xhtml#af9df3820576fb921809d1462c9c6d16c"> 1323</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml#af9df3820576fb921809d1462c9c6d16c">pCoeffs</a>;         </div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;  } <a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a>;</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#add66a0aefdc645031d607b0a5b37a942">arm_biquad_cascade_df1_q15</a>(</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> * S,</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad54c724132f6d742a444eb6df0e9c731">arm_biquad_cascade_df1_init_q15</a>(</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;  <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> * S,</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;  q15_t * pState,</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;  int8_t postShift);</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#affb9792c0220882efd4c58f3c6a05fd7">arm_biquad_cascade_df1_fast_q15</a>(</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> * S,</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a27b0c54da702713976e5202d20b4473f">arm_biquad_cascade_df1_q31</a>(</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> * S,</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a456390f5e448afad3a38bed7d6e380e3">arm_biquad_cascade_df1_fast_q31</a>(</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> * S,</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af42a44f9b16d61e636418c83eefe577b">arm_biquad_cascade_df1_init_q31</a>(</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;  <a class="code" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> * S,</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;  q31_t * pState,</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;  int8_t postShift);</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aa0dbe330d763e3c1d8030b3ef12d5bdc">arm_biquad_cascade_df1_f32</a>(</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> * S,</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a8e73b69a788e681a61bccc8959d823c5">arm_biquad_cascade_df1_init_f32</a>(</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;  <a class="code" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> * S,</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;  float32_t * pState);</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;</div><div class="line"><a name="l01461"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f32.xhtml"> 1461</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;  {</div><div class="line"><a name="l01463"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f32.xhtml#a23f4e34d70a82c9cad7612add5640b7b"> 1463</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__f32.xhtml#a23f4e34d70a82c9cad7612add5640b7b">numRows</a>;     </div><div class="line"><a name="l01464"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f32.xhtml#acdd1fb73734df68b89565c54f1dd8ae2"> 1464</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__f32.xhtml#acdd1fb73734df68b89565c54f1dd8ae2">numCols</a>;     </div><div class="line"><a name="l01465"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f32.xhtml#af3917c032600a9dfd5ed4a96f074910a"> 1465</a></span>&#160;    float32_t *<a class="code" href="structarm__matrix__instance__f32.xhtml#af3917c032600a9dfd5ed4a96f074910a">pData</a>;     </div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;  } <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a>;</div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;</div><div class="line"><a name="l01473"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f64.xhtml"> 1473</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01474"></a><span class="lineno"> 1474</span>&#160;  {</div><div class="line"><a name="l01475"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f64.xhtml#a8b44d1e5003345047c4ead9e1593bf22"> 1475</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__f64.xhtml#a8b44d1e5003345047c4ead9e1593bf22">numRows</a>;     </div><div class="line"><a name="l01476"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f64.xhtml#ab0f0399aff3201880e2d8a447de9a7ee"> 1476</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__f64.xhtml#ab0f0399aff3201880e2d8a447de9a7ee">numCols</a>;     </div><div class="line"><a name="l01477"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__f64.xhtml#a5b2475f8ff1e4818955cdd18bc40a097"> 1477</a></span>&#160;    float64_t *<a class="code" href="structarm__matrix__instance__f64.xhtml#a5b2475f8ff1e4818955cdd18bc40a097">pData</a>;     </div><div class="line"><a name="l01478"></a><span class="lineno"> 1478</span>&#160;  } <a class="code" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a>;</div><div class="line"><a name="l01479"></a><span class="lineno"> 1479</span>&#160;</div><div class="line"><a name="l01484"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q15.xhtml"> 1484</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01485"></a><span class="lineno"> 1485</span>&#160;  {</div><div class="line"><a name="l01486"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q15.xhtml#a9bac6ed54be287c4d4f01a1a28be65f5"> 1486</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__q15.xhtml#a9bac6ed54be287c4d4f01a1a28be65f5">numRows</a>;     </div><div class="line"><a name="l01487"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q15.xhtml#acbbce67ba058d8e1c867c71d57288c97"> 1487</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__q15.xhtml#acbbce67ba058d8e1c867c71d57288c97">numCols</a>;     </div><div class="line"><a name="l01488"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q15.xhtml#a6da33a5553e634787d0f515cf8d724af"> 1488</a></span>&#160;    q15_t *<a class="code" href="structarm__matrix__instance__q15.xhtml#a6da33a5553e634787d0f515cf8d724af">pData</a>;         </div><div class="line"><a name="l01490"></a><span class="lineno"> 1490</span>&#160;  } <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a>;</div><div class="line"><a name="l01491"></a><span class="lineno"> 1491</span>&#160;</div><div class="line"><a name="l01496"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q31.xhtml"> 1496</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;  {</div><div class="line"><a name="l01498"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q31.xhtml#a63bacac158a821c8cfc06088d251598c"> 1498</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__q31.xhtml#a63bacac158a821c8cfc06088d251598c">numRows</a>;     </div><div class="line"><a name="l01499"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q31.xhtml#abd161da7614eda927157f18b698074b1"> 1499</a></span>&#160;    uint16_t <a class="code" href="structarm__matrix__instance__q31.xhtml#abd161da7614eda927157f18b698074b1">numCols</a>;     </div><div class="line"><a name="l01500"></a><span class="lineno"><a class="line" href="structarm__matrix__instance__q31.xhtml#a09a64267c0579fef086efc9059741e56"> 1500</a></span>&#160;    q31_t *<a class="code" href="structarm__matrix__instance__q31.xhtml#a09a64267c0579fef086efc9059741e56">pData</a>;         </div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;  } <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a>;</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a04bbf64a5f9c9e57dd1efb26a768aba1">arm_mat_add_f32</a>(</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcA,</div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcB,</div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;</div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a147e90b7c12a162735ab8824127a33ee">arm_mat_add_q15</a>(</div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcA,</div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcB,</div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst);</div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a7d9d7d81a0832a17b831aad1e4a5dc16">arm_mat_add_q31</a>(</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcA,</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcB,</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a1adb839ac84445b8c2f04efa43faef35">arm_mat_cmplx_mult_f32</a>(</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcA,</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcB,</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a63066615e7d6f6a44f4358725092419e">arm_mat_cmplx_mult_q15</a>(</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcA,</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcB,</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst,</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;  q15_t * pScratch);</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#aaf3c0b171ca8412c77bab9fa90804737">arm_mat_cmplx_mult_q31</a>(</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcA,</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcB,</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ad7dd9f108429da13d3864696ceeec789">arm_mat_trans_f32</a>(</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrc,</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;</div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a4f4f821cc695fd0ef9061d702e08050a">arm_mat_trans_q15</a>(</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrc,</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst);</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;</div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a30a4d49489ac67ff98a46b9f58f73bf1">arm_mat_trans_q31</a>(</div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrc,</div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;</div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a917bf0270310c1d3f0eda1fc7c0026a0">arm_mat_mult_f32</a>(</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcA,</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcB,</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a7521d59196189bb6dde26e8cdfb66e21">arm_mat_mult_q15</a>(</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcA,</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcB,</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst,</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;  q15_t * pState);</div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;</div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a08f37d93a5bfef0c5000dc5e0a411f93">arm_mat_mult_fast_q15</a>(</div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcA,</div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcB,</div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst,</div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;  q15_t * pState);</div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a2ec612a8c2c4916477fb9bc1ab548a6e">arm_mat_mult_q31</a>(</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcA,</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcB,</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a2785e8c1b785348b0c439b56aaf585a3">arm_mat_mult_fast_q31</a>(</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcA,</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcB,</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;</div><div class="line"><a name="l01714"></a><span class="lineno"> 1714</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ac8b72fb70246ccfee3b372002345732c">arm_mat_sub_f32</a>(</div><div class="line"><a name="l01715"></a><span class="lineno"> 1715</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcA,</div><div class="line"><a name="l01716"></a><span class="lineno"> 1716</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrcB,</div><div class="line"><a name="l01717"></a><span class="lineno"> 1717</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01718"></a><span class="lineno"> 1718</span>&#160;</div><div class="line"><a name="l01728"></a><span class="lineno"> 1728</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#af647776a425b7f9dd0aca3e11d81f02f">arm_mat_sub_q15</a>(</div><div class="line"><a name="l01729"></a><span class="lineno"> 1729</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcA,</div><div class="line"><a name="l01730"></a><span class="lineno"> 1730</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrcB,</div><div class="line"><a name="l01731"></a><span class="lineno"> 1731</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst);</div><div class="line"><a name="l01732"></a><span class="lineno"> 1732</span>&#160;</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a39f42e0e3b7f115fbb909d6ff4e1329d">arm_mat_sub_q31</a>(</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcA,</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrcB,</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a9cb4e385b18c9a0b9cbc940c1067ca12">arm_mat_scale_f32</a>(</div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pSrc,</div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;  float32_t scale,</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * pDst);</div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;</div><div class="line"><a name="l01771"></a><span class="lineno"> 1771</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a7521769e2cf1c3d9c4656138cd2ae2ca">arm_mat_scale_q15</a>(</div><div class="line"><a name="l01772"></a><span class="lineno"> 1772</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pSrc,</div><div class="line"><a name="l01773"></a><span class="lineno"> 1773</span>&#160;  q15_t scaleFract,</div><div class="line"><a name="l01774"></a><span class="lineno"> 1774</span>&#160;  int32_t shift,</div><div class="line"><a name="l01775"></a><span class="lineno"> 1775</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * pDst);</div><div class="line"><a name="l01776"></a><span class="lineno"> 1776</span>&#160;</div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a609743821ee81fa8c34c4bcdc1ed9744">arm_mat_scale_q31</a>(</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pSrc,</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;  q31_t scaleFract,</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;  int32_t shift,</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * pDst);</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a48a5e5d37e1f062cc57fcfaf683343cc">arm_mat_init_q31</a>(</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;  <a class="code" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> * S,</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;  uint16_t nRows,</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;  uint16_t nColumns,</div><div class="line"><a name="l01807"></a><span class="lineno"> 1807</span>&#160;  q31_t * pData);</div><div class="line"><a name="l01808"></a><span class="lineno"> 1808</span>&#160;</div><div class="line"><a name="l01818"></a><span class="lineno"> 1818</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a31a7c2b991803d49719393eb2d53dc26">arm_mat_init_q15</a>(</div><div class="line"><a name="l01819"></a><span class="lineno"> 1819</span>&#160;  <a class="code" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> * S,</div><div class="line"><a name="l01820"></a><span class="lineno"> 1820</span>&#160;  uint16_t nRows,</div><div class="line"><a name="l01821"></a><span class="lineno"> 1821</span>&#160;  uint16_t nColumns,</div><div class="line"><a name="l01822"></a><span class="lineno"> 1822</span>&#160;  q15_t * pData);</div><div class="line"><a name="l01823"></a><span class="lineno"> 1823</span>&#160;</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a11e3dc41592a6401c13182fef9416a27">arm_mat_init_f32</a>(</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * S,</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;  uint16_t nRows,</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;  uint16_t nColumns,</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;  float32_t * pData);</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;</div><div class="line"><a name="l01844"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml"> 1844</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;  {</div><div class="line"><a name="l01846"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#ad77f3a2823c7f96de42c92a3fbf3246b"> 1846</a></span>&#160;    q15_t <a class="code" href="structarm__pid__instance__q15.xhtml#ad77f3a2823c7f96de42c92a3fbf3246b">A0</a>;    </div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;<span class="preprocessor">#ifdef ARM_MATH_CM0_FAMILY</span></div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;    q15_t A1;</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;    q15_t A2;</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l01851"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#a1b8412c517071962a9acfdc6778906ec"> 1851</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q15.xhtml#a1b8412c517071962a9acfdc6778906ec">A1</a>;           </div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01853"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30"> 1853</a></span>&#160;    q15_t state[3];       </div><div class="line"><a name="l01854"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#ad228aae24a1b6d855c93a8b9bbc1c4f1"> 1854</a></span>&#160;    q15_t <a class="code" href="structarm__pid__instance__q15.xhtml#ad228aae24a1b6d855c93a8b9bbc1c4f1">Kp</a>;           </div><div class="line"><a name="l01855"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#a0dcc19d5c8f7bc401acea9e8318cd777"> 1855</a></span>&#160;    q15_t <a class="code" href="structarm__pid__instance__q15.xhtml#a0dcc19d5c8f7bc401acea9e8318cd777">Ki</a>;           </div><div class="line"><a name="l01856"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q15.xhtml#af5d4b53091f19eff7536636b7cc43111"> 1856</a></span>&#160;    q15_t <a class="code" href="structarm__pid__instance__q15.xhtml#af5d4b53091f19eff7536636b7cc43111">Kd</a>;           </div><div class="line"><a name="l01857"></a><span class="lineno"> 1857</span>&#160;  } <a class="code" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a>;</div><div class="line"><a name="l01858"></a><span class="lineno"> 1858</span>&#160;</div><div class="line"><a name="l01862"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml"> 1862</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01863"></a><span class="lineno"> 1863</span>&#160;  {</div><div class="line"><a name="l01864"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#aa5332635ce9c7078cdb4c1ecf442eadd"> 1864</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#aa5332635ce9c7078cdb4c1ecf442eadd">A0</a>;            </div><div class="line"><a name="l01865"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#a2f7492bd6fb92fae5e2de7fbbec39b0e"> 1865</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#a2f7492bd6fb92fae5e2de7fbbec39b0e">A1</a>;            </div><div class="line"><a name="l01866"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#a3e34537c53af4f9ad7bfffa4dff27c82"> 1866</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#a3e34537c53af4f9ad7bfffa4dff27c82">A2</a>;            </div><div class="line"><a name="l01867"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4"> 1867</a></span>&#160;    q31_t state[3];      </div><div class="line"><a name="l01868"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#ac2410bf7f856d58dc1d773d4983cac8e"> 1868</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#ac2410bf7f856d58dc1d773d4983cac8e">Kp</a>;            </div><div class="line"><a name="l01869"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#aa861d69fd398f29aa0b4b455a823ed72"> 1869</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#aa861d69fd398f29aa0b4b455a823ed72">Ki</a>;            </div><div class="line"><a name="l01870"></a><span class="lineno"><a class="line" href="structarm__pid__instance__q31.xhtml#aab4ff371d14441df501f1169f71cbd17"> 1870</a></span>&#160;    q31_t <a class="code" href="structarm__pid__instance__q31.xhtml#aab4ff371d14441df501f1169f71cbd17">Kd</a>;            </div><div class="line"><a name="l01872"></a><span class="lineno"> 1872</span>&#160;  } <a class="code" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a>;</div><div class="line"><a name="l01873"></a><span class="lineno"> 1873</span>&#160;</div><div class="line"><a name="l01877"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml"> 1877</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01878"></a><span class="lineno"> 1878</span>&#160;  {</div><div class="line"><a name="l01879"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#ad7b0bed64915d0a25a3409fa2dc45556"> 1879</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#ad7b0bed64915d0a25a3409fa2dc45556">A0</a>;          </div><div class="line"><a name="l01880"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#a7def89571c50f7137a213326a396e560"> 1880</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#a7def89571c50f7137a213326a396e560">A1</a>;          </div><div class="line"><a name="l01881"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#a155acf642ba2f521869f19d694cd7fa0"> 1881</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#a155acf642ba2f521869f19d694cd7fa0">A2</a>;          </div><div class="line"><a name="l01882"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464"> 1882</a></span>&#160;    float32_t state[3];    </div><div class="line"><a name="l01883"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#aa9b9aa9e413c6cec376a9dddc9f01ebe"> 1883</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#aa9b9aa9e413c6cec376a9dddc9f01ebe">Kp</a>;               </div><div class="line"><a name="l01884"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#ac0feffde05fe391eeab3bf78e953830a"> 1884</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#ac0feffde05fe391eeab3bf78e953830a">Ki</a>;               </div><div class="line"><a name="l01885"></a><span class="lineno"><a class="line" href="structarm__pid__instance__f32.xhtml#ad5b68fbf84d16188ae4747ff91f6f088"> 1885</a></span>&#160;    float32_t <a class="code" href="structarm__pid__instance__f32.xhtml#ad5b68fbf84d16188ae4747ff91f6f088">Kd</a>;               </div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;  } <a class="code" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a>;</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;</div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae31536b19b82b93ed184fb1ab73cfcb3">arm_pid_init_f32</a>(</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;  <a class="code" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> * S,</div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;  int32_t resetStateFlag);</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;</div><div class="line"><a name="l01905"></a><span class="lineno"> 1905</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9ec860bcb6f8ca31205bf0f1b51ab723">arm_pid_reset_f32</a>(</div><div class="line"><a name="l01906"></a><span class="lineno"> 1906</span>&#160;  <a class="code" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> * S);</div><div class="line"><a name="l01907"></a><span class="lineno"> 1907</span>&#160;</div><div class="line"><a name="l01908"></a><span class="lineno"> 1908</span>&#160;</div><div class="line"><a name="l01915"></a><span class="lineno"> 1915</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad9d88485234fa9460b1ce9e64989ac86">arm_pid_init_q31</a>(</div><div class="line"><a name="l01916"></a><span class="lineno"> 1916</span>&#160;  <a class="code" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> * S,</div><div class="line"><a name="l01917"></a><span class="lineno"> 1917</span>&#160;  int32_t resetStateFlag);</div><div class="line"><a name="l01918"></a><span class="lineno"> 1918</span>&#160;</div><div class="line"><a name="l01919"></a><span class="lineno"> 1919</span>&#160;</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aeecbacd3fb37c608ec25474d3a0dffa9">arm_pid_reset_q31</a>(</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;  <a class="code" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> * S);</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;</div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2cb1e3d3ebb167348fdabec74653d5c3">arm_pid_init_q15</a>(</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;  <a class="code" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> * S,</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;  int32_t resetStateFlag);</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a408566dacb4fa6e0458b2c75672e525f">arm_pid_reset_q15</a>(</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;  <a class="code" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> * S);</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;</div><div class="line"><a name="l01951"></a><span class="lineno"><a class="line" href="structarm__linear__interp__instance__f32.xhtml"> 1951</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01952"></a><span class="lineno"> 1952</span>&#160;  {</div><div class="line"><a name="l01953"></a><span class="lineno"><a class="line" href="structarm__linear__interp__instance__f32.xhtml#a95f02a926b16d35359aca5b31e813b11"> 1953</a></span>&#160;    uint32_t <a class="code" href="structarm__linear__interp__instance__f32.xhtml#a95f02a926b16d35359aca5b31e813b11">nValues</a>;           </div><div class="line"><a name="l01954"></a><span class="lineno"><a class="line" href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481"> 1954</a></span>&#160;    float32_t <a class="code" href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481">x1</a>;               </div><div class="line"><a name="l01955"></a><span class="lineno"><a class="line" href="structarm__linear__interp__instance__f32.xhtml#aa8e2d686b5434a406d390b347b183511"> 1955</a></span>&#160;    float32_t <a class="code" href="structarm__linear__interp__instance__f32.xhtml#aa8e2d686b5434a406d390b347b183511">xSpacing</a>;         </div><div class="line"><a name="l01956"></a><span class="lineno"><a class="line" href="structarm__linear__interp__instance__f32.xhtml#ab373001f6afad0850359c344a4d7eee4"> 1956</a></span>&#160;    float32_t *<a class="code" href="structarm__linear__interp__instance__f32.xhtml#ab373001f6afad0850359c344a4d7eee4">pYData</a>;          </div><div class="line"><a name="l01957"></a><span class="lineno"> 1957</span>&#160;  } <a class="code" href="structarm__linear__interp__instance__f32.xhtml">arm_linear_interp_instance_f32</a>;</div><div class="line"><a name="l01958"></a><span class="lineno"> 1958</span>&#160;</div><div class="line"><a name="l01963"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__f32.xhtml"> 1963</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01964"></a><span class="lineno"> 1964</span>&#160;  {</div><div class="line"><a name="l01965"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__f32.xhtml#a34f2b17cc57b95011960df9718af6ed6"> 1965</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#a34f2b17cc57b95011960df9718af6ed6">numRows</a>;   </div><div class="line"><a name="l01966"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8"> 1966</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8">numCols</a>;   </div><div class="line"><a name="l01967"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__f32.xhtml#afd1e764591c991c212d56c893efb5ea4"> 1967</a></span>&#160;    float32_t *<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#afd1e764591c991c212d56c893efb5ea4">pData</a>;   </div><div class="line"><a name="l01968"></a><span class="lineno"> 1968</span>&#160;  } <a class="code" href="structarm__bilinear__interp__instance__f32.xhtml">arm_bilinear_interp_instance_f32</a>;</div><div class="line"><a name="l01969"></a><span class="lineno"> 1969</span>&#160;</div><div class="line"><a name="l01974"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q31.xhtml"> 1974</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01975"></a><span class="lineno"> 1975</span>&#160;  {</div><div class="line"><a name="l01976"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q31.xhtml#a2082e3eac56354d75291f03e96ce4aa5"> 1976</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a2082e3eac56354d75291f03e96ce4aa5">numRows</a>;   </div><div class="line"><a name="l01977"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q31.xhtml#a6c3eff4eb17ff1d43f170efb84713a2d"> 1977</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a6c3eff4eb17ff1d43f170efb84713a2d">numCols</a>;   </div><div class="line"><a name="l01978"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q31.xhtml#a843eae0c9db5f815e77e1aaf9afea358"> 1978</a></span>&#160;    q31_t *<a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a843eae0c9db5f815e77e1aaf9afea358">pData</a>;       </div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;  } <a class="code" href="structarm__bilinear__interp__instance__q31.xhtml">arm_bilinear_interp_instance_q31</a>;</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;</div><div class="line"><a name="l01985"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q15.xhtml"> 1985</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;  {</div><div class="line"><a name="l01987"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q15.xhtml#a2130ae30a804995a9f5d0e2189e08565"> 1987</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a2130ae30a804995a9f5d0e2189e08565">numRows</a>;   </div><div class="line"><a name="l01988"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q15.xhtml#a7fa8772d01583374ff8ac18205a26a37"> 1988</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a7fa8772d01583374ff8ac18205a26a37">numCols</a>;   </div><div class="line"><a name="l01989"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q15.xhtml#a50d75b1316cee3e0dfad6dcc4c9a2954"> 1989</a></span>&#160;    q15_t *<a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a50d75b1316cee3e0dfad6dcc4c9a2954">pData</a>;       </div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;  } <a class="code" href="structarm__bilinear__interp__instance__q15.xhtml">arm_bilinear_interp_instance_q15</a>;</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;</div><div class="line"><a name="l01996"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q7.xhtml"> 1996</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;  {</div><div class="line"><a name="l01998"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q7.xhtml#ad5a8067cab5f9ea4688b11a623e16607"> 1998</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#ad5a8067cab5f9ea4688b11a623e16607">numRows</a>;   </div><div class="line"><a name="l01999"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q7.xhtml#a860dd0d24380ea06cfbb348fb3b12c9a"> 1999</a></span>&#160;    uint16_t <a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#a860dd0d24380ea06cfbb348fb3b12c9a">numCols</a>;   </div><div class="line"><a name="l02000"></a><span class="lineno"><a class="line" href="structarm__bilinear__interp__instance__q7.xhtml#af05194d691bbefb02c34bafb22ca9ef0"> 2000</a></span>&#160;    q7_t *<a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#af05194d691bbefb02c34bafb22ca9ef0">pData</a>;                </div><div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160;  } <a class="code" href="structarm__bilinear__interp__instance__q7.xhtml">arm_bilinear_interp_instance_q7</a>;</div><div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;</div><div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;</div><div class="line"><a name="l02013"></a><span class="lineno"> 2013</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a16677275ed83ff0878da531e875c27ef">arm_mult_q7</a>(</div><div class="line"><a name="l02014"></a><span class="lineno"> 2014</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l02015"></a><span class="lineno"> 2015</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l02016"></a><span class="lineno"> 2016</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02017"></a><span class="lineno"> 2017</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02018"></a><span class="lineno"> 2018</span>&#160;</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#afb0778d27ed98a2a6f2ecb7d48cc8c75">arm_mult_q15</a>(</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;</div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3528c0f54a0607acc603f0490d3ca6c6">arm_mult_q31</a>(</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;</div><div class="line"><a name="l02058"></a><span class="lineno"> 2058</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aca3f0b8227da431ab29225b88888aa32">arm_mult_f32</a>(</div><div class="line"><a name="l02059"></a><span class="lineno"> 2059</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l02060"></a><span class="lineno"> 2060</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l02061"></a><span class="lineno"> 2061</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02062"></a><span class="lineno"> 2062</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02063"></a><span class="lineno"> 2063</span>&#160;</div><div class="line"><a name="l02064"></a><span class="lineno"> 2064</span>&#160;</div><div class="line"><a name="l02065"></a><span class="lineno"> 2065</span>&#160;</div><div class="line"><a name="l02066"></a><span class="lineno"> 2066</span>&#160;</div><div class="line"><a name="l02067"></a><span class="lineno"> 2067</span>&#160;</div><div class="line"><a name="l02068"></a><span class="lineno"> 2068</span>&#160;</div><div class="line"><a name="l02073"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml"> 2073</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02074"></a><span class="lineno"> 2074</span>&#160;  {</div><div class="line"><a name="l02075"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#a874085647351dcf3f0de39d2b1d49744"> 2075</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#a874085647351dcf3f0de39d2b1d49744">fftLen</a>;                 </div><div class="line"><a name="l02076"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#ab5c073286bdd2f6e2bf783ced36bf1de"> 2076</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#ab5c073286bdd2f6e2bf783ced36bf1de">ifftFlag</a>;                </div><div class="line"><a name="l02077"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#af8300c1f60caa21e6b44b9240ab5af19"> 2077</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#af8300c1f60caa21e6b44b9240ab5af19">bitReverseFlag</a>;          </div><div class="line"><a name="l02078"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#a3809dd15e7cbf1a054c728cfbbb0cc5a"> 2078</a></span>&#160;    q15_t *<a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#a3809dd15e7cbf1a054c728cfbbb0cc5a">pTwiddle</a>;                     </div><div class="line"><a name="l02079"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#ab88afeff6493be3c8b5e4530efa82d51"> 2079</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#ab88afeff6493be3c8b5e4530efa82d51">pBitRevTable</a>;          </div><div class="line"><a name="l02080"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#a6f2ab87fb4c568656e1f92f687b5c850"> 2080</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#a6f2ab87fb4c568656e1f92f687b5c850">twidCoefModifier</a>;       </div><div class="line"><a name="l02081"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q15.xhtml#a8722720c542cabd41df83fe88ef4f4cb"> 2081</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml#a8722720c542cabd41df83fe88ef4f4cb">bitRevFactor</a>;           </div><div class="line"><a name="l02082"></a><span class="lineno"> 2082</span>&#160;  } <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a>;</div><div class="line"><a name="l02083"></a><span class="lineno"> 2083</span>&#160;</div><div class="line"><a name="l02084"></a><span class="lineno"> 2084</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02085"></a><span class="lineno"> 2085</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a5c5b2127b3c4ea2d03692127f8543858">arm_cfft_radix2_init_q15</a>(</div><div class="line"><a name="l02086"></a><span class="lineno"> 2086</span>&#160;  <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> * S,</div><div class="line"><a name="l02087"></a><span class="lineno"> 2087</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02088"></a><span class="lineno"> 2088</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02089"></a><span class="lineno"> 2089</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02090"></a><span class="lineno"> 2090</span>&#160;</div><div class="line"><a name="l02091"></a><span class="lineno"> 2091</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02092"></a><span class="lineno"> 2092</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a55b424341dc3efd3fa0bcaaff4bdbf40">arm_cfft_radix2_q15</a>(</div><div class="line"><a name="l02093"></a><span class="lineno"> 2093</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> * S,</div><div class="line"><a name="l02094"></a><span class="lineno"> 2094</span>&#160;  q15_t * pSrc);</div><div class="line"><a name="l02095"></a><span class="lineno"> 2095</span>&#160;</div><div class="line"><a name="l02096"></a><span class="lineno"> 2096</span>&#160;</div><div class="line"><a name="l02097"></a><span class="lineno"> 2097</span>&#160;</div><div class="line"><a name="l02102"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml"> 2102</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02103"></a><span class="lineno"> 2103</span>&#160;  {</div><div class="line"><a name="l02104"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a5fc543e7d84ca8cb7cf6648970f21ca6"> 2104</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a5fc543e7d84ca8cb7cf6648970f21ca6">fftLen</a>;                 </div><div class="line"><a name="l02105"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a2ecff6ea735cb4d22e922d0fd5736655"> 2105</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a2ecff6ea735cb4d22e922d0fd5736655">ifftFlag</a>;                </div><div class="line"><a name="l02106"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a101e3f7b0bd6b5b14cd5214f23df4133"> 2106</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a101e3f7b0bd6b5b14cd5214f23df4133">bitReverseFlag</a>;          </div><div class="line"><a name="l02107"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a29dd693537e45421a36891f8439e1fba"> 2107</a></span>&#160;    q15_t *<a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a29dd693537e45421a36891f8439e1fba">pTwiddle</a>;                 </div><div class="line"><a name="l02108"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a4acf704ae0cf30b53bf0fbfae8e34a59"> 2108</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a4acf704ae0cf30b53bf0fbfae8e34a59">pBitRevTable</a>;          </div><div class="line"><a name="l02109"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#af32fdc78bcc27ca385f9b76a0a1f71c3"> 2109</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#af32fdc78bcc27ca385f9b76a0a1f71c3">twidCoefModifier</a>;       </div><div class="line"><a name="l02110"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q15.xhtml#a6b010e5f02d1130c621e3d2e26b95df1"> 2110</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml#a6b010e5f02d1130c621e3d2e26b95df1">bitRevFactor</a>;           </div><div class="line"><a name="l02111"></a><span class="lineno"> 2111</span>&#160;  } <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a>;</div><div class="line"><a name="l02112"></a><span class="lineno"> 2112</span>&#160;</div><div class="line"><a name="l02113"></a><span class="lineno"> 2113</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02114"></a><span class="lineno"> 2114</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a0c2acfda3126c452e75b81669e8ad9ef">arm_cfft_radix4_init_q15</a>(</div><div class="line"><a name="l02115"></a><span class="lineno"> 2115</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> * S,</div><div class="line"><a name="l02116"></a><span class="lineno"> 2116</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02117"></a><span class="lineno"> 2117</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02118"></a><span class="lineno"> 2118</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02119"></a><span class="lineno"> 2119</span>&#160;</div><div class="line"><a name="l02120"></a><span class="lineno"> 2120</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02121"></a><span class="lineno"> 2121</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a8d66cdac41b8bf6cefdb895456eee84a">arm_cfft_radix4_q15</a>(</div><div class="line"><a name="l02122"></a><span class="lineno"> 2122</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> * S,</div><div class="line"><a name="l02123"></a><span class="lineno"> 2123</span>&#160;  q15_t * pSrc);</div><div class="line"><a name="l02124"></a><span class="lineno"> 2124</span>&#160;</div><div class="line"><a name="l02129"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml"> 2129</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02130"></a><span class="lineno"> 2130</span>&#160;  {</div><div class="line"><a name="l02131"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#a960199f1373a192366878ef279eab00f"> 2131</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#a960199f1373a192366878ef279eab00f">fftLen</a>;                 </div><div class="line"><a name="l02132"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#a2607378ce64be16698bb8a3b1af8d3c8"> 2132</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#a2607378ce64be16698bb8a3b1af8d3c8">ifftFlag</a>;                </div><div class="line"><a name="l02133"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#a6239b8d268285334e88c008c07d68616"> 2133</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#a6239b8d268285334e88c008c07d68616">bitReverseFlag</a>;          </div><div class="line"><a name="l02134"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#a1d5bbe9a991e133f81652a77a7985d23"> 2134</a></span>&#160;    q31_t *<a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#a1d5bbe9a991e133f81652a77a7985d23">pTwiddle</a>;                     </div><div class="line"><a name="l02135"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#ada8e5264f4b22ff4c621817978994674"> 2135</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#ada8e5264f4b22ff4c621817978994674">pBitRevTable</a>;          </div><div class="line"><a name="l02136"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#ae63ca9193322cd477970c1d2086407d1"> 2136</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#ae63ca9193322cd477970c1d2086407d1">twidCoefModifier</a>;       </div><div class="line"><a name="l02137"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__q31.xhtml#a9d17a87263953fe3559a007512c9f3a4"> 2137</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml#a9d17a87263953fe3559a007512c9f3a4">bitRevFactor</a>;           </div><div class="line"><a name="l02138"></a><span class="lineno"> 2138</span>&#160;  } <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a>;</div><div class="line"><a name="l02139"></a><span class="lineno"> 2139</span>&#160;</div><div class="line"><a name="l02140"></a><span class="lineno"> 2140</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02141"></a><span class="lineno"> 2141</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#abec9611e77382f31e152668bf6b4b638">arm_cfft_radix2_init_q31</a>(</div><div class="line"><a name="l02142"></a><span class="lineno"> 2142</span>&#160;  <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> * S,</div><div class="line"><a name="l02143"></a><span class="lineno"> 2143</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02144"></a><span class="lineno"> 2144</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02145"></a><span class="lineno"> 2145</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02146"></a><span class="lineno"> 2146</span>&#160;</div><div class="line"><a name="l02147"></a><span class="lineno"> 2147</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02148"></a><span class="lineno"> 2148</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a6321f703ec87a274aedaab33d3e766b4">arm_cfft_radix2_q31</a>(</div><div class="line"><a name="l02149"></a><span class="lineno"> 2149</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> * S,</div><div class="line"><a name="l02150"></a><span class="lineno"> 2150</span>&#160;  q31_t * pSrc);</div><div class="line"><a name="l02151"></a><span class="lineno"> 2151</span>&#160;</div><div class="line"><a name="l02156"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml"> 2156</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02157"></a><span class="lineno"> 2157</span>&#160;  {</div><div class="line"><a name="l02158"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#ab413d2a5d3f45fa187d93813bf3bf81b"> 2158</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#ab413d2a5d3f45fa187d93813bf3bf81b">fftLen</a>;                 </div><div class="line"><a name="l02159"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#adc0a62ba669ad2282ecbe43d5d96abab"> 2159</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#adc0a62ba669ad2282ecbe43d5d96abab">ifftFlag</a>;                </div><div class="line"><a name="l02160"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#a5a7c4f4c7b3fb655cbb2bc11ef160a2a"> 2160</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#a5a7c4f4c7b3fb655cbb2bc11ef160a2a">bitReverseFlag</a>;          </div><div class="line"><a name="l02161"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#a561c22dee4cbdcfa0fd5f15106ecc306"> 2161</a></span>&#160;    q31_t *<a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#a561c22dee4cbdcfa0fd5f15106ecc306">pTwiddle</a>;                 </div><div class="line"><a name="l02162"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#a33a3bc774c97373261699463c05dfe54"> 2162</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#a33a3bc774c97373261699463c05dfe54">pBitRevTable</a>;          </div><div class="line"><a name="l02163"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#a8cf8187b8232815cf17ee82bf572ecf9"> 2163</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#a8cf8187b8232815cf17ee82bf572ecf9">twidCoefModifier</a>;       </div><div class="line"><a name="l02164"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__q31.xhtml#a94d2fead4efa4d5eaae142bbe30b0e15"> 2164</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml#a94d2fead4efa4d5eaae142bbe30b0e15">bitRevFactor</a>;           </div><div class="line"><a name="l02165"></a><span class="lineno"> 2165</span>&#160;  } <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a>;</div><div class="line"><a name="l02166"></a><span class="lineno"> 2166</span>&#160;</div><div class="line"><a name="l02167"></a><span class="lineno"> 2167</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02168"></a><span class="lineno"> 2168</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#afde3ee1f58cf393b45a9073174fff548">arm_cfft_radix4_q31</a>(</div><div class="line"><a name="l02169"></a><span class="lineno"> 2169</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> * S,</div><div class="line"><a name="l02170"></a><span class="lineno"> 2170</span>&#160;  q31_t * pSrc);</div><div class="line"><a name="l02171"></a><span class="lineno"> 2171</span>&#160;</div><div class="line"><a name="l02172"></a><span class="lineno"> 2172</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02173"></a><span class="lineno"> 2173</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ad5caaafeec900c8ff72321c01bbd462c">arm_cfft_radix4_init_q31</a>(</div><div class="line"><a name="l02174"></a><span class="lineno"> 2174</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> * S,</div><div class="line"><a name="l02175"></a><span class="lineno"> 2175</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02176"></a><span class="lineno"> 2176</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02177"></a><span class="lineno"> 2177</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02178"></a><span class="lineno"> 2178</span>&#160;</div><div class="line"><a name="l02183"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml"> 2183</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02184"></a><span class="lineno"> 2184</span>&#160;  {</div><div class="line"><a name="l02185"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#a2f915a1c29635c1623086aaaa726be8f"> 2185</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#a2f915a1c29635c1623086aaaa726be8f">fftLen</a>;                   </div><div class="line"><a name="l02186"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#a8dbe98d2c924e35e0a3fed2fe948176f"> 2186</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#a8dbe98d2c924e35e0a3fed2fe948176f">ifftFlag</a>;                  </div><div class="line"><a name="l02187"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#af713b4ac5256a19bc965c89fe3005fa3"> 2187</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#af713b4ac5256a19bc965c89fe3005fa3">bitReverseFlag</a>;            </div><div class="line"><a name="l02188"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#adb0c9d47dbfbd90a6f6ed0a05313a974"> 2188</a></span>&#160;    float32_t *<a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#adb0c9d47dbfbd90a6f6ed0a05313a974">pTwiddle</a>;               </div><div class="line"><a name="l02189"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#a92b8fa0a151cd800436094903a5ca0a4"> 2189</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#a92b8fa0a151cd800436094903a5ca0a4">pBitRevTable</a>;            </div><div class="line"><a name="l02190"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#a411f75b6ed01690293f4f5988030ea42"> 2190</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#a411f75b6ed01690293f4f5988030ea42">twidCoefModifier</a>;         </div><div class="line"><a name="l02191"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#ac1688dafa5177f6b1505abbfd0cf8b21"> 2191</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#ac1688dafa5177f6b1505abbfd0cf8b21">bitRevFactor</a>;             </div><div class="line"><a name="l02192"></a><span class="lineno"><a class="line" href="structarm__cfft__radix2__instance__f32.xhtml#a1d3d289d47443e597d88a40effd14b8f"> 2192</a></span>&#160;    float32_t <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml#a1d3d289d47443e597d88a40effd14b8f">onebyfftLen</a>;                 </div><div class="line"><a name="l02193"></a><span class="lineno"> 2193</span>&#160;  } <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a>;</div><div class="line"><a name="l02194"></a><span class="lineno"> 2194</span>&#160;</div><div class="line"><a name="l02195"></a><span class="lineno"> 2195</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02196"></a><span class="lineno"> 2196</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ac9565e6bc7229577ecf5e090313cafd7">arm_cfft_radix2_init_f32</a>(</div><div class="line"><a name="l02197"></a><span class="lineno"> 2197</span>&#160;  <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> * S,</div><div class="line"><a name="l02198"></a><span class="lineno"> 2198</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02199"></a><span class="lineno"> 2199</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02200"></a><span class="lineno"> 2200</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02201"></a><span class="lineno"> 2201</span>&#160;</div><div class="line"><a name="l02202"></a><span class="lineno"> 2202</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02203"></a><span class="lineno"> 2203</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9fadd650b802f612ae558ddaab789a6d">arm_cfft_radix2_f32</a>(</div><div class="line"><a name="l02204"></a><span class="lineno"> 2204</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> * S,</div><div class="line"><a name="l02205"></a><span class="lineno"> 2205</span>&#160;  float32_t * pSrc);</div><div class="line"><a name="l02206"></a><span class="lineno"> 2206</span>&#160;</div><div class="line"><a name="l02211"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml"> 2211</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02212"></a><span class="lineno"> 2212</span>&#160;  {</div><div class="line"><a name="l02213"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#a7e6a6d290ce158ce9a15a45e364b021a"> 2213</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#a7e6a6d290ce158ce9a15a45e364b021a">fftLen</a>;                   </div><div class="line"><a name="l02214"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#a25d1da64dd6487c291f04d226f9acc66"> 2214</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#a25d1da64dd6487c291f04d226f9acc66">ifftFlag</a>;                  </div><div class="line"><a name="l02215"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#ac10927a1620195a88649ce63dab66120"> 2215</a></span>&#160;    uint8_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#ac10927a1620195a88649ce63dab66120">bitReverseFlag</a>;            </div><div class="line"><a name="l02216"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#a14860c7544911702ca1fa0bf78204ef3"> 2216</a></span>&#160;    float32_t *<a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#a14860c7544911702ca1fa0bf78204ef3">pTwiddle</a>;               </div><div class="line"><a name="l02217"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#a8da0d2ca69749fde8cbb95caeac6fe6a"> 2217</a></span>&#160;    uint16_t *<a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#a8da0d2ca69749fde8cbb95caeac6fe6a">pBitRevTable</a>;            </div><div class="line"><a name="l02218"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#abe31ea2157dfa233e389cdfd3b9993ee"> 2218</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#abe31ea2157dfa233e389cdfd3b9993ee">twidCoefModifier</a>;         </div><div class="line"><a name="l02219"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#acc8cb18a8b901b8321ab9d86491e41a3"> 2219</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#acc8cb18a8b901b8321ab9d86491e41a3">bitRevFactor</a>;             </div><div class="line"><a name="l02220"></a><span class="lineno"><a class="line" href="structarm__cfft__radix4__instance__f32.xhtml#ab9eed39e40b8d7c16381fbccf84467cd"> 2220</a></span>&#160;    float32_t <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml#ab9eed39e40b8d7c16381fbccf84467cd">onebyfftLen</a>;                 </div><div class="line"><a name="l02221"></a><span class="lineno"> 2221</span>&#160;  } <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a>;</div><div class="line"><a name="l02222"></a><span class="lineno"> 2222</span>&#160;</div><div class="line"><a name="l02223"></a><span class="lineno"> 2223</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02224"></a><span class="lineno"> 2224</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#af336459f684f0b17bfae539ef1b1b78a">arm_cfft_radix4_init_f32</a>(</div><div class="line"><a name="l02225"></a><span class="lineno"> 2225</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> * S,</div><div class="line"><a name="l02226"></a><span class="lineno"> 2226</span>&#160;  uint16_t fftLen,</div><div class="line"><a name="l02227"></a><span class="lineno"> 2227</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02228"></a><span class="lineno"> 2228</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02229"></a><span class="lineno"> 2229</span>&#160;</div><div class="line"><a name="l02230"></a><span class="lineno"> 2230</span>&#160;<span class="comment">/* Deprecated */</span></div><div class="line"><a name="l02231"></a><span class="lineno"> 2231</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a521f670cd9c571bc61aff9bec89f4c26">arm_cfft_radix4_f32</a>(</div><div class="line"><a name="l02232"></a><span class="lineno"> 2232</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> * S,</div><div class="line"><a name="l02233"></a><span class="lineno"> 2233</span>&#160;  float32_t * pSrc);</div><div class="line"><a name="l02234"></a><span class="lineno"> 2234</span>&#160;</div><div class="line"><a name="l02239"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q15.xhtml"> 2239</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02240"></a><span class="lineno"> 2240</span>&#160;  {</div><div class="line"><a name="l02241"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q15.xhtml#a5f9e1d3a8c127ee323b5e6929aeb90df"> 2241</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__q15.xhtml#a5f9e1d3a8c127ee323b5e6929aeb90df">fftLen</a>;                   </div><div class="line"><a name="l02242"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q15.xhtml#afdaf12ce4687cec021c5ae73d0987a3f"> 2242</a></span>&#160;    <span class="keyword">const</span> q15_t *<a class="code" href="structarm__cfft__instance__q15.xhtml#afdaf12ce4687cec021c5ae73d0987a3f">pTwiddle</a>;             </div><div class="line"><a name="l02243"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q15.xhtml#ac9160b80243b99a0b6e2f75ddb5cf0ae"> 2243</a></span>&#160;    <span class="keyword">const</span> uint16_t *<a class="code" href="structarm__cfft__instance__q15.xhtml#ac9160b80243b99a0b6e2f75ddb5cf0ae">pBitRevTable</a>;      </div><div class="line"><a name="l02244"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q15.xhtml#a738907cf34bdbbaf724414ac2decbc3c"> 2244</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__q15.xhtml#a738907cf34bdbbaf724414ac2decbc3c">bitRevLength</a>;             </div><div class="line"><a name="l02245"></a><span class="lineno"> 2245</span>&#160;  } <a class="code" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a>;</div><div class="line"><a name="l02246"></a><span class="lineno"> 2246</span>&#160;</div><div class="line"><a name="l02247"></a><span class="lineno"> 2247</span>&#160;<span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a68cdacd2267a2967955e40e6b7ec1229">arm_cfft_q15</a>(</div><div class="line"><a name="l02248"></a><span class="lineno"> 2248</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a> * S,</div><div class="line"><a name="l02249"></a><span class="lineno"> 2249</span>&#160;    q15_t * p1,</div><div class="line"><a name="l02250"></a><span class="lineno"> 2250</span>&#160;    uint8_t ifftFlag,</div><div class="line"><a name="l02251"></a><span class="lineno"> 2251</span>&#160;    uint8_t bitReverseFlag);</div><div class="line"><a name="l02252"></a><span class="lineno"> 2252</span>&#160;</div><div class="line"><a name="l02257"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q31.xhtml"> 2257</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02258"></a><span class="lineno"> 2258</span>&#160;  {</div><div class="line"><a name="l02259"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q31.xhtml#a4406f23e8fd0bff8d555225612e2a2a8"> 2259</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__q31.xhtml#a4406f23e8fd0bff8d555225612e2a2a8">fftLen</a>;                   </div><div class="line"><a name="l02260"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q31.xhtml#af751114feb91de3ace8600e91bdd0872"> 2260</a></span>&#160;    <span class="keyword">const</span> q31_t *<a class="code" href="structarm__cfft__instance__q31.xhtml#af751114feb91de3ace8600e91bdd0872">pTwiddle</a>;             </div><div class="line"><a name="l02261"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q31.xhtml#a8a464461649f023325ced1e10470f5d0"> 2261</a></span>&#160;    <span class="keyword">const</span> uint16_t *<a class="code" href="structarm__cfft__instance__q31.xhtml#a8a464461649f023325ced1e10470f5d0">pBitRevTable</a>;      </div><div class="line"><a name="l02262"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__q31.xhtml#a2250fa6b8fe73292c5418c50c0549f87"> 2262</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__q31.xhtml#a2250fa6b8fe73292c5418c50c0549f87">bitRevLength</a>;             </div><div class="line"><a name="l02263"></a><span class="lineno"> 2263</span>&#160;  } <a class="code" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a>;</div><div class="line"><a name="l02264"></a><span class="lineno"> 2264</span>&#160;</div><div class="line"><a name="l02265"></a><span class="lineno"> 2265</span>&#160;<span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a5a0008bd997ab6e2e299ef2fb272fb4b">arm_cfft_q31</a>(</div><div class="line"><a name="l02266"></a><span class="lineno"> 2266</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a> * S,</div><div class="line"><a name="l02267"></a><span class="lineno"> 2267</span>&#160;    q31_t * p1,</div><div class="line"><a name="l02268"></a><span class="lineno"> 2268</span>&#160;    uint8_t ifftFlag,</div><div class="line"><a name="l02269"></a><span class="lineno"> 2269</span>&#160;    uint8_t bitReverseFlag);</div><div class="line"><a name="l02270"></a><span class="lineno"> 2270</span>&#160;</div><div class="line"><a name="l02275"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__f32.xhtml"> 2275</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02276"></a><span class="lineno"> 2276</span>&#160;  {</div><div class="line"><a name="l02277"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__f32.xhtml#acd8f9e9540e3dd348212726e5d6aaa95"> 2277</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__f32.xhtml#acd8f9e9540e3dd348212726e5d6aaa95">fftLen</a>;                   </div><div class="line"><a name="l02278"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__f32.xhtml#a59cc6f753f1498716e1444ac054c06de"> 2278</a></span>&#160;    <span class="keyword">const</span> float32_t *<a class="code" href="structarm__cfft__instance__f32.xhtml#a59cc6f753f1498716e1444ac054c06de">pTwiddle</a>;         </div><div class="line"><a name="l02279"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__f32.xhtml#a21ceaf59a1bb8440af57c28d2dd9bbab"> 2279</a></span>&#160;    <span class="keyword">const</span> uint16_t *<a class="code" href="structarm__cfft__instance__f32.xhtml#a21ceaf59a1bb8440af57c28d2dd9bbab">pBitRevTable</a>;      </div><div class="line"><a name="l02280"></a><span class="lineno"><a class="line" href="structarm__cfft__instance__f32.xhtml#a3ba329ed153d182746376208e773d648"> 2280</a></span>&#160;    uint16_t <a class="code" href="structarm__cfft__instance__f32.xhtml#a3ba329ed153d182746376208e773d648">bitRevLength</a>;             </div><div class="line"><a name="l02281"></a><span class="lineno"> 2281</span>&#160;  } <a class="code" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a>;</div><div class="line"><a name="l02282"></a><span class="lineno"> 2282</span>&#160;</div><div class="line"><a name="l02283"></a><span class="lineno"> 2283</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ade0f9c4ff157b6b9c72a1eafd86ebf80">arm_cfft_f32</a>(</div><div class="line"><a name="l02284"></a><span class="lineno"> 2284</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a> * S,</div><div class="line"><a name="l02285"></a><span class="lineno"> 2285</span>&#160;  float32_t * p1,</div><div class="line"><a name="l02286"></a><span class="lineno"> 2286</span>&#160;  uint8_t ifftFlag,</div><div class="line"><a name="l02287"></a><span class="lineno"> 2287</span>&#160;  uint8_t bitReverseFlag);</div><div class="line"><a name="l02288"></a><span class="lineno"> 2288</span>&#160;</div><div class="line"><a name="l02293"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml"> 2293</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02294"></a><span class="lineno"> 2294</span>&#160;  {</div><div class="line"><a name="l02295"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#aac5cf9e825917cbb14f439e56bb86ab3"> 2295</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__q15.xhtml#aac5cf9e825917cbb14f439e56bb86ab3">fftLenReal</a>;                      </div><div class="line"><a name="l02296"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#a8051ffe268c147e431e1bea7bb4c4258"> 2296</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__q15.xhtml#a8051ffe268c147e431e1bea7bb4c4258">ifftFlagR</a>;                        </div><div class="line"><a name="l02297"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#a4c65cd40e0098ec2f5c0dc31488b9bc6"> 2297</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__q15.xhtml#a4c65cd40e0098ec2f5c0dc31488b9bc6">bitReverseFlagR</a>;                  </div><div class="line"><a name="l02298"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#afd444d05858c5f419980e94e8240d5c3"> 2298</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__q15.xhtml#afd444d05858c5f419980e94e8240d5c3">twidCoefRModifier</a>;               </div><div class="line"><a name="l02299"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#affbf2de522ac029432d98e8373c0ec53"> 2299</a></span>&#160;    q15_t *<a class="code" href="structarm__rfft__instance__q15.xhtml#affbf2de522ac029432d98e8373c0ec53">pTwiddleAReal</a>;                     </div><div class="line"><a name="l02300"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#a937d815022adc557b435ba8c6cd58b0d"> 2300</a></span>&#160;    q15_t *<a class="code" href="structarm__rfft__instance__q15.xhtml#a937d815022adc557b435ba8c6cd58b0d">pTwiddleBReal</a>;                     </div><div class="line"><a name="l02301"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q15.xhtml#a4329c15b056444746d37ff082a24d31a"> 2301</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a> *<a class="code" href="structarm__rfft__instance__q15.xhtml#a4329c15b056444746d37ff082a24d31a">pCfft</a>;       </div><div class="line"><a name="l02302"></a><span class="lineno"> 2302</span>&#160;  } <a class="code" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a>;</div><div class="line"><a name="l02303"></a><span class="lineno"> 2303</span>&#160;</div><div class="line"><a name="l02304"></a><span class="lineno"> 2304</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a053450cc600a55410ba5b5605e96245d">arm_rfft_init_q15</a>(</div><div class="line"><a name="l02305"></a><span class="lineno"> 2305</span>&#160;  <a class="code" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> * S,</div><div class="line"><a name="l02306"></a><span class="lineno"> 2306</span>&#160;  uint32_t fftLenReal,</div><div class="line"><a name="l02307"></a><span class="lineno"> 2307</span>&#160;  uint32_t ifftFlagR,</div><div class="line"><a name="l02308"></a><span class="lineno"> 2308</span>&#160;  uint32_t bitReverseFlag);</div><div class="line"><a name="l02309"></a><span class="lineno"> 2309</span>&#160;</div><div class="line"><a name="l02310"></a><span class="lineno"> 2310</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a00e615f5db21736ad5b27fb6146f3fc5">arm_rfft_q15</a>(</div><div class="line"><a name="l02311"></a><span class="lineno"> 2311</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> * S,</div><div class="line"><a name="l02312"></a><span class="lineno"> 2312</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02313"></a><span class="lineno"> 2313</span>&#160;  q15_t * pDst);</div><div class="line"><a name="l02314"></a><span class="lineno"> 2314</span>&#160;</div><div class="line"><a name="l02319"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml"> 2319</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02320"></a><span class="lineno"> 2320</span>&#160;  {</div><div class="line"><a name="l02321"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#af777b0cadd5abaf064323692c2e6693b"> 2321</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__q31.xhtml#af777b0cadd5abaf064323692c2e6693b">fftLenReal</a>;                        </div><div class="line"><a name="l02322"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#af5c2615e6cde15524df38fa57ea32d94"> 2322</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__q31.xhtml#af5c2615e6cde15524df38fa57ea32d94">ifftFlagR</a>;                          </div><div class="line"><a name="l02323"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#a3cb90cdc928a88b0203917dcb3dc1b71"> 2323</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__q31.xhtml#a3cb90cdc928a88b0203917dcb3dc1b71">bitReverseFlagR</a>;                    </div><div class="line"><a name="l02324"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#a6fc90252b579f7c29e01bd279334fc43"> 2324</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__q31.xhtml#a6fc90252b579f7c29e01bd279334fc43">twidCoefRModifier</a>;                 </div><div class="line"><a name="l02325"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#a2a0c944e66bab92fcbe19d1c29153250"> 2325</a></span>&#160;    q31_t *<a class="code" href="structarm__rfft__instance__q31.xhtml#a2a0c944e66bab92fcbe19d1c29153250">pTwiddleAReal</a>;                       </div><div class="line"><a name="l02326"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#ae5070be4c2e0327e618f5e1f4c5b9d80"> 2326</a></span>&#160;    q31_t *<a class="code" href="structarm__rfft__instance__q31.xhtml#ae5070be4c2e0327e618f5e1f4c5b9d80">pTwiddleBReal</a>;                       </div><div class="line"><a name="l02327"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__q31.xhtml#a8fe10d425b59e096c23aa4bb5caa1974"> 2327</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a> *<a class="code" href="structarm__rfft__instance__q31.xhtml#a8fe10d425b59e096c23aa4bb5caa1974">pCfft</a>;         </div><div class="line"><a name="l02328"></a><span class="lineno"> 2328</span>&#160;  } <a class="code" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a>;</div><div class="line"><a name="l02329"></a><span class="lineno"> 2329</span>&#160;</div><div class="line"><a name="l02330"></a><span class="lineno"> 2330</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a5abde938abbe72e95c5bab080eb33c45">arm_rfft_init_q31</a>(</div><div class="line"><a name="l02331"></a><span class="lineno"> 2331</span>&#160;  <a class="code" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> * S,</div><div class="line"><a name="l02332"></a><span class="lineno"> 2332</span>&#160;  uint32_t fftLenReal,</div><div class="line"><a name="l02333"></a><span class="lineno"> 2333</span>&#160;  uint32_t ifftFlagR,</div><div class="line"><a name="l02334"></a><span class="lineno"> 2334</span>&#160;  uint32_t bitReverseFlag);</div><div class="line"><a name="l02335"></a><span class="lineno"> 2335</span>&#160;</div><div class="line"><a name="l02336"></a><span class="lineno"> 2336</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abaeab5646aeea9844e6d42ca8c73fe3a">arm_rfft_q31</a>(</div><div class="line"><a name="l02337"></a><span class="lineno"> 2337</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> * S,</div><div class="line"><a name="l02338"></a><span class="lineno"> 2338</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02339"></a><span class="lineno"> 2339</span>&#160;  q31_t * pDst);</div><div class="line"><a name="l02340"></a><span class="lineno"> 2340</span>&#160;</div><div class="line"><a name="l02345"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml"> 2345</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02346"></a><span class="lineno"> 2346</span>&#160;  {</div><div class="line"><a name="l02347"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a4219d4669699e4efdcb150ed7a0d9a57"> 2347</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__f32.xhtml#a4219d4669699e4efdcb150ed7a0d9a57">fftLenReal</a>;                        </div><div class="line"><a name="l02348"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a075076e07ebb8521d8e3b49a31db6c57"> 2348</a></span>&#160;    uint16_t <a class="code" href="structarm__rfft__instance__f32.xhtml#a075076e07ebb8521d8e3b49a31db6c57">fftLenBy2</a>;                         </div><div class="line"><a name="l02349"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a5ee6d10a934ab4b666e0bb286c3d633f"> 2349</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__f32.xhtml#a5ee6d10a934ab4b666e0bb286c3d633f">ifftFlagR</a>;                          </div><div class="line"><a name="l02350"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#ac342f3248157cbbd2f04a3c8ec9fc9eb"> 2350</a></span>&#160;    uint8_t <a class="code" href="structarm__rfft__instance__f32.xhtml#ac342f3248157cbbd2f04a3c8ec9fc9eb">bitReverseFlagR</a>;                    </div><div class="line"><a name="l02351"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#aede85350fb5ae6baa1b3e8bfa15b18d6"> 2351</a></span>&#160;    uint32_t <a class="code" href="structarm__rfft__instance__f32.xhtml#aede85350fb5ae6baa1b3e8bfa15b18d6">twidCoefRModifier</a>;                     </div><div class="line"><a name="l02352"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a534cc7e6e9b3e3dd022fad611c762142"> 2352</a></span>&#160;    float32_t *<a class="code" href="structarm__rfft__instance__f32.xhtml#a534cc7e6e9b3e3dd022fad611c762142">pTwiddleAReal</a>;                   </div><div class="line"><a name="l02353"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a23543ecfd027fea2477fe1eea23c3c4d"> 2353</a></span>&#160;    float32_t *<a class="code" href="structarm__rfft__instance__f32.xhtml#a23543ecfd027fea2477fe1eea23c3c4d">pTwiddleBReal</a>;                   </div><div class="line"><a name="l02354"></a><span class="lineno"><a class="line" href="structarm__rfft__instance__f32.xhtml#a9f47ba9f50c81e4445ae3827b981bc05"> 2354</a></span>&#160;    <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *<a class="code" href="structarm__rfft__instance__f32.xhtml#a9f47ba9f50c81e4445ae3827b981bc05">pCfft</a>;        </div><div class="line"><a name="l02355"></a><span class="lineno"> 2355</span>&#160;  } <a class="code" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a>;</div><div class="line"><a name="l02356"></a><span class="lineno"> 2356</span>&#160;</div><div class="line"><a name="l02357"></a><span class="lineno"> 2357</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a10717ee326bf50832ef1c25b85a23068">arm_rfft_init_f32</a>(</div><div class="line"><a name="l02358"></a><span class="lineno"> 2358</span>&#160;  <a class="code" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> * S,</div><div class="line"><a name="l02359"></a><span class="lineno"> 2359</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> * S_CFFT,</div><div class="line"><a name="l02360"></a><span class="lineno"> 2360</span>&#160;  uint32_t fftLenReal,</div><div class="line"><a name="l02361"></a><span class="lineno"> 2361</span>&#160;  uint32_t ifftFlagR,</div><div class="line"><a name="l02362"></a><span class="lineno"> 2362</span>&#160;  uint32_t bitReverseFlag);</div><div class="line"><a name="l02363"></a><span class="lineno"> 2363</span>&#160;</div><div class="line"><a name="l02364"></a><span class="lineno"> 2364</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3df1766d230532bc068fc4ed69d0fcdc">arm_rfft_f32</a>(</div><div class="line"><a name="l02365"></a><span class="lineno"> 2365</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> * S,</div><div class="line"><a name="l02366"></a><span class="lineno"> 2366</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02367"></a><span class="lineno"> 2367</span>&#160;  float32_t * pDst);</div><div class="line"><a name="l02368"></a><span class="lineno"> 2368</span>&#160;</div><div class="line"><a name="l02373"></a><span class="lineno"><a class="line" href="structarm__rfft__fast__instance__f32.xhtml"> 2373</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02374"></a><span class="lineno"> 2374</span>&#160;  {</div><div class="line"><a name="l02375"></a><span class="lineno"><a class="line" href="structarm__rfft__fast__instance__f32.xhtml#a37419ababdfb3151b1891ae6bcd21012"> 2375</a></span>&#160;    <a class="code" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a> <a class="code" href="structarm__rfft__fast__instance__f32.xhtml#a37419ababdfb3151b1891ae6bcd21012">Sint</a>;      </div><div class="line"><a name="l02376"></a><span class="lineno"><a class="line" href="structarm__rfft__fast__instance__f32.xhtml#aef06ab665041ec36f5b25d464f0cab14"> 2376</a></span>&#160;    uint16_t <a class="code" href="structarm__rfft__fast__instance__f32.xhtml#aef06ab665041ec36f5b25d464f0cab14">fftLenRFFT</a>;                        </div><div class="line"><a name="l02377"></a><span class="lineno"><a class="line" href="structarm__rfft__fast__instance__f32.xhtml#a9f30b04f163fabc1b24421d3c323d5fc"> 2377</a></span>&#160;   float32_t * <a class="code" href="structarm__rfft__fast__instance__f32.xhtml#a9f30b04f163fabc1b24421d3c323d5fc">pTwiddleRFFT</a>;               </div><div class="line"><a name="l02378"></a><span class="lineno"> 2378</span>&#160;  } <a class="code" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> ;</div><div class="line"><a name="l02379"></a><span class="lineno"> 2379</span>&#160;</div><div class="line"><a name="l02380"></a><span class="lineno"> 2380</span>&#160;<a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ac5fceb172551e7c11eb4d0e17ef15aa3">arm_rfft_fast_init_f32</a> (</div><div class="line"><a name="l02381"></a><span class="lineno"> 2381</span>&#160;   <a class="code" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> * S,</div><div class="line"><a name="l02382"></a><span class="lineno"> 2382</span>&#160;   uint16_t fftLen);</div><div class="line"><a name="l02383"></a><span class="lineno"> 2383</span>&#160;</div><div class="line"><a name="l02384"></a><span class="lineno"> 2384</span>&#160;<span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a180d8b764d59cbb85d37a2d5f7cd9799">arm_rfft_fast_f32</a>(</div><div class="line"><a name="l02385"></a><span class="lineno"> 2385</span>&#160;  <a class="code" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> * S,</div><div class="line"><a name="l02386"></a><span class="lineno"> 2386</span>&#160;  float32_t * p, float32_t * pOut,</div><div class="line"><a name="l02387"></a><span class="lineno"> 2387</span>&#160;  uint8_t ifftFlag);</div><div class="line"><a name="l02388"></a><span class="lineno"> 2388</span>&#160;</div><div class="line"><a name="l02393"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml"> 2393</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02394"></a><span class="lineno"> 2394</span>&#160;  {</div><div class="line"><a name="l02395"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#a262b29a51c371b46efc89120e31ccf37"> 2395</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__f32.xhtml#a262b29a51c371b46efc89120e31ccf37">N</a>;                         </div><div class="line"><a name="l02396"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#adb1ef2739ddbe62e5cdadc47455a4147"> 2396</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__f32.xhtml#adb1ef2739ddbe62e5cdadc47455a4147">Nby2</a>;                      </div><div class="line"><a name="l02397"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#a61ce8c967b2e998a9c0041cca73cdef8"> 2397</a></span>&#160;    float32_t <a class="code" href="structarm__dct4__instance__f32.xhtml#a61ce8c967b2e998a9c0041cca73cdef8">normalize</a>;                </div><div class="line"><a name="l02398"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#ad13544aafad268588c62e3eb35ae662c"> 2398</a></span>&#160;    float32_t *<a class="code" href="structarm__dct4__instance__f32.xhtml#ad13544aafad268588c62e3eb35ae662c">pTwiddle</a>;                </div><div class="line"><a name="l02399"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#a6da1187e070801e011ce5e0582efa861"> 2399</a></span>&#160;    float32_t *<a class="code" href="structarm__dct4__instance__f32.xhtml#a6da1187e070801e011ce5e0582efa861">pCosFactor</a>;              </div><div class="line"><a name="l02400"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#a978f37fc19add31af243ab5c63ae502f"> 2400</a></span>&#160;    <a class="code" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *<a class="code" href="structarm__dct4__instance__f32.xhtml#a978f37fc19add31af243ab5c63ae502f">pRfft</a>;        </div><div class="line"><a name="l02401"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__f32.xhtml#a018f7860b6e070af533fb7d76c7cdc32"> 2401</a></span>&#160;    <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *<a class="code" href="structarm__dct4__instance__f32.xhtml#a018f7860b6e070af533fb7d76c7cdc32">pCfft</a>; </div><div class="line"><a name="l02402"></a><span class="lineno"> 2402</span>&#160;  } <a class="code" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a>;</div><div class="line"><a name="l02403"></a><span class="lineno"> 2403</span>&#160;</div><div class="line"><a name="l02415"></a><span class="lineno"> 2415</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ab094ad3bc6fa1b84e8b12a24e1850a06">arm_dct4_init_f32</a>(</div><div class="line"><a name="l02416"></a><span class="lineno"> 2416</span>&#160;  <a class="code" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> * S,</div><div class="line"><a name="l02417"></a><span class="lineno"> 2417</span>&#160;  <a class="code" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> * S_RFFT,</div><div class="line"><a name="l02418"></a><span class="lineno"> 2418</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> * S_CFFT,</div><div class="line"><a name="l02419"></a><span class="lineno"> 2419</span>&#160;  uint16_t N,</div><div class="line"><a name="l02420"></a><span class="lineno"> 2420</span>&#160;  uint16_t Nby2,</div><div class="line"><a name="l02421"></a><span class="lineno"> 2421</span>&#160;  float32_t normalize);</div><div class="line"><a name="l02422"></a><span class="lineno"> 2422</span>&#160;</div><div class="line"><a name="l02431"></a><span class="lineno"> 2431</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#afd538d68886848bc090ec2b0d364cc81">arm_dct4_f32</a>(</div><div class="line"><a name="l02432"></a><span class="lineno"> 2432</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> * S,</div><div class="line"><a name="l02433"></a><span class="lineno"> 2433</span>&#160;  float32_t * pState,</div><div class="line"><a name="l02434"></a><span class="lineno"> 2434</span>&#160;  float32_t * pInlineBuffer);</div><div class="line"><a name="l02435"></a><span class="lineno"> 2435</span>&#160;</div><div class="line"><a name="l02440"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml"> 2440</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02441"></a><span class="lineno"> 2441</span>&#160;  {</div><div class="line"><a name="l02442"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#a46a9f136457350676e2bfd3768ff9d6d"> 2442</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__q31.xhtml#a46a9f136457350676e2bfd3768ff9d6d">N</a>;                         </div><div class="line"><a name="l02443"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#a32d3268ba4629908dba056599f0a904d"> 2443</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__q31.xhtml#a32d3268ba4629908dba056599f0a904d">Nby2</a>;                      </div><div class="line"><a name="l02444"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#ac80ff7b28fca36aeef74dea12e8312dd"> 2444</a></span>&#160;    q31_t <a class="code" href="structarm__dct4__instance__q31.xhtml#ac80ff7b28fca36aeef74dea12e8312dd">normalize</a>;                    </div><div class="line"><a name="l02445"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#a7db236e22673146bb1d2c962f0713f08"> 2445</a></span>&#160;    q31_t *<a class="code" href="structarm__dct4__instance__q31.xhtml#a7db236e22673146bb1d2c962f0713f08">pTwiddle</a>;                    </div><div class="line"><a name="l02446"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#af97204d1838925621fc82021a0c2d6c1"> 2446</a></span>&#160;    q31_t *<a class="code" href="structarm__dct4__instance__q31.xhtml#af97204d1838925621fc82021a0c2d6c1">pCosFactor</a>;                  </div><div class="line"><a name="l02447"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#af1487dab5e7963b85dc0fdc6bf492542"> 2447</a></span>&#160;    <a class="code" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *<a class="code" href="structarm__dct4__instance__q31.xhtml#af1487dab5e7963b85dc0fdc6bf492542">pRfft</a>;        </div><div class="line"><a name="l02448"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q31.xhtml#ac96579cfb28d08bb11dd2fe4c6303833"> 2448</a></span>&#160;    <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *<a class="code" href="structarm__dct4__instance__q31.xhtml#ac96579cfb28d08bb11dd2fe4c6303833">pCfft</a>; </div><div class="line"><a name="l02449"></a><span class="lineno"> 2449</span>&#160;  } <a class="code" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a>;</div><div class="line"><a name="l02450"></a><span class="lineno"> 2450</span>&#160;</div><div class="line"><a name="l02462"></a><span class="lineno"> 2462</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a631bb59c7c97c814ff7147ecba6a716a">arm_dct4_init_q31</a>(</div><div class="line"><a name="l02463"></a><span class="lineno"> 2463</span>&#160;  <a class="code" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> * S,</div><div class="line"><a name="l02464"></a><span class="lineno"> 2464</span>&#160;  <a class="code" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> * S_RFFT,</div><div class="line"><a name="l02465"></a><span class="lineno"> 2465</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> * S_CFFT,</div><div class="line"><a name="l02466"></a><span class="lineno"> 2466</span>&#160;  uint16_t N,</div><div class="line"><a name="l02467"></a><span class="lineno"> 2467</span>&#160;  uint16_t Nby2,</div><div class="line"><a name="l02468"></a><span class="lineno"> 2468</span>&#160;  q31_t normalize);</div><div class="line"><a name="l02469"></a><span class="lineno"> 2469</span>&#160;</div><div class="line"><a name="l02478"></a><span class="lineno"> 2478</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad04d0baab6ed081d8e8afe02538eb80b">arm_dct4_q31</a>(</div><div class="line"><a name="l02479"></a><span class="lineno"> 2479</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> * S,</div><div class="line"><a name="l02480"></a><span class="lineno"> 2480</span>&#160;  q31_t * pState,</div><div class="line"><a name="l02481"></a><span class="lineno"> 2481</span>&#160;  q31_t * pInlineBuffer);</div><div class="line"><a name="l02482"></a><span class="lineno"> 2482</span>&#160;</div><div class="line"><a name="l02487"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml"> 2487</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l02488"></a><span class="lineno"> 2488</span>&#160;  {</div><div class="line"><a name="l02489"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#a53d24009bb9b2e93d0aa07db7f1a6c25"> 2489</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__q15.xhtml#a53d24009bb9b2e93d0aa07db7f1a6c25">N</a>;                         </div><div class="line"><a name="l02490"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#af43dcbbc2fc661ffbc525afe3dcbd7da"> 2490</a></span>&#160;    uint16_t <a class="code" href="structarm__dct4__instance__q15.xhtml#af43dcbbc2fc661ffbc525afe3dcbd7da">Nby2</a>;                      </div><div class="line"><a name="l02491"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#a197098140d68e89a08f7a249003a0b86"> 2491</a></span>&#160;    q15_t <a class="code" href="structarm__dct4__instance__q15.xhtml#a197098140d68e89a08f7a249003a0b86">normalize</a>;                    </div><div class="line"><a name="l02492"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#abc6c847e9f906781e1d5da40e9aafa76"> 2492</a></span>&#160;    q15_t *<a class="code" href="structarm__dct4__instance__q15.xhtml#abc6c847e9f906781e1d5da40e9aafa76">pTwiddle</a>;                    </div><div class="line"><a name="l02493"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#ac76df681b1bd502fb4874c06f055dded"> 2493</a></span>&#160;    q15_t *<a class="code" href="structarm__dct4__instance__q15.xhtml#ac76df681b1bd502fb4874c06f055dded">pCosFactor</a>;                  </div><div class="line"><a name="l02494"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#a11cf95c1cd9dd2dd5e4b81b8f88dc208"> 2494</a></span>&#160;    <a class="code" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *<a class="code" href="structarm__dct4__instance__q15.xhtml#a11cf95c1cd9dd2dd5e4b81b8f88dc208">pRfft</a>;        </div><div class="line"><a name="l02495"></a><span class="lineno"><a class="line" href="structarm__dct4__instance__q15.xhtml#a7284932ee8c36107c33815eb62eadffc"> 2495</a></span>&#160;    <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *<a class="code" href="structarm__dct4__instance__q15.xhtml#a7284932ee8c36107c33815eb62eadffc">pCfft</a>; </div><div class="line"><a name="l02496"></a><span class="lineno"> 2496</span>&#160;  } <a class="code" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a>;</div><div class="line"><a name="l02497"></a><span class="lineno"> 2497</span>&#160;</div><div class="line"><a name="l02509"></a><span class="lineno"> 2509</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a966fd1b66a80873964533703ab5dc054">arm_dct4_init_q15</a>(</div><div class="line"><a name="l02510"></a><span class="lineno"> 2510</span>&#160;  <a class="code" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> * S,</div><div class="line"><a name="l02511"></a><span class="lineno"> 2511</span>&#160;  <a class="code" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> * S_RFFT,</div><div class="line"><a name="l02512"></a><span class="lineno"> 2512</span>&#160;  <a class="code" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> * S_CFFT,</div><div class="line"><a name="l02513"></a><span class="lineno"> 2513</span>&#160;  uint16_t N,</div><div class="line"><a name="l02514"></a><span class="lineno"> 2514</span>&#160;  uint16_t Nby2,</div><div class="line"><a name="l02515"></a><span class="lineno"> 2515</span>&#160;  q15_t normalize);</div><div class="line"><a name="l02516"></a><span class="lineno"> 2516</span>&#160;</div><div class="line"><a name="l02525"></a><span class="lineno"> 2525</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a114cb9635059f678df291fcc887aaf2b">arm_dct4_q15</a>(</div><div class="line"><a name="l02526"></a><span class="lineno"> 2526</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> * S,</div><div class="line"><a name="l02527"></a><span class="lineno"> 2527</span>&#160;  q15_t * pState,</div><div class="line"><a name="l02528"></a><span class="lineno"> 2528</span>&#160;  q15_t * pInlineBuffer);</div><div class="line"><a name="l02529"></a><span class="lineno"> 2529</span>&#160;</div><div class="line"><a name="l02539"></a><span class="lineno"> 2539</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a6a904a547413b10565dd1d251c6bafbd">arm_add_f32</a>(</div><div class="line"><a name="l02540"></a><span class="lineno"> 2540</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l02541"></a><span class="lineno"> 2541</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l02542"></a><span class="lineno"> 2542</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02543"></a><span class="lineno"> 2543</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02544"></a><span class="lineno"> 2544</span>&#160;</div><div class="line"><a name="l02554"></a><span class="lineno"> 2554</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aed633f415a7840a66861debca2dfb96b">arm_add_q7</a>(</div><div class="line"><a name="l02555"></a><span class="lineno"> 2555</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l02556"></a><span class="lineno"> 2556</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l02557"></a><span class="lineno"> 2557</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02558"></a><span class="lineno"> 2558</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02559"></a><span class="lineno"> 2559</span>&#160;</div><div class="line"><a name="l02569"></a><span class="lineno"> 2569</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abb51285a41f511670bbff62fc0e1bf62">arm_add_q15</a>(</div><div class="line"><a name="l02570"></a><span class="lineno"> 2570</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l02571"></a><span class="lineno"> 2571</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l02572"></a><span class="lineno"> 2572</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02573"></a><span class="lineno"> 2573</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02574"></a><span class="lineno"> 2574</span>&#160;</div><div class="line"><a name="l02584"></a><span class="lineno"> 2584</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a24d6c3f7f8b9fae4847c0c3f26a39a3b">arm_add_q31</a>(</div><div class="line"><a name="l02585"></a><span class="lineno"> 2585</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l02586"></a><span class="lineno"> 2586</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l02587"></a><span class="lineno"> 2587</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02588"></a><span class="lineno"> 2588</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02589"></a><span class="lineno"> 2589</span>&#160;</div><div class="line"><a name="l02599"></a><span class="lineno"> 2599</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7f975a472de286331134227c08aad826">arm_sub_f32</a>(</div><div class="line"><a name="l02600"></a><span class="lineno"> 2600</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l02601"></a><span class="lineno"> 2601</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l02602"></a><span class="lineno"> 2602</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02603"></a><span class="lineno"> 2603</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02604"></a><span class="lineno"> 2604</span>&#160;</div><div class="line"><a name="l02614"></a><span class="lineno"> 2614</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab09941de7dfeb247e5c29b406a435fcc">arm_sub_q7</a>(</div><div class="line"><a name="l02615"></a><span class="lineno"> 2615</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l02616"></a><span class="lineno"> 2616</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l02617"></a><span class="lineno"> 2617</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02618"></a><span class="lineno"> 2618</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02619"></a><span class="lineno"> 2619</span>&#160;</div><div class="line"><a name="l02629"></a><span class="lineno"> 2629</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a997a8ee93088d15bda23c325d455b588">arm_sub_q15</a>(</div><div class="line"><a name="l02630"></a><span class="lineno"> 2630</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l02631"></a><span class="lineno"> 2631</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l02632"></a><span class="lineno"> 2632</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02633"></a><span class="lineno"> 2633</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02634"></a><span class="lineno"> 2634</span>&#160;</div><div class="line"><a name="l02644"></a><span class="lineno"> 2644</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a28aa6908d092752144413e21933dc878">arm_sub_q31</a>(</div><div class="line"><a name="l02645"></a><span class="lineno"> 2645</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l02646"></a><span class="lineno"> 2646</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l02647"></a><span class="lineno"> 2647</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02648"></a><span class="lineno"> 2648</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02649"></a><span class="lineno"> 2649</span>&#160;</div><div class="line"><a name="l02659"></a><span class="lineno"> 2659</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3487af88b112f682ee90589cd419e123">arm_scale_f32</a>(</div><div class="line"><a name="l02660"></a><span class="lineno"> 2660</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02661"></a><span class="lineno"> 2661</span>&#160;  float32_t scale,</div><div class="line"><a name="l02662"></a><span class="lineno"> 2662</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02663"></a><span class="lineno"> 2663</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02664"></a><span class="lineno"> 2664</span>&#160;</div><div class="line"><a name="l02675"></a><span class="lineno"> 2675</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abc9fd3d37904c58df56492b351d21fb0">arm_scale_q7</a>(</div><div class="line"><a name="l02676"></a><span class="lineno"> 2676</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l02677"></a><span class="lineno"> 2677</span>&#160;  q7_t scaleFract,</div><div class="line"><a name="l02678"></a><span class="lineno"> 2678</span>&#160;  int8_t shift,</div><div class="line"><a name="l02679"></a><span class="lineno"> 2679</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02680"></a><span class="lineno"> 2680</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02681"></a><span class="lineno"> 2681</span>&#160;</div><div class="line"><a name="l02692"></a><span class="lineno"> 2692</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#afaac0e1927daffeb68a42719b53ea780">arm_scale_q15</a>(</div><div class="line"><a name="l02693"></a><span class="lineno"> 2693</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02694"></a><span class="lineno"> 2694</span>&#160;  q15_t scaleFract,</div><div class="line"><a name="l02695"></a><span class="lineno"> 2695</span>&#160;  int8_t shift,</div><div class="line"><a name="l02696"></a><span class="lineno"> 2696</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02697"></a><span class="lineno"> 2697</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02698"></a><span class="lineno"> 2698</span>&#160;</div><div class="line"><a name="l02709"></a><span class="lineno"> 2709</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a83e36cd82bf51ce35406a199e477d47c">arm_scale_q31</a>(</div><div class="line"><a name="l02710"></a><span class="lineno"> 2710</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02711"></a><span class="lineno"> 2711</span>&#160;  q31_t scaleFract,</div><div class="line"><a name="l02712"></a><span class="lineno"> 2712</span>&#160;  int8_t shift,</div><div class="line"><a name="l02713"></a><span class="lineno"> 2713</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02714"></a><span class="lineno"> 2714</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02715"></a><span class="lineno"> 2715</span>&#160;</div><div class="line"><a name="l02724"></a><span class="lineno"> 2724</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#adc30985e33fbf96802a5a7954dece3b1">arm_abs_q7</a>(</div><div class="line"><a name="l02725"></a><span class="lineno"> 2725</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l02726"></a><span class="lineno"> 2726</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02727"></a><span class="lineno"> 2727</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02728"></a><span class="lineno"> 2728</span>&#160;</div><div class="line"><a name="l02737"></a><span class="lineno"> 2737</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a421b6275f9d35f50286c0ff3beceff02">arm_abs_f32</a>(</div><div class="line"><a name="l02738"></a><span class="lineno"> 2738</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02739"></a><span class="lineno"> 2739</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02740"></a><span class="lineno"> 2740</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02741"></a><span class="lineno"> 2741</span>&#160;</div><div class="line"><a name="l02750"></a><span class="lineno"> 2750</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a39f92964c9b649ba252e26ebe7b95594">arm_abs_q15</a>(</div><div class="line"><a name="l02751"></a><span class="lineno"> 2751</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02752"></a><span class="lineno"> 2752</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02753"></a><span class="lineno"> 2753</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02754"></a><span class="lineno"> 2754</span>&#160;</div><div class="line"><a name="l02763"></a><span class="lineno"> 2763</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a59eafcdcdb52da60d37f20aec6ff4577">arm_abs_q31</a>(</div><div class="line"><a name="l02764"></a><span class="lineno"> 2764</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02765"></a><span class="lineno"> 2765</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02766"></a><span class="lineno"> 2766</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02767"></a><span class="lineno"> 2767</span>&#160;</div><div class="line"><a name="l02777"></a><span class="lineno"> 2777</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a55418d4362f6ba84c327f9b4f089a8c3">arm_dot_prod_f32</a>(</div><div class="line"><a name="l02778"></a><span class="lineno"> 2778</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l02779"></a><span class="lineno"> 2779</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l02780"></a><span class="lineno"> 2780</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l02781"></a><span class="lineno"> 2781</span>&#160;  float32_t * result);</div><div class="line"><a name="l02782"></a><span class="lineno"> 2782</span>&#160;</div><div class="line"><a name="l02792"></a><span class="lineno"> 2792</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9c3293a50ac7ec8ba928bf8e3aaea6c1">arm_dot_prod_q7</a>(</div><div class="line"><a name="l02793"></a><span class="lineno"> 2793</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l02794"></a><span class="lineno"> 2794</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l02795"></a><span class="lineno"> 2795</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l02796"></a><span class="lineno"> 2796</span>&#160;  q31_t * result);</div><div class="line"><a name="l02797"></a><span class="lineno"> 2797</span>&#160;</div><div class="line"><a name="l02807"></a><span class="lineno"> 2807</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a436d5bed28a4b73b24acbde436a3044b">arm_dot_prod_q15</a>(</div><div class="line"><a name="l02808"></a><span class="lineno"> 2808</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l02809"></a><span class="lineno"> 2809</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l02810"></a><span class="lineno"> 2810</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l02811"></a><span class="lineno"> 2811</span>&#160;  q63_t * result);</div><div class="line"><a name="l02812"></a><span class="lineno"> 2812</span>&#160;</div><div class="line"><a name="l02822"></a><span class="lineno"> 2822</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab15d8fa060fc85b4d948d091b7deaa11">arm_dot_prod_q31</a>(</div><div class="line"><a name="l02823"></a><span class="lineno"> 2823</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l02824"></a><span class="lineno"> 2824</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l02825"></a><span class="lineno"> 2825</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l02826"></a><span class="lineno"> 2826</span>&#160;  q63_t * result);</div><div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;</div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a47295d08a685f7de700a48dafb4db6fb">arm_shift_q7</a>(</div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;  int8_t shiftBits,</div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;</div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aa1757e53279780107acc92cf100adb61">arm_shift_q15</a>(</div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;  int8_t shiftBits,</div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;</div><div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a387dd8b7b87377378280978f16cdb13d">arm_shift_q31</a>(</div><div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;  int8_t shiftBits,</div><div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;</div><div class="line"><a name="l02882"></a><span class="lineno"> 2882</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a989dfae15235799d82f62ef9d356abb4">arm_offset_f32</a>(</div><div class="line"><a name="l02883"></a><span class="lineno"> 2883</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02884"></a><span class="lineno"> 2884</span>&#160;  float32_t offset,</div><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;</div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a00bd9cc17c5bf905e76c91ad50886393">arm_offset_q7</a>(</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;  q7_t offset,</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;</div><div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab4c1d2391b599549e5a06fdfbc2747bf">arm_offset_q15</a>(</div><div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;  q15_t offset,</div><div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;</div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac84ec42cbbebc5c197a87d0221819acf">arm_offset_q31</a>(</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;  q31_t offset,</div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;</div><div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2e169c4de6cc6e3ba4be9473531e6657">arm_negate_f32</a>(</div><div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02945"></a><span class="lineno"> 2945</span>&#160;</div><div class="line"><a name="l02954"></a><span class="lineno"> 2954</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aae78fc079a43bdaa3055f9b32e2a1f4c">arm_negate_q7</a>(</div><div class="line"><a name="l02955"></a><span class="lineno"> 2955</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l02956"></a><span class="lineno"> 2956</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;</div><div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a0239a833d72cf00290b9723c394e5042">arm_negate_q15</a>(</div><div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;</div><div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2784c6887686a73dc7c364e2e41c776c">arm_negate_q31</a>(</div><div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#add1f737e677e0e6ca31767c7001417b3">arm_copy_f32</a>(</div><div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160;</div><div class="line"><a name="l03003"></a><span class="lineno"> 3003</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a467579beda492aa92797529d794c88fb">arm_copy_q7</a>(</div><div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160;</div><div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a872ca4cfc18c680b8991ccd569a5fda0">arm_copy_q15</a>(</div><div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160;</div><div class="line"><a name="l03027"></a><span class="lineno"> 3027</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#addf70be7e3f87e535c324862b501f3f9">arm_copy_q31</a>(</div><div class="line"><a name="l03028"></a><span class="lineno"> 3028</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l03029"></a><span class="lineno"> 3029</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03030"></a><span class="lineno"> 3030</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2248e8d3901b4afb7827163132baad94">arm_fill_f32</a>(</div><div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;  float32_t value,</div><div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;</div><div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a0465cf326ada039ed792f94b033d9ec5">arm_fill_q7</a>(</div><div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;  q7_t value,</div><div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160;</div><div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a76b21c32a3783a2b3334d930a646e5d8">arm_fill_q15</a>(</div><div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;  q15_t value,</div><div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;</div><div class="line"><a name="l03074"></a><span class="lineno"> 3074</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a69cc781cf337bd0a31bb85c772a35f7f">arm_fill_q31</a>(</div><div class="line"><a name="l03075"></a><span class="lineno"> 3075</span>&#160;  q31_t value,</div><div class="line"><a name="l03076"></a><span class="lineno"> 3076</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03077"></a><span class="lineno"> 3077</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03078"></a><span class="lineno"> 3078</span>&#160;</div><div class="line"><a name="l03089"></a><span class="lineno"> 3089</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3f860dc98c6fc4cafc421e4a2aed3c89">arm_conv_f32</a>(</div><div class="line"><a name="l03090"></a><span class="lineno"> 3090</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l03091"></a><span class="lineno"> 3091</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03092"></a><span class="lineno"> 3092</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l03093"></a><span class="lineno"> 3093</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03094"></a><span class="lineno"> 3094</span>&#160;  float32_t * pDst);</div><div class="line"><a name="l03095"></a><span class="lineno"> 3095</span>&#160;</div><div class="line"><a name="l03096"></a><span class="lineno"> 3096</span>&#160;</div><div class="line"><a name="l03110"></a><span class="lineno"> 3110</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac77dbcaef5c754cac27eab96c4753a3c">arm_conv_opt_q15</a>(</div><div class="line"><a name="l03111"></a><span class="lineno"> 3111</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03112"></a><span class="lineno"> 3112</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03113"></a><span class="lineno"> 3113</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03114"></a><span class="lineno"> 3114</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03115"></a><span class="lineno"> 3115</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03116"></a><span class="lineno"> 3116</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03117"></a><span class="lineno"> 3117</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03118"></a><span class="lineno"> 3118</span>&#160;</div><div class="line"><a name="l03119"></a><span class="lineno"> 3119</span>&#160;</div><div class="line"><a name="l03130"></a><span class="lineno"> 3130</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#accd6a89b0ff7a94df64610598e6e6893">arm_conv_q15</a>(</div><div class="line"><a name="l03131"></a><span class="lineno"> 3131</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03132"></a><span class="lineno"> 3132</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03133"></a><span class="lineno"> 3133</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03134"></a><span class="lineno"> 3134</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03135"></a><span class="lineno"> 3135</span>&#160;  q15_t * pDst);</div><div class="line"><a name="l03136"></a><span class="lineno"> 3136</span>&#160;</div><div class="line"><a name="l03147"></a><span class="lineno"> 3147</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad75ca978ce906e04abdf86a8d76306d4">arm_conv_fast_q15</a>(</div><div class="line"><a name="l03148"></a><span class="lineno"> 3148</span>&#160;          q15_t * pSrcA,</div><div class="line"><a name="l03149"></a><span class="lineno"> 3149</span>&#160;          uint32_t srcALen,</div><div class="line"><a name="l03150"></a><span class="lineno"> 3150</span>&#160;          q15_t * pSrcB,</div><div class="line"><a name="l03151"></a><span class="lineno"> 3151</span>&#160;          uint32_t srcBLen,</div><div class="line"><a name="l03152"></a><span class="lineno"> 3152</span>&#160;          q15_t * pDst);</div><div class="line"><a name="l03153"></a><span class="lineno"> 3153</span>&#160;</div><div class="line"><a name="l03166"></a><span class="lineno"> 3166</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af16f490d245391ec18a42adc73d6d749">arm_conv_fast_opt_q15</a>(</div><div class="line"><a name="l03167"></a><span class="lineno"> 3167</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03168"></a><span class="lineno"> 3168</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03169"></a><span class="lineno"> 3169</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03170"></a><span class="lineno"> 3170</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03171"></a><span class="lineno"> 3171</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03172"></a><span class="lineno"> 3172</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03173"></a><span class="lineno"> 3173</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03174"></a><span class="lineno"> 3174</span>&#160;</div><div class="line"><a name="l03175"></a><span class="lineno"> 3175</span>&#160;</div><div class="line"><a name="l03176"></a><span class="lineno"> 3176</span>&#160;</div><div class="line"><a name="l03187"></a><span class="lineno"> 3187</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a946b58da734f1e4e78c91fcaab4b12b6">arm_conv_q31</a>(</div><div class="line"><a name="l03188"></a><span class="lineno"> 3188</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l03189"></a><span class="lineno"> 3189</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03190"></a><span class="lineno"> 3190</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l03191"></a><span class="lineno"> 3191</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03192"></a><span class="lineno"> 3192</span>&#160;  q31_t * pDst);</div><div class="line"><a name="l03193"></a><span class="lineno"> 3193</span>&#160;</div><div class="line"><a name="l03204"></a><span class="lineno"> 3204</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a51112dcdf9b3624eb05182cdc4da9ec0">arm_conv_fast_q31</a>(</div><div class="line"><a name="l03205"></a><span class="lineno"> 3205</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l03206"></a><span class="lineno"> 3206</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03207"></a><span class="lineno"> 3207</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l03208"></a><span class="lineno"> 3208</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03209"></a><span class="lineno"> 3209</span>&#160;  q31_t * pDst);</div><div class="line"><a name="l03210"></a><span class="lineno"> 3210</span>&#160;</div><div class="line"><a name="l03211"></a><span class="lineno"> 3211</span>&#160;</div><div class="line"><a name="l03224"></a><span class="lineno"> 3224</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a4c7cf073e89d6d57cc4e711f078c3f68">arm_conv_opt_q7</a>(</div><div class="line"><a name="l03225"></a><span class="lineno"> 3225</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l03226"></a><span class="lineno"> 3226</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03227"></a><span class="lineno"> 3227</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l03228"></a><span class="lineno"> 3228</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03229"></a><span class="lineno"> 3229</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l03230"></a><span class="lineno"> 3230</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03231"></a><span class="lineno"> 3231</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03232"></a><span class="lineno"> 3232</span>&#160;</div><div class="line"><a name="l03233"></a><span class="lineno"> 3233</span>&#160;</div><div class="line"><a name="l03234"></a><span class="lineno"> 3234</span>&#160;</div><div class="line"><a name="l03245"></a><span class="lineno"> 3245</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae2070cb792a167e78dbad8d06b97cdab">arm_conv_q7</a>(</div><div class="line"><a name="l03246"></a><span class="lineno"> 3246</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l03247"></a><span class="lineno"> 3247</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03248"></a><span class="lineno"> 3248</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l03249"></a><span class="lineno"> 3249</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03250"></a><span class="lineno"> 3250</span>&#160;  q7_t * pDst);</div><div class="line"><a name="l03251"></a><span class="lineno"> 3251</span>&#160;</div><div class="line"><a name="l03252"></a><span class="lineno"> 3252</span>&#160;</div><div class="line"><a name="l03265"></a><span class="lineno"> 3265</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a16d10f32072cd79fc5fb6e785df45f5e">arm_conv_partial_f32</a>(</div><div class="line"><a name="l03266"></a><span class="lineno"> 3266</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l03267"></a><span class="lineno"> 3267</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03268"></a><span class="lineno"> 3268</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l03269"></a><span class="lineno"> 3269</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03270"></a><span class="lineno"> 3270</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03271"></a><span class="lineno"> 3271</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03272"></a><span class="lineno"> 3272</span>&#160;  uint32_t numPoints);</div><div class="line"><a name="l03273"></a><span class="lineno"> 3273</span>&#160;</div><div class="line"><a name="l03288"></a><span class="lineno"> 3288</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a834b23b4ade8682beeb55778399101f8">arm_conv_partial_opt_q15</a>(</div><div class="line"><a name="l03289"></a><span class="lineno"> 3289</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03290"></a><span class="lineno"> 3290</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03291"></a><span class="lineno"> 3291</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03292"></a><span class="lineno"> 3292</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03293"></a><span class="lineno"> 3293</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03294"></a><span class="lineno"> 3294</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03295"></a><span class="lineno"> 3295</span>&#160;  uint32_t numPoints,</div><div class="line"><a name="l03296"></a><span class="lineno"> 3296</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03297"></a><span class="lineno"> 3297</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03298"></a><span class="lineno"> 3298</span>&#160;</div><div class="line"><a name="l03299"></a><span class="lineno"> 3299</span>&#160;</div><div class="line"><a name="l03312"></a><span class="lineno"> 3312</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a209a2a913a0c5e5679c5988da8f46b03">arm_conv_partial_q15</a>(</div><div class="line"><a name="l03313"></a><span class="lineno"> 3313</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03314"></a><span class="lineno"> 3314</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03315"></a><span class="lineno"> 3315</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03316"></a><span class="lineno"> 3316</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03317"></a><span class="lineno"> 3317</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03318"></a><span class="lineno"> 3318</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03319"></a><span class="lineno"> 3319</span>&#160;  uint32_t numPoints);</div><div class="line"><a name="l03320"></a><span class="lineno"> 3320</span>&#160;</div><div class="line"><a name="l03333"></a><span class="lineno"> 3333</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a1e4d43385cb62262a78c6752fe1fafb2">arm_conv_partial_fast_q15</a>(</div><div class="line"><a name="l03334"></a><span class="lineno"> 3334</span>&#160;                   q15_t * pSrcA,</div><div class="line"><a name="l03335"></a><span class="lineno"> 3335</span>&#160;                   uint32_t srcALen,</div><div class="line"><a name="l03336"></a><span class="lineno"> 3336</span>&#160;                   q15_t * pSrcB,</div><div class="line"><a name="l03337"></a><span class="lineno"> 3337</span>&#160;                   uint32_t srcBLen,</div><div class="line"><a name="l03338"></a><span class="lineno"> 3338</span>&#160;                   q15_t * pDst,</div><div class="line"><a name="l03339"></a><span class="lineno"> 3339</span>&#160;                   uint32_t firstIndex,</div><div class="line"><a name="l03340"></a><span class="lineno"> 3340</span>&#160;                   uint32_t numPoints);</div><div class="line"><a name="l03341"></a><span class="lineno"> 3341</span>&#160;</div><div class="line"><a name="l03342"></a><span class="lineno"> 3342</span>&#160;</div><div class="line"><a name="l03357"></a><span class="lineno"> 3357</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a3de9c4ddcc7886de25b70d875099a8d9">arm_conv_partial_fast_opt_q15</a>(</div><div class="line"><a name="l03358"></a><span class="lineno"> 3358</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l03359"></a><span class="lineno"> 3359</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03360"></a><span class="lineno"> 3360</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l03361"></a><span class="lineno"> 3361</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03362"></a><span class="lineno"> 3362</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03363"></a><span class="lineno"> 3363</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03364"></a><span class="lineno"> 3364</span>&#160;  uint32_t numPoints,</div><div class="line"><a name="l03365"></a><span class="lineno"> 3365</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03366"></a><span class="lineno"> 3366</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03367"></a><span class="lineno"> 3367</span>&#160;</div><div class="line"><a name="l03368"></a><span class="lineno"> 3368</span>&#160;</div><div class="line"><a name="l03381"></a><span class="lineno"> 3381</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a78e73a5f02d103168a09821fb461e77a">arm_conv_partial_q31</a>(</div><div class="line"><a name="l03382"></a><span class="lineno"> 3382</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l03383"></a><span class="lineno"> 3383</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03384"></a><span class="lineno"> 3384</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l03385"></a><span class="lineno"> 3385</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03386"></a><span class="lineno"> 3386</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03387"></a><span class="lineno"> 3387</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03388"></a><span class="lineno"> 3388</span>&#160;  uint32_t numPoints);</div><div class="line"><a name="l03389"></a><span class="lineno"> 3389</span>&#160;</div><div class="line"><a name="l03390"></a><span class="lineno"> 3390</span>&#160;</div><div class="line"><a name="l03403"></a><span class="lineno"> 3403</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a10c5294cda8c4985386f4e3944be7650">arm_conv_partial_fast_q31</a>(</div><div class="line"><a name="l03404"></a><span class="lineno"> 3404</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l03405"></a><span class="lineno"> 3405</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03406"></a><span class="lineno"> 3406</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l03407"></a><span class="lineno"> 3407</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03408"></a><span class="lineno"> 3408</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03409"></a><span class="lineno"> 3409</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03410"></a><span class="lineno"> 3410</span>&#160;  uint32_t numPoints);</div><div class="line"><a name="l03411"></a><span class="lineno"> 3411</span>&#160;</div><div class="line"><a name="l03412"></a><span class="lineno"> 3412</span>&#160;</div><div class="line"><a name="l03427"></a><span class="lineno"> 3427</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a3707e16af1435b215840006a7ab0c98f">arm_conv_partial_opt_q7</a>(</div><div class="line"><a name="l03428"></a><span class="lineno"> 3428</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l03429"></a><span class="lineno"> 3429</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03430"></a><span class="lineno"> 3430</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l03431"></a><span class="lineno"> 3431</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03432"></a><span class="lineno"> 3432</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l03433"></a><span class="lineno"> 3433</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03434"></a><span class="lineno"> 3434</span>&#160;  uint32_t numPoints,</div><div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l03436"></a><span class="lineno"> 3436</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l03437"></a><span class="lineno"> 3437</span>&#160;</div><div class="line"><a name="l03438"></a><span class="lineno"> 3438</span>&#160;</div><div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a8567259fe18396dd972242c41741ebf4">arm_conv_partial_q7</a>(</div><div class="line"><a name="l03452"></a><span class="lineno"> 3452</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l03454"></a><span class="lineno"> 3454</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l03455"></a><span class="lineno"> 3455</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l03456"></a><span class="lineno"> 3456</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l03457"></a><span class="lineno"> 3457</span>&#160;  uint32_t firstIndex,</div><div class="line"><a name="l03458"></a><span class="lineno"> 3458</span>&#160;  uint32_t numPoints);</div><div class="line"><a name="l03459"></a><span class="lineno"> 3459</span>&#160;</div><div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;</div><div class="line"><a name="l03461"></a><span class="lineno"> 3461</span>&#160;</div><div class="line"><a name="l03466"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q15.xhtml"> 3466</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03467"></a><span class="lineno"> 3467</span>&#160;  {</div><div class="line"><a name="l03468"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q15.xhtml#aad9320284218b3aa378527ea518cf093"> 3468</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__decimate__instance__q15.xhtml#aad9320284218b3aa378527ea518cf093">M</a>;                      </div><div class="line"><a name="l03469"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q15.xhtml#ac1e9844488ec717da334fbd4c4f41990"> 3469</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__decimate__instance__q15.xhtml#ac1e9844488ec717da334fbd4c4f41990">numTaps</a>;               </div><div class="line"><a name="l03470"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q15.xhtml#a01cacab67e73945e8289075598ede14d"> 3470</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__decimate__instance__q15.xhtml#a01cacab67e73945e8289075598ede14d">pCoeffs</a>;                  </div><div class="line"><a name="l03471"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q15.xhtml#a3f7b5184bb28853ef401b001df121047"> 3471</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__decimate__instance__q15.xhtml#a3f7b5184bb28853ef401b001df121047">pState</a>;                   </div><div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;  } <a class="code" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a>;</div><div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;</div><div class="line"><a name="l03478"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q31.xhtml"> 3478</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03479"></a><span class="lineno"> 3479</span>&#160;  {</div><div class="line"><a name="l03480"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q31.xhtml#ad3d6936c36303b30dd38f1eddf248ae5"> 3480</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__decimate__instance__q31.xhtml#ad3d6936c36303b30dd38f1eddf248ae5">M</a>;                  </div><div class="line"><a name="l03481"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q31.xhtml#a37915d42b0dc5e3057ebe83110798482"> 3481</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__decimate__instance__q31.xhtml#a37915d42b0dc5e3057ebe83110798482">numTaps</a>;           </div><div class="line"><a name="l03482"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q31.xhtml#a030d0391538c2481c5b348fd09a952ff"> 3482</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__decimate__instance__q31.xhtml#a030d0391538c2481c5b348fd09a952ff">pCoeffs</a>;              </div><div class="line"><a name="l03483"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__q31.xhtml#a0ef0ef9e265f7ab873cfc6daa7593fdb"> 3483</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__decimate__instance__q31.xhtml#a0ef0ef9e265f7ab873cfc6daa7593fdb">pState</a>;               </div><div class="line"><a name="l03485"></a><span class="lineno"> 3485</span>&#160;  } <a class="code" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a>;</div><div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;</div><div class="line"><a name="l03491"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__f32.xhtml"> 3491</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03492"></a><span class="lineno"> 3492</span>&#160;  {</div><div class="line"><a name="l03493"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__f32.xhtml#a76a8b2161731638eb3d67f277919f95d"> 3493</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__decimate__instance__f32.xhtml#a76a8b2161731638eb3d67f277919f95d">M</a>;                          </div><div class="line"><a name="l03494"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__f32.xhtml#a2aa2986129db8affef03ede88dd45a03"> 3494</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__decimate__instance__f32.xhtml#a2aa2986129db8affef03ede88dd45a03">numTaps</a>;                   </div><div class="line"><a name="l03495"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__f32.xhtml#a268a8b0e80a3d9764baf33e4bc10dde2"> 3495</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__decimate__instance__f32.xhtml#a268a8b0e80a3d9764baf33e4bc10dde2">pCoeffs</a>;                  </div><div class="line"><a name="l03496"></a><span class="lineno"><a class="line" href="structarm__fir__decimate__instance__f32.xhtml#a5bddf29aaaf2011d2e3bcec59a83f633"> 3496</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__decimate__instance__f32.xhtml#a5bddf29aaaf2011d2e3bcec59a83f633">pState</a>;                   </div><div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;  } <a class="code" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a>;</div><div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;</div><div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160;</div><div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;</div><div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a25aa3d58a90bf91b6a82272a0bc518f7">arm_fir_decimate_f32</a>(</div><div class="line"><a name="l03512"></a><span class="lineno"> 3512</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> * S,</div><div class="line"><a name="l03513"></a><span class="lineno"> 3513</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l03514"></a><span class="lineno"> 3514</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03515"></a><span class="lineno"> 3515</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03516"></a><span class="lineno"> 3516</span>&#160;</div><div class="line"><a name="l03517"></a><span class="lineno"> 3517</span>&#160;</div><div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#aaa2524b08220fd6c3f753e692ffc7d3b">arm_fir_decimate_init_f32</a>(</div><div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;  <a class="code" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> * S,</div><div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03533"></a><span class="lineno"> 3533</span>&#160;  uint8_t M,</div><div class="line"><a name="l03534"></a><span class="lineno"> 3534</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l03535"></a><span class="lineno"> 3535</span>&#160;  float32_t * pState,</div><div class="line"><a name="l03536"></a><span class="lineno"> 3536</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160;</div><div class="line"><a name="l03547"></a><span class="lineno"> 3547</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab8bef6d0f6a26fdbfce9485727713ce5">arm_fir_decimate_q15</a>(</div><div class="line"><a name="l03548"></a><span class="lineno"> 3548</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> * S,</div><div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;</div><div class="line"><a name="l03562"></a><span class="lineno"> 3562</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3f434c9a5d3b4e68061feac0714ea2ac">arm_fir_decimate_fast_q15</a>(</div><div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> * S,</div><div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l03565"></a><span class="lineno"> 3565</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03566"></a><span class="lineno"> 3566</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03567"></a><span class="lineno"> 3567</span>&#160;</div><div class="line"><a name="l03568"></a><span class="lineno"> 3568</span>&#160;</div><div class="line"><a name="l03569"></a><span class="lineno"> 3569</span>&#160;</div><div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ada660e54b93d5d32178c6f5e1c6f368d">arm_fir_decimate_init_q15</a>(</div><div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;  <a class="code" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> * S,</div><div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;  uint8_t M,</div><div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160;  q15_t * pState,</div><div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03589"></a><span class="lineno"> 3589</span>&#160;</div><div class="line"><a name="l03599"></a><span class="lineno"> 3599</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aef8e86add28f15fdc5ecc484e9dd7a4e">arm_fir_decimate_q31</a>(</div><div class="line"><a name="l03600"></a><span class="lineno"> 3600</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> * S,</div><div class="line"><a name="l03601"></a><span class="lineno"> 3601</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l03602"></a><span class="lineno"> 3602</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03603"></a><span class="lineno"> 3603</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03604"></a><span class="lineno"> 3604</span>&#160;</div><div class="line"><a name="l03614"></a><span class="lineno"> 3614</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3c18cc3d0548a410c577f1bead9582b7">arm_fir_decimate_fast_q31</a>(</div><div class="line"><a name="l03615"></a><span class="lineno"> 3615</span>&#160;  <a class="code" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> * S,</div><div class="line"><a name="l03616"></a><span class="lineno"> 3616</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l03617"></a><span class="lineno"> 3617</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03618"></a><span class="lineno"> 3618</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03619"></a><span class="lineno"> 3619</span>&#160;</div><div class="line"><a name="l03620"></a><span class="lineno"> 3620</span>&#160;</div><div class="line"><a name="l03633"></a><span class="lineno"> 3633</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a9ed47c4e0f58affa935d84e0508a7f39">arm_fir_decimate_init_q31</a>(</div><div class="line"><a name="l03634"></a><span class="lineno"> 3634</span>&#160;  <a class="code" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> * S,</div><div class="line"><a name="l03635"></a><span class="lineno"> 3635</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03636"></a><span class="lineno"> 3636</span>&#160;  uint8_t M,</div><div class="line"><a name="l03637"></a><span class="lineno"> 3637</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l03638"></a><span class="lineno"> 3638</span>&#160;  q31_t * pState,</div><div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160;</div><div class="line"><a name="l03641"></a><span class="lineno"> 3641</span>&#160;</div><div class="line"><a name="l03642"></a><span class="lineno"> 3642</span>&#160;</div><div class="line"><a name="l03647"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q15.xhtml"> 3647</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;  {</div><div class="line"><a name="l03649"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q15.xhtml#a5431bdc079e72a973b51d359f7f13603"> 3649</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__interpolate__instance__q15.xhtml#a5431bdc079e72a973b51d359f7f13603">L</a>;                      </div><div class="line"><a name="l03650"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q15.xhtml#ad5178a02a697a77e0d0e60705d9f0a19"> 3650</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__interpolate__instance__q15.xhtml#ad5178a02a697a77e0d0e60705d9f0a19">phaseLength</a>;           </div><div class="line"><a name="l03651"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q15.xhtml#a767d91d61d4c0beeddd4325d28d28e24"> 3651</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__interpolate__instance__q15.xhtml#a767d91d61d4c0beeddd4325d28d28e24">pCoeffs</a>;                 </div><div class="line"><a name="l03652"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q15.xhtml#a26b864363fa47954248f2590e3a82a3c"> 3652</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__interpolate__instance__q15.xhtml#a26b864363fa47954248f2590e3a82a3c">pState</a>;                  </div><div class="line"><a name="l03653"></a><span class="lineno"> 3653</span>&#160;  } <a class="code" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a>;</div><div class="line"><a name="l03654"></a><span class="lineno"> 3654</span>&#160;</div><div class="line"><a name="l03659"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q31.xhtml"> 3659</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03660"></a><span class="lineno"> 3660</span>&#160;  {</div><div class="line"><a name="l03661"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q31.xhtml#a5cdf0a631cb74e0e9588c388abe5235c"> 3661</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__interpolate__instance__q31.xhtml#a5cdf0a631cb74e0e9588c388abe5235c">L</a>;                      </div><div class="line"><a name="l03662"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q31.xhtml#a5d243796584afc7cd6c557f00b7acca5"> 3662</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__interpolate__instance__q31.xhtml#a5d243796584afc7cd6c557f00b7acca5">phaseLength</a>;           </div><div class="line"><a name="l03663"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q31.xhtml#afa719433687e1936ec3403d0d32f06e6"> 3663</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__interpolate__instance__q31.xhtml#afa719433687e1936ec3403d0d32f06e6">pCoeffs</a>;                  </div><div class="line"><a name="l03664"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__q31.xhtml#addde04514b6e6ac72be3d609f0398b1a"> 3664</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__interpolate__instance__q31.xhtml#addde04514b6e6ac72be3d609f0398b1a">pState</a>;                   </div><div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;  } <a class="code" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a>;</div><div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;</div><div class="line"><a name="l03671"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__f32.xhtml"> 3671</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03672"></a><span class="lineno"> 3672</span>&#160;  {</div><div class="line"><a name="l03673"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__f32.xhtml#ae6f94dcc0ccd8aa4bc699b20985d9df5"> 3673</a></span>&#160;    uint8_t <a class="code" href="structarm__fir__interpolate__instance__f32.xhtml#ae6f94dcc0ccd8aa4bc699b20985d9df5">L</a>;                     </div><div class="line"><a name="l03674"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__f32.xhtml#a389e669e13ec56292a70db8e92194b12"> 3674</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__interpolate__instance__f32.xhtml#a389e669e13ec56292a70db8e92194b12">phaseLength</a>;          </div><div class="line"><a name="l03675"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__f32.xhtml#a86053b715980a93c9df630d6de5bb63c"> 3675</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__interpolate__instance__f32.xhtml#a86053b715980a93c9df630d6de5bb63c">pCoeffs</a>;             </div><div class="line"><a name="l03676"></a><span class="lineno"><a class="line" href="structarm__fir__interpolate__instance__f32.xhtml#a42a8ba1bda85fa86d7b6c84d3da4c75b"> 3676</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__interpolate__instance__f32.xhtml#a42a8ba1bda85fa86d7b6c84d3da4c75b">pState</a>;              </div><div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;  } <a class="code" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a>;</div><div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;</div><div class="line"><a name="l03679"></a><span class="lineno"> 3679</span>&#160;</div><div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7962b5f9636e54899f75d0c5936800b5">arm_fir_interpolate_q15</a>(</div><div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> * S,</div><div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;</div><div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;</div><div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a18e8c4a74ff1d0f88876cc63f675288f">arm_fir_interpolate_init_q15</a>(</div><div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160;  <a class="code" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> * S,</div><div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;  uint8_t L,</div><div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160;  q15_t * pState,</div><div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;</div><div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aac9c0f01ed91c53f7083995d7411f5ee">arm_fir_interpolate_q31</a>(</div><div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> * S,</div><div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;</div><div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a9d0ba38ce9f12a850dd242731d307476">arm_fir_interpolate_init_q31</a>(</div><div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;  <a class="code" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> * S,</div><div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;  uint8_t L,</div><div class="line"><a name="l03746"></a><span class="lineno"> 3746</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03747"></a><span class="lineno"> 3747</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l03748"></a><span class="lineno"> 3748</span>&#160;  q31_t * pState,</div><div class="line"><a name="l03749"></a><span class="lineno"> 3749</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03750"></a><span class="lineno"> 3750</span>&#160;</div><div class="line"><a name="l03751"></a><span class="lineno"> 3751</span>&#160;</div><div class="line"><a name="l03761"></a><span class="lineno"> 3761</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9cae104c5cf60b4e7671c82264a8c12e">arm_fir_interpolate_f32</a>(</div><div class="line"><a name="l03762"></a><span class="lineno"> 3762</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> * S,</div><div class="line"><a name="l03763"></a><span class="lineno"> 3763</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;</div><div class="line"><a name="l03779"></a><span class="lineno"> 3779</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a0f857457a815946f7e4dca989ebf6ff6">arm_fir_interpolate_init_f32</a>(</div><div class="line"><a name="l03780"></a><span class="lineno"> 3780</span>&#160;  <a class="code" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> * S,</div><div class="line"><a name="l03781"></a><span class="lineno"> 3781</span>&#160;  uint8_t L,</div><div class="line"><a name="l03782"></a><span class="lineno"> 3782</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l03783"></a><span class="lineno"> 3783</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l03784"></a><span class="lineno"> 3784</span>&#160;  float32_t * pState,</div><div class="line"><a name="l03785"></a><span class="lineno"> 3785</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03786"></a><span class="lineno"> 3786</span>&#160;</div><div class="line"><a name="l03791"></a><span class="lineno"><a class="line" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml"> 3791</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03792"></a><span class="lineno"> 3792</span>&#160;  {</div><div class="line"><a name="l03793"></a><span class="lineno"><a class="line" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#ad7cb9a9f5df8f4fcfc7a0b633672e574"> 3793</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#ad7cb9a9f5df8f4fcfc7a0b633672e574">numStages</a>;       </div><div class="line"><a name="l03794"></a><span class="lineno"><a class="line" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a4c899cdfaf2bb955323e93637bd662e0"> 3794</a></span>&#160;    q63_t *<a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a4c899cdfaf2bb955323e93637bd662e0">pState</a>;           </div><div class="line"><a name="l03795"></a><span class="lineno"><a class="line" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a490462d6ebe0fecfb6acbf51bed22ecf"> 3795</a></span>&#160;    q31_t *<a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a490462d6ebe0fecfb6acbf51bed22ecf">pCoeffs</a>;          </div><div class="line"><a name="l03796"></a><span class="lineno"><a class="line" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a8e9d58e8dba5aa3b2fc4f36d2ed07996"> 3796</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a8e9d58e8dba5aa3b2fc4f36d2ed07996">postShift</a>;       </div><div class="line"><a name="l03798"></a><span class="lineno"> 3798</span>&#160;  } <a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a>;</div><div class="line"><a name="l03799"></a><span class="lineno"> 3799</span>&#160;</div><div class="line"><a name="l03800"></a><span class="lineno"> 3800</span>&#160;</div><div class="line"><a name="l03809"></a><span class="lineno"> 3809</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a953a83e69685de6575cff37feb358a93">arm_biquad_cas_df1_32x64_q31</a>(</div><div class="line"><a name="l03810"></a><span class="lineno"> 3810</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> * S,</div><div class="line"><a name="l03811"></a><span class="lineno"> 3811</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l03812"></a><span class="lineno"> 3812</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l03813"></a><span class="lineno"> 3813</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03814"></a><span class="lineno"> 3814</span>&#160;</div><div class="line"><a name="l03815"></a><span class="lineno"> 3815</span>&#160;</div><div class="line"><a name="l03825"></a><span class="lineno"> 3825</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a44900cecb8083afcaabf905ffcd656bb">arm_biquad_cas_df1_32x64_init_q31</a>(</div><div class="line"><a name="l03826"></a><span class="lineno"> 3826</span>&#160;  <a class="code" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> * S,</div><div class="line"><a name="l03827"></a><span class="lineno"> 3827</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l03828"></a><span class="lineno"> 3828</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l03829"></a><span class="lineno"> 3829</span>&#160;  q63_t * pState,</div><div class="line"><a name="l03830"></a><span class="lineno"> 3830</span>&#160;  uint8_t postShift);</div><div class="line"><a name="l03831"></a><span class="lineno"> 3831</span>&#160;</div><div class="line"><a name="l03832"></a><span class="lineno"> 3832</span>&#160;</div><div class="line"><a name="l03833"></a><span class="lineno"> 3833</span>&#160;</div><div class="line"><a name="l03838"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml"> 3838</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03839"></a><span class="lineno"> 3839</span>&#160;  {</div><div class="line"><a name="l03840"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a4d17958c33c3d0a905f974bac50f033f"> 3840</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a4d17958c33c3d0a905f974bac50f033f">numStages</a>;         </div><div class="line"><a name="l03841"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a24d223addfd926a7177088cf2efe76b1"> 3841</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a24d223addfd926a7177088cf2efe76b1">pState</a>;         </div><div class="line"><a name="l03842"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a49a24fe1b6ad3b0b26779c32d8d80b2e"> 3842</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a49a24fe1b6ad3b0b26779c32d8d80b2e">pCoeffs</a>;        </div><div class="line"><a name="l03843"></a><span class="lineno"> 3843</span>&#160;  } <a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a>;</div><div class="line"><a name="l03844"></a><span class="lineno"> 3844</span>&#160;</div><div class="line"><a name="l03845"></a><span class="lineno"> 3845</span>&#160;</div><div class="line"><a name="l03846"></a><span class="lineno"> 3846</span>&#160;</div><div class="line"><a name="l03851"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml"> 3851</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03852"></a><span class="lineno"> 3852</span>&#160;  {</div><div class="line"><a name="l03853"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a5655328252da5c2c2425ceed253bc4f1"> 3853</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a5655328252da5c2c2425ceed253bc4f1">numStages</a>;         </div><div class="line"><a name="l03854"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a2cb00048bb1fe957a03c1ff56dfaf8f0"> 3854</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a2cb00048bb1fe957a03c1ff56dfaf8f0">pState</a>;         </div><div class="line"><a name="l03855"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a58b15644de62a632c5e9d4a563569dc6"> 3855</a></span>&#160;    float32_t *<a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a58b15644de62a632c5e9d4a563569dc6">pCoeffs</a>;        </div><div class="line"><a name="l03856"></a><span class="lineno"> 3856</span>&#160;  } <a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a>;</div><div class="line"><a name="l03857"></a><span class="lineno"> 3857</span>&#160;</div><div class="line"><a name="l03858"></a><span class="lineno"> 3858</span>&#160;</div><div class="line"><a name="l03859"></a><span class="lineno"> 3859</span>&#160;</div><div class="line"><a name="l03864"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml"> 3864</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03865"></a><span class="lineno"> 3865</span>&#160;  {</div><div class="line"><a name="l03866"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ad55380ff835b533aa5168f836db8a4de"> 3866</a></span>&#160;    uint8_t <a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ad55380ff835b533aa5168f836db8a4de">numStages</a>;         </div><div class="line"><a name="l03867"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#a0bde57b618e3f9059b23b0de64e12ce3"> 3867</a></span>&#160;    float64_t *<a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#a0bde57b618e3f9059b23b0de64e12ce3">pState</a>;         </div><div class="line"><a name="l03868"></a><span class="lineno"><a class="line" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ae2f0180f9038c0393e1d6921bb3b878b"> 3868</a></span>&#160;    float64_t *<a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ae2f0180f9038c0393e1d6921bb3b878b">pCoeffs</a>;        </div><div class="line"><a name="l03869"></a><span class="lineno"> 3869</span>&#160;  } <a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a>;</div><div class="line"><a name="l03870"></a><span class="lineno"> 3870</span>&#160;</div><div class="line"><a name="l03871"></a><span class="lineno"> 3871</span>&#160;</div><div class="line"><a name="l03881"></a><span class="lineno"> 3881</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a646c25998bf35991c60299b1431460f7">arm_biquad_cascade_df2T_f32</a>(</div><div class="line"><a name="l03882"></a><span class="lineno"> 3882</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> * S,</div><div class="line"><a name="l03883"></a><span class="lineno"> 3883</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l03884"></a><span class="lineno"> 3884</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03885"></a><span class="lineno"> 3885</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03886"></a><span class="lineno"> 3886</span>&#160;</div><div class="line"><a name="l03887"></a><span class="lineno"> 3887</span>&#160;</div><div class="line"><a name="l03897"></a><span class="lineno"> 3897</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aeff8ab405c3db567ae26344ec7539911">arm_biquad_cascade_stereo_df2T_f32</a>(</div><div class="line"><a name="l03898"></a><span class="lineno"> 3898</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> * S,</div><div class="line"><a name="l03899"></a><span class="lineno"> 3899</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l03900"></a><span class="lineno"> 3900</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l03901"></a><span class="lineno"> 3901</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03902"></a><span class="lineno"> 3902</span>&#160;</div><div class="line"><a name="l03912"></a><span class="lineno"> 3912</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad146359b7ab526d6ebc81d8aca530f78">arm_biquad_cascade_df2T_f64</a>(</div><div class="line"><a name="l03913"></a><span class="lineno"> 3913</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> * S,</div><div class="line"><a name="l03914"></a><span class="lineno"> 3914</span>&#160;  float64_t * pSrc,</div><div class="line"><a name="l03915"></a><span class="lineno"> 3915</span>&#160;  float64_t * pDst,</div><div class="line"><a name="l03916"></a><span class="lineno"> 3916</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l03917"></a><span class="lineno"> 3917</span>&#160;</div><div class="line"><a name="l03918"></a><span class="lineno"> 3918</span>&#160;</div><div class="line"><a name="l03928"></a><span class="lineno"> 3928</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a70eaddf317a4a8bde6bd6a97df67fedd">arm_biquad_cascade_df2T_init_f32</a>(</div><div class="line"><a name="l03929"></a><span class="lineno"> 3929</span>&#160;  <a class="code" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> * S,</div><div class="line"><a name="l03930"></a><span class="lineno"> 3930</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l03931"></a><span class="lineno"> 3931</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l03932"></a><span class="lineno"> 3932</span>&#160;  float32_t * pState);</div><div class="line"><a name="l03933"></a><span class="lineno"> 3933</span>&#160;</div><div class="line"><a name="l03934"></a><span class="lineno"> 3934</span>&#160;</div><div class="line"><a name="l03944"></a><span class="lineno"> 3944</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a405197c89fe4d34003efd23786296425">arm_biquad_cascade_stereo_df2T_init_f32</a>(</div><div class="line"><a name="l03945"></a><span class="lineno"> 3945</span>&#160;  <a class="code" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> * S,</div><div class="line"><a name="l03946"></a><span class="lineno"> 3946</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l03947"></a><span class="lineno"> 3947</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l03948"></a><span class="lineno"> 3948</span>&#160;  float32_t * pState);</div><div class="line"><a name="l03949"></a><span class="lineno"> 3949</span>&#160;</div><div class="line"><a name="l03950"></a><span class="lineno"> 3950</span>&#160;</div><div class="line"><a name="l03960"></a><span class="lineno"> 3960</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a12dc5d8e8892806ad70e79ca2ff9f86e">arm_biquad_cascade_df2T_init_f64</a>(</div><div class="line"><a name="l03961"></a><span class="lineno"> 3961</span>&#160;  <a class="code" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> * S,</div><div class="line"><a name="l03962"></a><span class="lineno"> 3962</span>&#160;  uint8_t numStages,</div><div class="line"><a name="l03963"></a><span class="lineno"> 3963</span>&#160;  float64_t * pCoeffs,</div><div class="line"><a name="l03964"></a><span class="lineno"> 3964</span>&#160;  float64_t * pState);</div><div class="line"><a name="l03965"></a><span class="lineno"> 3965</span>&#160;</div><div class="line"><a name="l03966"></a><span class="lineno"> 3966</span>&#160;</div><div class="line"><a name="l03967"></a><span class="lineno"> 3967</span>&#160;</div><div class="line"><a name="l03972"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q15.xhtml"> 3972</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03973"></a><span class="lineno"> 3973</span>&#160;  {</div><div class="line"><a name="l03974"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q15.xhtml#a38b179138d6a6c9cac4f8f79b6fd5357"> 3974</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__lattice__instance__q15.xhtml#a38b179138d6a6c9cac4f8f79b6fd5357">numStages</a>;                          </div><div class="line"><a name="l03975"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q15.xhtml#a37b90dea2bc3ee7c9951a9fe74db0cbb"> 3975</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__lattice__instance__q15.xhtml#a37b90dea2bc3ee7c9951a9fe74db0cbb">pState</a>;                               </div><div class="line"><a name="l03976"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q15.xhtml#a78f872826140069cf67836fff87360bc"> 3976</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__lattice__instance__q15.xhtml#a78f872826140069cf67836fff87360bc">pCoeffs</a>;                              </div><div class="line"><a name="l03977"></a><span class="lineno"> 3977</span>&#160;  } <a class="code" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a>;</div><div class="line"><a name="l03978"></a><span class="lineno"> 3978</span>&#160;</div><div class="line"><a name="l03983"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q31.xhtml"> 3983</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03984"></a><span class="lineno"> 3984</span>&#160;  {</div><div class="line"><a name="l03985"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q31.xhtml#a9f3773bbb76bc5a8a5ee9d37786bf478"> 3985</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__lattice__instance__q31.xhtml#a9f3773bbb76bc5a8a5ee9d37786bf478">numStages</a>;                          </div><div class="line"><a name="l03986"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q31.xhtml#a08fe9494ab7cd336b791e9657adadcf6"> 3986</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__lattice__instance__q31.xhtml#a08fe9494ab7cd336b791e9657adadcf6">pState</a>;                               </div><div class="line"><a name="l03987"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__q31.xhtml#a66c3364bf5863cd45e05f1652c3dc522"> 3987</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__lattice__instance__q31.xhtml#a66c3364bf5863cd45e05f1652c3dc522">pCoeffs</a>;                              </div><div class="line"><a name="l03988"></a><span class="lineno"> 3988</span>&#160;  } <a class="code" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a>;</div><div class="line"><a name="l03989"></a><span class="lineno"> 3989</span>&#160;</div><div class="line"><a name="l03994"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__f32.xhtml"> 3994</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l03995"></a><span class="lineno"> 3995</span>&#160;  {</div><div class="line"><a name="l03996"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__f32.xhtml#ad369bd9997a250f195254df37408a38f"> 3996</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__lattice__instance__f32.xhtml#ad369bd9997a250f195254df37408a38f">numStages</a>;                  </div><div class="line"><a name="l03997"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__f32.xhtml#ae348884a1ba9b83fadccd5da640cbcaf"> 3997</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__lattice__instance__f32.xhtml#ae348884a1ba9b83fadccd5da640cbcaf">pState</a>;                   </div><div class="line"><a name="l03998"></a><span class="lineno"><a class="line" href="structarm__fir__lattice__instance__f32.xhtml#a33bf5948c947f9ef80a99717cb0a0a43"> 3998</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__lattice__instance__f32.xhtml#a33bf5948c947f9ef80a99717cb0a0a43">pCoeffs</a>;                  </div><div class="line"><a name="l03999"></a><span class="lineno"> 3999</span>&#160;  } <a class="code" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a>;</div><div class="line"><a name="l04000"></a><span class="lineno"> 4000</span>&#160;</div><div class="line"><a name="l04010"></a><span class="lineno"> 4010</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1b22f30ce1cc19bf5a5d7c9fca154d72">arm_fir_lattice_init_q15</a>(</div><div class="line"><a name="l04011"></a><span class="lineno"> 4011</span>&#160;  <a class="code" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> * S,</div><div class="line"><a name="l04012"></a><span class="lineno"> 4012</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04013"></a><span class="lineno"> 4013</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l04014"></a><span class="lineno"> 4014</span>&#160;  q15_t * pState);</div><div class="line"><a name="l04015"></a><span class="lineno"> 4015</span>&#160;</div><div class="line"><a name="l04016"></a><span class="lineno"> 4016</span>&#160;</div><div class="line"><a name="l04025"></a><span class="lineno"> 4025</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abb0ab07fd313b4d863070c3ddca51542">arm_fir_lattice_q15</a>(</div><div class="line"><a name="l04026"></a><span class="lineno"> 4026</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> * S,</div><div class="line"><a name="l04027"></a><span class="lineno"> 4027</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04028"></a><span class="lineno"> 4028</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l04029"></a><span class="lineno"> 4029</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04030"></a><span class="lineno"> 4030</span>&#160;</div><div class="line"><a name="l04040"></a><span class="lineno"> 4040</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac05a17a0188bb851b58d19e572870a54">arm_fir_lattice_init_q31</a>(</div><div class="line"><a name="l04041"></a><span class="lineno"> 4041</span>&#160;  <a class="code" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> * S,</div><div class="line"><a name="l04042"></a><span class="lineno"> 4042</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04043"></a><span class="lineno"> 4043</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l04044"></a><span class="lineno"> 4044</span>&#160;  q31_t * pState);</div><div class="line"><a name="l04045"></a><span class="lineno"> 4045</span>&#160;</div><div class="line"><a name="l04046"></a><span class="lineno"> 4046</span>&#160;</div><div class="line"><a name="l04056"></a><span class="lineno"> 4056</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2e36fd210e4a1a5dd333ce80dd6d9a88">arm_fir_lattice_q31</a>(</div><div class="line"><a name="l04057"></a><span class="lineno"> 4057</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> * S,</div><div class="line"><a name="l04058"></a><span class="lineno"> 4058</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04059"></a><span class="lineno"> 4059</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l04060"></a><span class="lineno"> 4060</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04061"></a><span class="lineno"> 4061</span>&#160;</div><div class="line"><a name="l04071"></a><span class="lineno"> 4071</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a86199a1590af2b8941c6532ee9d03229">arm_fir_lattice_init_f32</a>(</div><div class="line"><a name="l04072"></a><span class="lineno"> 4072</span>&#160;  <a class="code" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> * S,</div><div class="line"><a name="l04073"></a><span class="lineno"> 4073</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04074"></a><span class="lineno"> 4074</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l04075"></a><span class="lineno"> 4075</span>&#160;  float32_t * pState);</div><div class="line"><a name="l04076"></a><span class="lineno"> 4076</span>&#160;</div><div class="line"><a name="l04086"></a><span class="lineno"> 4086</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae63a45a63a11a65f2eae8b8b1fe370a8">arm_fir_lattice_f32</a>(</div><div class="line"><a name="l04087"></a><span class="lineno"> 4087</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> * S,</div><div class="line"><a name="l04088"></a><span class="lineno"> 4088</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04089"></a><span class="lineno"> 4089</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l04090"></a><span class="lineno"> 4090</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04091"></a><span class="lineno"> 4091</span>&#160;</div><div class="line"><a name="l04095"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q15.xhtml"> 4095</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04096"></a><span class="lineno"> 4096</span>&#160;  {</div><div class="line"><a name="l04097"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q15.xhtml#a96fbed313bef01070409fa182d26ba3f"> 4097</a></span>&#160;    uint16_t <a class="code" href="structarm__iir__lattice__instance__q15.xhtml#a96fbed313bef01070409fa182d26ba3f">numStages</a>;                         </div><div class="line"><a name="l04098"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q15.xhtml#afd0136ab917b529554d93f41a5e04618"> 4098</a></span>&#160;    q15_t *<a class="code" href="structarm__iir__lattice__instance__q15.xhtml#afd0136ab917b529554d93f41a5e04618">pState</a>;                              </div><div class="line"><a name="l04099"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q15.xhtml#a41c214a1ec38d4a82fae8899d715dd29"> 4099</a></span>&#160;    q15_t *<a class="code" href="structarm__iir__lattice__instance__q15.xhtml#a41c214a1ec38d4a82fae8899d715dd29">pkCoeffs</a>;                            </div><div class="line"><a name="l04100"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q15.xhtml#a4c4f57f45b223abbe2a9fb727bd2cad9"> 4100</a></span>&#160;    q15_t *<a class="code" href="structarm__iir__lattice__instance__q15.xhtml#a4c4f57f45b223abbe2a9fb727bd2cad9">pvCoeffs</a>;                            </div><div class="line"><a name="l04101"></a><span class="lineno"> 4101</span>&#160;  } <a class="code" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a>;</div><div class="line"><a name="l04102"></a><span class="lineno"> 4102</span>&#160;</div><div class="line"><a name="l04106"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q31.xhtml"> 4106</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04107"></a><span class="lineno"> 4107</span>&#160;  {</div><div class="line"><a name="l04108"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q31.xhtml#a9df4570ed28c50fd9193ab654ff236ad"> 4108</a></span>&#160;    uint16_t <a class="code" href="structarm__iir__lattice__instance__q31.xhtml#a9df4570ed28c50fd9193ab654ff236ad">numStages</a>;                         </div><div class="line"><a name="l04109"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q31.xhtml#a941282745effd26a889fbfadf4b95e6a"> 4109</a></span>&#160;    q31_t *<a class="code" href="structarm__iir__lattice__instance__q31.xhtml#a941282745effd26a889fbfadf4b95e6a">pState</a>;                              </div><div class="line"><a name="l04110"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q31.xhtml#a1d30aa16aac7722936ea9dee59211863"> 4110</a></span>&#160;    q31_t *<a class="code" href="structarm__iir__lattice__instance__q31.xhtml#a1d30aa16aac7722936ea9dee59211863">pkCoeffs</a>;                            </div><div class="line"><a name="l04111"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__q31.xhtml#a04507e2b982b1dfa97b7b55752dea6b9"> 4111</a></span>&#160;    q31_t *<a class="code" href="structarm__iir__lattice__instance__q31.xhtml#a04507e2b982b1dfa97b7b55752dea6b9">pvCoeffs</a>;                            </div><div class="line"><a name="l04112"></a><span class="lineno"> 4112</span>&#160;  } <a class="code" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a>;</div><div class="line"><a name="l04113"></a><span class="lineno"> 4113</span>&#160;</div><div class="line"><a name="l04117"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__f32.xhtml"> 4117</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04118"></a><span class="lineno"> 4118</span>&#160;  {</div><div class="line"><a name="l04119"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__f32.xhtml#af8de449af5efe1f30be82f9ba35587ee"> 4119</a></span>&#160;    uint16_t <a class="code" href="structarm__iir__lattice__instance__f32.xhtml#af8de449af5efe1f30be82f9ba35587ee">numStages</a>;                         </div><div class="line"><a name="l04120"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__f32.xhtml#a30babe7815510219e6e3d28e6e4a5969"> 4120</a></span>&#160;    float32_t *<a class="code" href="structarm__iir__lattice__instance__f32.xhtml#a30babe7815510219e6e3d28e6e4a5969">pState</a>;                          </div><div class="line"><a name="l04121"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__f32.xhtml#aa69fcdd3775e828d450ce1bbd978fa31"> 4121</a></span>&#160;    float32_t *<a class="code" href="structarm__iir__lattice__instance__f32.xhtml#aa69fcdd3775e828d450ce1bbd978fa31">pkCoeffs</a>;                        </div><div class="line"><a name="l04122"></a><span class="lineno"><a class="line" href="structarm__iir__lattice__instance__f32.xhtml#afc7c8f577e6f27d097fe55f57e707f72"> 4122</a></span>&#160;    float32_t *<a class="code" href="structarm__iir__lattice__instance__f32.xhtml#afc7c8f577e6f27d097fe55f57e707f72">pvCoeffs</a>;                        </div><div class="line"><a name="l04123"></a><span class="lineno"> 4123</span>&#160;  } <a class="code" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a>;</div><div class="line"><a name="l04124"></a><span class="lineno"> 4124</span>&#160;</div><div class="line"><a name="l04134"></a><span class="lineno"> 4134</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a56164a0fe48619b8ceec160347bdd2ff">arm_iir_lattice_f32</a>(</div><div class="line"><a name="l04135"></a><span class="lineno"> 4135</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> * S,</div><div class="line"><a name="l04136"></a><span class="lineno"> 4136</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04137"></a><span class="lineno"> 4137</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l04138"></a><span class="lineno"> 4138</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04139"></a><span class="lineno"> 4139</span>&#160;</div><div class="line"><a name="l04151"></a><span class="lineno"> 4151</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aed3b0230bb77439dc902daa625985e04">arm_iir_lattice_init_f32</a>(</div><div class="line"><a name="l04152"></a><span class="lineno"> 4152</span>&#160;  <a class="code" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> * S,</div><div class="line"><a name="l04153"></a><span class="lineno"> 4153</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04154"></a><span class="lineno"> 4154</span>&#160;  float32_t * pkCoeffs,</div><div class="line"><a name="l04155"></a><span class="lineno"> 4155</span>&#160;  float32_t * pvCoeffs,</div><div class="line"><a name="l04156"></a><span class="lineno"> 4156</span>&#160;  float32_t * pState,</div><div class="line"><a name="l04157"></a><span class="lineno"> 4157</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04158"></a><span class="lineno"> 4158</span>&#160;</div><div class="line"><a name="l04159"></a><span class="lineno"> 4159</span>&#160;</div><div class="line"><a name="l04169"></a><span class="lineno"> 4169</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a123b26fa9156cd8d3622dd85931741ed">arm_iir_lattice_q31</a>(</div><div class="line"><a name="l04170"></a><span class="lineno"> 4170</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> * S,</div><div class="line"><a name="l04171"></a><span class="lineno"> 4171</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04172"></a><span class="lineno"> 4172</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l04173"></a><span class="lineno"> 4173</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04174"></a><span class="lineno"> 4174</span>&#160;</div><div class="line"><a name="l04175"></a><span class="lineno"> 4175</span>&#160;</div><div class="line"><a name="l04187"></a><span class="lineno"> 4187</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab686c14175581797d9c3ad7bf1d5cc1e">arm_iir_lattice_init_q31</a>(</div><div class="line"><a name="l04188"></a><span class="lineno"> 4188</span>&#160;  <a class="code" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> * S,</div><div class="line"><a name="l04189"></a><span class="lineno"> 4189</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04190"></a><span class="lineno"> 4190</span>&#160;  q31_t * pkCoeffs,</div><div class="line"><a name="l04191"></a><span class="lineno"> 4191</span>&#160;  q31_t * pvCoeffs,</div><div class="line"><a name="l04192"></a><span class="lineno"> 4192</span>&#160;  q31_t * pState,</div><div class="line"><a name="l04193"></a><span class="lineno"> 4193</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04194"></a><span class="lineno"> 4194</span>&#160;</div><div class="line"><a name="l04195"></a><span class="lineno"> 4195</span>&#160;</div><div class="line"><a name="l04205"></a><span class="lineno"> 4205</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aeb9e9599a288832ed123183eaa8b294a">arm_iir_lattice_q15</a>(</div><div class="line"><a name="l04206"></a><span class="lineno"> 4206</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> * S,</div><div class="line"><a name="l04207"></a><span class="lineno"> 4207</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04208"></a><span class="lineno"> 4208</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l04209"></a><span class="lineno"> 4209</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04210"></a><span class="lineno"> 4210</span>&#160;</div><div class="line"><a name="l04211"></a><span class="lineno"> 4211</span>&#160;</div><div class="line"><a name="l04223"></a><span class="lineno"> 4223</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1f4bc2dd3d5641e96815d3a5aad58998">arm_iir_lattice_init_q15</a>(</div><div class="line"><a name="l04224"></a><span class="lineno"> 4224</span>&#160;  <a class="code" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> * S,</div><div class="line"><a name="l04225"></a><span class="lineno"> 4225</span>&#160;  uint16_t numStages,</div><div class="line"><a name="l04226"></a><span class="lineno"> 4226</span>&#160;  q15_t * pkCoeffs,</div><div class="line"><a name="l04227"></a><span class="lineno"> 4227</span>&#160;  q15_t * pvCoeffs,</div><div class="line"><a name="l04228"></a><span class="lineno"> 4228</span>&#160;  q15_t * pState,</div><div class="line"><a name="l04229"></a><span class="lineno"> 4229</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04230"></a><span class="lineno"> 4230</span>&#160;</div><div class="line"><a name="l04235"></a><span class="lineno"><a class="line" href="structarm__lms__instance__f32.xhtml"> 4235</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04236"></a><span class="lineno"> 4236</span>&#160;  {</div><div class="line"><a name="l04237"></a><span class="lineno"><a class="line" href="structarm__lms__instance__f32.xhtml#af73880d9009982f5d14529869494ec3d"> 4237</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__instance__f32.xhtml#af73880d9009982f5d14529869494ec3d">numTaps</a>;    </div><div class="line"><a name="l04238"></a><span class="lineno"><a class="line" href="structarm__lms__instance__f32.xhtml#aaf94285be2f99b5b9af40bea8dcb14b9"> 4238</a></span>&#160;    float32_t *<a class="code" href="structarm__lms__instance__f32.xhtml#aaf94285be2f99b5b9af40bea8dcb14b9">pState</a>;   </div><div class="line"><a name="l04239"></a><span class="lineno"><a class="line" href="structarm__lms__instance__f32.xhtml#a4795c6f7d3f17cec15c2fd09f66edd1a"> 4239</a></span>&#160;    float32_t *<a class="code" href="structarm__lms__instance__f32.xhtml#a4795c6f7d3f17cec15c2fd09f66edd1a">pCoeffs</a>;  </div><div class="line"><a name="l04240"></a><span class="lineno"><a class="line" href="structarm__lms__instance__f32.xhtml#ae2af43d74c93dba16b876e10c97a5b99"> 4240</a></span>&#160;    float32_t <a class="code" href="structarm__lms__instance__f32.xhtml#ae2af43d74c93dba16b876e10c97a5b99">mu</a>;        </div><div class="line"><a name="l04241"></a><span class="lineno"> 4241</span>&#160;  } <a class="code" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a>;</div><div class="line"><a name="l04242"></a><span class="lineno"> 4242</span>&#160;</div><div class="line"><a name="l04254"></a><span class="lineno"> 4254</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae266d009e682180421601627c79a3843">arm_lms_f32</a>(</div><div class="line"><a name="l04255"></a><span class="lineno"> 4255</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> * S,</div><div class="line"><a name="l04256"></a><span class="lineno"> 4256</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04257"></a><span class="lineno"> 4257</span>&#160;  float32_t * pRef,</div><div class="line"><a name="l04258"></a><span class="lineno"> 4258</span>&#160;  float32_t * pOut,</div><div class="line"><a name="l04259"></a><span class="lineno"> 4259</span>&#160;  float32_t * pErr,</div><div class="line"><a name="l04260"></a><span class="lineno"> 4260</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04261"></a><span class="lineno"> 4261</span>&#160;</div><div class="line"><a name="l04273"></a><span class="lineno"> 4273</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9fc7adca0966ff2cec1746fca8364cee">arm_lms_init_f32</a>(</div><div class="line"><a name="l04274"></a><span class="lineno"> 4274</span>&#160;  <a class="code" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> * S,</div><div class="line"><a name="l04275"></a><span class="lineno"> 4275</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04276"></a><span class="lineno"> 4276</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l04277"></a><span class="lineno"> 4277</span>&#160;  float32_t * pState,</div><div class="line"><a name="l04278"></a><span class="lineno"> 4278</span>&#160;  float32_t mu,</div><div class="line"><a name="l04279"></a><span class="lineno"> 4279</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04280"></a><span class="lineno"> 4280</span>&#160;</div><div class="line"><a name="l04285"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml"> 4285</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04286"></a><span class="lineno"> 4286</span>&#160;  {</div><div class="line"><a name="l04287"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml#a0078e894f805af1b360369e619fb57b3"> 4287</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__instance__q15.xhtml#a0078e894f805af1b360369e619fb57b3">numTaps</a>;    </div><div class="line"><a name="l04288"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml#a9a575ff82c1e68cbb583083439260d08"> 4288</a></span>&#160;    q15_t *<a class="code" href="structarm__lms__instance__q15.xhtml#a9a575ff82c1e68cbb583083439260d08">pState</a>;       </div><div class="line"><a name="l04289"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml#a42f95368b94898eb82608e1113d18cab"> 4289</a></span>&#160;    q15_t *<a class="code" href="structarm__lms__instance__q15.xhtml#a42f95368b94898eb82608e1113d18cab">pCoeffs</a>;      </div><div class="line"><a name="l04290"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml#aae46129d7cfd7f1c162cc502ed0a9d49"> 4290</a></span>&#160;    q15_t <a class="code" href="structarm__lms__instance__q15.xhtml#aae46129d7cfd7f1c162cc502ed0a9d49">mu</a>;            </div><div class="line"><a name="l04291"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q15.xhtml#acca5fbaef4a52ae411de24c9a0b929cf"> 4291</a></span>&#160;    uint32_t <a class="code" href="structarm__lms__instance__q15.xhtml#acca5fbaef4a52ae411de24c9a0b929cf">postShift</a>;  </div><div class="line"><a name="l04292"></a><span class="lineno"> 4292</span>&#160;  } <a class="code" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a>;</div><div class="line"><a name="l04293"></a><span class="lineno"> 4293</span>&#160;</div><div class="line"><a name="l04294"></a><span class="lineno"> 4294</span>&#160;</div><div class="line"><a name="l04307"></a><span class="lineno"> 4307</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9544cc26f18cd4465cfbed371be822b3">arm_lms_init_q15</a>(</div><div class="line"><a name="l04308"></a><span class="lineno"> 4308</span>&#160;  <a class="code" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> * S,</div><div class="line"><a name="l04309"></a><span class="lineno"> 4309</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04310"></a><span class="lineno"> 4310</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l04311"></a><span class="lineno"> 4311</span>&#160;  q15_t * pState,</div><div class="line"><a name="l04312"></a><span class="lineno"> 4312</span>&#160;  q15_t mu,</div><div class="line"><a name="l04313"></a><span class="lineno"> 4313</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l04314"></a><span class="lineno"> 4314</span>&#160;  uint32_t postShift);</div><div class="line"><a name="l04315"></a><span class="lineno"> 4315</span>&#160;</div><div class="line"><a name="l04327"></a><span class="lineno"> 4327</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#acde16c17eb75979f81b34e2e2a58c7ac">arm_lms_q15</a>(</div><div class="line"><a name="l04328"></a><span class="lineno"> 4328</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> * S,</div><div class="line"><a name="l04329"></a><span class="lineno"> 4329</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04330"></a><span class="lineno"> 4330</span>&#160;  q15_t * pRef,</div><div class="line"><a name="l04331"></a><span class="lineno"> 4331</span>&#160;  q15_t * pOut,</div><div class="line"><a name="l04332"></a><span class="lineno"> 4332</span>&#160;  q15_t * pErr,</div><div class="line"><a name="l04333"></a><span class="lineno"> 4333</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04334"></a><span class="lineno"> 4334</span>&#160;</div><div class="line"><a name="l04335"></a><span class="lineno"> 4335</span>&#160;</div><div class="line"><a name="l04340"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml"> 4340</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04341"></a><span class="lineno"> 4341</span>&#160;  {</div><div class="line"><a name="l04342"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml#ac0d84f7d054555931ef8a62511fbcb8a"> 4342</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__instance__q31.xhtml#ac0d84f7d054555931ef8a62511fbcb8a">numTaps</a>;    </div><div class="line"><a name="l04343"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml#a206d47b49de6f357f933ebe61520753c"> 4343</a></span>&#160;    q31_t *<a class="code" href="structarm__lms__instance__q31.xhtml#a206d47b49de6f357f933ebe61520753c">pState</a>;       </div><div class="line"><a name="l04344"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml#a4afe56e991a5416adfd462aa88bda500"> 4344</a></span>&#160;    q31_t *<a class="code" href="structarm__lms__instance__q31.xhtml#a4afe56e991a5416adfd462aa88bda500">pCoeffs</a>;      </div><div class="line"><a name="l04345"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml#acb6ca9996b3c5f740d5d6c8e9f4f1d46"> 4345</a></span>&#160;    q31_t <a class="code" href="structarm__lms__instance__q31.xhtml#acb6ca9996b3c5f740d5d6c8e9f4f1d46">mu</a>;            </div><div class="line"><a name="l04346"></a><span class="lineno"><a class="line" href="structarm__lms__instance__q31.xhtml#a4705a8f0011bb9166e09bf5bd51e595e"> 4346</a></span>&#160;    uint32_t <a class="code" href="structarm__lms__instance__q31.xhtml#a4705a8f0011bb9166e09bf5bd51e595e">postShift</a>;  </div><div class="line"><a name="l04348"></a><span class="lineno"> 4348</span>&#160;  } <a class="code" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a>;</div><div class="line"><a name="l04349"></a><span class="lineno"> 4349</span>&#160;</div><div class="line"><a name="l04361"></a><span class="lineno"> 4361</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a6a0abfe6041253a6f91c63b383a64257">arm_lms_q31</a>(</div><div class="line"><a name="l04362"></a><span class="lineno"> 4362</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> * S,</div><div class="line"><a name="l04363"></a><span class="lineno"> 4363</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04364"></a><span class="lineno"> 4364</span>&#160;  q31_t * pRef,</div><div class="line"><a name="l04365"></a><span class="lineno"> 4365</span>&#160;  q31_t * pOut,</div><div class="line"><a name="l04366"></a><span class="lineno"> 4366</span>&#160;  q31_t * pErr,</div><div class="line"><a name="l04367"></a><span class="lineno"> 4367</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04368"></a><span class="lineno"> 4368</span>&#160;</div><div class="line"><a name="l04381"></a><span class="lineno"> 4381</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a8d4bc251169f4b102355097a9f7530d6">arm_lms_init_q31</a>(</div><div class="line"><a name="l04382"></a><span class="lineno"> 4382</span>&#160;  <a class="code" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> * S,</div><div class="line"><a name="l04383"></a><span class="lineno"> 4383</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04384"></a><span class="lineno"> 4384</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l04385"></a><span class="lineno"> 4385</span>&#160;  q31_t * pState,</div><div class="line"><a name="l04386"></a><span class="lineno"> 4386</span>&#160;  q31_t mu,</div><div class="line"><a name="l04387"></a><span class="lineno"> 4387</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l04388"></a><span class="lineno"> 4388</span>&#160;  uint32_t postShift);</div><div class="line"><a name="l04389"></a><span class="lineno"> 4389</span>&#160;</div><div class="line"><a name="l04394"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml"> 4394</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04395"></a><span class="lineno"> 4395</span>&#160;  {</div><div class="line"><a name="l04396"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#ac95f8ca3d816524c2070643852fac5e8"> 4396</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__norm__instance__f32.xhtml#ac95f8ca3d816524c2070643852fac5e8">numTaps</a>;     </div><div class="line"><a name="l04397"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#a0bc03338687002ed5f2e4a363eb095ec"> 4397</a></span>&#160;    float32_t *<a class="code" href="structarm__lms__norm__instance__f32.xhtml#a0bc03338687002ed5f2e4a363eb095ec">pState</a>;    </div><div class="line"><a name="l04398"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#a1ba688d90aba7de003ed4ad8e2e7ddda"> 4398</a></span>&#160;    float32_t *<a class="code" href="structarm__lms__norm__instance__f32.xhtml#a1ba688d90aba7de003ed4ad8e2e7ddda">pCoeffs</a>;   </div><div class="line"><a name="l04399"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#a84401d3cfc6c40f69c08223cf341b886"> 4399</a></span>&#160;    float32_t <a class="code" href="structarm__lms__norm__instance__f32.xhtml#a84401d3cfc6c40f69c08223cf341b886">mu</a>;        </div><div class="line"><a name="l04400"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#a6a4119e4f39447bbee31b066deafa16f"> 4400</a></span>&#160;    float32_t <a class="code" href="structarm__lms__norm__instance__f32.xhtml#a6a4119e4f39447bbee31b066deafa16f">energy</a>;    </div><div class="line"><a name="l04401"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__f32.xhtml#aec958fe89b164a30f38bcca9f5d96218"> 4401</a></span>&#160;    float32_t <a class="code" href="structarm__lms__norm__instance__f32.xhtml#aec958fe89b164a30f38bcca9f5d96218">x0</a>;        </div><div class="line"><a name="l04402"></a><span class="lineno"> 4402</span>&#160;  } <a class="code" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a>;</div><div class="line"><a name="l04403"></a><span class="lineno"> 4403</span>&#160;</div><div class="line"><a name="l04415"></a><span class="lineno"> 4415</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2418c929087c6eba719758eaae3f3300">arm_lms_norm_f32</a>(</div><div class="line"><a name="l04416"></a><span class="lineno"> 4416</span>&#160;  <a class="code" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> * S,</div><div class="line"><a name="l04417"></a><span class="lineno"> 4417</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04418"></a><span class="lineno"> 4418</span>&#160;  float32_t * pRef,</div><div class="line"><a name="l04419"></a><span class="lineno"> 4419</span>&#160;  float32_t * pOut,</div><div class="line"><a name="l04420"></a><span class="lineno"> 4420</span>&#160;  float32_t * pErr,</div><div class="line"><a name="l04421"></a><span class="lineno"> 4421</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04422"></a><span class="lineno"> 4422</span>&#160;</div><div class="line"><a name="l04434"></a><span class="lineno"> 4434</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac7ccbaea863882056eee815456464670">arm_lms_norm_init_f32</a>(</div><div class="line"><a name="l04435"></a><span class="lineno"> 4435</span>&#160;  <a class="code" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> * S,</div><div class="line"><a name="l04436"></a><span class="lineno"> 4436</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04437"></a><span class="lineno"> 4437</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l04438"></a><span class="lineno"> 4438</span>&#160;  float32_t * pState,</div><div class="line"><a name="l04439"></a><span class="lineno"> 4439</span>&#160;  float32_t mu,</div><div class="line"><a name="l04440"></a><span class="lineno"> 4440</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04441"></a><span class="lineno"> 4441</span>&#160;</div><div class="line"><a name="l04442"></a><span class="lineno"> 4442</span>&#160;</div><div class="line"><a name="l04446"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml"> 4446</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04447"></a><span class="lineno"> 4447</span>&#160;  {</div><div class="line"><a name="l04448"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a28e4c085af69c9c3e2e95dacf8004c3e"> 4448</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__norm__instance__q31.xhtml#a28e4c085af69c9c3e2e95dacf8004c3e">numTaps</a>;     </div><div class="line"><a name="l04449"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a6b25c96cf048b77078d62f4252a01ec4"> 4449</a></span>&#160;    q31_t *<a class="code" href="structarm__lms__norm__instance__q31.xhtml#a6b25c96cf048b77078d62f4252a01ec4">pState</a>;        </div><div class="line"><a name="l04450"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a57a64c1ff102d033c1bd05043f1d9955"> 4450</a></span>&#160;    q31_t *<a class="code" href="structarm__lms__norm__instance__q31.xhtml#a57a64c1ff102d033c1bd05043f1d9955">pCoeffs</a>;       </div><div class="line"><a name="l04451"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#ad3dd2a2406e02fdaa7782ba6c3940a64"> 4451</a></span>&#160;    q31_t <a class="code" href="structarm__lms__norm__instance__q31.xhtml#ad3dd2a2406e02fdaa7782ba6c3940a64">mu</a>;             </div><div class="line"><a name="l04452"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a28d7b9e437817f83397e081967e90f3c"> 4452</a></span>&#160;    uint8_t <a class="code" href="structarm__lms__norm__instance__q31.xhtml#a28d7b9e437817f83397e081967e90f3c">postShift</a>;    </div><div class="line"><a name="l04453"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a85836d0907077b9ac660f7bbbaa9d694"> 4453</a></span>&#160;    q31_t *<a class="code" href="structarm__lms__norm__instance__q31.xhtml#a85836d0907077b9ac660f7bbbaa9d694">recipTable</a>;    </div><div class="line"><a name="l04454"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a3c0ae42869afec8555dc8e3a7ef9b386"> 4454</a></span>&#160;    q31_t <a class="code" href="structarm__lms__norm__instance__q31.xhtml#a3c0ae42869afec8555dc8e3a7ef9b386">energy</a>;         </div><div class="line"><a name="l04455"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q31.xhtml#a47c4466d644e0d8ba407995adfa9b917"> 4455</a></span>&#160;    q31_t <a class="code" href="structarm__lms__norm__instance__q31.xhtml#a47c4466d644e0d8ba407995adfa9b917">x0</a>;             </div><div class="line"><a name="l04456"></a><span class="lineno"> 4456</span>&#160;  } <a class="code" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a>;</div><div class="line"><a name="l04457"></a><span class="lineno"> 4457</span>&#160;</div><div class="line"><a name="l04469"></a><span class="lineno"> 4469</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7128775e99817c183a7d7ad34e8b6e05">arm_lms_norm_q31</a>(</div><div class="line"><a name="l04470"></a><span class="lineno"> 4470</span>&#160;  <a class="code" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> * S,</div><div class="line"><a name="l04471"></a><span class="lineno"> 4471</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04472"></a><span class="lineno"> 4472</span>&#160;  q31_t * pRef,</div><div class="line"><a name="l04473"></a><span class="lineno"> 4473</span>&#160;  q31_t * pOut,</div><div class="line"><a name="l04474"></a><span class="lineno"> 4474</span>&#160;  q31_t * pErr,</div><div class="line"><a name="l04475"></a><span class="lineno"> 4475</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04476"></a><span class="lineno"> 4476</span>&#160;</div><div class="line"><a name="l04489"></a><span class="lineno"> 4489</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1d9659dbbea4c89a7a9d14d5fc0dd490">arm_lms_norm_init_q31</a>(</div><div class="line"><a name="l04490"></a><span class="lineno"> 4490</span>&#160;  <a class="code" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> * S,</div><div class="line"><a name="l04491"></a><span class="lineno"> 4491</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04492"></a><span class="lineno"> 4492</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l04493"></a><span class="lineno"> 4493</span>&#160;  q31_t * pState,</div><div class="line"><a name="l04494"></a><span class="lineno"> 4494</span>&#160;  q31_t mu,</div><div class="line"><a name="l04495"></a><span class="lineno"> 4495</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l04496"></a><span class="lineno"> 4496</span>&#160;  uint8_t postShift);</div><div class="line"><a name="l04497"></a><span class="lineno"> 4497</span>&#160;</div><div class="line"><a name="l04502"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml"> 4502</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04503"></a><span class="lineno"> 4503</span>&#160;  {</div><div class="line"><a name="l04504"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#a9ee7a45f4f315d7996a969e25fdc7146"> 4504</a></span>&#160;    uint16_t <a class="code" href="structarm__lms__norm__instance__q15.xhtml#a9ee7a45f4f315d7996a969e25fdc7146">numTaps</a>;    </div><div class="line"><a name="l04505"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#aa4de490b3bdbd03561b76ee07901c8e3"> 4505</a></span>&#160;    q15_t *<a class="code" href="structarm__lms__norm__instance__q15.xhtml#aa4de490b3bdbd03561b76ee07901c8e3">pState</a>;        </div><div class="line"><a name="l04506"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#ae7bca648c75a2ffa02d87852bb78bc8a"> 4506</a></span>&#160;    q15_t *<a class="code" href="structarm__lms__norm__instance__q15.xhtml#ae7bca648c75a2ffa02d87852bb78bc8a">pCoeffs</a>;       </div><div class="line"><a name="l04507"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#a7ce00f21d11cfda6d963240641deea8c"> 4507</a></span>&#160;    q15_t <a class="code" href="structarm__lms__norm__instance__q15.xhtml#a7ce00f21d11cfda6d963240641deea8c">mu</a>;            </div><div class="line"><a name="l04508"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#aa0d435fbcf7dedb7179d4467e9b79e9f"> 4508</a></span>&#160;    uint8_t <a class="code" href="structarm__lms__norm__instance__q15.xhtml#aa0d435fbcf7dedb7179d4467e9b79e9f">postShift</a>;   </div><div class="line"><a name="l04509"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#a9aabb0e4c79f3db807e7a441fa36f5f8"> 4509</a></span>&#160;    q15_t *<a class="code" href="structarm__lms__norm__instance__q15.xhtml#a9aabb0e4c79f3db807e7a441fa36f5f8">recipTable</a>;   </div><div class="line"><a name="l04510"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#a1c81ded399919d8181026bc1c8602e7b"> 4510</a></span>&#160;    q15_t <a class="code" href="structarm__lms__norm__instance__q15.xhtml#a1c81ded399919d8181026bc1c8602e7b">energy</a>;        </div><div class="line"><a name="l04511"></a><span class="lineno"><a class="line" href="structarm__lms__norm__instance__q15.xhtml#a3fc1d6f97d2c6d5324871de6895cb7e9"> 4511</a></span>&#160;    q15_t <a class="code" href="structarm__lms__norm__instance__q15.xhtml#a3fc1d6f97d2c6d5324871de6895cb7e9">x0</a>;            </div><div class="line"><a name="l04512"></a><span class="lineno"> 4512</span>&#160;  } <a class="code" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a>;</div><div class="line"><a name="l04513"></a><span class="lineno"> 4513</span>&#160;</div><div class="line"><a name="l04525"></a><span class="lineno"> 4525</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad47486a399dedb0bc85a5990ec5cf981">arm_lms_norm_q15</a>(</div><div class="line"><a name="l04526"></a><span class="lineno"> 4526</span>&#160;  <a class="code" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> * S,</div><div class="line"><a name="l04527"></a><span class="lineno"> 4527</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04528"></a><span class="lineno"> 4528</span>&#160;  q15_t * pRef,</div><div class="line"><a name="l04529"></a><span class="lineno"> 4529</span>&#160;  q15_t * pOut,</div><div class="line"><a name="l04530"></a><span class="lineno"> 4530</span>&#160;  q15_t * pErr,</div><div class="line"><a name="l04531"></a><span class="lineno"> 4531</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04532"></a><span class="lineno"> 4532</span>&#160;</div><div class="line"><a name="l04533"></a><span class="lineno"> 4533</span>&#160;</div><div class="line"><a name="l04546"></a><span class="lineno"> 4546</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a213ab1ee2e154cc2fa30d667b1994b89">arm_lms_norm_init_q15</a>(</div><div class="line"><a name="l04547"></a><span class="lineno"> 4547</span>&#160;  <a class="code" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> * S,</div><div class="line"><a name="l04548"></a><span class="lineno"> 4548</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04549"></a><span class="lineno"> 4549</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l04550"></a><span class="lineno"> 4550</span>&#160;  q15_t * pState,</div><div class="line"><a name="l04551"></a><span class="lineno"> 4551</span>&#160;  q15_t mu,</div><div class="line"><a name="l04552"></a><span class="lineno"> 4552</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l04553"></a><span class="lineno"> 4553</span>&#160;  uint8_t postShift);</div><div class="line"><a name="l04554"></a><span class="lineno"> 4554</span>&#160;</div><div class="line"><a name="l04565"></a><span class="lineno"> 4565</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a22021e4222773f01e9960358a531cfb8">arm_correlate_f32</a>(</div><div class="line"><a name="l04566"></a><span class="lineno"> 4566</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l04567"></a><span class="lineno"> 4567</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04568"></a><span class="lineno"> 4568</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l04569"></a><span class="lineno"> 4569</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04570"></a><span class="lineno"> 4570</span>&#160;  float32_t * pDst);</div><div class="line"><a name="l04571"></a><span class="lineno"> 4571</span>&#160;</div><div class="line"><a name="l04572"></a><span class="lineno"> 4572</span>&#160;</div><div class="line"><a name="l04583"></a><span class="lineno"> 4583</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad71c0ec70ec69edbc48563d9a5f68451">arm_correlate_opt_q15</a>(</div><div class="line"><a name="l04584"></a><span class="lineno"> 4584</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l04585"></a><span class="lineno"> 4585</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04586"></a><span class="lineno"> 4586</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l04587"></a><span class="lineno"> 4587</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04588"></a><span class="lineno"> 4588</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l04589"></a><span class="lineno"> 4589</span>&#160;  q15_t * pScratch);</div><div class="line"><a name="l04590"></a><span class="lineno"> 4590</span>&#160;</div><div class="line"><a name="l04591"></a><span class="lineno"> 4591</span>&#160;</div><div class="line"><a name="l04602"></a><span class="lineno"> 4602</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a5ec96b8e420d68b0e626df0812274d46">arm_correlate_q15</a>(</div><div class="line"><a name="l04603"></a><span class="lineno"> 4603</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l04604"></a><span class="lineno"> 4604</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04605"></a><span class="lineno"> 4605</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l04606"></a><span class="lineno"> 4606</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04607"></a><span class="lineno"> 4607</span>&#160;  q15_t * pDst);</div><div class="line"><a name="l04608"></a><span class="lineno"> 4608</span>&#160;</div><div class="line"><a name="l04619"></a><span class="lineno"> 4619</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac8de3da44f58e86c2c86156276ca154f">arm_correlate_fast_q15</a>(</div><div class="line"><a name="l04620"></a><span class="lineno"> 4620</span>&#160;               q15_t * pSrcA,</div><div class="line"><a name="l04621"></a><span class="lineno"> 4621</span>&#160;               uint32_t srcALen,</div><div class="line"><a name="l04622"></a><span class="lineno"> 4622</span>&#160;               q15_t * pSrcB,</div><div class="line"><a name="l04623"></a><span class="lineno"> 4623</span>&#160;               uint32_t srcBLen,</div><div class="line"><a name="l04624"></a><span class="lineno"> 4624</span>&#160;               q15_t * pDst);</div><div class="line"><a name="l04625"></a><span class="lineno"> 4625</span>&#160;</div><div class="line"><a name="l04626"></a><span class="lineno"> 4626</span>&#160;</div><div class="line"><a name="l04627"></a><span class="lineno"> 4627</span>&#160;</div><div class="line"><a name="l04639"></a><span class="lineno"> 4639</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a40a0236b17220e8e22a22b5bc1c53c6b">arm_correlate_fast_opt_q15</a>(</div><div class="line"><a name="l04640"></a><span class="lineno"> 4640</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l04641"></a><span class="lineno"> 4641</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04642"></a><span class="lineno"> 4642</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l04643"></a><span class="lineno"> 4643</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04644"></a><span class="lineno"> 4644</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l04645"></a><span class="lineno"> 4645</span>&#160;  q15_t * pScratch);</div><div class="line"><a name="l04646"></a><span class="lineno"> 4646</span>&#160;</div><div class="line"><a name="l04657"></a><span class="lineno"> 4657</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1367dc6c80476406c951e68d7fac4e8c">arm_correlate_q31</a>(</div><div class="line"><a name="l04658"></a><span class="lineno"> 4658</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l04659"></a><span class="lineno"> 4659</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04660"></a><span class="lineno"> 4660</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l04661"></a><span class="lineno"> 4661</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04662"></a><span class="lineno"> 4662</span>&#160;  q31_t * pDst);</div><div class="line"><a name="l04663"></a><span class="lineno"> 4663</span>&#160;</div><div class="line"><a name="l04674"></a><span class="lineno"> 4674</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abecd3d7b077dbbef43f93e9e037815ed">arm_correlate_fast_q31</a>(</div><div class="line"><a name="l04675"></a><span class="lineno"> 4675</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l04676"></a><span class="lineno"> 4676</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04677"></a><span class="lineno"> 4677</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l04678"></a><span class="lineno"> 4678</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04679"></a><span class="lineno"> 4679</span>&#160;  q31_t * pDst);</div><div class="line"><a name="l04680"></a><span class="lineno"> 4680</span>&#160;</div><div class="line"><a name="l04681"></a><span class="lineno"> 4681</span>&#160;</div><div class="line"><a name="l04682"></a><span class="lineno"> 4682</span>&#160;</div><div class="line"><a name="l04695"></a><span class="lineno"> 4695</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a746e8857cafe33ec5d6780729c18c311">arm_correlate_opt_q7</a>(</div><div class="line"><a name="l04696"></a><span class="lineno"> 4696</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l04697"></a><span class="lineno"> 4697</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04698"></a><span class="lineno"> 4698</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l04699"></a><span class="lineno"> 4699</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04700"></a><span class="lineno"> 4700</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l04701"></a><span class="lineno"> 4701</span>&#160;  q15_t * pScratch1,</div><div class="line"><a name="l04702"></a><span class="lineno"> 4702</span>&#160;  q15_t * pScratch2);</div><div class="line"><a name="l04703"></a><span class="lineno"> 4703</span>&#160;</div><div class="line"><a name="l04704"></a><span class="lineno"> 4704</span>&#160;</div><div class="line"><a name="l04715"></a><span class="lineno"> 4715</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a284ddcc49e4ac532d52a70d0383c5992">arm_correlate_q7</a>(</div><div class="line"><a name="l04716"></a><span class="lineno"> 4716</span>&#160;  q7_t * pSrcA,</div><div class="line"><a name="l04717"></a><span class="lineno"> 4717</span>&#160;  uint32_t srcALen,</div><div class="line"><a name="l04718"></a><span class="lineno"> 4718</span>&#160;  q7_t * pSrcB,</div><div class="line"><a name="l04719"></a><span class="lineno"> 4719</span>&#160;  uint32_t srcBLen,</div><div class="line"><a name="l04720"></a><span class="lineno"> 4720</span>&#160;  q7_t * pDst);</div><div class="line"><a name="l04721"></a><span class="lineno"> 4721</span>&#160;</div><div class="line"><a name="l04722"></a><span class="lineno"> 4722</span>&#160;</div><div class="line"><a name="l04726"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml"> 4726</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04727"></a><span class="lineno"> 4727</span>&#160;  {</div><div class="line"><a name="l04728"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#a5e19e7f234ac30a3db843352bf2a8515"> 4728</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__f32.xhtml#a5e19e7f234ac30a3db843352bf2a8515">numTaps</a>;             </div><div class="line"><a name="l04729"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#a57585aeca9dc8686e08df2865375a86d"> 4729</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__f32.xhtml#a57585aeca9dc8686e08df2865375a86d">stateIndex</a>;          </div><div class="line"><a name="l04730"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#a794af0916666d11cc564d6df08553555"> 4730</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__sparse__instance__f32.xhtml#a794af0916666d11cc564d6df08553555">pState</a>;            </div><div class="line"><a name="l04731"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#a04af7c738dfb0882ad102fcad501d94a"> 4731</a></span>&#160;    float32_t *<a class="code" href="structarm__fir__sparse__instance__f32.xhtml#a04af7c738dfb0882ad102fcad501d94a">pCoeffs</a>;           </div><div class="line"><a name="l04732"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#af8b8c775f4084c36774f06c082b4c078"> 4732</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__f32.xhtml#af8b8c775f4084c36774f06c082b4c078">maxDelay</a>;            </div><div class="line"><a name="l04733"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__f32.xhtml#aaa54ae67e5d10c6dd0d697945c638d31"> 4733</a></span>&#160;    int32_t *<a class="code" href="structarm__fir__sparse__instance__f32.xhtml#aaa54ae67e5d10c6dd0d697945c638d31">pTapDelay</a>;           </div><div class="line"><a name="l04734"></a><span class="lineno"> 4734</span>&#160;  } <a class="code" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a>;</div><div class="line"><a name="l04735"></a><span class="lineno"> 4735</span>&#160;</div><div class="line"><a name="l04740"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml"> 4740</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04741"></a><span class="lineno"> 4741</span>&#160;  {</div><div class="line"><a name="l04742"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#a07b6c01e58ec6dde384719130d36b0dc"> 4742</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q31.xhtml#a07b6c01e58ec6dde384719130d36b0dc">numTaps</a>;             </div><div class="line"><a name="l04743"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#a557ed9d477e76e4ad2019344f19f568a"> 4743</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q31.xhtml#a557ed9d477e76e4ad2019344f19f568a">stateIndex</a>;          </div><div class="line"><a name="l04744"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#a830be89daa5a393b225048889aa045d1"> 4744</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__sparse__instance__q31.xhtml#a830be89daa5a393b225048889aa045d1">pState</a>;                </div><div class="line"><a name="l04745"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#a093d6227f0d1597982cd083fb126f4e0"> 4745</a></span>&#160;    q31_t *<a class="code" href="structarm__fir__sparse__instance__q31.xhtml#a093d6227f0d1597982cd083fb126f4e0">pCoeffs</a>;               </div><div class="line"><a name="l04746"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#afdd3a1dc72132c854dc379154b68b674"> 4746</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q31.xhtml#afdd3a1dc72132c854dc379154b68b674">maxDelay</a>;            </div><div class="line"><a name="l04747"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q31.xhtml#ab87ae457adec8f727afefaa2599fc983"> 4747</a></span>&#160;    int32_t *<a class="code" href="structarm__fir__sparse__instance__q31.xhtml#ab87ae457adec8f727afefaa2599fc983">pTapDelay</a>;           </div><div class="line"><a name="l04748"></a><span class="lineno"> 4748</span>&#160;  } <a class="code" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a>;</div><div class="line"><a name="l04749"></a><span class="lineno"> 4749</span>&#160;</div><div class="line"><a name="l04754"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml"> 4754</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04755"></a><span class="lineno"> 4755</span>&#160;  {</div><div class="line"><a name="l04756"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#a0f66b126dd8b85f7467cfb01b7bc4d77"> 4756</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q15.xhtml#a0f66b126dd8b85f7467cfb01b7bc4d77">numTaps</a>;             </div><div class="line"><a name="l04757"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#a89487f28cab52637426024005e478985"> 4757</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q15.xhtml#a89487f28cab52637426024005e478985">stateIndex</a>;          </div><div class="line"><a name="l04758"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#a98b92b0f5208110129b9a67b1db90408"> 4758</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__sparse__instance__q15.xhtml#a98b92b0f5208110129b9a67b1db90408">pState</a>;                </div><div class="line"><a name="l04759"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#a78a6565473b5f0b8c77c3f0f58a76069"> 4759</a></span>&#160;    q15_t *<a class="code" href="structarm__fir__sparse__instance__q15.xhtml#a78a6565473b5f0b8c77c3f0f58a76069">pCoeffs</a>;               </div><div class="line"><a name="l04760"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#ad14cc1070eecf7e1926d8f67a8273182"> 4760</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q15.xhtml#ad14cc1070eecf7e1926d8f67a8273182">maxDelay</a>;            </div><div class="line"><a name="l04761"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q15.xhtml#aeab2855176c6efdb231a73a3672837d5"> 4761</a></span>&#160;    int32_t *<a class="code" href="structarm__fir__sparse__instance__q15.xhtml#aeab2855176c6efdb231a73a3672837d5">pTapDelay</a>;           </div><div class="line"><a name="l04762"></a><span class="lineno"> 4762</span>&#160;  } <a class="code" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a>;</div><div class="line"><a name="l04763"></a><span class="lineno"> 4763</span>&#160;</div><div class="line"><a name="l04768"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml"> 4768</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l04769"></a><span class="lineno"> 4769</span>&#160;  {</div><div class="line"><a name="l04770"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#a54cdd27ca1c672b126c38763ce678b1c"> 4770</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q7.xhtml#a54cdd27ca1c672b126c38763ce678b1c">numTaps</a>;             </div><div class="line"><a name="l04771"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#a2d2e65473fe3a3f2b953b4e0b60824df"> 4771</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q7.xhtml#a2d2e65473fe3a3f2b953b4e0b60824df">stateIndex</a>;          </div><div class="line"><a name="l04772"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#a18072cf3ef3666d588f0d49512f2b28f"> 4772</a></span>&#160;    q7_t *<a class="code" href="structarm__fir__sparse__instance__q7.xhtml#a18072cf3ef3666d588f0d49512f2b28f">pState</a>;                 </div><div class="line"><a name="l04773"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#a3dac86f15e33553e8f3e19e0d712bae5"> 4773</a></span>&#160;    q7_t *<a class="code" href="structarm__fir__sparse__instance__q7.xhtml#a3dac86f15e33553e8f3e19e0d712bae5">pCoeffs</a>;                </div><div class="line"><a name="l04774"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#af74dacc1d34c078283e50f2530eb91df"> 4774</a></span>&#160;    uint16_t <a class="code" href="structarm__fir__sparse__instance__q7.xhtml#af74dacc1d34c078283e50f2530eb91df">maxDelay</a>;            </div><div class="line"><a name="l04775"></a><span class="lineno"><a class="line" href="structarm__fir__sparse__instance__q7.xhtml#ac625393c84bc0342ffdf26fc4eba1ac1"> 4775</a></span>&#160;    int32_t *<a class="code" href="structarm__fir__sparse__instance__q7.xhtml#ac625393c84bc0342ffdf26fc4eba1ac1">pTapDelay</a>;           </div><div class="line"><a name="l04776"></a><span class="lineno"> 4776</span>&#160;  } <a class="code" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a>;</div><div class="line"><a name="l04777"></a><span class="lineno"> 4777</span>&#160;</div><div class="line"><a name="l04788"></a><span class="lineno"> 4788</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a23a9284de5ee39406713b91d18ac8838">arm_fir_sparse_f32</a>(</div><div class="line"><a name="l04789"></a><span class="lineno"> 4789</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> * S,</div><div class="line"><a name="l04790"></a><span class="lineno"> 4790</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04791"></a><span class="lineno"> 4791</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l04792"></a><span class="lineno"> 4792</span>&#160;  float32_t * pScratchIn,</div><div class="line"><a name="l04793"></a><span class="lineno"> 4793</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04794"></a><span class="lineno"> 4794</span>&#160;</div><div class="line"><a name="l04807"></a><span class="lineno"> 4807</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a86378a08a9d9e1e0e5de77843b34d396">arm_fir_sparse_init_f32</a>(</div><div class="line"><a name="l04808"></a><span class="lineno"> 4808</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> * S,</div><div class="line"><a name="l04809"></a><span class="lineno"> 4809</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04810"></a><span class="lineno"> 4810</span>&#160;  float32_t * pCoeffs,</div><div class="line"><a name="l04811"></a><span class="lineno"> 4811</span>&#160;  float32_t * pState,</div><div class="line"><a name="l04812"></a><span class="lineno"> 4812</span>&#160;  int32_t * pTapDelay,</div><div class="line"><a name="l04813"></a><span class="lineno"> 4813</span>&#160;  uint16_t maxDelay,</div><div class="line"><a name="l04814"></a><span class="lineno"> 4814</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04815"></a><span class="lineno"> 4815</span>&#160;</div><div class="line"><a name="l04826"></a><span class="lineno"> 4826</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a03e9c2f0f35ad67d20bac66be9f920ec">arm_fir_sparse_q31</a>(</div><div class="line"><a name="l04827"></a><span class="lineno"> 4827</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> * S,</div><div class="line"><a name="l04828"></a><span class="lineno"> 4828</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04829"></a><span class="lineno"> 4829</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l04830"></a><span class="lineno"> 4830</span>&#160;  q31_t * pScratchIn,</div><div class="line"><a name="l04831"></a><span class="lineno"> 4831</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04832"></a><span class="lineno"> 4832</span>&#160;</div><div class="line"><a name="l04845"></a><span class="lineno"> 4845</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9a0bb2134bc85d3e55c6be6d946ee634">arm_fir_sparse_init_q31</a>(</div><div class="line"><a name="l04846"></a><span class="lineno"> 4846</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> * S,</div><div class="line"><a name="l04847"></a><span class="lineno"> 4847</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04848"></a><span class="lineno"> 4848</span>&#160;  q31_t * pCoeffs,</div><div class="line"><a name="l04849"></a><span class="lineno"> 4849</span>&#160;  q31_t * pState,</div><div class="line"><a name="l04850"></a><span class="lineno"> 4850</span>&#160;  int32_t * pTapDelay,</div><div class="line"><a name="l04851"></a><span class="lineno"> 4851</span>&#160;  uint16_t maxDelay,</div><div class="line"><a name="l04852"></a><span class="lineno"> 4852</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04853"></a><span class="lineno"> 4853</span>&#160;</div><div class="line"><a name="l04865"></a><span class="lineno"> 4865</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2bffda2e156e72427e19276cd9c3d3cc">arm_fir_sparse_q15</a>(</div><div class="line"><a name="l04866"></a><span class="lineno"> 4866</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> * S,</div><div class="line"><a name="l04867"></a><span class="lineno"> 4867</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04868"></a><span class="lineno"> 4868</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l04869"></a><span class="lineno"> 4869</span>&#160;  q15_t * pScratchIn,</div><div class="line"><a name="l04870"></a><span class="lineno"> 4870</span>&#160;  q31_t * pScratchOut,</div><div class="line"><a name="l04871"></a><span class="lineno"> 4871</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04872"></a><span class="lineno"> 4872</span>&#160;</div><div class="line"><a name="l04873"></a><span class="lineno"> 4873</span>&#160;</div><div class="line"><a name="l04886"></a><span class="lineno"> 4886</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a5eaa80bf72bcccef5a2c5fc6648d1baa">arm_fir_sparse_init_q15</a>(</div><div class="line"><a name="l04887"></a><span class="lineno"> 4887</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> * S,</div><div class="line"><a name="l04888"></a><span class="lineno"> 4888</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04889"></a><span class="lineno"> 4889</span>&#160;  q15_t * pCoeffs,</div><div class="line"><a name="l04890"></a><span class="lineno"> 4890</span>&#160;  q15_t * pState,</div><div class="line"><a name="l04891"></a><span class="lineno"> 4891</span>&#160;  int32_t * pTapDelay,</div><div class="line"><a name="l04892"></a><span class="lineno"> 4892</span>&#160;  uint16_t maxDelay,</div><div class="line"><a name="l04893"></a><span class="lineno"> 4893</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04894"></a><span class="lineno"> 4894</span>&#160;</div><div class="line"><a name="l04906"></a><span class="lineno"> 4906</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae86c145efc2d9ec32dc6d8c1ad2ccb3c">arm_fir_sparse_q7</a>(</div><div class="line"><a name="l04907"></a><span class="lineno"> 4907</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> * S,</div><div class="line"><a name="l04908"></a><span class="lineno"> 4908</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l04909"></a><span class="lineno"> 4909</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l04910"></a><span class="lineno"> 4910</span>&#160;  q7_t * pScratchIn,</div><div class="line"><a name="l04911"></a><span class="lineno"> 4911</span>&#160;  q31_t * pScratchOut,</div><div class="line"><a name="l04912"></a><span class="lineno"> 4912</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04913"></a><span class="lineno"> 4913</span>&#160;</div><div class="line"><a name="l04926"></a><span class="lineno"> 4926</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a98f5c1a097d4572ce4ff3b0c58ebcdbd">arm_fir_sparse_init_q7</a>(</div><div class="line"><a name="l04927"></a><span class="lineno"> 4927</span>&#160;  <a class="code" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> * S,</div><div class="line"><a name="l04928"></a><span class="lineno"> 4928</span>&#160;  uint16_t numTaps,</div><div class="line"><a name="l04929"></a><span class="lineno"> 4929</span>&#160;  q7_t * pCoeffs,</div><div class="line"><a name="l04930"></a><span class="lineno"> 4930</span>&#160;  q7_t * pState,</div><div class="line"><a name="l04931"></a><span class="lineno"> 4931</span>&#160;  int32_t * pTapDelay,</div><div class="line"><a name="l04932"></a><span class="lineno"> 4932</span>&#160;  uint16_t maxDelay,</div><div class="line"><a name="l04933"></a><span class="lineno"> 4933</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l04934"></a><span class="lineno"> 4934</span>&#160;</div><div class="line"><a name="l04935"></a><span class="lineno"> 4935</span>&#160;</div><div class="line"><a name="l04936"></a><span class="lineno"> 4936</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l04937"></a><span class="lineno"> 4937</span>&#160;<span class="comment">   * @brief  Floating-point sin_cos function.</span></div><div class="line"><a name="l04938"></a><span class="lineno"> 4938</span>&#160;<span class="comment">   * @param[in]  theta    input value in degrees</span></div><div class="line"><a name="l04939"></a><span class="lineno"> 4939</span>&#160;<span class="comment">   * @param[out] *pSinVal points to the processed sine output.</span></div><div class="line"><a name="l04940"></a><span class="lineno"> 4940</span>&#160;<span class="comment">   * @param[out] *pCosVal points to the processed cos output.</span></div><div class="line"><a name="l04941"></a><span class="lineno"> 4941</span>&#160;<span class="comment">   * @return none.</span></div><div class="line"><a name="l04942"></a><span class="lineno"> 4942</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l04943"></a><span class="lineno"> 4943</span>&#160;</div><div class="line"><a name="l04944"></a><span class="lineno"> 4944</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1a087fa2be56e29d5ac7bb2afa590aee">arm_sin_cos_f32</a>(</div><div class="line"><a name="l04945"></a><span class="lineno"> 4945</span>&#160;  float32_t theta,</div><div class="line"><a name="l04946"></a><span class="lineno"> 4946</span>&#160;  float32_t * pSinVal,</div><div class="line"><a name="l04947"></a><span class="lineno"> 4947</span>&#160;  float32_t * pCcosVal);</div><div class="line"><a name="l04948"></a><span class="lineno"> 4948</span>&#160;</div><div class="line"><a name="l04949"></a><span class="lineno"> 4949</span>&#160;  <span class="comment">/*</span></div><div class="line"><a name="l04950"></a><span class="lineno"> 4950</span>&#160;<span class="comment">   * @brief  Q31 sin_cos function.</span></div><div class="line"><a name="l04951"></a><span class="lineno"> 4951</span>&#160;<span class="comment">   * @param[in]  theta    scaled input value in degrees</span></div><div class="line"><a name="l04952"></a><span class="lineno"> 4952</span>&#160;<span class="comment">   * @param[out] *pSinVal points to the processed sine output.</span></div><div class="line"><a name="l04953"></a><span class="lineno"> 4953</span>&#160;<span class="comment">   * @param[out] *pCosVal points to the processed cosine output.</span></div><div class="line"><a name="l04954"></a><span class="lineno"> 4954</span>&#160;<span class="comment">   * @return none.</span></div><div class="line"><a name="l04955"></a><span class="lineno"> 4955</span>&#160;<span class="comment">   */</span></div><div class="line"><a name="l04956"></a><span class="lineno"> 4956</span>&#160;</div><div class="line"><a name="l04957"></a><span class="lineno"> 4957</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae9e4ddebff9d4eb5d0a093e28e0bc504">arm_sin_cos_q31</a>(</div><div class="line"><a name="l04958"></a><span class="lineno"> 4958</span>&#160;  q31_t theta,</div><div class="line"><a name="l04959"></a><span class="lineno"> 4959</span>&#160;  q31_t * pSinVal,</div><div class="line"><a name="l04960"></a><span class="lineno"> 4960</span>&#160;  q31_t * pCosVal);</div><div class="line"><a name="l04961"></a><span class="lineno"> 4961</span>&#160;</div><div class="line"><a name="l04962"></a><span class="lineno"> 4962</span>&#160;</div><div class="line"><a name="l04971"></a><span class="lineno"> 4971</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3a102aead6460ad9fcb0626f6b226ffb">arm_cmplx_conj_f32</a>(</div><div class="line"><a name="l04972"></a><span class="lineno"> 4972</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l04973"></a><span class="lineno"> 4973</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l04974"></a><span class="lineno"> 4974</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l04975"></a><span class="lineno"> 4975</span>&#160;</div><div class="line"><a name="l04984"></a><span class="lineno"> 4984</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#afecc94879a383c5208ec3ef99485e4b5">arm_cmplx_conj_q31</a>(</div><div class="line"><a name="l04985"></a><span class="lineno"> 4985</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l04986"></a><span class="lineno"> 4986</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l04987"></a><span class="lineno"> 4987</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l04988"></a><span class="lineno"> 4988</span>&#160;</div><div class="line"><a name="l04997"></a><span class="lineno"> 4997</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af47689ae07962acaecb8ddde556df4a4">arm_cmplx_conj_q15</a>(</div><div class="line"><a name="l04998"></a><span class="lineno"> 4998</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l04999"></a><span class="lineno"> 4999</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l05000"></a><span class="lineno"> 5000</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l05001"></a><span class="lineno"> 5001</span>&#160;</div><div class="line"><a name="l05002"></a><span class="lineno"> 5002</span>&#160;</div><div class="line"><a name="l05003"></a><span class="lineno"> 5003</span>&#160;</div><div class="line"><a name="l05012"></a><span class="lineno"> 5012</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aa7faccc0d96b061d8b7d0d7d82045074">arm_cmplx_mag_squared_f32</a>(</div><div class="line"><a name="l05013"></a><span class="lineno"> 5013</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l05014"></a><span class="lineno"> 5014</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l05015"></a><span class="lineno"> 5015</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l05016"></a><span class="lineno"> 5016</span>&#160;</div><div class="line"><a name="l05025"></a><span class="lineno"> 5025</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a384b0538101e8c03fa4fa14271e63b04">arm_cmplx_mag_squared_q31</a>(</div><div class="line"><a name="l05026"></a><span class="lineno"> 5026</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l05027"></a><span class="lineno"> 5027</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l05028"></a><span class="lineno"> 5028</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l05029"></a><span class="lineno"> 5029</span>&#160;</div><div class="line"><a name="l05038"></a><span class="lineno"> 5038</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a45537f576102d960d467eb722b8431f2">arm_cmplx_mag_squared_q15</a>(</div><div class="line"><a name="l05039"></a><span class="lineno"> 5039</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l05040"></a><span class="lineno"> 5040</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l05041"></a><span class="lineno"> 5041</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l05042"></a><span class="lineno"> 5042</span>&#160;</div><div class="line"><a name="l05043"></a><span class="lineno"> 5043</span>&#160;</div><div class="line"><a name="l05118"></a><span class="lineno"><a class="line" href="group___p_i_d.xhtml#gac5c79ed46abf2d72b8cf41fa6c708bda"> 5118</a></span>&#160;  <span class="keyword">static</span> __INLINE float32_t <a class="code" href="group___p_i_d.xhtml#gac5c79ed46abf2d72b8cf41fa6c708bda">arm_pid_f32</a>(</div><div class="line"><a name="l05119"></a><span class="lineno"> 5119</span>&#160;  <a class="code" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> * S,</div><div class="line"><a name="l05120"></a><span class="lineno"> 5120</span>&#160;  float32_t in)</div><div class="line"><a name="l05121"></a><span class="lineno"> 5121</span>&#160;  {</div><div class="line"><a name="l05122"></a><span class="lineno"> 5122</span>&#160;    float32_t out;</div><div class="line"><a name="l05123"></a><span class="lineno"> 5123</span>&#160;</div><div class="line"><a name="l05124"></a><span class="lineno"> 5124</span>&#160;    <span class="comment">/* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */</span></div><div class="line"><a name="l05125"></a><span class="lineno"> 5125</span>&#160;    out = (S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#ad7b0bed64915d0a25a3409fa2dc45556">A0</a> * in) +</div><div class="line"><a name="l05126"></a><span class="lineno"> 5126</span>&#160;      (S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#a7def89571c50f7137a213326a396e560">A1</a> * S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[0]) + (S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#a155acf642ba2f521869f19d694cd7fa0">A2</a> * S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[1]) + (S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[2]);</div><div class="line"><a name="l05127"></a><span class="lineno"> 5127</span>&#160;</div><div class="line"><a name="l05128"></a><span class="lineno"> 5128</span>&#160;    <span class="comment">/* Update state */</span></div><div class="line"><a name="l05129"></a><span class="lineno"> 5129</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[1] = S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[0];</div><div class="line"><a name="l05130"></a><span class="lineno"> 5130</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[0] = in;</div><div class="line"><a name="l05131"></a><span class="lineno"> 5131</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">state</a>[2] = out;</div><div class="line"><a name="l05132"></a><span class="lineno"> 5132</span>&#160;</div><div class="line"><a name="l05133"></a><span class="lineno"> 5133</span>&#160;    <span class="comment">/* return to application */</span></div><div class="line"><a name="l05134"></a><span class="lineno"> 5134</span>&#160;    <span class="keywordflow">return</span> (out);</div><div class="line"><a name="l05135"></a><span class="lineno"> 5135</span>&#160;</div><div class="line"><a name="l05136"></a><span class="lineno"> 5136</span>&#160;  }</div><div class="line"><a name="l05137"></a><span class="lineno"> 5137</span>&#160;</div><div class="line"><a name="l05153"></a><span class="lineno"><a class="line" href="group___p_i_d.xhtml#ga5f6f941e7ae981728dd3a662f8f4ecd7"> 5153</a></span>&#160;  <span class="keyword">static</span> __INLINE q31_t <a class="code" href="group___p_i_d.xhtml#ga5f6f941e7ae981728dd3a662f8f4ecd7">arm_pid_q31</a>(</div><div class="line"><a name="l05154"></a><span class="lineno"> 5154</span>&#160;  <a class="code" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> * S,</div><div class="line"><a name="l05155"></a><span class="lineno"> 5155</span>&#160;  q31_t in)</div><div class="line"><a name="l05156"></a><span class="lineno"> 5156</span>&#160;  {</div><div class="line"><a name="l05157"></a><span class="lineno"> 5157</span>&#160;    q63_t acc;</div><div class="line"><a name="l05158"></a><span class="lineno"> 5158</span>&#160;    q31_t out;</div><div class="line"><a name="l05159"></a><span class="lineno"> 5159</span>&#160;</div><div class="line"><a name="l05160"></a><span class="lineno"> 5160</span>&#160;    <span class="comment">/* acc = A0 * x[n]  */</span></div><div class="line"><a name="l05161"></a><span class="lineno"> 5161</span>&#160;    acc = (<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#aa5332635ce9c7078cdb4c1ecf442eadd">A0</a> * in;</div><div class="line"><a name="l05162"></a><span class="lineno"> 5162</span>&#160;</div><div class="line"><a name="l05163"></a><span class="lineno"> 5163</span>&#160;    <span class="comment">/* acc += A1 * x[n-1] */</span></div><div class="line"><a name="l05164"></a><span class="lineno"> 5164</span>&#160;    acc += (q63_t) S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a2f7492bd6fb92fae5e2de7fbbec39b0e">A1</a> * S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[0];</div><div class="line"><a name="l05165"></a><span class="lineno"> 5165</span>&#160;</div><div class="line"><a name="l05166"></a><span class="lineno"> 5166</span>&#160;    <span class="comment">/* acc += A2 * x[n-2]  */</span></div><div class="line"><a name="l05167"></a><span class="lineno"> 5167</span>&#160;    acc += (<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a3e34537c53af4f9ad7bfffa4dff27c82">A2</a> * S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[1];</div><div class="line"><a name="l05168"></a><span class="lineno"> 5168</span>&#160;</div><div class="line"><a name="l05169"></a><span class="lineno"> 5169</span>&#160;    <span class="comment">/* convert output to 1.31 format to add y[n-1] */</span></div><div class="line"><a name="l05170"></a><span class="lineno"> 5170</span>&#160;    out = (q31_t) (acc &gt;&gt; 31u);</div><div class="line"><a name="l05171"></a><span class="lineno"> 5171</span>&#160;</div><div class="line"><a name="l05172"></a><span class="lineno"> 5172</span>&#160;    <span class="comment">/* out += y[n-1] */</span></div><div class="line"><a name="l05173"></a><span class="lineno"> 5173</span>&#160;    out += S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[2];</div><div class="line"><a name="l05174"></a><span class="lineno"> 5174</span>&#160;</div><div class="line"><a name="l05175"></a><span class="lineno"> 5175</span>&#160;    <span class="comment">/* Update state */</span></div><div class="line"><a name="l05176"></a><span class="lineno"> 5176</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[1] = S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[0];</div><div class="line"><a name="l05177"></a><span class="lineno"> 5177</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[0] = in;</div><div class="line"><a name="l05178"></a><span class="lineno"> 5178</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">state</a>[2] = out;</div><div class="line"><a name="l05179"></a><span class="lineno"> 5179</span>&#160;</div><div class="line"><a name="l05180"></a><span class="lineno"> 5180</span>&#160;    <span class="comment">/* return to application */</span></div><div class="line"><a name="l05181"></a><span class="lineno"> 5181</span>&#160;    <span class="keywordflow">return</span> (out);</div><div class="line"><a name="l05182"></a><span class="lineno"> 5182</span>&#160;</div><div class="line"><a name="l05183"></a><span class="lineno"> 5183</span>&#160;  }</div><div class="line"><a name="l05184"></a><span class="lineno"> 5184</span>&#160;</div><div class="line"><a name="l05201"></a><span class="lineno"><a class="line" href="group___p_i_d.xhtml#ga084f646bbb20d55f225c3efafcf7fc1f"> 5201</a></span>&#160;  <span class="keyword">static</span> __INLINE q15_t <a class="code" href="group___p_i_d.xhtml#ga084f646bbb20d55f225c3efafcf7fc1f">arm_pid_q15</a>(</div><div class="line"><a name="l05202"></a><span class="lineno"> 5202</span>&#160;  <a class="code" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> * S,</div><div class="line"><a name="l05203"></a><span class="lineno"> 5203</span>&#160;  q15_t in)</div><div class="line"><a name="l05204"></a><span class="lineno"> 5204</span>&#160;  {</div><div class="line"><a name="l05205"></a><span class="lineno"> 5205</span>&#160;    q63_t acc;</div><div class="line"><a name="l05206"></a><span class="lineno"> 5206</span>&#160;    q15_t out;</div><div class="line"><a name="l05207"></a><span class="lineno"> 5207</span>&#160;</div><div class="line"><a name="l05208"></a><span class="lineno"> 5208</span>&#160;<span class="preprocessor">#ifndef ARM_MATH_CM0_FAMILY</span></div><div class="line"><a name="l05209"></a><span class="lineno"> 5209</span>&#160;    __SIMD32_TYPE *vstate;</div><div class="line"><a name="l05210"></a><span class="lineno"> 5210</span>&#160;</div><div class="line"><a name="l05211"></a><span class="lineno"> 5211</span>&#160;    <span class="comment">/* Implementation of PID controller */</span></div><div class="line"><a name="l05212"></a><span class="lineno"> 5212</span>&#160;</div><div class="line"><a name="l05213"></a><span class="lineno"> 5213</span>&#160;    <span class="comment">/* acc = A0 * x[n]  */</span></div><div class="line"><a name="l05214"></a><span class="lineno"> 5214</span>&#160;    acc = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) __SMUAD(S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#ad77f3a2823c7f96de42c92a3fbf3246b">A0</a>, in);</div><div class="line"><a name="l05215"></a><span class="lineno"> 5215</span>&#160;</div><div class="line"><a name="l05216"></a><span class="lineno"> 5216</span>&#160;    <span class="comment">/* acc += A1 * x[n-1] + A2 * x[n-2]  */</span></div><div class="line"><a name="l05217"></a><span class="lineno"> 5217</span>&#160;    </div><div class="line"><a name="l05218"></a><span class="lineno"> 5218</span>&#160;<span class="preprocessor">        #pragma GCC diagnostic push</span></div><div class="line"><a name="l05219"></a><span class="lineno"> 5219</span>&#160;<span class="preprocessor">        #pragma GCC diagnostic ignored &quot;-Wcast-align&quot;</span></div><div class="line"><a name="l05220"></a><span class="lineno"> 5220</span>&#160;    vstate = <a class="code" href="arm__math_8h.xhtml#a1185d670d798aaf52eec13f0403f3407">__SIMD32_CONST</a>(S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>);</div><div class="line"><a name="l05221"></a><span class="lineno"> 5221</span>&#160;<span class="preprocessor">        #pragma GCC diagnostic pop</span></div><div class="line"><a name="l05222"></a><span class="lineno"> 5222</span>&#160;    acc = __SMLALD(S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a1b8412c517071962a9acfdc6778906ec">A1</a>, (q31_t) *vstate, acc);</div><div class="line"><a name="l05223"></a><span class="lineno"> 5223</span>&#160;</div><div class="line"><a name="l05224"></a><span class="lineno"> 5224</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l05225"></a><span class="lineno"> 5225</span>&#160;    <span class="comment">/* acc = A0 * x[n]  */</span></div><div class="line"><a name="l05226"></a><span class="lineno"> 5226</span>&#160;    acc = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#ad77f3a2823c7f96de42c92a3fbf3246b">A0</a>) * in;</div><div class="line"><a name="l05227"></a><span class="lineno"> 5227</span>&#160;</div><div class="line"><a name="l05228"></a><span class="lineno"> 5228</span>&#160;    <span class="comment">/* acc += A1 * x[n-1] + A2 * x[n-2]  */</span></div><div class="line"><a name="l05229"></a><span class="lineno"> 5229</span>&#160;    acc += (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a1b8412c517071962a9acfdc6778906ec">A1</a> * S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[0];</div><div class="line"><a name="l05230"></a><span class="lineno"> 5230</span>&#160;    acc += (q31_t) S-&gt;A2 * S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[1];</div><div class="line"><a name="l05231"></a><span class="lineno"> 5231</span>&#160;</div><div class="line"><a name="l05232"></a><span class="lineno"> 5232</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l05233"></a><span class="lineno"> 5233</span>&#160;</div><div class="line"><a name="l05234"></a><span class="lineno"> 5234</span>&#160;    <span class="comment">/* acc += y[n-1] */</span></div><div class="line"><a name="l05235"></a><span class="lineno"> 5235</span>&#160;    acc += (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[2] &lt;&lt; 15;</div><div class="line"><a name="l05236"></a><span class="lineno"> 5236</span>&#160;</div><div class="line"><a name="l05237"></a><span class="lineno"> 5237</span>&#160;    <span class="comment">/* saturate the output */</span></div><div class="line"><a name="l05238"></a><span class="lineno"> 5238</span>&#160;    out = (q15_t) (__SSAT((acc &gt;&gt; 15), 16));</div><div class="line"><a name="l05239"></a><span class="lineno"> 5239</span>&#160;</div><div class="line"><a name="l05240"></a><span class="lineno"> 5240</span>&#160;    <span class="comment">/* Update state */</span></div><div class="line"><a name="l05241"></a><span class="lineno"> 5241</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[1] = S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[0];</div><div class="line"><a name="l05242"></a><span class="lineno"> 5242</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[0] = in;</div><div class="line"><a name="l05243"></a><span class="lineno"> 5243</span>&#160;    S-&gt;<a class="code" href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">state</a>[2] = out;</div><div class="line"><a name="l05244"></a><span class="lineno"> 5244</span>&#160;</div><div class="line"><a name="l05245"></a><span class="lineno"> 5245</span>&#160;    <span class="comment">/* return to application */</span></div><div class="line"><a name="l05246"></a><span class="lineno"> 5246</span>&#160;    <span class="keywordflow">return</span> (out);</div><div class="line"><a name="l05247"></a><span class="lineno"> 5247</span>&#160;</div><div class="line"><a name="l05248"></a><span class="lineno"> 5248</span>&#160;  }</div><div class="line"><a name="l05249"></a><span class="lineno"> 5249</span>&#160;</div><div class="line"><a name="l05263"></a><span class="lineno"> 5263</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#ab1283b23c96da04362a0efcdc7f23901">arm_mat_inverse_f32</a>(</div><div class="line"><a name="l05264"></a><span class="lineno"> 5264</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * src,</div><div class="line"><a name="l05265"></a><span class="lineno"> 5265</span>&#160;  <a class="code" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> * dst);</div><div class="line"><a name="l05266"></a><span class="lineno"> 5266</span>&#160;</div><div class="line"><a name="l05267"></a><span class="lineno"> 5267</span>&#160;</div><div class="line"><a name="l05276"></a><span class="lineno"> 5276</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="arm__math_8h.xhtml#a3dd167a2b71330f9f7b606374e9ec063">arm_mat_inverse_f64</a>(</div><div class="line"><a name="l05277"></a><span class="lineno"> 5277</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> * src,</div><div class="line"><a name="l05278"></a><span class="lineno"> 5278</span>&#160;  <a class="code" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> * dst);</div><div class="line"><a name="l05279"></a><span class="lineno"> 5279</span>&#160;</div><div class="line"><a name="l05280"></a><span class="lineno"> 5280</span>&#160;</div><div class="line"><a name="l05281"></a><span class="lineno"> 5281</span>&#160;</div><div class="line"><a name="l05324"></a><span class="lineno"><a class="line" href="group__clarke.xhtml#ga2b4ebec76215e1277c970c269ffdbd76"> 5324</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__clarke.xhtml#ga2b4ebec76215e1277c970c269ffdbd76">arm_clarke_f32</a>(</div><div class="line"><a name="l05325"></a><span class="lineno"> 5325</span>&#160;  float32_t Ia,</div><div class="line"><a name="l05326"></a><span class="lineno"> 5326</span>&#160;  float32_t Ib,</div><div class="line"><a name="l05327"></a><span class="lineno"> 5327</span>&#160;  float32_t * pIalpha,</div><div class="line"><a name="l05328"></a><span class="lineno"> 5328</span>&#160;  float32_t * pIbeta)</div><div class="line"><a name="l05329"></a><span class="lineno"> 5329</span>&#160;  {</div><div class="line"><a name="l05330"></a><span class="lineno"> 5330</span>&#160;    <span class="comment">/* Calculate pIalpha using the equation, pIalpha = Ia */</span></div><div class="line"><a name="l05331"></a><span class="lineno"> 5331</span>&#160;    *pIalpha = Ia;</div><div class="line"><a name="l05332"></a><span class="lineno"> 5332</span>&#160;</div><div class="line"><a name="l05333"></a><span class="lineno"> 5333</span>&#160;    <span class="comment">/* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */</span></div><div class="line"><a name="l05334"></a><span class="lineno"> 5334</span>&#160;    *pIbeta =</div><div class="line"><a name="l05335"></a><span class="lineno"> 5335</span>&#160;      ((<a class="code" href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);</div><div class="line"><a name="l05336"></a><span class="lineno"> 5336</span>&#160;</div><div class="line"><a name="l05337"></a><span class="lineno"> 5337</span>&#160;  }</div><div class="line"><a name="l05338"></a><span class="lineno"> 5338</span>&#160;</div><div class="line"><a name="l05354"></a><span class="lineno"><a class="line" href="group__clarke.xhtml#ga7fd106ca8d346a2a472842e0656014c1"> 5354</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__clarke.xhtml#ga7fd106ca8d346a2a472842e0656014c1">arm_clarke_q31</a>(</div><div class="line"><a name="l05355"></a><span class="lineno"> 5355</span>&#160;  q31_t Ia,</div><div class="line"><a name="l05356"></a><span class="lineno"> 5356</span>&#160;  q31_t Ib,</div><div class="line"><a name="l05357"></a><span class="lineno"> 5357</span>&#160;  q31_t * pIalpha,</div><div class="line"><a name="l05358"></a><span class="lineno"> 5358</span>&#160;  q31_t * pIbeta)</div><div class="line"><a name="l05359"></a><span class="lineno"> 5359</span>&#160;  {</div><div class="line"><a name="l05360"></a><span class="lineno"> 5360</span>&#160;    q31_t product1, product2;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05361"></a><span class="lineno"> 5361</span>&#160;</div><div class="line"><a name="l05362"></a><span class="lineno"> 5362</span>&#160;    <span class="comment">/* Calculating pIalpha from Ia by equation pIalpha = Ia */</span></div><div class="line"><a name="l05363"></a><span class="lineno"> 5363</span>&#160;    *pIalpha = Ia;</div><div class="line"><a name="l05364"></a><span class="lineno"> 5364</span>&#160;</div><div class="line"><a name="l05365"></a><span class="lineno"> 5365</span>&#160;    <span class="comment">/* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */</span></div><div class="line"><a name="l05366"></a><span class="lineno"> 5366</span>&#160;    product1 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) Ia * 0x24F34E8B) &gt;&gt; 30);</div><div class="line"><a name="l05367"></a><span class="lineno"> 5367</span>&#160;</div><div class="line"><a name="l05368"></a><span class="lineno"> 5368</span>&#160;    <span class="comment">/* Intermediate product is calculated by (2/sqrt(3) * Ib) */</span></div><div class="line"><a name="l05369"></a><span class="lineno"> 5369</span>&#160;    product2 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) Ib * 0x49E69D16) &gt;&gt; 30);</div><div class="line"><a name="l05370"></a><span class="lineno"> 5370</span>&#160;</div><div class="line"><a name="l05371"></a><span class="lineno"> 5371</span>&#160;    <span class="comment">/* pIbeta is calculated by adding the intermediate products */</span></div><div class="line"><a name="l05372"></a><span class="lineno"> 5372</span>&#160;    *pIbeta = __QADD(product1, product2);</div><div class="line"><a name="l05373"></a><span class="lineno"> 5373</span>&#160;  }</div><div class="line"><a name="l05374"></a><span class="lineno"> 5374</span>&#160;</div><div class="line"><a name="l05386"></a><span class="lineno"> 5386</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad8958cd3cb7f521466168b46a25b7908">arm_q7_to_q31</a>(</div><div class="line"><a name="l05387"></a><span class="lineno"> 5387</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l05388"></a><span class="lineno"> 5388</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l05389"></a><span class="lineno"> 5389</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l05390"></a><span class="lineno"> 5390</span>&#160;</div><div class="line"><a name="l05391"></a><span class="lineno"> 5391</span>&#160;</div><div class="line"><a name="l05392"></a><span class="lineno"> 5392</span>&#160;</div><div class="line"><a name="l05393"></a><span class="lineno"> 5393</span>&#160;</div><div class="line"><a name="l05429"></a><span class="lineno"><a class="line" href="group__inv__clarke.xhtml#ga137f0396d837477b899ecae89f075a50"> 5429</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__inv__clarke.xhtml#ga137f0396d837477b899ecae89f075a50">arm_inv_clarke_f32</a>(</div><div class="line"><a name="l05430"></a><span class="lineno"> 5430</span>&#160;  float32_t Ialpha,</div><div class="line"><a name="l05431"></a><span class="lineno"> 5431</span>&#160;  float32_t Ibeta,</div><div class="line"><a name="l05432"></a><span class="lineno"> 5432</span>&#160;  float32_t * pIa,</div><div class="line"><a name="l05433"></a><span class="lineno"> 5433</span>&#160;  float32_t * pIb)</div><div class="line"><a name="l05434"></a><span class="lineno"> 5434</span>&#160;  {</div><div class="line"><a name="l05435"></a><span class="lineno"> 5435</span>&#160;    <span class="comment">/* Calculating pIa from Ialpha by equation pIa = Ialpha */</span></div><div class="line"><a name="l05436"></a><span class="lineno"> 5436</span>&#160;    *pIa = Ialpha;</div><div class="line"><a name="l05437"></a><span class="lineno"> 5437</span>&#160;</div><div class="line"><a name="l05438"></a><span class="lineno"> 5438</span>&#160;    <span class="comment">/* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibeta */</span></div><div class="line"><a name="l05439"></a><span class="lineno"> 5439</span>&#160;    *pIb = -0.5 * Ialpha + (<a class="code" href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>) 0.8660254039 *Ibeta;</div><div class="line"><a name="l05440"></a><span class="lineno"> 5440</span>&#160;</div><div class="line"><a name="l05441"></a><span class="lineno"> 5441</span>&#160;  }</div><div class="line"><a name="l05442"></a><span class="lineno"> 5442</span>&#160;</div><div class="line"><a name="l05458"></a><span class="lineno"><a class="line" href="group__inv__clarke.xhtml#ga2d0c60f114f095a2f27442d98781ba02"> 5458</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__inv__clarke.xhtml#ga2d0c60f114f095a2f27442d98781ba02">arm_inv_clarke_q31</a>(</div><div class="line"><a name="l05459"></a><span class="lineno"> 5459</span>&#160;  q31_t Ialpha,</div><div class="line"><a name="l05460"></a><span class="lineno"> 5460</span>&#160;  q31_t Ibeta,</div><div class="line"><a name="l05461"></a><span class="lineno"> 5461</span>&#160;  q31_t * pIa,</div><div class="line"><a name="l05462"></a><span class="lineno"> 5462</span>&#160;  q31_t * pIb)</div><div class="line"><a name="l05463"></a><span class="lineno"> 5463</span>&#160;  {</div><div class="line"><a name="l05464"></a><span class="lineno"> 5464</span>&#160;    q31_t product1, product2;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05465"></a><span class="lineno"> 5465</span>&#160;</div><div class="line"><a name="l05466"></a><span class="lineno"> 5466</span>&#160;    <span class="comment">/* Calculating pIa from Ialpha by equation pIa = Ialpha */</span></div><div class="line"><a name="l05467"></a><span class="lineno"> 5467</span>&#160;    *pIa = Ialpha;</div><div class="line"><a name="l05468"></a><span class="lineno"> 5468</span>&#160;</div><div class="line"><a name="l05469"></a><span class="lineno"> 5469</span>&#160;    <span class="comment">/* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */</span></div><div class="line"><a name="l05470"></a><span class="lineno"> 5470</span>&#160;    product1 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ialpha) * (0x40000000)) &gt;&gt; 31);</div><div class="line"><a name="l05471"></a><span class="lineno"> 5471</span>&#160;</div><div class="line"><a name="l05472"></a><span class="lineno"> 5472</span>&#160;    <span class="comment">/* Intermediate product is calculated by (1/sqrt(3) * pIb) */</span></div><div class="line"><a name="l05473"></a><span class="lineno"> 5473</span>&#160;    product2 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ibeta) * (0x6ED9EBA1)) &gt;&gt; 31);</div><div class="line"><a name="l05474"></a><span class="lineno"> 5474</span>&#160;</div><div class="line"><a name="l05475"></a><span class="lineno"> 5475</span>&#160;    <span class="comment">/* pIb is calculated by subtracting the products */</span></div><div class="line"><a name="l05476"></a><span class="lineno"> 5476</span>&#160;    *pIb = __QSUB(product2, product1);</div><div class="line"><a name="l05477"></a><span class="lineno"> 5477</span>&#160;</div><div class="line"><a name="l05478"></a><span class="lineno"> 5478</span>&#160;  }</div><div class="line"><a name="l05479"></a><span class="lineno"> 5479</span>&#160;</div><div class="line"><a name="l05491"></a><span class="lineno"> 5491</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#abc02597fc3f01033daf43ec0547a2f78">arm_q7_to_q15</a>(</div><div class="line"><a name="l05492"></a><span class="lineno"> 5492</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l05493"></a><span class="lineno"> 5493</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l05494"></a><span class="lineno"> 5494</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l05495"></a><span class="lineno"> 5495</span>&#160;</div><div class="line"><a name="l05496"></a><span class="lineno"> 5496</span>&#160;</div><div class="line"><a name="l05497"></a><span class="lineno"> 5497</span>&#160;</div><div class="line"><a name="l05545"></a><span class="lineno"><a class="line" href="group__park.xhtml#ga08b3a683197de7e143fb00497787683c"> 5545</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__park.xhtml#ga08b3a683197de7e143fb00497787683c">arm_park_f32</a>(</div><div class="line"><a name="l05546"></a><span class="lineno"> 5546</span>&#160;  float32_t Ialpha,</div><div class="line"><a name="l05547"></a><span class="lineno"> 5547</span>&#160;  float32_t Ibeta,</div><div class="line"><a name="l05548"></a><span class="lineno"> 5548</span>&#160;  float32_t * pId,</div><div class="line"><a name="l05549"></a><span class="lineno"> 5549</span>&#160;  float32_t * pIq,</div><div class="line"><a name="l05550"></a><span class="lineno"> 5550</span>&#160;  float32_t sinVal,</div><div class="line"><a name="l05551"></a><span class="lineno"> 5551</span>&#160;  float32_t cosVal)</div><div class="line"><a name="l05552"></a><span class="lineno"> 5552</span>&#160;  {</div><div class="line"><a name="l05553"></a><span class="lineno"> 5553</span>&#160;    <span class="comment">/* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */</span></div><div class="line"><a name="l05554"></a><span class="lineno"> 5554</span>&#160;    *pId = Ialpha * cosVal + Ibeta * sinVal;</div><div class="line"><a name="l05555"></a><span class="lineno"> 5555</span>&#160;</div><div class="line"><a name="l05556"></a><span class="lineno"> 5556</span>&#160;    <span class="comment">/* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */</span></div><div class="line"><a name="l05557"></a><span class="lineno"> 5557</span>&#160;    *pIq = -Ialpha * sinVal + Ibeta * cosVal;</div><div class="line"><a name="l05558"></a><span class="lineno"> 5558</span>&#160;</div><div class="line"><a name="l05559"></a><span class="lineno"> 5559</span>&#160;  }</div><div class="line"><a name="l05560"></a><span class="lineno"> 5560</span>&#160;</div><div class="line"><a name="l05579"></a><span class="lineno"><a class="line" href="group__park.xhtml#gaf4cc6370c0cfc14ea66774ed3c5bb10f"> 5579</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__park.xhtml#gaf4cc6370c0cfc14ea66774ed3c5bb10f">arm_park_q31</a>(</div><div class="line"><a name="l05580"></a><span class="lineno"> 5580</span>&#160;  q31_t Ialpha,</div><div class="line"><a name="l05581"></a><span class="lineno"> 5581</span>&#160;  q31_t Ibeta,</div><div class="line"><a name="l05582"></a><span class="lineno"> 5582</span>&#160;  q31_t * pId,</div><div class="line"><a name="l05583"></a><span class="lineno"> 5583</span>&#160;  q31_t * pIq,</div><div class="line"><a name="l05584"></a><span class="lineno"> 5584</span>&#160;  q31_t sinVal,</div><div class="line"><a name="l05585"></a><span class="lineno"> 5585</span>&#160;  q31_t cosVal)</div><div class="line"><a name="l05586"></a><span class="lineno"> 5586</span>&#160;  {</div><div class="line"><a name="l05587"></a><span class="lineno"> 5587</span>&#160;    q31_t product1, product2;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05588"></a><span class="lineno"> 5588</span>&#160;    q31_t product3, product4;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05589"></a><span class="lineno"> 5589</span>&#160;</div><div class="line"><a name="l05590"></a><span class="lineno"> 5590</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Ialpha * cosVal) */</span></div><div class="line"><a name="l05591"></a><span class="lineno"> 5591</span>&#160;    product1 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ialpha) * (cosVal)) &gt;&gt; 31);</div><div class="line"><a name="l05592"></a><span class="lineno"> 5592</span>&#160;</div><div class="line"><a name="l05593"></a><span class="lineno"> 5593</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Ibeta * sinVal) */</span></div><div class="line"><a name="l05594"></a><span class="lineno"> 5594</span>&#160;    product2 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ibeta) * (sinVal)) &gt;&gt; 31);</div><div class="line"><a name="l05595"></a><span class="lineno"> 5595</span>&#160;</div><div class="line"><a name="l05596"></a><span class="lineno"> 5596</span>&#160;</div><div class="line"><a name="l05597"></a><span class="lineno"> 5597</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Ialpha * sinVal) */</span></div><div class="line"><a name="l05598"></a><span class="lineno"> 5598</span>&#160;    product3 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ialpha) * (sinVal)) &gt;&gt; 31);</div><div class="line"><a name="l05599"></a><span class="lineno"> 5599</span>&#160;</div><div class="line"><a name="l05600"></a><span class="lineno"> 5600</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Ibeta * cosVal) */</span></div><div class="line"><a name="l05601"></a><span class="lineno"> 5601</span>&#160;    product4 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Ibeta) * (cosVal)) &gt;&gt; 31);</div><div class="line"><a name="l05602"></a><span class="lineno"> 5602</span>&#160;</div><div class="line"><a name="l05603"></a><span class="lineno"> 5603</span>&#160;    <span class="comment">/* Calculate pId by adding the two intermediate products 1 and 2 */</span></div><div class="line"><a name="l05604"></a><span class="lineno"> 5604</span>&#160;    *pId = __QADD(product1, product2);</div><div class="line"><a name="l05605"></a><span class="lineno"> 5605</span>&#160;</div><div class="line"><a name="l05606"></a><span class="lineno"> 5606</span>&#160;    <span class="comment">/* Calculate pIq by subtracting the two intermediate products 3 from 4 */</span></div><div class="line"><a name="l05607"></a><span class="lineno"> 5607</span>&#160;    *pIq = __QSUB(product4, product3);</div><div class="line"><a name="l05608"></a><span class="lineno"> 5608</span>&#160;  }</div><div class="line"><a name="l05609"></a><span class="lineno"> 5609</span>&#160;</div><div class="line"><a name="l05621"></a><span class="lineno"> 5621</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a656620f957b65512ed83db03fd455ec5">arm_q7_to_float</a>(</div><div class="line"><a name="l05622"></a><span class="lineno"> 5622</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l05623"></a><span class="lineno"> 5623</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l05624"></a><span class="lineno"> 5624</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l05625"></a><span class="lineno"> 5625</span>&#160;</div><div class="line"><a name="l05626"></a><span class="lineno"> 5626</span>&#160;</div><div class="line"><a name="l05664"></a><span class="lineno"><a class="line" href="group__inv__park.xhtml#gaaf6bef0de21946f774d49df050dd8b05"> 5664</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__inv__park.xhtml#gaaf6bef0de21946f774d49df050dd8b05">arm_inv_park_f32</a>(</div><div class="line"><a name="l05665"></a><span class="lineno"> 5665</span>&#160;  float32_t Id,</div><div class="line"><a name="l05666"></a><span class="lineno"> 5666</span>&#160;  float32_t Iq,</div><div class="line"><a name="l05667"></a><span class="lineno"> 5667</span>&#160;  float32_t * pIalpha,</div><div class="line"><a name="l05668"></a><span class="lineno"> 5668</span>&#160;  float32_t * pIbeta,</div><div class="line"><a name="l05669"></a><span class="lineno"> 5669</span>&#160;  float32_t sinVal,</div><div class="line"><a name="l05670"></a><span class="lineno"> 5670</span>&#160;  float32_t cosVal)</div><div class="line"><a name="l05671"></a><span class="lineno"> 5671</span>&#160;  {</div><div class="line"><a name="l05672"></a><span class="lineno"> 5672</span>&#160;    <span class="comment">/* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */</span></div><div class="line"><a name="l05673"></a><span class="lineno"> 5673</span>&#160;    *pIalpha = Id * cosVal - Iq * sinVal;</div><div class="line"><a name="l05674"></a><span class="lineno"> 5674</span>&#160;</div><div class="line"><a name="l05675"></a><span class="lineno"> 5675</span>&#160;    <span class="comment">/* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */</span></div><div class="line"><a name="l05676"></a><span class="lineno"> 5676</span>&#160;    *pIbeta = Id * sinVal + Iq * cosVal;</div><div class="line"><a name="l05677"></a><span class="lineno"> 5677</span>&#160;</div><div class="line"><a name="l05678"></a><span class="lineno"> 5678</span>&#160;  }</div><div class="line"><a name="l05679"></a><span class="lineno"> 5679</span>&#160;</div><div class="line"><a name="l05680"></a><span class="lineno"> 5680</span>&#160;</div><div class="line"><a name="l05699"></a><span class="lineno"><a class="line" href="group__inv__park.xhtml#ga0b33822b988a15455773d28440c5579a"> 5699</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="group__inv__park.xhtml#ga0b33822b988a15455773d28440c5579a">arm_inv_park_q31</a>(</div><div class="line"><a name="l05700"></a><span class="lineno"> 5700</span>&#160;  q31_t Id,</div><div class="line"><a name="l05701"></a><span class="lineno"> 5701</span>&#160;  q31_t Iq,</div><div class="line"><a name="l05702"></a><span class="lineno"> 5702</span>&#160;  q31_t * pIalpha,</div><div class="line"><a name="l05703"></a><span class="lineno"> 5703</span>&#160;  q31_t * pIbeta,</div><div class="line"><a name="l05704"></a><span class="lineno"> 5704</span>&#160;  q31_t sinVal,</div><div class="line"><a name="l05705"></a><span class="lineno"> 5705</span>&#160;  q31_t cosVal)</div><div class="line"><a name="l05706"></a><span class="lineno"> 5706</span>&#160;  {</div><div class="line"><a name="l05707"></a><span class="lineno"> 5707</span>&#160;    q31_t product1, product2;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05708"></a><span class="lineno"> 5708</span>&#160;    q31_t product3, product4;                    <span class="comment">/* Temporary variables used to store intermediate results */</span></div><div class="line"><a name="l05709"></a><span class="lineno"> 5709</span>&#160;</div><div class="line"><a name="l05710"></a><span class="lineno"> 5710</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Id * cosVal) */</span></div><div class="line"><a name="l05711"></a><span class="lineno"> 5711</span>&#160;    product1 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Id) * (cosVal)) &gt;&gt; 31);</div><div class="line"><a name="l05712"></a><span class="lineno"> 5712</span>&#160;</div><div class="line"><a name="l05713"></a><span class="lineno"> 5713</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Iq * sinVal) */</span></div><div class="line"><a name="l05714"></a><span class="lineno"> 5714</span>&#160;    product2 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Iq) * (sinVal)) &gt;&gt; 31);</div><div class="line"><a name="l05715"></a><span class="lineno"> 5715</span>&#160;</div><div class="line"><a name="l05716"></a><span class="lineno"> 5716</span>&#160;</div><div class="line"><a name="l05717"></a><span class="lineno"> 5717</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Id * sinVal) */</span></div><div class="line"><a name="l05718"></a><span class="lineno"> 5718</span>&#160;    product3 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Id) * (sinVal)) &gt;&gt; 31);</div><div class="line"><a name="l05719"></a><span class="lineno"> 5719</span>&#160;</div><div class="line"><a name="l05720"></a><span class="lineno"> 5720</span>&#160;    <span class="comment">/* Intermediate product is calculated by (Iq * cosVal) */</span></div><div class="line"><a name="l05721"></a><span class="lineno"> 5721</span>&#160;    product4 = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) (Iq) * (cosVal)) &gt;&gt; 31);</div><div class="line"><a name="l05722"></a><span class="lineno"> 5722</span>&#160;</div><div class="line"><a name="l05723"></a><span class="lineno"> 5723</span>&#160;    <span class="comment">/* Calculate pIalpha by using the two intermediate products 1 and 2 */</span></div><div class="line"><a name="l05724"></a><span class="lineno"> 5724</span>&#160;    *pIalpha = __QSUB(product1, product2);</div><div class="line"><a name="l05725"></a><span class="lineno"> 5725</span>&#160;</div><div class="line"><a name="l05726"></a><span class="lineno"> 5726</span>&#160;    <span class="comment">/* Calculate pIbeta by using the two intermediate products 3 and 4 */</span></div><div class="line"><a name="l05727"></a><span class="lineno"> 5727</span>&#160;    *pIbeta = __QADD(product4, product3);</div><div class="line"><a name="l05728"></a><span class="lineno"> 5728</span>&#160;</div><div class="line"><a name="l05729"></a><span class="lineno"> 5729</span>&#160;  }</div><div class="line"><a name="l05730"></a><span class="lineno"> 5730</span>&#160;</div><div class="line"><a name="l05743"></a><span class="lineno"> 5743</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#acf407b007a37da18e99dabd9023c56b4">arm_q31_to_float</a>(</div><div class="line"><a name="l05744"></a><span class="lineno"> 5744</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l05745"></a><span class="lineno"> 5745</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l05746"></a><span class="lineno"> 5746</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l05747"></a><span class="lineno"> 5747</span>&#160;</div><div class="line"><a name="l05797"></a><span class="lineno"><a class="line" href="group___linear_interpolate.xhtml#ga2269263d810cafcd19681957b37d5cf6"> 5797</a></span>&#160;  <span class="keyword">static</span> __INLINE float32_t <a class="code" href="group___linear_interpolate.xhtml#ga2269263d810cafcd19681957b37d5cf6">arm_linear_interp_f32</a>(</div><div class="line"><a name="l05798"></a><span class="lineno"> 5798</span>&#160;  <a class="code" href="structarm__linear__interp__instance__f32.xhtml">arm_linear_interp_instance_f32</a> * S,</div><div class="line"><a name="l05799"></a><span class="lineno"> 5799</span>&#160;  float32_t x)</div><div class="line"><a name="l05800"></a><span class="lineno"> 5800</span>&#160;  {</div><div class="line"><a name="l05801"></a><span class="lineno"> 5801</span>&#160;</div><div class="line"><a name="l05802"></a><span class="lineno"> 5802</span>&#160;    float32_t y;</div><div class="line"><a name="l05803"></a><span class="lineno"> 5803</span>&#160;    float32_t x0, x1;                            <span class="comment">/* Nearest input values */</span></div><div class="line"><a name="l05804"></a><span class="lineno"> 5804</span>&#160;    float32_t y0, y1;                            <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l05805"></a><span class="lineno"> 5805</span>&#160;    float32_t xSpacing = S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#aa8e2d686b5434a406d390b347b183511">xSpacing</a>;            <span class="comment">/* spacing between input values */</span></div><div class="line"><a name="l05806"></a><span class="lineno"> 5806</span>&#160;    int32_t i;                                   <span class="comment">/* Index variable */</span></div><div class="line"><a name="l05807"></a><span class="lineno"> 5807</span>&#160;    float32_t *pYData = S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#ab373001f6afad0850359c344a4d7eee4">pYData</a>;               <span class="comment">/* pointer to output table */</span></div><div class="line"><a name="l05808"></a><span class="lineno"> 5808</span>&#160;</div><div class="line"><a name="l05809"></a><span class="lineno"> 5809</span>&#160;    <span class="comment">/* Calculation of index */</span></div><div class="line"><a name="l05810"></a><span class="lineno"> 5810</span>&#160;    i = (int32_t) ((x - S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481">x1</a>) / xSpacing);</div><div class="line"><a name="l05811"></a><span class="lineno"> 5811</span>&#160;</div><div class="line"><a name="l05812"></a><span class="lineno"> 5812</span>&#160;    <span class="keywordflow">if</span>(i &lt; 0)</div><div class="line"><a name="l05813"></a><span class="lineno"> 5813</span>&#160;    {</div><div class="line"><a name="l05814"></a><span class="lineno"> 5814</span>&#160;      <span class="comment">/* Iniatilize output for below specified range as least output value of table */</span></div><div class="line"><a name="l05815"></a><span class="lineno"> 5815</span>&#160;      y = pYData[0];</div><div class="line"><a name="l05816"></a><span class="lineno"> 5816</span>&#160;    }</div><div class="line"><a name="l05817"></a><span class="lineno"> 5817</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>((uint32_t)i &gt;= S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#a95f02a926b16d35359aca5b31e813b11">nValues</a>)</div><div class="line"><a name="l05818"></a><span class="lineno"> 5818</span>&#160;    {</div><div class="line"><a name="l05819"></a><span class="lineno"> 5819</span>&#160;      <span class="comment">/* Iniatilize output for above specified range as last output value of table */</span></div><div class="line"><a name="l05820"></a><span class="lineno"> 5820</span>&#160;      y = pYData[S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#a95f02a926b16d35359aca5b31e813b11">nValues</a> - 1];</div><div class="line"><a name="l05821"></a><span class="lineno"> 5821</span>&#160;    }</div><div class="line"><a name="l05822"></a><span class="lineno"> 5822</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l05823"></a><span class="lineno"> 5823</span>&#160;    {</div><div class="line"><a name="l05824"></a><span class="lineno"> 5824</span>&#160;      <span class="comment">/* Calculation of nearest input values */</span></div><div class="line"><a name="l05825"></a><span class="lineno"> 5825</span>&#160;      x0 = S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481">x1</a> + i * xSpacing;</div><div class="line"><a name="l05826"></a><span class="lineno"> 5826</span>&#160;      x1 = S-&gt;<a class="code" href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481">x1</a> + (i + 1) * xSpacing;</div><div class="line"><a name="l05827"></a><span class="lineno"> 5827</span>&#160;</div><div class="line"><a name="l05828"></a><span class="lineno"> 5828</span>&#160;      <span class="comment">/* Read of nearest output values */</span></div><div class="line"><a name="l05829"></a><span class="lineno"> 5829</span>&#160;      y0 = pYData[i];</div><div class="line"><a name="l05830"></a><span class="lineno"> 5830</span>&#160;      y1 = pYData[i + 1];</div><div class="line"><a name="l05831"></a><span class="lineno"> 5831</span>&#160;</div><div class="line"><a name="l05832"></a><span class="lineno"> 5832</span>&#160;      <span class="comment">/* Calculation of output */</span></div><div class="line"><a name="l05833"></a><span class="lineno"> 5833</span>&#160;      y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));</div><div class="line"><a name="l05834"></a><span class="lineno"> 5834</span>&#160;</div><div class="line"><a name="l05835"></a><span class="lineno"> 5835</span>&#160;    }</div><div class="line"><a name="l05836"></a><span class="lineno"> 5836</span>&#160;</div><div class="line"><a name="l05837"></a><span class="lineno"> 5837</span>&#160;    <span class="comment">/* returns output value */</span></div><div class="line"><a name="l05838"></a><span class="lineno"> 5838</span>&#160;    <span class="keywordflow">return</span> (y);</div><div class="line"><a name="l05839"></a><span class="lineno"> 5839</span>&#160;  }</div><div class="line"><a name="l05840"></a><span class="lineno"> 5840</span>&#160;</div><div class="line"><a name="l05856"></a><span class="lineno"><a class="line" href="group___linear_interpolate.xhtml#ga690e63e9a513ca0a741b1b174805d031"> 5856</a></span>&#160;  <span class="keyword">static</span> __INLINE q31_t <a class="code" href="group___linear_interpolate.xhtml#ga690e63e9a513ca0a741b1b174805d031">arm_linear_interp_q31</a>(</div><div class="line"><a name="l05857"></a><span class="lineno"> 5857</span>&#160;  q31_t * pYData,</div><div class="line"><a name="l05858"></a><span class="lineno"> 5858</span>&#160;  q31_t x,</div><div class="line"><a name="l05859"></a><span class="lineno"> 5859</span>&#160;  uint32_t nValues)</div><div class="line"><a name="l05860"></a><span class="lineno"> 5860</span>&#160;  {</div><div class="line"><a name="l05861"></a><span class="lineno"> 5861</span>&#160;    q31_t y;                                     <span class="comment">/* output */</span></div><div class="line"><a name="l05862"></a><span class="lineno"> 5862</span>&#160;    q31_t y0, y1;                                <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l05863"></a><span class="lineno"> 5863</span>&#160;    q31_t fract;                                 <span class="comment">/* fractional part */</span></div><div class="line"><a name="l05864"></a><span class="lineno"> 5864</span>&#160;    int32_t index;                               <span class="comment">/* Index to read nearest output values */</span></div><div class="line"><a name="l05865"></a><span class="lineno"> 5865</span>&#160;</div><div class="line"><a name="l05866"></a><span class="lineno"> 5866</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l05867"></a><span class="lineno"> 5867</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l05868"></a><span class="lineno"> 5868</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l05869"></a><span class="lineno"> 5869</span>&#160;    index = ((x &amp; 0xFFF00000) &gt;&gt; 20);</div><div class="line"><a name="l05870"></a><span class="lineno"> 5870</span>&#160;</div><div class="line"><a name="l05871"></a><span class="lineno"> 5871</span>&#160;    <span class="keywordflow">if</span>(index &gt;= (int32_t)(nValues - 1))</div><div class="line"><a name="l05872"></a><span class="lineno"> 5872</span>&#160;    {</div><div class="line"><a name="l05873"></a><span class="lineno"> 5873</span>&#160;      <span class="keywordflow">return</span> (pYData[nValues - 1]);</div><div class="line"><a name="l05874"></a><span class="lineno"> 5874</span>&#160;    }</div><div class="line"><a name="l05875"></a><span class="lineno"> 5875</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(index &lt; 0)</div><div class="line"><a name="l05876"></a><span class="lineno"> 5876</span>&#160;    {</div><div class="line"><a name="l05877"></a><span class="lineno"> 5877</span>&#160;      <span class="keywordflow">return</span> (pYData[0]);</div><div class="line"><a name="l05878"></a><span class="lineno"> 5878</span>&#160;    }</div><div class="line"><a name="l05879"></a><span class="lineno"> 5879</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l05880"></a><span class="lineno"> 5880</span>&#160;    {</div><div class="line"><a name="l05881"></a><span class="lineno"> 5881</span>&#160;</div><div class="line"><a name="l05882"></a><span class="lineno"> 5882</span>&#160;      <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l05883"></a><span class="lineno"> 5883</span>&#160;      <span class="comment">/* shift left by 11 to keep fract in 1.31 format */</span></div><div class="line"><a name="l05884"></a><span class="lineno"> 5884</span>&#160;      fract = (x &amp; 0x000FFFFF) &lt;&lt; 11;</div><div class="line"><a name="l05885"></a><span class="lineno"> 5885</span>&#160;</div><div class="line"><a name="l05886"></a><span class="lineno"> 5886</span>&#160;      <span class="comment">/* Read two nearest output values from the index in 1.31(q31) format */</span></div><div class="line"><a name="l05887"></a><span class="lineno"> 5887</span>&#160;      y0 = pYData[index];</div><div class="line"><a name="l05888"></a><span class="lineno"> 5888</span>&#160;      y1 = pYData[index + 1u];</div><div class="line"><a name="l05889"></a><span class="lineno"> 5889</span>&#160;</div><div class="line"><a name="l05890"></a><span class="lineno"> 5890</span>&#160;      <span class="comment">/* Calculation of y0 * (1-fract) and y is in 2.30 format */</span></div><div class="line"><a name="l05891"></a><span class="lineno"> 5891</span>&#160;      y = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) y0 * (0x7FFFFFFF - fract) &gt;&gt; 32));</div><div class="line"><a name="l05892"></a><span class="lineno"> 5892</span>&#160;</div><div class="line"><a name="l05893"></a><span class="lineno"> 5893</span>&#160;      <span class="comment">/* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */</span></div><div class="line"><a name="l05894"></a><span class="lineno"> 5894</span>&#160;      y += ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) y1 * fract) &gt;&gt; 32));</div><div class="line"><a name="l05895"></a><span class="lineno"> 5895</span>&#160;</div><div class="line"><a name="l05896"></a><span class="lineno"> 5896</span>&#160;      <span class="comment">/* Convert y to 1.31 format */</span></div><div class="line"><a name="l05897"></a><span class="lineno"> 5897</span>&#160;      <span class="keywordflow">return</span> (y &lt;&lt; 1u);</div><div class="line"><a name="l05898"></a><span class="lineno"> 5898</span>&#160;</div><div class="line"><a name="l05899"></a><span class="lineno"> 5899</span>&#160;    }</div><div class="line"><a name="l05900"></a><span class="lineno"> 5900</span>&#160;</div><div class="line"><a name="l05901"></a><span class="lineno"> 5901</span>&#160;  }</div><div class="line"><a name="l05902"></a><span class="lineno"> 5902</span>&#160;</div><div class="line"><a name="l05918"></a><span class="lineno"><a class="line" href="group___linear_interpolate.xhtml#ga42c9206e5d2d22b8808716dc30622846"> 5918</a></span>&#160;  <span class="keyword">static</span> __INLINE q15_t <a class="code" href="group___linear_interpolate.xhtml#ga42c9206e5d2d22b8808716dc30622846">arm_linear_interp_q15</a>(</div><div class="line"><a name="l05919"></a><span class="lineno"> 5919</span>&#160;  q15_t * pYData,</div><div class="line"><a name="l05920"></a><span class="lineno"> 5920</span>&#160;  q31_t x,</div><div class="line"><a name="l05921"></a><span class="lineno"> 5921</span>&#160;  uint32_t nValues)</div><div class="line"><a name="l05922"></a><span class="lineno"> 5922</span>&#160;  {</div><div class="line"><a name="l05923"></a><span class="lineno"> 5923</span>&#160;    q63_t y;                                     <span class="comment">/* output */</span></div><div class="line"><a name="l05924"></a><span class="lineno"> 5924</span>&#160;    q15_t y0, y1;                                <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l05925"></a><span class="lineno"> 5925</span>&#160;    q31_t fract;                                 <span class="comment">/* fractional part */</span></div><div class="line"><a name="l05926"></a><span class="lineno"> 5926</span>&#160;    int32_t index;                               <span class="comment">/* Index to read nearest output values */</span></div><div class="line"><a name="l05927"></a><span class="lineno"> 5927</span>&#160;</div><div class="line"><a name="l05928"></a><span class="lineno"> 5928</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l05929"></a><span class="lineno"> 5929</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l05930"></a><span class="lineno"> 5930</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l05931"></a><span class="lineno"> 5931</span>&#160;    index = ((x &amp; 0xFFF00000) &gt;&gt; 20u);</div><div class="line"><a name="l05932"></a><span class="lineno"> 5932</span>&#160;</div><div class="line"><a name="l05933"></a><span class="lineno"> 5933</span>&#160;    <span class="keywordflow">if</span>(index &gt;= (int32_t)(nValues - 1))</div><div class="line"><a name="l05934"></a><span class="lineno"> 5934</span>&#160;    {</div><div class="line"><a name="l05935"></a><span class="lineno"> 5935</span>&#160;      <span class="keywordflow">return</span> (pYData[nValues - 1]);</div><div class="line"><a name="l05936"></a><span class="lineno"> 5936</span>&#160;    }</div><div class="line"><a name="l05937"></a><span class="lineno"> 5937</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(index &lt; 0)</div><div class="line"><a name="l05938"></a><span class="lineno"> 5938</span>&#160;    {</div><div class="line"><a name="l05939"></a><span class="lineno"> 5939</span>&#160;      <span class="keywordflow">return</span> (pYData[0]);</div><div class="line"><a name="l05940"></a><span class="lineno"> 5940</span>&#160;    }</div><div class="line"><a name="l05941"></a><span class="lineno"> 5941</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l05942"></a><span class="lineno"> 5942</span>&#160;    {</div><div class="line"><a name="l05943"></a><span class="lineno"> 5943</span>&#160;      <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l05944"></a><span class="lineno"> 5944</span>&#160;      <span class="comment">/* fract is in 12.20 format */</span></div><div class="line"><a name="l05945"></a><span class="lineno"> 5945</span>&#160;      fract = (x &amp; 0x000FFFFF);</div><div class="line"><a name="l05946"></a><span class="lineno"> 5946</span>&#160;</div><div class="line"><a name="l05947"></a><span class="lineno"> 5947</span>&#160;      <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l05948"></a><span class="lineno"> 5948</span>&#160;      y0 = pYData[index];</div><div class="line"><a name="l05949"></a><span class="lineno"> 5949</span>&#160;      y1 = pYData[index + 1u];</div><div class="line"><a name="l05950"></a><span class="lineno"> 5950</span>&#160;</div><div class="line"><a name="l05951"></a><span class="lineno"> 5951</span>&#160;      <span class="comment">/* Calculation of y0 * (1-fract) and y is in 13.35 format */</span></div><div class="line"><a name="l05952"></a><span class="lineno"> 5952</span>&#160;      y = ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) y0 * (0xFFFFF - fract));</div><div class="line"><a name="l05953"></a><span class="lineno"> 5953</span>&#160;</div><div class="line"><a name="l05954"></a><span class="lineno"> 5954</span>&#160;      <span class="comment">/* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */</span></div><div class="line"><a name="l05955"></a><span class="lineno"> 5955</span>&#160;      y += ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) y1 * (fract));</div><div class="line"><a name="l05956"></a><span class="lineno"> 5956</span>&#160;</div><div class="line"><a name="l05957"></a><span class="lineno"> 5957</span>&#160;      <span class="comment">/* convert y to 1.15 format */</span></div><div class="line"><a name="l05958"></a><span class="lineno"> 5958</span>&#160;      <span class="keywordflow">return</span> (y &gt;&gt; 20);</div><div class="line"><a name="l05959"></a><span class="lineno"> 5959</span>&#160;    }</div><div class="line"><a name="l05960"></a><span class="lineno"> 5960</span>&#160;</div><div class="line"><a name="l05961"></a><span class="lineno"> 5961</span>&#160;</div><div class="line"><a name="l05962"></a><span class="lineno"> 5962</span>&#160;  }</div><div class="line"><a name="l05963"></a><span class="lineno"> 5963</span>&#160;</div><div class="line"><a name="l05978"></a><span class="lineno"><a class="line" href="group___linear_interpolate.xhtml#gacb0d44fe00aca0ba1d036d469a1763fc"> 5978</a></span>&#160;  <span class="keyword">static</span> __INLINE q7_t <a class="code" href="group___linear_interpolate.xhtml#gacb0d44fe00aca0ba1d036d469a1763fc">arm_linear_interp_q7</a>(</div><div class="line"><a name="l05979"></a><span class="lineno"> 5979</span>&#160;  q7_t * pYData,</div><div class="line"><a name="l05980"></a><span class="lineno"> 5980</span>&#160;  q31_t x,</div><div class="line"><a name="l05981"></a><span class="lineno"> 5981</span>&#160;  uint32_t nValues)</div><div class="line"><a name="l05982"></a><span class="lineno"> 5982</span>&#160;  {</div><div class="line"><a name="l05983"></a><span class="lineno"> 5983</span>&#160;    q31_t y;                                     <span class="comment">/* output */</span></div><div class="line"><a name="l05984"></a><span class="lineno"> 5984</span>&#160;    q7_t y0, y1;                                 <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l05985"></a><span class="lineno"> 5985</span>&#160;    q31_t fract;                                 <span class="comment">/* fractional part */</span></div><div class="line"><a name="l05986"></a><span class="lineno"> 5986</span>&#160;    uint32_t index;                              <span class="comment">/* Index to read nearest output values */</span></div><div class="line"><a name="l05987"></a><span class="lineno"> 5987</span>&#160;</div><div class="line"><a name="l05988"></a><span class="lineno"> 5988</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l05989"></a><span class="lineno"> 5989</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l05990"></a><span class="lineno"> 5990</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l05991"></a><span class="lineno"> 5991</span>&#160;    <span class="keywordflow">if</span> (x &lt; 0)</div><div class="line"><a name="l05992"></a><span class="lineno"> 5992</span>&#160;    {</div><div class="line"><a name="l05993"></a><span class="lineno"> 5993</span>&#160;      <span class="keywordflow">return</span> (pYData[0]);</div><div class="line"><a name="l05994"></a><span class="lineno"> 5994</span>&#160;    }</div><div class="line"><a name="l05995"></a><span class="lineno"> 5995</span>&#160;    index = (x &gt;&gt; 20) &amp; 0xfff;</div><div class="line"><a name="l05996"></a><span class="lineno"> 5996</span>&#160;</div><div class="line"><a name="l05997"></a><span class="lineno"> 5997</span>&#160;</div><div class="line"><a name="l05998"></a><span class="lineno"> 5998</span>&#160;    <span class="keywordflow">if</span>(index &gt;= (nValues - 1))</div><div class="line"><a name="l05999"></a><span class="lineno"> 5999</span>&#160;    {</div><div class="line"><a name="l06000"></a><span class="lineno"> 6000</span>&#160;      <span class="keywordflow">return</span> (pYData[nValues - 1]);</div><div class="line"><a name="l06001"></a><span class="lineno"> 6001</span>&#160;    }</div><div class="line"><a name="l06002"></a><span class="lineno"> 6002</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l06003"></a><span class="lineno"> 6003</span>&#160;    {</div><div class="line"><a name="l06004"></a><span class="lineno"> 6004</span>&#160;</div><div class="line"><a name="l06005"></a><span class="lineno"> 6005</span>&#160;      <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l06006"></a><span class="lineno"> 6006</span>&#160;      <span class="comment">/* fract is in 12.20 format */</span></div><div class="line"><a name="l06007"></a><span class="lineno"> 6007</span>&#160;      fract = (x &amp; 0x000FFFFF);</div><div class="line"><a name="l06008"></a><span class="lineno"> 6008</span>&#160;</div><div class="line"><a name="l06009"></a><span class="lineno"> 6009</span>&#160;      <span class="comment">/* Read two nearest output values from the index and are in 1.7(q7) format */</span></div><div class="line"><a name="l06010"></a><span class="lineno"> 6010</span>&#160;      y0 = pYData[index];</div><div class="line"><a name="l06011"></a><span class="lineno"> 6011</span>&#160;      y1 = pYData[index + 1u];</div><div class="line"><a name="l06012"></a><span class="lineno"> 6012</span>&#160;</div><div class="line"><a name="l06013"></a><span class="lineno"> 6013</span>&#160;      <span class="comment">/* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */</span></div><div class="line"><a name="l06014"></a><span class="lineno"> 6014</span>&#160;      y = ((y0 * (0xFFFFF - fract)));</div><div class="line"><a name="l06015"></a><span class="lineno"> 6015</span>&#160;</div><div class="line"><a name="l06016"></a><span class="lineno"> 6016</span>&#160;      <span class="comment">/* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */</span></div><div class="line"><a name="l06017"></a><span class="lineno"> 6017</span>&#160;      y += (y1 * fract);</div><div class="line"><a name="l06018"></a><span class="lineno"> 6018</span>&#160;</div><div class="line"><a name="l06019"></a><span class="lineno"> 6019</span>&#160;      <span class="comment">/* convert y to 1.7(q7) format */</span></div><div class="line"><a name="l06020"></a><span class="lineno"> 6020</span>&#160;      <span class="keywordflow">return</span> (y &gt;&gt; 20u);</div><div class="line"><a name="l06021"></a><span class="lineno"> 6021</span>&#160;</div><div class="line"><a name="l06022"></a><span class="lineno"> 6022</span>&#160;    }</div><div class="line"><a name="l06023"></a><span class="lineno"> 6023</span>&#160;</div><div class="line"><a name="l06024"></a><span class="lineno"> 6024</span>&#160;  }</div><div class="line"><a name="l06035"></a><span class="lineno"> 6035</span>&#160;  float32_t <a class="code" href="arm__math_8h.xhtml#ae164899c4a3fc0e946dc5d55555fe541">arm_sin_f32</a>(</div><div class="line"><a name="l06036"></a><span class="lineno"> 6036</span>&#160;  float32_t x);</div><div class="line"><a name="l06037"></a><span class="lineno"> 6037</span>&#160;</div><div class="line"><a name="l06044"></a><span class="lineno"> 6044</span>&#160;  q31_t <a class="code" href="arm__math_8h.xhtml#a57aade7d8892585992cdc6375bd82f9c">arm_sin_q31</a>(</div><div class="line"><a name="l06045"></a><span class="lineno"> 6045</span>&#160;  q31_t x);</div><div class="line"><a name="l06046"></a><span class="lineno"> 6046</span>&#160;</div><div class="line"><a name="l06053"></a><span class="lineno"> 6053</span>&#160;  q15_t <a class="code" href="arm__math_8h.xhtml#a1fc6d6640be6cfa688a8bea0a48397ee">arm_sin_q15</a>(</div><div class="line"><a name="l06054"></a><span class="lineno"> 6054</span>&#160;  q15_t x);</div><div class="line"><a name="l06055"></a><span class="lineno"> 6055</span>&#160;</div><div class="line"><a name="l06062"></a><span class="lineno"> 6062</span>&#160;  float32_t <a class="code" href="arm__math_8h.xhtml#ace15287f9c64b9b4084d1c797d4c49d8">arm_cos_f32</a>(</div><div class="line"><a name="l06063"></a><span class="lineno"> 6063</span>&#160;  float32_t x);</div><div class="line"><a name="l06064"></a><span class="lineno"> 6064</span>&#160;</div><div class="line"><a name="l06071"></a><span class="lineno"> 6071</span>&#160;  q31_t <a class="code" href="arm__math_8h.xhtml#ad80f121949ef885a77d83ab36e002567">arm_cos_q31</a>(</div><div class="line"><a name="l06072"></a><span class="lineno"> 6072</span>&#160;  q31_t x);</div><div class="line"><a name="l06073"></a><span class="lineno"> 6073</span>&#160;</div><div class="line"><a name="l06080"></a><span class="lineno"> 6080</span>&#160;  q15_t <a class="code" href="arm__math_8h.xhtml#adfd60c24def501638c0d5db20f4c869b">arm_cos_q15</a>(</div><div class="line"><a name="l06081"></a><span class="lineno"> 6081</span>&#160;  q15_t x);</div><div class="line"><a name="l06082"></a><span class="lineno"> 6082</span>&#160;</div><div class="line"><a name="l06083"></a><span class="lineno"> 6083</span>&#160;</div><div class="line"><a name="l06123"></a><span class="lineno"><a class="line" href="group___s_q_r_t.xhtml#ga56a40d1cf842b0b45267df6761975da0"> 6123</a></span>&#160;  <span class="keyword">static</span> __INLINE <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="group___s_q_r_t.xhtml#ga56a40d1cf842b0b45267df6761975da0">arm_sqrt_f32</a>(</div><div class="line"><a name="l06124"></a><span class="lineno"> 6124</span>&#160;  float32_t in,</div><div class="line"><a name="l06125"></a><span class="lineno"> 6125</span>&#160;  float32_t * pOut)</div><div class="line"><a name="l06126"></a><span class="lineno"> 6126</span>&#160;  {</div><div class="line"><a name="l06127"></a><span class="lineno"> 6127</span>&#160;    <span class="keywordflow">if</span>(in &gt;= 0.0f)</div><div class="line"><a name="l06128"></a><span class="lineno"> 6128</span>&#160;    {</div><div class="line"><a name="l06129"></a><span class="lineno"> 6129</span>&#160;</div><div class="line"><a name="l06130"></a><span class="lineno"> 6130</span>&#160;<span class="comment">//      #if __FPU_USED</span></div><div class="line"><a name="l06131"></a><span class="lineno"> 6131</span>&#160;<span class="preprocessor">#if (__FPU_USED == 1) &amp;&amp; defined ( __CC_ARM   )</span></div><div class="line"><a name="l06132"></a><span class="lineno"> 6132</span>&#160;      *pOut = __sqrtf(in);</div><div class="line"><a name="l06133"></a><span class="lineno"> 6133</span>&#160;<span class="preprocessor">#elif (__FPU_USED == 1) &amp;&amp; defined ( __ICCARM__ ) &amp;&amp; (__VER__ &gt;= 6040000)</span></div><div class="line"><a name="l06134"></a><span class="lineno"> 6134</span>&#160;      __ASM(<span class="stringliteral">&quot;VSQRT.F32 %0,%1&quot;</span> : <span class="stringliteral">&quot;=t&quot;</span>(*pOut) : <span class="stringliteral">&quot;t&quot;</span>(in));</div><div class="line"><a name="l06135"></a><span class="lineno"> 6135</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l06136"></a><span class="lineno"> 6136</span>&#160;      *pOut = sqrtf(in);</div><div class="line"><a name="l06137"></a><span class="lineno"> 6137</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l06138"></a><span class="lineno"> 6138</span>&#160;</div><div class="line"><a name="l06139"></a><span class="lineno"> 6139</span>&#160;      <span class="keywordflow">return</span> (<a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0">ARM_MATH_SUCCESS</a>);</div><div class="line"><a name="l06140"></a><span class="lineno"> 6140</span>&#160;    }</div><div class="line"><a name="l06141"></a><span class="lineno"> 6141</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l06142"></a><span class="lineno"> 6142</span>&#160;    {</div><div class="line"><a name="l06143"></a><span class="lineno"> 6143</span>&#160;      *pOut = 0.0f;</div><div class="line"><a name="l06144"></a><span class="lineno"> 6144</span>&#160;      <span class="keywordflow">return</span> (<a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35">ARM_MATH_ARGUMENT_ERROR</a>);</div><div class="line"><a name="l06145"></a><span class="lineno"> 6145</span>&#160;    }</div><div class="line"><a name="l06146"></a><span class="lineno"> 6146</span>&#160;</div><div class="line"><a name="l06147"></a><span class="lineno"> 6147</span>&#160;  }</div><div class="line"><a name="l06148"></a><span class="lineno"> 6148</span>&#160;</div><div class="line"><a name="l06149"></a><span class="lineno"> 6149</span>&#160;</div><div class="line"><a name="l06157"></a><span class="lineno"> 6157</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="group___s_q_r_t.xhtml#ga119e25831e141d734d7ef10636670058">arm_sqrt_q31</a>(</div><div class="line"><a name="l06158"></a><span class="lineno"> 6158</span>&#160;  q31_t in,</div><div class="line"><a name="l06159"></a><span class="lineno"> 6159</span>&#160;  q31_t * pOut);</div><div class="line"><a name="l06160"></a><span class="lineno"> 6160</span>&#160;</div><div class="line"><a name="l06168"></a><span class="lineno"> 6168</span>&#160;  <a class="code" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> <a class="code" href="group___s_q_r_t.xhtml#ga5abe5ca724f3e15849662b03752c1238">arm_sqrt_q15</a>(</div><div class="line"><a name="l06169"></a><span class="lineno"> 6169</span>&#160;  q15_t in,</div><div class="line"><a name="l06170"></a><span class="lineno"> 6170</span>&#160;  q15_t * pOut);</div><div class="line"><a name="l06171"></a><span class="lineno"> 6171</span>&#160;</div><div class="line"><a name="l06185"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a6ff56c0896ce00712ba8f2fcf72cacd3"> 6185</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a6ff56c0896ce00712ba8f2fcf72cacd3">arm_circularWrite_f32</a>(</div><div class="line"><a name="l06186"></a><span class="lineno"> 6186</span>&#160;  int32_t * circBuffer,</div><div class="line"><a name="l06187"></a><span class="lineno"> 6187</span>&#160;  int32_t L,</div><div class="line"><a name="l06188"></a><span class="lineno"> 6188</span>&#160;  uint16_t * writeOffset,</div><div class="line"><a name="l06189"></a><span class="lineno"> 6189</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06190"></a><span class="lineno"> 6190</span>&#160;  <span class="keyword">const</span> int32_t * src,</div><div class="line"><a name="l06191"></a><span class="lineno"> 6191</span>&#160;  int32_t srcInc,</div><div class="line"><a name="l06192"></a><span class="lineno"> 6192</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06193"></a><span class="lineno"> 6193</span>&#160;  {</div><div class="line"><a name="l06194"></a><span class="lineno"> 6194</span>&#160;    uint32_t i = 0u;</div><div class="line"><a name="l06195"></a><span class="lineno"> 6195</span>&#160;    int32_t wOffset;</div><div class="line"><a name="l06196"></a><span class="lineno"> 6196</span>&#160;</div><div class="line"><a name="l06197"></a><span class="lineno"> 6197</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06198"></a><span class="lineno"> 6198</span>&#160;<span class="comment">     * to the current location where the input samples to be copied */</span></div><div class="line"><a name="l06199"></a><span class="lineno"> 6199</span>&#160;    wOffset = *writeOffset;</div><div class="line"><a name="l06200"></a><span class="lineno"> 6200</span>&#160;</div><div class="line"><a name="l06201"></a><span class="lineno"> 6201</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06202"></a><span class="lineno"> 6202</span>&#160;    i = blockSize;</div><div class="line"><a name="l06203"></a><span class="lineno"> 6203</span>&#160;</div><div class="line"><a name="l06204"></a><span class="lineno"> 6204</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06205"></a><span class="lineno"> 6205</span>&#160;    {</div><div class="line"><a name="l06206"></a><span class="lineno"> 6206</span>&#160;      <span class="comment">/* copy the input sample to the circular buffer */</span></div><div class="line"><a name="l06207"></a><span class="lineno"> 6207</span>&#160;      circBuffer[wOffset] = *src;</div><div class="line"><a name="l06208"></a><span class="lineno"> 6208</span>&#160;</div><div class="line"><a name="l06209"></a><span class="lineno"> 6209</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06210"></a><span class="lineno"> 6210</span>&#160;      src += srcInc;</div><div class="line"><a name="l06211"></a><span class="lineno"> 6211</span>&#160;</div><div class="line"><a name="l06212"></a><span class="lineno"> 6212</span>&#160;      <span class="comment">/* Circularly update wOffset.  Watch out for positive and negative value */</span></div><div class="line"><a name="l06213"></a><span class="lineno"> 6213</span>&#160;      wOffset += bufferInc;</div><div class="line"><a name="l06214"></a><span class="lineno"> 6214</span>&#160;      <span class="keywordflow">if</span>(wOffset &gt;= L)</div><div class="line"><a name="l06215"></a><span class="lineno"> 6215</span>&#160;        wOffset -= L;</div><div class="line"><a name="l06216"></a><span class="lineno"> 6216</span>&#160;</div><div class="line"><a name="l06217"></a><span class="lineno"> 6217</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06218"></a><span class="lineno"> 6218</span>&#160;      i--;</div><div class="line"><a name="l06219"></a><span class="lineno"> 6219</span>&#160;    }</div><div class="line"><a name="l06220"></a><span class="lineno"> 6220</span>&#160;</div><div class="line"><a name="l06221"></a><span class="lineno"> 6221</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06222"></a><span class="lineno"> 6222</span>&#160;    *writeOffset = wOffset;</div><div class="line"><a name="l06223"></a><span class="lineno"> 6223</span>&#160;  }</div><div class="line"><a name="l06224"></a><span class="lineno"> 6224</span>&#160;</div><div class="line"><a name="l06225"></a><span class="lineno"> 6225</span>&#160;</div><div class="line"><a name="l06226"></a><span class="lineno"> 6226</span>&#160;</div><div class="line"><a name="l06230"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ae469fac5e1df35f8bcf1b3d7c3136484"> 6230</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae469fac5e1df35f8bcf1b3d7c3136484">arm_circularRead_f32</a>(</div><div class="line"><a name="l06231"></a><span class="lineno"> 6231</span>&#160;  int32_t * circBuffer,</div><div class="line"><a name="l06232"></a><span class="lineno"> 6232</span>&#160;  int32_t L,</div><div class="line"><a name="l06233"></a><span class="lineno"> 6233</span>&#160;  int32_t * readOffset,</div><div class="line"><a name="l06234"></a><span class="lineno"> 6234</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06235"></a><span class="lineno"> 6235</span>&#160;  int32_t * dst,</div><div class="line"><a name="l06236"></a><span class="lineno"> 6236</span>&#160;  int32_t * dst_base,</div><div class="line"><a name="l06237"></a><span class="lineno"> 6237</span>&#160;  int32_t dst_length,</div><div class="line"><a name="l06238"></a><span class="lineno"> 6238</span>&#160;  int32_t dstInc,</div><div class="line"><a name="l06239"></a><span class="lineno"> 6239</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06240"></a><span class="lineno"> 6240</span>&#160;  {</div><div class="line"><a name="l06241"></a><span class="lineno"> 6241</span>&#160;    uint32_t i = 0u;</div><div class="line"><a name="l06242"></a><span class="lineno"> 6242</span>&#160;    int32_t rOffset, dst_end;</div><div class="line"><a name="l06243"></a><span class="lineno"> 6243</span>&#160;</div><div class="line"><a name="l06244"></a><span class="lineno"> 6244</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06245"></a><span class="lineno"> 6245</span>&#160;<span class="comment">     * to the current location from where the input samples to be read */</span></div><div class="line"><a name="l06246"></a><span class="lineno"> 6246</span>&#160;    rOffset = *readOffset;</div><div class="line"><a name="l06247"></a><span class="lineno"> 6247</span>&#160;    dst_end = (int32_t) (dst_base + dst_length);</div><div class="line"><a name="l06248"></a><span class="lineno"> 6248</span>&#160;</div><div class="line"><a name="l06249"></a><span class="lineno"> 6249</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06250"></a><span class="lineno"> 6250</span>&#160;    i = blockSize;</div><div class="line"><a name="l06251"></a><span class="lineno"> 6251</span>&#160;</div><div class="line"><a name="l06252"></a><span class="lineno"> 6252</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06253"></a><span class="lineno"> 6253</span>&#160;    {</div><div class="line"><a name="l06254"></a><span class="lineno"> 6254</span>&#160;      <span class="comment">/* copy the sample from the circular buffer to the destination buffer */</span></div><div class="line"><a name="l06255"></a><span class="lineno"> 6255</span>&#160;      *dst = circBuffer[rOffset];</div><div class="line"><a name="l06256"></a><span class="lineno"> 6256</span>&#160;</div><div class="line"><a name="l06257"></a><span class="lineno"> 6257</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06258"></a><span class="lineno"> 6258</span>&#160;      dst += dstInc;</div><div class="line"><a name="l06259"></a><span class="lineno"> 6259</span>&#160;</div><div class="line"><a name="l06260"></a><span class="lineno"> 6260</span>&#160;      <span class="keywordflow">if</span>(dst == (int32_t *) dst_end)</div><div class="line"><a name="l06261"></a><span class="lineno"> 6261</span>&#160;      {</div><div class="line"><a name="l06262"></a><span class="lineno"> 6262</span>&#160;        dst = dst_base;</div><div class="line"><a name="l06263"></a><span class="lineno"> 6263</span>&#160;      }</div><div class="line"><a name="l06264"></a><span class="lineno"> 6264</span>&#160;</div><div class="line"><a name="l06265"></a><span class="lineno"> 6265</span>&#160;      <span class="comment">/* Circularly update rOffset.  Watch out for positive and negative value  */</span></div><div class="line"><a name="l06266"></a><span class="lineno"> 6266</span>&#160;      rOffset += bufferInc;</div><div class="line"><a name="l06267"></a><span class="lineno"> 6267</span>&#160;</div><div class="line"><a name="l06268"></a><span class="lineno"> 6268</span>&#160;      <span class="keywordflow">if</span>(rOffset &gt;= L)</div><div class="line"><a name="l06269"></a><span class="lineno"> 6269</span>&#160;      {</div><div class="line"><a name="l06270"></a><span class="lineno"> 6270</span>&#160;        rOffset -= L;</div><div class="line"><a name="l06271"></a><span class="lineno"> 6271</span>&#160;      }</div><div class="line"><a name="l06272"></a><span class="lineno"> 6272</span>&#160;</div><div class="line"><a name="l06273"></a><span class="lineno"> 6273</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06274"></a><span class="lineno"> 6274</span>&#160;      i--;</div><div class="line"><a name="l06275"></a><span class="lineno"> 6275</span>&#160;    }</div><div class="line"><a name="l06276"></a><span class="lineno"> 6276</span>&#160;</div><div class="line"><a name="l06277"></a><span class="lineno"> 6277</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06278"></a><span class="lineno"> 6278</span>&#160;    *readOffset = rOffset;</div><div class="line"><a name="l06279"></a><span class="lineno"> 6279</span>&#160;  }</div><div class="line"><a name="l06280"></a><span class="lineno"> 6280</span>&#160;</div><div class="line"><a name="l06285"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a3ba2d215477e692def7fda46dda883ed"> 6285</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3ba2d215477e692def7fda46dda883ed">arm_circularWrite_q15</a>(</div><div class="line"><a name="l06286"></a><span class="lineno"> 6286</span>&#160;  q15_t * circBuffer,</div><div class="line"><a name="l06287"></a><span class="lineno"> 6287</span>&#160;  int32_t L,</div><div class="line"><a name="l06288"></a><span class="lineno"> 6288</span>&#160;  uint16_t * writeOffset,</div><div class="line"><a name="l06289"></a><span class="lineno"> 6289</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06290"></a><span class="lineno"> 6290</span>&#160;  <span class="keyword">const</span> q15_t * src,</div><div class="line"><a name="l06291"></a><span class="lineno"> 6291</span>&#160;  int32_t srcInc,</div><div class="line"><a name="l06292"></a><span class="lineno"> 6292</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06293"></a><span class="lineno"> 6293</span>&#160;  {</div><div class="line"><a name="l06294"></a><span class="lineno"> 6294</span>&#160;    uint32_t i = 0u;</div><div class="line"><a name="l06295"></a><span class="lineno"> 6295</span>&#160;    int32_t wOffset;</div><div class="line"><a name="l06296"></a><span class="lineno"> 6296</span>&#160;</div><div class="line"><a name="l06297"></a><span class="lineno"> 6297</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06298"></a><span class="lineno"> 6298</span>&#160;<span class="comment">     * to the current location where the input samples to be copied */</span></div><div class="line"><a name="l06299"></a><span class="lineno"> 6299</span>&#160;    wOffset = *writeOffset;</div><div class="line"><a name="l06300"></a><span class="lineno"> 6300</span>&#160;</div><div class="line"><a name="l06301"></a><span class="lineno"> 6301</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06302"></a><span class="lineno"> 6302</span>&#160;    i = blockSize;</div><div class="line"><a name="l06303"></a><span class="lineno"> 6303</span>&#160;</div><div class="line"><a name="l06304"></a><span class="lineno"> 6304</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06305"></a><span class="lineno"> 6305</span>&#160;    {</div><div class="line"><a name="l06306"></a><span class="lineno"> 6306</span>&#160;      <span class="comment">/* copy the input sample to the circular buffer */</span></div><div class="line"><a name="l06307"></a><span class="lineno"> 6307</span>&#160;      circBuffer[wOffset] = *src;</div><div class="line"><a name="l06308"></a><span class="lineno"> 6308</span>&#160;</div><div class="line"><a name="l06309"></a><span class="lineno"> 6309</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06310"></a><span class="lineno"> 6310</span>&#160;      src += srcInc;</div><div class="line"><a name="l06311"></a><span class="lineno"> 6311</span>&#160;</div><div class="line"><a name="l06312"></a><span class="lineno"> 6312</span>&#160;      <span class="comment">/* Circularly update wOffset.  Watch out for positive and negative value */</span></div><div class="line"><a name="l06313"></a><span class="lineno"> 6313</span>&#160;      wOffset += bufferInc;</div><div class="line"><a name="l06314"></a><span class="lineno"> 6314</span>&#160;      <span class="keywordflow">if</span>(wOffset &gt;= L)</div><div class="line"><a name="l06315"></a><span class="lineno"> 6315</span>&#160;        wOffset -= L;</div><div class="line"><a name="l06316"></a><span class="lineno"> 6316</span>&#160;</div><div class="line"><a name="l06317"></a><span class="lineno"> 6317</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06318"></a><span class="lineno"> 6318</span>&#160;      i--;</div><div class="line"><a name="l06319"></a><span class="lineno"> 6319</span>&#160;    }</div><div class="line"><a name="l06320"></a><span class="lineno"> 6320</span>&#160;</div><div class="line"><a name="l06321"></a><span class="lineno"> 6321</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06322"></a><span class="lineno"> 6322</span>&#160;    *writeOffset = wOffset;</div><div class="line"><a name="l06323"></a><span class="lineno"> 6323</span>&#160;  }</div><div class="line"><a name="l06324"></a><span class="lineno"> 6324</span>&#160;</div><div class="line"><a name="l06325"></a><span class="lineno"> 6325</span>&#160;</div><div class="line"><a name="l06326"></a><span class="lineno"> 6326</span>&#160;</div><div class="line"><a name="l06330"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#ad5fb134f83f2c802261f172e3dceb131"> 6330</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad5fb134f83f2c802261f172e3dceb131">arm_circularRead_q15</a>(</div><div class="line"><a name="l06331"></a><span class="lineno"> 6331</span>&#160;  q15_t * circBuffer,</div><div class="line"><a name="l06332"></a><span class="lineno"> 6332</span>&#160;  int32_t L,</div><div class="line"><a name="l06333"></a><span class="lineno"> 6333</span>&#160;  int32_t * readOffset,</div><div class="line"><a name="l06334"></a><span class="lineno"> 6334</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06335"></a><span class="lineno"> 6335</span>&#160;  q15_t * dst,</div><div class="line"><a name="l06336"></a><span class="lineno"> 6336</span>&#160;  q15_t * dst_base,</div><div class="line"><a name="l06337"></a><span class="lineno"> 6337</span>&#160;  int32_t dst_length,</div><div class="line"><a name="l06338"></a><span class="lineno"> 6338</span>&#160;  int32_t dstInc,</div><div class="line"><a name="l06339"></a><span class="lineno"> 6339</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06340"></a><span class="lineno"> 6340</span>&#160;  {</div><div class="line"><a name="l06341"></a><span class="lineno"> 6341</span>&#160;    uint32_t i = 0;</div><div class="line"><a name="l06342"></a><span class="lineno"> 6342</span>&#160;    int32_t rOffset, dst_end;</div><div class="line"><a name="l06343"></a><span class="lineno"> 6343</span>&#160;</div><div class="line"><a name="l06344"></a><span class="lineno"> 6344</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06345"></a><span class="lineno"> 6345</span>&#160;<span class="comment">     * to the current location from where the input samples to be read */</span></div><div class="line"><a name="l06346"></a><span class="lineno"> 6346</span>&#160;    rOffset = *readOffset;</div><div class="line"><a name="l06347"></a><span class="lineno"> 6347</span>&#160;</div><div class="line"><a name="l06348"></a><span class="lineno"> 6348</span>&#160;    dst_end = (int32_t) (dst_base + dst_length);</div><div class="line"><a name="l06349"></a><span class="lineno"> 6349</span>&#160;</div><div class="line"><a name="l06350"></a><span class="lineno"> 6350</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06351"></a><span class="lineno"> 6351</span>&#160;    i = blockSize;</div><div class="line"><a name="l06352"></a><span class="lineno"> 6352</span>&#160;</div><div class="line"><a name="l06353"></a><span class="lineno"> 6353</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06354"></a><span class="lineno"> 6354</span>&#160;    {</div><div class="line"><a name="l06355"></a><span class="lineno"> 6355</span>&#160;      <span class="comment">/* copy the sample from the circular buffer to the destination buffer */</span></div><div class="line"><a name="l06356"></a><span class="lineno"> 6356</span>&#160;      *dst = circBuffer[rOffset];</div><div class="line"><a name="l06357"></a><span class="lineno"> 6357</span>&#160;</div><div class="line"><a name="l06358"></a><span class="lineno"> 6358</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06359"></a><span class="lineno"> 6359</span>&#160;      dst += dstInc;</div><div class="line"><a name="l06360"></a><span class="lineno"> 6360</span>&#160;</div><div class="line"><a name="l06361"></a><span class="lineno"> 6361</span>&#160;      <span class="keywordflow">if</span>(dst == (q15_t *) dst_end)</div><div class="line"><a name="l06362"></a><span class="lineno"> 6362</span>&#160;      {</div><div class="line"><a name="l06363"></a><span class="lineno"> 6363</span>&#160;        dst = dst_base;</div><div class="line"><a name="l06364"></a><span class="lineno"> 6364</span>&#160;      }</div><div class="line"><a name="l06365"></a><span class="lineno"> 6365</span>&#160;</div><div class="line"><a name="l06366"></a><span class="lineno"> 6366</span>&#160;      <span class="comment">/* Circularly update wOffset.  Watch out for positive and negative value */</span></div><div class="line"><a name="l06367"></a><span class="lineno"> 6367</span>&#160;      rOffset += bufferInc;</div><div class="line"><a name="l06368"></a><span class="lineno"> 6368</span>&#160;</div><div class="line"><a name="l06369"></a><span class="lineno"> 6369</span>&#160;      <span class="keywordflow">if</span>(rOffset &gt;= L)</div><div class="line"><a name="l06370"></a><span class="lineno"> 6370</span>&#160;      {</div><div class="line"><a name="l06371"></a><span class="lineno"> 6371</span>&#160;        rOffset -= L;</div><div class="line"><a name="l06372"></a><span class="lineno"> 6372</span>&#160;      }</div><div class="line"><a name="l06373"></a><span class="lineno"> 6373</span>&#160;</div><div class="line"><a name="l06374"></a><span class="lineno"> 6374</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06375"></a><span class="lineno"> 6375</span>&#160;      i--;</div><div class="line"><a name="l06376"></a><span class="lineno"> 6376</span>&#160;    }</div><div class="line"><a name="l06377"></a><span class="lineno"> 6377</span>&#160;</div><div class="line"><a name="l06378"></a><span class="lineno"> 6378</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06379"></a><span class="lineno"> 6379</span>&#160;    *readOffset = rOffset;</div><div class="line"><a name="l06380"></a><span class="lineno"> 6380</span>&#160;  }</div><div class="line"><a name="l06381"></a><span class="lineno"> 6381</span>&#160;</div><div class="line"><a name="l06382"></a><span class="lineno"> 6382</span>&#160;</div><div class="line"><a name="l06387"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#addba85b1f7fbd472fd00ddd9ce43aea8"> 6387</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#addba85b1f7fbd472fd00ddd9ce43aea8">arm_circularWrite_q7</a>(</div><div class="line"><a name="l06388"></a><span class="lineno"> 6388</span>&#160;  q7_t * circBuffer,</div><div class="line"><a name="l06389"></a><span class="lineno"> 6389</span>&#160;  int32_t L,</div><div class="line"><a name="l06390"></a><span class="lineno"> 6390</span>&#160;  uint16_t * writeOffset,</div><div class="line"><a name="l06391"></a><span class="lineno"> 6391</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06392"></a><span class="lineno"> 6392</span>&#160;  <span class="keyword">const</span> q7_t * src,</div><div class="line"><a name="l06393"></a><span class="lineno"> 6393</span>&#160;  int32_t srcInc,</div><div class="line"><a name="l06394"></a><span class="lineno"> 6394</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06395"></a><span class="lineno"> 6395</span>&#160;  {</div><div class="line"><a name="l06396"></a><span class="lineno"> 6396</span>&#160;    uint32_t i = 0u;</div><div class="line"><a name="l06397"></a><span class="lineno"> 6397</span>&#160;    int32_t wOffset;</div><div class="line"><a name="l06398"></a><span class="lineno"> 6398</span>&#160;</div><div class="line"><a name="l06399"></a><span class="lineno"> 6399</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06400"></a><span class="lineno"> 6400</span>&#160;<span class="comment">     * to the current location where the input samples to be copied */</span></div><div class="line"><a name="l06401"></a><span class="lineno"> 6401</span>&#160;    wOffset = *writeOffset;</div><div class="line"><a name="l06402"></a><span class="lineno"> 6402</span>&#160;</div><div class="line"><a name="l06403"></a><span class="lineno"> 6403</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06404"></a><span class="lineno"> 6404</span>&#160;    i = blockSize;</div><div class="line"><a name="l06405"></a><span class="lineno"> 6405</span>&#160;</div><div class="line"><a name="l06406"></a><span class="lineno"> 6406</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06407"></a><span class="lineno"> 6407</span>&#160;    {</div><div class="line"><a name="l06408"></a><span class="lineno"> 6408</span>&#160;      <span class="comment">/* copy the input sample to the circular buffer */</span></div><div class="line"><a name="l06409"></a><span class="lineno"> 6409</span>&#160;      circBuffer[wOffset] = *src;</div><div class="line"><a name="l06410"></a><span class="lineno"> 6410</span>&#160;</div><div class="line"><a name="l06411"></a><span class="lineno"> 6411</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06412"></a><span class="lineno"> 6412</span>&#160;      src += srcInc;</div><div class="line"><a name="l06413"></a><span class="lineno"> 6413</span>&#160;</div><div class="line"><a name="l06414"></a><span class="lineno"> 6414</span>&#160;      <span class="comment">/* Circularly update wOffset.  Watch out for positive and negative value */</span></div><div class="line"><a name="l06415"></a><span class="lineno"> 6415</span>&#160;      wOffset += bufferInc;</div><div class="line"><a name="l06416"></a><span class="lineno"> 6416</span>&#160;      <span class="keywordflow">if</span>(wOffset &gt;= L)</div><div class="line"><a name="l06417"></a><span class="lineno"> 6417</span>&#160;        wOffset -= L;</div><div class="line"><a name="l06418"></a><span class="lineno"> 6418</span>&#160;</div><div class="line"><a name="l06419"></a><span class="lineno"> 6419</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06420"></a><span class="lineno"> 6420</span>&#160;      i--;</div><div class="line"><a name="l06421"></a><span class="lineno"> 6421</span>&#160;    }</div><div class="line"><a name="l06422"></a><span class="lineno"> 6422</span>&#160;</div><div class="line"><a name="l06423"></a><span class="lineno"> 6423</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06424"></a><span class="lineno"> 6424</span>&#160;    *writeOffset = wOffset;</div><div class="line"><a name="l06425"></a><span class="lineno"> 6425</span>&#160;  }</div><div class="line"><a name="l06426"></a><span class="lineno"> 6426</span>&#160;</div><div class="line"><a name="l06427"></a><span class="lineno"> 6427</span>&#160;</div><div class="line"><a name="l06428"></a><span class="lineno"> 6428</span>&#160;</div><div class="line"><a name="l06432"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a30aa80ea20abe71f3afa99f2f0391ed5"> 6432</a></span>&#160;  <span class="keyword">static</span> __INLINE <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a30aa80ea20abe71f3afa99f2f0391ed5">arm_circularRead_q7</a>(</div><div class="line"><a name="l06433"></a><span class="lineno"> 6433</span>&#160;  q7_t * circBuffer,</div><div class="line"><a name="l06434"></a><span class="lineno"> 6434</span>&#160;  int32_t L,</div><div class="line"><a name="l06435"></a><span class="lineno"> 6435</span>&#160;  int32_t * readOffset,</div><div class="line"><a name="l06436"></a><span class="lineno"> 6436</span>&#160;  int32_t bufferInc,</div><div class="line"><a name="l06437"></a><span class="lineno"> 6437</span>&#160;  q7_t * dst,</div><div class="line"><a name="l06438"></a><span class="lineno"> 6438</span>&#160;  q7_t * dst_base,</div><div class="line"><a name="l06439"></a><span class="lineno"> 6439</span>&#160;  int32_t dst_length,</div><div class="line"><a name="l06440"></a><span class="lineno"> 6440</span>&#160;  int32_t dstInc,</div><div class="line"><a name="l06441"></a><span class="lineno"> 6441</span>&#160;  uint32_t blockSize)</div><div class="line"><a name="l06442"></a><span class="lineno"> 6442</span>&#160;  {</div><div class="line"><a name="l06443"></a><span class="lineno"> 6443</span>&#160;    uint32_t i = 0;</div><div class="line"><a name="l06444"></a><span class="lineno"> 6444</span>&#160;    int32_t rOffset, dst_end;</div><div class="line"><a name="l06445"></a><span class="lineno"> 6445</span>&#160;</div><div class="line"><a name="l06446"></a><span class="lineno"> 6446</span>&#160;    <span class="comment">/* Copy the value of Index pointer that points</span></div><div class="line"><a name="l06447"></a><span class="lineno"> 6447</span>&#160;<span class="comment">     * to the current location from where the input samples to be read */</span></div><div class="line"><a name="l06448"></a><span class="lineno"> 6448</span>&#160;    rOffset = *readOffset;</div><div class="line"><a name="l06449"></a><span class="lineno"> 6449</span>&#160;</div><div class="line"><a name="l06450"></a><span class="lineno"> 6450</span>&#160;    dst_end = (int32_t) (dst_base + dst_length);</div><div class="line"><a name="l06451"></a><span class="lineno"> 6451</span>&#160;</div><div class="line"><a name="l06452"></a><span class="lineno"> 6452</span>&#160;    <span class="comment">/* Loop over the blockSize */</span></div><div class="line"><a name="l06453"></a><span class="lineno"> 6453</span>&#160;    i = blockSize;</div><div class="line"><a name="l06454"></a><span class="lineno"> 6454</span>&#160;</div><div class="line"><a name="l06455"></a><span class="lineno"> 6455</span>&#160;    <span class="keywordflow">while</span>(i &gt; 0u)</div><div class="line"><a name="l06456"></a><span class="lineno"> 6456</span>&#160;    {</div><div class="line"><a name="l06457"></a><span class="lineno"> 6457</span>&#160;      <span class="comment">/* copy the sample from the circular buffer to the destination buffer */</span></div><div class="line"><a name="l06458"></a><span class="lineno"> 6458</span>&#160;      *dst = circBuffer[rOffset];</div><div class="line"><a name="l06459"></a><span class="lineno"> 6459</span>&#160;</div><div class="line"><a name="l06460"></a><span class="lineno"> 6460</span>&#160;      <span class="comment">/* Update the input pointer */</span></div><div class="line"><a name="l06461"></a><span class="lineno"> 6461</span>&#160;      dst += dstInc;</div><div class="line"><a name="l06462"></a><span class="lineno"> 6462</span>&#160;</div><div class="line"><a name="l06463"></a><span class="lineno"> 6463</span>&#160;      <span class="keywordflow">if</span>(dst == (q7_t *) dst_end)</div><div class="line"><a name="l06464"></a><span class="lineno"> 6464</span>&#160;      {</div><div class="line"><a name="l06465"></a><span class="lineno"> 6465</span>&#160;        dst = dst_base;</div><div class="line"><a name="l06466"></a><span class="lineno"> 6466</span>&#160;      }</div><div class="line"><a name="l06467"></a><span class="lineno"> 6467</span>&#160;</div><div class="line"><a name="l06468"></a><span class="lineno"> 6468</span>&#160;      <span class="comment">/* Circularly update rOffset.  Watch out for positive and negative value */</span></div><div class="line"><a name="l06469"></a><span class="lineno"> 6469</span>&#160;      rOffset += bufferInc;</div><div class="line"><a name="l06470"></a><span class="lineno"> 6470</span>&#160;</div><div class="line"><a name="l06471"></a><span class="lineno"> 6471</span>&#160;      <span class="keywordflow">if</span>(rOffset &gt;= L)</div><div class="line"><a name="l06472"></a><span class="lineno"> 6472</span>&#160;      {</div><div class="line"><a name="l06473"></a><span class="lineno"> 6473</span>&#160;        rOffset -= L;</div><div class="line"><a name="l06474"></a><span class="lineno"> 6474</span>&#160;      }</div><div class="line"><a name="l06475"></a><span class="lineno"> 6475</span>&#160;</div><div class="line"><a name="l06476"></a><span class="lineno"> 6476</span>&#160;      <span class="comment">/* Decrement the loop counter */</span></div><div class="line"><a name="l06477"></a><span class="lineno"> 6477</span>&#160;      i--;</div><div class="line"><a name="l06478"></a><span class="lineno"> 6478</span>&#160;    }</div><div class="line"><a name="l06479"></a><span class="lineno"> 6479</span>&#160;</div><div class="line"><a name="l06480"></a><span class="lineno"> 6480</span>&#160;    <span class="comment">/* Update the index pointer */</span></div><div class="line"><a name="l06481"></a><span class="lineno"> 6481</span>&#160;    *readOffset = rOffset;</div><div class="line"><a name="l06482"></a><span class="lineno"> 6482</span>&#160;  }</div><div class="line"><a name="l06483"></a><span class="lineno"> 6483</span>&#160;</div><div class="line"><a name="l06484"></a><span class="lineno"> 6484</span>&#160;</div><div class="line"><a name="l06493"></a><span class="lineno"> 6493</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a0b93d31bb5b5ed214c2b94d8a7744cd2">arm_power_q31</a>(</div><div class="line"><a name="l06494"></a><span class="lineno"> 6494</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06495"></a><span class="lineno"> 6495</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06496"></a><span class="lineno"> 6496</span>&#160;  q63_t * pResult);</div><div class="line"><a name="l06497"></a><span class="lineno"> 6497</span>&#160;</div><div class="line"><a name="l06506"></a><span class="lineno"> 6506</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a993c00dd7f661d66bdb6e58426e893aa">arm_power_f32</a>(</div><div class="line"><a name="l06507"></a><span class="lineno"> 6507</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06508"></a><span class="lineno"> 6508</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06509"></a><span class="lineno"> 6509</span>&#160;  float32_t * pResult);</div><div class="line"><a name="l06510"></a><span class="lineno"> 6510</span>&#160;</div><div class="line"><a name="l06519"></a><span class="lineno"> 6519</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7050c04b7515e01a75c38f1abbaf71ba">arm_power_q15</a>(</div><div class="line"><a name="l06520"></a><span class="lineno"> 6520</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06521"></a><span class="lineno"> 6521</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06522"></a><span class="lineno"> 6522</span>&#160;  q63_t * pResult);</div><div class="line"><a name="l06523"></a><span class="lineno"> 6523</span>&#160;</div><div class="line"><a name="l06532"></a><span class="lineno"> 6532</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af969c85c5655e3d72d7b99ff188f92c9">arm_power_q7</a>(</div><div class="line"><a name="l06533"></a><span class="lineno"> 6533</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l06534"></a><span class="lineno"> 6534</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06535"></a><span class="lineno"> 6535</span>&#160;  q31_t * pResult);</div><div class="line"><a name="l06536"></a><span class="lineno"> 6536</span>&#160;</div><div class="line"><a name="l06545"></a><span class="lineno"> 6545</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aebc707ee539020357c25da4c75b52eb7">arm_mean_q7</a>(</div><div class="line"><a name="l06546"></a><span class="lineno"> 6546</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l06547"></a><span class="lineno"> 6547</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06548"></a><span class="lineno"> 6548</span>&#160;  q7_t * pResult);</div><div class="line"><a name="l06549"></a><span class="lineno"> 6549</span>&#160;</div><div class="line"><a name="l06557"></a><span class="lineno"> 6557</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac882495d5f098819fd3939c1ef7795b3">arm_mean_q15</a>(</div><div class="line"><a name="l06558"></a><span class="lineno"> 6558</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06559"></a><span class="lineno"> 6559</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06560"></a><span class="lineno"> 6560</span>&#160;  q15_t * pResult);</div><div class="line"><a name="l06561"></a><span class="lineno"> 6561</span>&#160;</div><div class="line"><a name="l06569"></a><span class="lineno"> 6569</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#acf2526d8c2d75e486e8f0b0e31877ad0">arm_mean_q31</a>(</div><div class="line"><a name="l06570"></a><span class="lineno"> 6570</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06571"></a><span class="lineno"> 6571</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06572"></a><span class="lineno"> 6572</span>&#160;  q31_t * pResult);</div><div class="line"><a name="l06573"></a><span class="lineno"> 6573</span>&#160;</div><div class="line"><a name="l06581"></a><span class="lineno"> 6581</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a74ce08c49ab61e57bd50c3a0ca1fdb2b">arm_mean_f32</a>(</div><div class="line"><a name="l06582"></a><span class="lineno"> 6582</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06583"></a><span class="lineno"> 6583</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06584"></a><span class="lineno"> 6584</span>&#160;  float32_t * pResult);</div><div class="line"><a name="l06585"></a><span class="lineno"> 6585</span>&#160;</div><div class="line"><a name="l06594"></a><span class="lineno"> 6594</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a393f26c5a3bfa05624fb8d32232a6d96">arm_var_f32</a>(</div><div class="line"><a name="l06595"></a><span class="lineno"> 6595</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06596"></a><span class="lineno"> 6596</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06597"></a><span class="lineno"> 6597</span>&#160;  float32_t * pResult);</div><div class="line"><a name="l06598"></a><span class="lineno"> 6598</span>&#160;</div><div class="line"><a name="l06607"></a><span class="lineno"> 6607</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac02873f1c2cc80adfd799305f0e6465d">arm_var_q31</a>(</div><div class="line"><a name="l06608"></a><span class="lineno"> 6608</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06609"></a><span class="lineno"> 6609</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06610"></a><span class="lineno"> 6610</span>&#160;  q31_t * pResult);</div><div class="line"><a name="l06611"></a><span class="lineno"> 6611</span>&#160;</div><div class="line"><a name="l06620"></a><span class="lineno"> 6620</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a79dce009ed2de28a125aeb3f19631654">arm_var_q15</a>(</div><div class="line"><a name="l06621"></a><span class="lineno"> 6621</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06622"></a><span class="lineno"> 6622</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06623"></a><span class="lineno"> 6623</span>&#160;  q15_t * pResult);</div><div class="line"><a name="l06624"></a><span class="lineno"> 6624</span>&#160;</div><div class="line"><a name="l06633"></a><span class="lineno"> 6633</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a0e3ab1b57da32d45388d1fa90d7fd88c">arm_rms_f32</a>(</div><div class="line"><a name="l06634"></a><span class="lineno"> 6634</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06635"></a><span class="lineno"> 6635</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06636"></a><span class="lineno"> 6636</span>&#160;  float32_t * pResult);</div><div class="line"><a name="l06637"></a><span class="lineno"> 6637</span>&#160;</div><div class="line"><a name="l06646"></a><span class="lineno"> 6646</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae33015fda23fc44e7ead5e5ed7e8d314">arm_rms_q31</a>(</div><div class="line"><a name="l06647"></a><span class="lineno"> 6647</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06648"></a><span class="lineno"> 6648</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06649"></a><span class="lineno"> 6649</span>&#160;  q31_t * pResult);</div><div class="line"><a name="l06650"></a><span class="lineno"> 6650</span>&#160;</div><div class="line"><a name="l06659"></a><span class="lineno"> 6659</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af5b836b72dda9e5dfbbd17c7906fd13f">arm_rms_q15</a>(</div><div class="line"><a name="l06660"></a><span class="lineno"> 6660</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06661"></a><span class="lineno"> 6661</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06662"></a><span class="lineno"> 6662</span>&#160;  q15_t * pResult);</div><div class="line"><a name="l06663"></a><span class="lineno"> 6663</span>&#160;</div><div class="line"><a name="l06672"></a><span class="lineno"> 6672</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a4969b5b5f3d001377bc401a3ee99dfc2">arm_std_f32</a>(</div><div class="line"><a name="l06673"></a><span class="lineno"> 6673</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06674"></a><span class="lineno"> 6674</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06675"></a><span class="lineno"> 6675</span>&#160;  float32_t * pResult);</div><div class="line"><a name="l06676"></a><span class="lineno"> 6676</span>&#160;</div><div class="line"><a name="l06685"></a><span class="lineno"> 6685</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a39495e74f96116178be085c9dc7742f5">arm_std_q31</a>(</div><div class="line"><a name="l06686"></a><span class="lineno"> 6686</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06687"></a><span class="lineno"> 6687</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06688"></a><span class="lineno"> 6688</span>&#160;  q31_t * pResult);</div><div class="line"><a name="l06689"></a><span class="lineno"> 6689</span>&#160;</div><div class="line"><a name="l06698"></a><span class="lineno"> 6698</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af9d27afa9928ff28a63cd98ea9218a72">arm_std_q15</a>(</div><div class="line"><a name="l06699"></a><span class="lineno"> 6699</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06700"></a><span class="lineno"> 6700</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06701"></a><span class="lineno"> 6701</span>&#160;  q15_t * pResult);</div><div class="line"><a name="l06702"></a><span class="lineno"> 6702</span>&#160;</div><div class="line"><a name="l06711"></a><span class="lineno"> 6711</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ae45024c497392cde2ae358a76d435213">arm_cmplx_mag_f32</a>(</div><div class="line"><a name="l06712"></a><span class="lineno"> 6712</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06713"></a><span class="lineno"> 6713</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l06714"></a><span class="lineno"> 6714</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06715"></a><span class="lineno"> 6715</span>&#160;</div><div class="line"><a name="l06724"></a><span class="lineno"> 6724</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a14f82f9230e9d96d5b9774e2fefcb7be">arm_cmplx_mag_q31</a>(</div><div class="line"><a name="l06725"></a><span class="lineno"> 6725</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06726"></a><span class="lineno"> 6726</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l06727"></a><span class="lineno"> 6727</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06728"></a><span class="lineno"> 6728</span>&#160;</div><div class="line"><a name="l06737"></a><span class="lineno"> 6737</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a0a4a8f77a6a51d9b3f3b9d729f85b7a4">arm_cmplx_mag_q15</a>(</div><div class="line"><a name="l06738"></a><span class="lineno"> 6738</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06739"></a><span class="lineno"> 6739</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l06740"></a><span class="lineno"> 6740</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06741"></a><span class="lineno"> 6741</span>&#160;</div><div class="line"><a name="l06752"></a><span class="lineno"> 6752</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a2b08b5e8001d2c15204639d00893fc70">arm_cmplx_dot_prod_q15</a>(</div><div class="line"><a name="l06753"></a><span class="lineno"> 6753</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l06754"></a><span class="lineno"> 6754</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l06755"></a><span class="lineno"> 6755</span>&#160;  uint32_t numSamples,</div><div class="line"><a name="l06756"></a><span class="lineno"> 6756</span>&#160;  q31_t * realResult,</div><div class="line"><a name="l06757"></a><span class="lineno"> 6757</span>&#160;  q31_t * imagResult);</div><div class="line"><a name="l06758"></a><span class="lineno"> 6758</span>&#160;</div><div class="line"><a name="l06769"></a><span class="lineno"> 6769</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a5b731a59db062a9ad84562ef68a6c8af">arm_cmplx_dot_prod_q31</a>(</div><div class="line"><a name="l06770"></a><span class="lineno"> 6770</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l06771"></a><span class="lineno"> 6771</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l06772"></a><span class="lineno"> 6772</span>&#160;  uint32_t numSamples,</div><div class="line"><a name="l06773"></a><span class="lineno"> 6773</span>&#160;  q63_t * realResult,</div><div class="line"><a name="l06774"></a><span class="lineno"> 6774</span>&#160;  q63_t * imagResult);</div><div class="line"><a name="l06775"></a><span class="lineno"> 6775</span>&#160;</div><div class="line"><a name="l06786"></a><span class="lineno"> 6786</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#adcfaf567a25eb641da4043eafb9bb076">arm_cmplx_dot_prod_f32</a>(</div><div class="line"><a name="l06787"></a><span class="lineno"> 6787</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l06788"></a><span class="lineno"> 6788</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l06789"></a><span class="lineno"> 6789</span>&#160;  uint32_t numSamples,</div><div class="line"><a name="l06790"></a><span class="lineno"> 6790</span>&#160;  float32_t * realResult,</div><div class="line"><a name="l06791"></a><span class="lineno"> 6791</span>&#160;  float32_t * imagResult);</div><div class="line"><a name="l06792"></a><span class="lineno"> 6792</span>&#160;</div><div class="line"><a name="l06802"></a><span class="lineno"> 6802</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a3bd8889dcb45980e1d3e53344df54e85">arm_cmplx_mult_real_q15</a>(</div><div class="line"><a name="l06803"></a><span class="lineno"> 6803</span>&#160;  q15_t * pSrcCmplx,</div><div class="line"><a name="l06804"></a><span class="lineno"> 6804</span>&#160;  q15_t * pSrcReal,</div><div class="line"><a name="l06805"></a><span class="lineno"> 6805</span>&#160;  q15_t * pCmplxDst,</div><div class="line"><a name="l06806"></a><span class="lineno"> 6806</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06807"></a><span class="lineno"> 6807</span>&#160;</div><div class="line"><a name="l06817"></a><span class="lineno"> 6817</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a715e4bb8e945b8ca51ec5237611697ce">arm_cmplx_mult_real_q31</a>(</div><div class="line"><a name="l06818"></a><span class="lineno"> 6818</span>&#160;  q31_t * pSrcCmplx,</div><div class="line"><a name="l06819"></a><span class="lineno"> 6819</span>&#160;  q31_t * pSrcReal,</div><div class="line"><a name="l06820"></a><span class="lineno"> 6820</span>&#160;  q31_t * pCmplxDst,</div><div class="line"><a name="l06821"></a><span class="lineno"> 6821</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06822"></a><span class="lineno"> 6822</span>&#160;</div><div class="line"><a name="l06832"></a><span class="lineno"> 6832</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a9c18616f56cb4d3c0889ce0b339221ca">arm_cmplx_mult_real_f32</a>(</div><div class="line"><a name="l06833"></a><span class="lineno"> 6833</span>&#160;  float32_t * pSrcCmplx,</div><div class="line"><a name="l06834"></a><span class="lineno"> 6834</span>&#160;  float32_t * pSrcReal,</div><div class="line"><a name="l06835"></a><span class="lineno"> 6835</span>&#160;  float32_t * pCmplxDst,</div><div class="line"><a name="l06836"></a><span class="lineno"> 6836</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06837"></a><span class="lineno"> 6837</span>&#160;</div><div class="line"><a name="l06847"></a><span class="lineno"> 6847</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1f5f8212a4994882b647f0538a55856c">arm_min_q7</a>(</div><div class="line"><a name="l06848"></a><span class="lineno"> 6848</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l06849"></a><span class="lineno"> 6849</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06850"></a><span class="lineno"> 6850</span>&#160;  q7_t * result,</div><div class="line"><a name="l06851"></a><span class="lineno"> 6851</span>&#160;  uint32_t * index);</div><div class="line"><a name="l06852"></a><span class="lineno"> 6852</span>&#160;</div><div class="line"><a name="l06862"></a><span class="lineno"> 6862</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ad065e37535ebb726750ac1545cb3fa6f">arm_min_q15</a>(</div><div class="line"><a name="l06863"></a><span class="lineno"> 6863</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06864"></a><span class="lineno"> 6864</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06865"></a><span class="lineno"> 6865</span>&#160;  q15_t * pResult,</div><div class="line"><a name="l06866"></a><span class="lineno"> 6866</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06867"></a><span class="lineno"> 6867</span>&#160;</div><div class="line"><a name="l06876"></a><span class="lineno"> 6876</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ab20faeceb5ff5d2d9dd628c2ecf41303">arm_min_q31</a>(</div><div class="line"><a name="l06877"></a><span class="lineno"> 6877</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06878"></a><span class="lineno"> 6878</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06879"></a><span class="lineno"> 6879</span>&#160;  q31_t * pResult,</div><div class="line"><a name="l06880"></a><span class="lineno"> 6880</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06881"></a><span class="lineno"> 6881</span>&#160;</div><div class="line"><a name="l06891"></a><span class="lineno"> 6891</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af62b1673740fc516ea64daf777b7d74a">arm_min_f32</a>(</div><div class="line"><a name="l06892"></a><span class="lineno"> 6892</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06893"></a><span class="lineno"> 6893</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06894"></a><span class="lineno"> 6894</span>&#160;  float32_t * pResult,</div><div class="line"><a name="l06895"></a><span class="lineno"> 6895</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06896"></a><span class="lineno"> 6896</span>&#160;</div><div class="line"><a name="l06906"></a><span class="lineno"> 6906</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a6afd64d381b5c232de59163ebfe71e35">arm_max_q7</a>(</div><div class="line"><a name="l06907"></a><span class="lineno"> 6907</span>&#160;  q7_t * pSrc,</div><div class="line"><a name="l06908"></a><span class="lineno"> 6908</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06909"></a><span class="lineno"> 6909</span>&#160;  q7_t * pResult,</div><div class="line"><a name="l06910"></a><span class="lineno"> 6910</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06911"></a><span class="lineno"> 6911</span>&#160;</div><div class="line"><a name="l06921"></a><span class="lineno"> 6921</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#ac132856c68f4bf2a056eaad5921c7880">arm_max_q15</a>(</div><div class="line"><a name="l06922"></a><span class="lineno"> 6922</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l06923"></a><span class="lineno"> 6923</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06924"></a><span class="lineno"> 6924</span>&#160;  q15_t * pResult,</div><div class="line"><a name="l06925"></a><span class="lineno"> 6925</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06926"></a><span class="lineno"> 6926</span>&#160;</div><div class="line"><a name="l06936"></a><span class="lineno"> 6936</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#aff7cbd4e955382def06724cc4cc85795">arm_max_q31</a>(</div><div class="line"><a name="l06937"></a><span class="lineno"> 6937</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l06938"></a><span class="lineno"> 6938</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06939"></a><span class="lineno"> 6939</span>&#160;  q31_t * pResult,</div><div class="line"><a name="l06940"></a><span class="lineno"> 6940</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06941"></a><span class="lineno"> 6941</span>&#160;</div><div class="line"><a name="l06951"></a><span class="lineno"> 6951</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a5b89d1b04575aeec494f678695fb87d8">arm_max_f32</a>(</div><div class="line"><a name="l06952"></a><span class="lineno"> 6952</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l06953"></a><span class="lineno"> 6953</span>&#160;  uint32_t blockSize,</div><div class="line"><a name="l06954"></a><span class="lineno"> 6954</span>&#160;  float32_t * pResult,</div><div class="line"><a name="l06955"></a><span class="lineno"> 6955</span>&#160;  uint32_t * pIndex);</div><div class="line"><a name="l06956"></a><span class="lineno"> 6956</span>&#160;</div><div class="line"><a name="l06966"></a><span class="lineno"> 6966</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a67e96abfc9c3e30efb70a2ec9d0fe7e8">arm_cmplx_mult_cmplx_q15</a>(</div><div class="line"><a name="l06967"></a><span class="lineno"> 6967</span>&#160;  q15_t * pSrcA,</div><div class="line"><a name="l06968"></a><span class="lineno"> 6968</span>&#160;  q15_t * pSrcB,</div><div class="line"><a name="l06969"></a><span class="lineno"> 6969</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l06970"></a><span class="lineno"> 6970</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06971"></a><span class="lineno"> 6971</span>&#160;</div><div class="line"><a name="l06981"></a><span class="lineno"> 6981</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a1829e50993a90742de225a0ce4213838">arm_cmplx_mult_cmplx_q31</a>(</div><div class="line"><a name="l06982"></a><span class="lineno"> 6982</span>&#160;  q31_t * pSrcA,</div><div class="line"><a name="l06983"></a><span class="lineno"> 6983</span>&#160;  q31_t * pSrcB,</div><div class="line"><a name="l06984"></a><span class="lineno"> 6984</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l06985"></a><span class="lineno"> 6985</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l06986"></a><span class="lineno"> 6986</span>&#160;</div><div class="line"><a name="l06996"></a><span class="lineno"> 6996</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a14b47080054a1ba1250a86805be1ff6b">arm_cmplx_mult_cmplx_f32</a>(</div><div class="line"><a name="l06997"></a><span class="lineno"> 6997</span>&#160;  float32_t * pSrcA,</div><div class="line"><a name="l06998"></a><span class="lineno"> 6998</span>&#160;  float32_t * pSrcB,</div><div class="line"><a name="l06999"></a><span class="lineno"> 6999</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l07000"></a><span class="lineno"> 7000</span>&#160;  uint32_t numSamples);</div><div class="line"><a name="l07001"></a><span class="lineno"> 7001</span>&#160;</div><div class="line"><a name="l07009"></a><span class="lineno"> 7009</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a177704107f94564e9abe4daaa36f4554">arm_float_to_q31</a>(</div><div class="line"><a name="l07010"></a><span class="lineno"> 7010</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l07011"></a><span class="lineno"> 7011</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l07012"></a><span class="lineno"> 7012</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07013"></a><span class="lineno"> 7013</span>&#160;</div><div class="line"><a name="l07021"></a><span class="lineno"> 7021</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a215456e35a18db86882e1d3f0d24e1f2">arm_float_to_q15</a>(</div><div class="line"><a name="l07022"></a><span class="lineno"> 7022</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l07023"></a><span class="lineno"> 7023</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l07024"></a><span class="lineno"> 7024</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07025"></a><span class="lineno"> 7025</span>&#160;</div><div class="line"><a name="l07033"></a><span class="lineno"> 7033</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a44a393818cdee8dce80f2d66add25411">arm_float_to_q7</a>(</div><div class="line"><a name="l07034"></a><span class="lineno"> 7034</span>&#160;  float32_t * pSrc,</div><div class="line"><a name="l07035"></a><span class="lineno"> 7035</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l07036"></a><span class="lineno"> 7036</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07037"></a><span class="lineno"> 7037</span>&#160;</div><div class="line"><a name="l07038"></a><span class="lineno"> 7038</span>&#160;</div><div class="line"><a name="l07046"></a><span class="lineno"> 7046</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a901dede4661365c9e7c630d3eb31c32c">arm_q31_to_q15</a>(</div><div class="line"><a name="l07047"></a><span class="lineno"> 7047</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l07048"></a><span class="lineno"> 7048</span>&#160;  q15_t * pDst,</div><div class="line"><a name="l07049"></a><span class="lineno"> 7049</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07050"></a><span class="lineno"> 7050</span>&#160;</div><div class="line"><a name="l07058"></a><span class="lineno"> 7058</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7f297d1a7d776805395095fdb24a8071">arm_q31_to_q7</a>(</div><div class="line"><a name="l07059"></a><span class="lineno"> 7059</span>&#160;  q31_t * pSrc,</div><div class="line"><a name="l07060"></a><span class="lineno"> 7060</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l07061"></a><span class="lineno"> 7061</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07062"></a><span class="lineno"> 7062</span>&#160;</div><div class="line"><a name="l07070"></a><span class="lineno"> 7070</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#af8b0d2324de273fc430b0e61ad4e9eb2">arm_q15_to_float</a>(</div><div class="line"><a name="l07071"></a><span class="lineno"> 7071</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l07072"></a><span class="lineno"> 7072</span>&#160;  float32_t * pDst,</div><div class="line"><a name="l07073"></a><span class="lineno"> 7073</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07074"></a><span class="lineno"> 7074</span>&#160;</div><div class="line"><a name="l07075"></a><span class="lineno"> 7075</span>&#160;</div><div class="line"><a name="l07083"></a><span class="lineno"> 7083</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a7ba2d87366990ad5380439e2b4a4c0a5">arm_q15_to_q31</a>(</div><div class="line"><a name="l07084"></a><span class="lineno"> 7084</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l07085"></a><span class="lineno"> 7085</span>&#160;  q31_t * pDst,</div><div class="line"><a name="l07086"></a><span class="lineno"> 7086</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07087"></a><span class="lineno"> 7087</span>&#160;</div><div class="line"><a name="l07088"></a><span class="lineno"> 7088</span>&#160;</div><div class="line"><a name="l07096"></a><span class="lineno"> 7096</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="arm__math_8h.xhtml#a8fb31855ff8cce09c2ec9308f48ded69">arm_q15_to_q7</a>(</div><div class="line"><a name="l07097"></a><span class="lineno"> 7097</span>&#160;  q15_t * pSrc,</div><div class="line"><a name="l07098"></a><span class="lineno"> 7098</span>&#160;  q7_t * pDst,</div><div class="line"><a name="l07099"></a><span class="lineno"> 7099</span>&#160;  uint32_t blockSize);</div><div class="line"><a name="l07100"></a><span class="lineno"> 7100</span>&#160;</div><div class="line"><a name="l07101"></a><span class="lineno"> 7101</span>&#160;</div><div class="line"><a name="l07173"></a><span class="lineno"><a class="line" href="group___bilinear_interpolate.xhtml#gab49a4c0f64854903d996d01ba38f711a"> 7173</a></span>&#160;  <span class="keyword">static</span> __INLINE float32_t <a class="code" href="group___bilinear_interpolate.xhtml#gab49a4c0f64854903d996d01ba38f711a">arm_bilinear_interp_f32</a>(</div><div class="line"><a name="l07174"></a><span class="lineno"> 7174</span>&#160;  <span class="keyword">const</span> <a class="code" href="structarm__bilinear__interp__instance__f32.xhtml">arm_bilinear_interp_instance_f32</a> * S,</div><div class="line"><a name="l07175"></a><span class="lineno"> 7175</span>&#160;  float32_t X,</div><div class="line"><a name="l07176"></a><span class="lineno"> 7176</span>&#160;  float32_t Y)</div><div class="line"><a name="l07177"></a><span class="lineno"> 7177</span>&#160;  {</div><div class="line"><a name="l07178"></a><span class="lineno"> 7178</span>&#160;    float32_t out;</div><div class="line"><a name="l07179"></a><span class="lineno"> 7179</span>&#160;    float32_t f00, f01, f10, f11;</div><div class="line"><a name="l07180"></a><span class="lineno"> 7180</span>&#160;    float32_t *pData = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#afd1e764591c991c212d56c893efb5ea4">pData</a>;</div><div class="line"><a name="l07181"></a><span class="lineno"> 7181</span>&#160;    int32_t xIndex, yIndex, index;</div><div class="line"><a name="l07182"></a><span class="lineno"> 7182</span>&#160;    float32_t xdiff, ydiff;</div><div class="line"><a name="l07183"></a><span class="lineno"> 7183</span>&#160;    float32_t b1, b2, b3, b4;</div><div class="line"><a name="l07184"></a><span class="lineno"> 7184</span>&#160;</div><div class="line"><a name="l07185"></a><span class="lineno"> 7185</span>&#160;    xIndex = (int32_t) X;</div><div class="line"><a name="l07186"></a><span class="lineno"> 7186</span>&#160;    yIndex = (int32_t) Y;</div><div class="line"><a name="l07187"></a><span class="lineno"> 7187</span>&#160;</div><div class="line"><a name="l07188"></a><span class="lineno"> 7188</span>&#160;    <span class="comment">/* Care taken for table outside boundary */</span></div><div class="line"><a name="l07189"></a><span class="lineno"> 7189</span>&#160;    <span class="comment">/* Returns zero output when values are outside table boundary */</span></div><div class="line"><a name="l07190"></a><span class="lineno"> 7190</span>&#160;    <span class="keywordflow">if</span>(xIndex &lt; 0 || xIndex &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#a34f2b17cc57b95011960df9718af6ed6">numRows</a> - 1) || yIndex &lt; 0</div><div class="line"><a name="l07191"></a><span class="lineno"> 7191</span>&#160;       || yIndex &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8">numCols</a> - 1))</div><div class="line"><a name="l07192"></a><span class="lineno"> 7192</span>&#160;    {</div><div class="line"><a name="l07193"></a><span class="lineno"> 7193</span>&#160;      <span class="keywordflow">return</span> (0);</div><div class="line"><a name="l07194"></a><span class="lineno"> 7194</span>&#160;    }</div><div class="line"><a name="l07195"></a><span class="lineno"> 7195</span>&#160;</div><div class="line"><a name="l07196"></a><span class="lineno"> 7196</span>&#160;    <span class="comment">/* Calculation of index for two nearest points in X-direction */</span></div><div class="line"><a name="l07197"></a><span class="lineno"> 7197</span>&#160;    index = (xIndex - 1) + (yIndex - 1) * S-&gt;<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8">numCols</a>;</div><div class="line"><a name="l07198"></a><span class="lineno"> 7198</span>&#160;</div><div class="line"><a name="l07199"></a><span class="lineno"> 7199</span>&#160;</div><div class="line"><a name="l07200"></a><span class="lineno"> 7200</span>&#160;    <span class="comment">/* Read two nearest points in X-direction */</span></div><div class="line"><a name="l07201"></a><span class="lineno"> 7201</span>&#160;    f00 = pData[index];</div><div class="line"><a name="l07202"></a><span class="lineno"> 7202</span>&#160;    f01 = pData[index + 1];</div><div class="line"><a name="l07203"></a><span class="lineno"> 7203</span>&#160;</div><div class="line"><a name="l07204"></a><span class="lineno"> 7204</span>&#160;    <span class="comment">/* Calculation of index for two nearest points in Y-direction */</span></div><div class="line"><a name="l07205"></a><span class="lineno"> 7205</span>&#160;    index = (xIndex - 1) + (yIndex) * S-&gt;<a class="code" href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8">numCols</a>;</div><div class="line"><a name="l07206"></a><span class="lineno"> 7206</span>&#160;</div><div class="line"><a name="l07207"></a><span class="lineno"> 7207</span>&#160;</div><div class="line"><a name="l07208"></a><span class="lineno"> 7208</span>&#160;    <span class="comment">/* Read two nearest points in Y-direction */</span></div><div class="line"><a name="l07209"></a><span class="lineno"> 7209</span>&#160;    f10 = pData[index];</div><div class="line"><a name="l07210"></a><span class="lineno"> 7210</span>&#160;    f11 = pData[index + 1];</div><div class="line"><a name="l07211"></a><span class="lineno"> 7211</span>&#160;</div><div class="line"><a name="l07212"></a><span class="lineno"> 7212</span>&#160;    <span class="comment">/* Calculation of intermediate values */</span></div><div class="line"><a name="l07213"></a><span class="lineno"> 7213</span>&#160;    b1 = f00;</div><div class="line"><a name="l07214"></a><span class="lineno"> 7214</span>&#160;    b2 = f01 - f00;</div><div class="line"><a name="l07215"></a><span class="lineno"> 7215</span>&#160;    b3 = f10 - f00;</div><div class="line"><a name="l07216"></a><span class="lineno"> 7216</span>&#160;    b4 = f00 - f01 - f10 + f11;</div><div class="line"><a name="l07217"></a><span class="lineno"> 7217</span>&#160;</div><div class="line"><a name="l07218"></a><span class="lineno"> 7218</span>&#160;    <span class="comment">/* Calculation of fractional part in X */</span></div><div class="line"><a name="l07219"></a><span class="lineno"> 7219</span>&#160;    xdiff = X - xIndex;</div><div class="line"><a name="l07220"></a><span class="lineno"> 7220</span>&#160;</div><div class="line"><a name="l07221"></a><span class="lineno"> 7221</span>&#160;    <span class="comment">/* Calculation of fractional part in Y */</span></div><div class="line"><a name="l07222"></a><span class="lineno"> 7222</span>&#160;    ydiff = Y - yIndex;</div><div class="line"><a name="l07223"></a><span class="lineno"> 7223</span>&#160;</div><div class="line"><a name="l07224"></a><span class="lineno"> 7224</span>&#160;    <span class="comment">/* Calculation of bi-linear interpolated output */</span></div><div class="line"><a name="l07225"></a><span class="lineno"> 7225</span>&#160;    out = b1 + b2 * xdiff + b3 * ydiff + b4 * xdiff * ydiff;</div><div class="line"><a name="l07226"></a><span class="lineno"> 7226</span>&#160;</div><div class="line"><a name="l07227"></a><span class="lineno"> 7227</span>&#160;    <span class="comment">/* return to application */</span></div><div class="line"><a name="l07228"></a><span class="lineno"> 7228</span>&#160;    <span class="keywordflow">return</span> (out);</div><div class="line"><a name="l07229"></a><span class="lineno"> 7229</span>&#160;</div><div class="line"><a name="l07230"></a><span class="lineno"> 7230</span>&#160;  }</div><div class="line"><a name="l07231"></a><span class="lineno"> 7231</span>&#160;</div><div class="line"><a name="l07241"></a><span class="lineno"><a class="line" href="group___bilinear_interpolate.xhtml#ga202a033c8a2ad3678b136f93153b6d13"> 7241</a></span>&#160;  <span class="keyword">static</span> __INLINE q31_t <a class="code" href="group___bilinear_interpolate.xhtml#ga202a033c8a2ad3678b136f93153b6d13">arm_bilinear_interp_q31</a>(</div><div class="line"><a name="l07242"></a><span class="lineno"> 7242</span>&#160;  <a class="code" href="structarm__bilinear__interp__instance__q31.xhtml">arm_bilinear_interp_instance_q31</a> * S,</div><div class="line"><a name="l07243"></a><span class="lineno"> 7243</span>&#160;  q31_t X,</div><div class="line"><a name="l07244"></a><span class="lineno"> 7244</span>&#160;  q31_t Y)</div><div class="line"><a name="l07245"></a><span class="lineno"> 7245</span>&#160;  {</div><div class="line"><a name="l07246"></a><span class="lineno"> 7246</span>&#160;    q31_t out;                                   <span class="comment">/* Temporary output */</span></div><div class="line"><a name="l07247"></a><span class="lineno"> 7247</span>&#160;    q31_t acc = 0;                               <span class="comment">/* output */</span></div><div class="line"><a name="l07248"></a><span class="lineno"> 7248</span>&#160;    q31_t xfract, yfract;                        <span class="comment">/* X, Y fractional parts */</span></div><div class="line"><a name="l07249"></a><span class="lineno"> 7249</span>&#160;    q31_t x1, x2, y1, y2;                        <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l07250"></a><span class="lineno"> 7250</span>&#160;    int32_t rI, cI;                              <span class="comment">/* Row and column indices */</span></div><div class="line"><a name="l07251"></a><span class="lineno"> 7251</span>&#160;    q31_t *pYData = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a843eae0c9db5f815e77e1aaf9afea358">pData</a>;                    <span class="comment">/* pointer to output table values */</span></div><div class="line"><a name="l07252"></a><span class="lineno"> 7252</span>&#160;    uint32_t nCols = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a6c3eff4eb17ff1d43f170efb84713a2d">numCols</a>;                 <span class="comment">/* num of rows */</span></div><div class="line"><a name="l07253"></a><span class="lineno"> 7253</span>&#160;</div><div class="line"><a name="l07254"></a><span class="lineno"> 7254</span>&#160;</div><div class="line"><a name="l07255"></a><span class="lineno"> 7255</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07256"></a><span class="lineno"> 7256</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07257"></a><span class="lineno"> 7257</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07258"></a><span class="lineno"> 7258</span>&#160;    rI = ((X &amp; 0xFFF00000) &gt;&gt; 20u);</div><div class="line"><a name="l07259"></a><span class="lineno"> 7259</span>&#160;</div><div class="line"><a name="l07260"></a><span class="lineno"> 7260</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07261"></a><span class="lineno"> 7261</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07262"></a><span class="lineno"> 7262</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07263"></a><span class="lineno"> 7263</span>&#160;    cI = ((Y &amp; 0xFFF00000) &gt;&gt; 20u);</div><div class="line"><a name="l07264"></a><span class="lineno"> 7264</span>&#160;</div><div class="line"><a name="l07265"></a><span class="lineno"> 7265</span>&#160;    <span class="comment">/* Care taken for table outside boundary */</span></div><div class="line"><a name="l07266"></a><span class="lineno"> 7266</span>&#160;    <span class="comment">/* Returns zero output when values are outside table boundary */</span></div><div class="line"><a name="l07267"></a><span class="lineno"> 7267</span>&#160;    <span class="keywordflow">if</span>(rI &lt; 0 || rI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a2082e3eac56354d75291f03e96ce4aa5">numRows</a> - 1) || cI &lt; 0 || cI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q31.xhtml#a6c3eff4eb17ff1d43f170efb84713a2d">numCols</a> - 1))</div><div class="line"><a name="l07268"></a><span class="lineno"> 7268</span>&#160;    {</div><div class="line"><a name="l07269"></a><span class="lineno"> 7269</span>&#160;      <span class="keywordflow">return</span> (0);</div><div class="line"><a name="l07270"></a><span class="lineno"> 7270</span>&#160;    }</div><div class="line"><a name="l07271"></a><span class="lineno"> 7271</span>&#160;</div><div class="line"><a name="l07272"></a><span class="lineno"> 7272</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07273"></a><span class="lineno"> 7273</span>&#160;    <span class="comment">/* shift left xfract by 11 to keep 1.31 format */</span></div><div class="line"><a name="l07274"></a><span class="lineno"> 7274</span>&#160;    xfract = (X &amp; 0x000FFFFF) &lt;&lt; 11u;</div><div class="line"><a name="l07275"></a><span class="lineno"> 7275</span>&#160;</div><div class="line"><a name="l07276"></a><span class="lineno"> 7276</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07277"></a><span class="lineno"> 7277</span>&#160;    x1 = pYData[(rI) + nCols * (cI)];</div><div class="line"><a name="l07278"></a><span class="lineno"> 7278</span>&#160;    x2 = pYData[(rI) + nCols * (cI) + 1u];</div><div class="line"><a name="l07279"></a><span class="lineno"> 7279</span>&#160;</div><div class="line"><a name="l07280"></a><span class="lineno"> 7280</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07281"></a><span class="lineno"> 7281</span>&#160;    <span class="comment">/* shift left yfract by 11 to keep 1.31 format */</span></div><div class="line"><a name="l07282"></a><span class="lineno"> 7282</span>&#160;    yfract = (Y &amp; 0x000FFFFF) &lt;&lt; 11u;</div><div class="line"><a name="l07283"></a><span class="lineno"> 7283</span>&#160;</div><div class="line"><a name="l07284"></a><span class="lineno"> 7284</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07285"></a><span class="lineno"> 7285</span>&#160;    y1 = pYData[(rI) + nCols * (cI + 1)];</div><div class="line"><a name="l07286"></a><span class="lineno"> 7286</span>&#160;    y2 = pYData[(rI) + nCols * (cI + 1) + 1u];</div><div class="line"><a name="l07287"></a><span class="lineno"> 7287</span>&#160;</div><div class="line"><a name="l07288"></a><span class="lineno"> 7288</span>&#160;    <span class="comment">/* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 3.29(q29) format */</span></div><div class="line"><a name="l07289"></a><span class="lineno"> 7289</span>&#160;    out = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) x1 * (0x7FFFFFFF - xfract)) &gt;&gt; 32));</div><div class="line"><a name="l07290"></a><span class="lineno"> 7290</span>&#160;    acc = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) out * (0x7FFFFFFF - yfract)) &gt;&gt; 32));</div><div class="line"><a name="l07291"></a><span class="lineno"> 7291</span>&#160;</div><div class="line"><a name="l07292"></a><span class="lineno"> 7292</span>&#160;    <span class="comment">/* x2 * (xfract) * (1-yfract)  in 3.29(q29) and adding to acc */</span></div><div class="line"><a name="l07293"></a><span class="lineno"> 7293</span>&#160;    out = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) x2 * (0x7FFFFFFF - yfract) &gt;&gt; 32));</div><div class="line"><a name="l07294"></a><span class="lineno"> 7294</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) out * (xfract) &gt;&gt; 32));</div><div class="line"><a name="l07295"></a><span class="lineno"> 7295</span>&#160;</div><div class="line"><a name="l07296"></a><span class="lineno"> 7296</span>&#160;    <span class="comment">/* y1 * (1 - xfract) * (yfract)  in 3.29(q29) and adding to acc */</span></div><div class="line"><a name="l07297"></a><span class="lineno"> 7297</span>&#160;    out = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) y1 * (0x7FFFFFFF - xfract) &gt;&gt; 32));</div><div class="line"><a name="l07298"></a><span class="lineno"> 7298</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) out * (yfract) &gt;&gt; 32));</div><div class="line"><a name="l07299"></a><span class="lineno"> 7299</span>&#160;</div><div class="line"><a name="l07300"></a><span class="lineno"> 7300</span>&#160;    <span class="comment">/* y2 * (xfract) * (yfract)  in 3.29(q29) and adding to acc */</span></div><div class="line"><a name="l07301"></a><span class="lineno"> 7301</span>&#160;    out = ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) y2 * (xfract) &gt;&gt; 32));</div><div class="line"><a name="l07302"></a><span class="lineno"> 7302</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) ((q63_t) out * (yfract) &gt;&gt; 32));</div><div class="line"><a name="l07303"></a><span class="lineno"> 7303</span>&#160;</div><div class="line"><a name="l07304"></a><span class="lineno"> 7304</span>&#160;    <span class="comment">/* Convert acc to 1.31(q31) format */</span></div><div class="line"><a name="l07305"></a><span class="lineno"> 7305</span>&#160;    <span class="keywordflow">return</span> (acc &lt;&lt; 2u);</div><div class="line"><a name="l07306"></a><span class="lineno"> 7306</span>&#160;</div><div class="line"><a name="l07307"></a><span class="lineno"> 7307</span>&#160;  }</div><div class="line"><a name="l07308"></a><span class="lineno"> 7308</span>&#160;</div><div class="line"><a name="l07317"></a><span class="lineno"><a class="line" href="group___bilinear_interpolate.xhtml#gaa8dffbc2a01bb7accf231384498ec85e"> 7317</a></span>&#160;  <span class="keyword">static</span> __INLINE q15_t <a class="code" href="group___bilinear_interpolate.xhtml#gaa8dffbc2a01bb7accf231384498ec85e">arm_bilinear_interp_q15</a>(</div><div class="line"><a name="l07318"></a><span class="lineno"> 7318</span>&#160;  <a class="code" href="structarm__bilinear__interp__instance__q15.xhtml">arm_bilinear_interp_instance_q15</a> * S,</div><div class="line"><a name="l07319"></a><span class="lineno"> 7319</span>&#160;  q31_t X,</div><div class="line"><a name="l07320"></a><span class="lineno"> 7320</span>&#160;  q31_t Y)</div><div class="line"><a name="l07321"></a><span class="lineno"> 7321</span>&#160;  {</div><div class="line"><a name="l07322"></a><span class="lineno"> 7322</span>&#160;    q63_t acc = 0;                               <span class="comment">/* output */</span></div><div class="line"><a name="l07323"></a><span class="lineno"> 7323</span>&#160;    q31_t out;                                   <span class="comment">/* Temporary output */</span></div><div class="line"><a name="l07324"></a><span class="lineno"> 7324</span>&#160;    q15_t x1, x2, y1, y2;                        <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l07325"></a><span class="lineno"> 7325</span>&#160;    q31_t xfract, yfract;                        <span class="comment">/* X, Y fractional parts */</span></div><div class="line"><a name="l07326"></a><span class="lineno"> 7326</span>&#160;    int32_t rI, cI;                              <span class="comment">/* Row and column indices */</span></div><div class="line"><a name="l07327"></a><span class="lineno"> 7327</span>&#160;    q15_t *pYData = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a50d75b1316cee3e0dfad6dcc4c9a2954">pData</a>;                    <span class="comment">/* pointer to output table values */</span></div><div class="line"><a name="l07328"></a><span class="lineno"> 7328</span>&#160;    uint32_t nCols = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a7fa8772d01583374ff8ac18205a26a37">numCols</a>;                 <span class="comment">/* num of rows */</span></div><div class="line"><a name="l07329"></a><span class="lineno"> 7329</span>&#160;</div><div class="line"><a name="l07330"></a><span class="lineno"> 7330</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07331"></a><span class="lineno"> 7331</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07332"></a><span class="lineno"> 7332</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07333"></a><span class="lineno"> 7333</span>&#160;    rI = ((X &amp; 0xFFF00000) &gt;&gt; 20);</div><div class="line"><a name="l07334"></a><span class="lineno"> 7334</span>&#160;</div><div class="line"><a name="l07335"></a><span class="lineno"> 7335</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07336"></a><span class="lineno"> 7336</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07337"></a><span class="lineno"> 7337</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07338"></a><span class="lineno"> 7338</span>&#160;    cI = ((Y &amp; 0xFFF00000) &gt;&gt; 20);</div><div class="line"><a name="l07339"></a><span class="lineno"> 7339</span>&#160;</div><div class="line"><a name="l07340"></a><span class="lineno"> 7340</span>&#160;    <span class="comment">/* Care taken for table outside boundary */</span></div><div class="line"><a name="l07341"></a><span class="lineno"> 7341</span>&#160;    <span class="comment">/* Returns zero output when values are outside table boundary */</span></div><div class="line"><a name="l07342"></a><span class="lineno"> 7342</span>&#160;    <span class="keywordflow">if</span>(rI &lt; 0 || rI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a2130ae30a804995a9f5d0e2189e08565">numRows</a> - 1) || cI &lt; 0 || cI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q15.xhtml#a7fa8772d01583374ff8ac18205a26a37">numCols</a> - 1))</div><div class="line"><a name="l07343"></a><span class="lineno"> 7343</span>&#160;    {</div><div class="line"><a name="l07344"></a><span class="lineno"> 7344</span>&#160;      <span class="keywordflow">return</span> (0);</div><div class="line"><a name="l07345"></a><span class="lineno"> 7345</span>&#160;    }</div><div class="line"><a name="l07346"></a><span class="lineno"> 7346</span>&#160;</div><div class="line"><a name="l07347"></a><span class="lineno"> 7347</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07348"></a><span class="lineno"> 7348</span>&#160;    <span class="comment">/* xfract should be in 12.20 format */</span></div><div class="line"><a name="l07349"></a><span class="lineno"> 7349</span>&#160;    xfract = (X &amp; 0x000FFFFF);</div><div class="line"><a name="l07350"></a><span class="lineno"> 7350</span>&#160;</div><div class="line"><a name="l07351"></a><span class="lineno"> 7351</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07352"></a><span class="lineno"> 7352</span>&#160;    x1 = pYData[(rI) + nCols * (cI)];</div><div class="line"><a name="l07353"></a><span class="lineno"> 7353</span>&#160;    x2 = pYData[(rI) + nCols * (cI) + 1u];</div><div class="line"><a name="l07354"></a><span class="lineno"> 7354</span>&#160;</div><div class="line"><a name="l07355"></a><span class="lineno"> 7355</span>&#160;</div><div class="line"><a name="l07356"></a><span class="lineno"> 7356</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07357"></a><span class="lineno"> 7357</span>&#160;    <span class="comment">/* yfract should be in 12.20 format */</span></div><div class="line"><a name="l07358"></a><span class="lineno"> 7358</span>&#160;    yfract = (Y &amp; 0x000FFFFF);</div><div class="line"><a name="l07359"></a><span class="lineno"> 7359</span>&#160;</div><div class="line"><a name="l07360"></a><span class="lineno"> 7360</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07361"></a><span class="lineno"> 7361</span>&#160;    y1 = pYData[(rI) + nCols * (cI + 1)];</div><div class="line"><a name="l07362"></a><span class="lineno"> 7362</span>&#160;    y2 = pYData[(rI) + nCols * (cI + 1) + 1u];</div><div class="line"><a name="l07363"></a><span class="lineno"> 7363</span>&#160;</div><div class="line"><a name="l07364"></a><span class="lineno"> 7364</span>&#160;    <span class="comment">/* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 13.51 format */</span></div><div class="line"><a name="l07365"></a><span class="lineno"> 7365</span>&#160;</div><div class="line"><a name="l07366"></a><span class="lineno"> 7366</span>&#160;    <span class="comment">/* x1 is in 1.15(q15), xfract in 12.20 format and out is in 13.35 format */</span></div><div class="line"><a name="l07367"></a><span class="lineno"> 7367</span>&#160;    <span class="comment">/* convert 13.35 to 13.31 by right shifting  and out is in 1.31 */</span></div><div class="line"><a name="l07368"></a><span class="lineno"> 7368</span>&#160;    out = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) x1 * (0xFFFFF - xfract)) &gt;&gt; 4u);</div><div class="line"><a name="l07369"></a><span class="lineno"> 7369</span>&#160;    acc = ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (0xFFFFF - yfract));</div><div class="line"><a name="l07370"></a><span class="lineno"> 7370</span>&#160;</div><div class="line"><a name="l07371"></a><span class="lineno"> 7371</span>&#160;    <span class="comment">/* x2 * (xfract) * (1-yfract)  in 1.51 and adding to acc */</span></div><div class="line"><a name="l07372"></a><span class="lineno"> 7372</span>&#160;    out = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) x2 * (0xFFFFF - yfract)) &gt;&gt; 4u);</div><div class="line"><a name="l07373"></a><span class="lineno"> 7373</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (xfract));</div><div class="line"><a name="l07374"></a><span class="lineno"> 7374</span>&#160;</div><div class="line"><a name="l07375"></a><span class="lineno"> 7375</span>&#160;    <span class="comment">/* y1 * (1 - xfract) * (yfract)  in 1.51 and adding to acc */</span></div><div class="line"><a name="l07376"></a><span class="lineno"> 7376</span>&#160;    out = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) y1 * (0xFFFFF - xfract)) &gt;&gt; 4u);</div><div class="line"><a name="l07377"></a><span class="lineno"> 7377</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (yfract));</div><div class="line"><a name="l07378"></a><span class="lineno"> 7378</span>&#160;</div><div class="line"><a name="l07379"></a><span class="lineno"> 7379</span>&#160;    <span class="comment">/* y2 * (xfract) * (yfract)  in 1.51 and adding to acc */</span></div><div class="line"><a name="l07380"></a><span class="lineno"> 7380</span>&#160;    out = (<a class="code" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((q63_t) y2 * (xfract)) &gt;&gt; 4u);</div><div class="line"><a name="l07381"></a><span class="lineno"> 7381</span>&#160;    acc += ((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (yfract));</div><div class="line"><a name="l07382"></a><span class="lineno"> 7382</span>&#160;</div><div class="line"><a name="l07383"></a><span class="lineno"> 7383</span>&#160;    <span class="comment">/* acc is in 13.51 format and down shift acc by 36 times */</span></div><div class="line"><a name="l07384"></a><span class="lineno"> 7384</span>&#160;    <span class="comment">/* Convert out to 1.15 format */</span></div><div class="line"><a name="l07385"></a><span class="lineno"> 7385</span>&#160;    <span class="keywordflow">return</span> (acc &gt;&gt; 36);</div><div class="line"><a name="l07386"></a><span class="lineno"> 7386</span>&#160;</div><div class="line"><a name="l07387"></a><span class="lineno"> 7387</span>&#160;  }</div><div class="line"><a name="l07388"></a><span class="lineno"> 7388</span>&#160;</div><div class="line"><a name="l07397"></a><span class="lineno"><a class="line" href="group___bilinear_interpolate.xhtml#gade8db9706a3ae9ad03b2750a239d2ee6"> 7397</a></span>&#160;  <span class="keyword">static</span> __INLINE q7_t <a class="code" href="group___bilinear_interpolate.xhtml#gade8db9706a3ae9ad03b2750a239d2ee6">arm_bilinear_interp_q7</a>(</div><div class="line"><a name="l07398"></a><span class="lineno"> 7398</span>&#160;  <a class="code" href="structarm__bilinear__interp__instance__q7.xhtml">arm_bilinear_interp_instance_q7</a> * S,</div><div class="line"><a name="l07399"></a><span class="lineno"> 7399</span>&#160;  q31_t X,</div><div class="line"><a name="l07400"></a><span class="lineno"> 7400</span>&#160;  q31_t Y)</div><div class="line"><a name="l07401"></a><span class="lineno"> 7401</span>&#160;  {</div><div class="line"><a name="l07402"></a><span class="lineno"> 7402</span>&#160;    q63_t acc = 0;                               <span class="comment">/* output */</span></div><div class="line"><a name="l07403"></a><span class="lineno"> 7403</span>&#160;    q31_t out;                                   <span class="comment">/* Temporary output */</span></div><div class="line"><a name="l07404"></a><span class="lineno"> 7404</span>&#160;    q31_t xfract, yfract;                        <span class="comment">/* X, Y fractional parts */</span></div><div class="line"><a name="l07405"></a><span class="lineno"> 7405</span>&#160;    q7_t x1, x2, y1, y2;                         <span class="comment">/* Nearest output values */</span></div><div class="line"><a name="l07406"></a><span class="lineno"> 7406</span>&#160;    int32_t rI, cI;                              <span class="comment">/* Row and column indices */</span></div><div class="line"><a name="l07407"></a><span class="lineno"> 7407</span>&#160;    q7_t *pYData = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#af05194d691bbefb02c34bafb22ca9ef0">pData</a>;                     <span class="comment">/* pointer to output table values */</span></div><div class="line"><a name="l07408"></a><span class="lineno"> 7408</span>&#160;    uint32_t nCols = S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#a860dd0d24380ea06cfbb348fb3b12c9a">numCols</a>;                 <span class="comment">/* num of rows */</span></div><div class="line"><a name="l07409"></a><span class="lineno"> 7409</span>&#160;</div><div class="line"><a name="l07410"></a><span class="lineno"> 7410</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07411"></a><span class="lineno"> 7411</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07412"></a><span class="lineno"> 7412</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07413"></a><span class="lineno"> 7413</span>&#160;    rI = ((X &amp; 0xFFF00000) &gt;&gt; 20);</div><div class="line"><a name="l07414"></a><span class="lineno"> 7414</span>&#160;</div><div class="line"><a name="l07415"></a><span class="lineno"> 7415</span>&#160;    <span class="comment">/* Input is in 12.20 format */</span></div><div class="line"><a name="l07416"></a><span class="lineno"> 7416</span>&#160;    <span class="comment">/* 12 bits for the table index */</span></div><div class="line"><a name="l07417"></a><span class="lineno"> 7417</span>&#160;    <span class="comment">/* Index value calculation */</span></div><div class="line"><a name="l07418"></a><span class="lineno"> 7418</span>&#160;    cI = ((Y &amp; 0xFFF00000) &gt;&gt; 20);</div><div class="line"><a name="l07419"></a><span class="lineno"> 7419</span>&#160;</div><div class="line"><a name="l07420"></a><span class="lineno"> 7420</span>&#160;    <span class="comment">/* Care taken for table outside boundary */</span></div><div class="line"><a name="l07421"></a><span class="lineno"> 7421</span>&#160;    <span class="comment">/* Returns zero output when values are outside table boundary */</span></div><div class="line"><a name="l07422"></a><span class="lineno"> 7422</span>&#160;    <span class="keywordflow">if</span>(rI &lt; 0 || rI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#ad5a8067cab5f9ea4688b11a623e16607">numRows</a> - 1) || cI &lt; 0 || cI &gt; (S-&gt;<a class="code" href="structarm__bilinear__interp__instance__q7.xhtml#a860dd0d24380ea06cfbb348fb3b12c9a">numCols</a> - 1))</div><div class="line"><a name="l07423"></a><span class="lineno"> 7423</span>&#160;    {</div><div class="line"><a name="l07424"></a><span class="lineno"> 7424</span>&#160;      <span class="keywordflow">return</span> (0);</div><div class="line"><a name="l07425"></a><span class="lineno"> 7425</span>&#160;    }</div><div class="line"><a name="l07426"></a><span class="lineno"> 7426</span>&#160;</div><div class="line"><a name="l07427"></a><span class="lineno"> 7427</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07428"></a><span class="lineno"> 7428</span>&#160;    <span class="comment">/* xfract should be in 12.20 format */</span></div><div class="line"><a name="l07429"></a><span class="lineno"> 7429</span>&#160;    xfract = (X &amp; 0x000FFFFF);</div><div class="line"><a name="l07430"></a><span class="lineno"> 7430</span>&#160;</div><div class="line"><a name="l07431"></a><span class="lineno"> 7431</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07432"></a><span class="lineno"> 7432</span>&#160;    x1 = pYData[(rI) + nCols * (cI)];</div><div class="line"><a name="l07433"></a><span class="lineno"> 7433</span>&#160;    x2 = pYData[(rI) + nCols * (cI) + 1u];</div><div class="line"><a name="l07434"></a><span class="lineno"> 7434</span>&#160;</div><div class="line"><a name="l07435"></a><span class="lineno"> 7435</span>&#160;</div><div class="line"><a name="l07436"></a><span class="lineno"> 7436</span>&#160;    <span class="comment">/* 20 bits for the fractional part */</span></div><div class="line"><a name="l07437"></a><span class="lineno"> 7437</span>&#160;    <span class="comment">/* yfract should be in 12.20 format */</span></div><div class="line"><a name="l07438"></a><span class="lineno"> 7438</span>&#160;    yfract = (Y &amp; 0x000FFFFF);</div><div class="line"><a name="l07439"></a><span class="lineno"> 7439</span>&#160;</div><div class="line"><a name="l07440"></a><span class="lineno"> 7440</span>&#160;    <span class="comment">/* Read two nearest output values from the index */</span></div><div class="line"><a name="l07441"></a><span class="lineno"> 7441</span>&#160;    y1 = pYData[(rI) + nCols * (cI + 1)];</div><div class="line"><a name="l07442"></a><span class="lineno"> 7442</span>&#160;    y2 = pYData[(rI) + nCols * (cI + 1) + 1u];</div><div class="line"><a name="l07443"></a><span class="lineno"> 7443</span>&#160;</div><div class="line"><a name="l07444"></a><span class="lineno"> 7444</span>&#160;    <span class="comment">/* Calculation of x1 * (1-xfract ) * (1-yfract) and acc is in 16.47 format */</span></div><div class="line"><a name="l07445"></a><span class="lineno"> 7445</span>&#160;    out = ((x1 * (0xFFFFF - xfract)));</div><div class="line"><a name="l07446"></a><span class="lineno"> 7446</span>&#160;    acc = (((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (0xFFFFF - yfract)));</div><div class="line"><a name="l07447"></a><span class="lineno"> 7447</span>&#160;</div><div class="line"><a name="l07448"></a><span class="lineno"> 7448</span>&#160;    <span class="comment">/* x2 * (xfract) * (1-yfract)  in 2.22 and adding to acc */</span></div><div class="line"><a name="l07449"></a><span class="lineno"> 7449</span>&#160;    out = ((x2 * (0xFFFFF - yfract)));</div><div class="line"><a name="l07450"></a><span class="lineno"> 7450</span>&#160;    acc += (((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (xfract)));</div><div class="line"><a name="l07451"></a><span class="lineno"> 7451</span>&#160;</div><div class="line"><a name="l07452"></a><span class="lineno"> 7452</span>&#160;    <span class="comment">/* y1 * (1 - xfract) * (yfract)  in 2.22 and adding to acc */</span></div><div class="line"><a name="l07453"></a><span class="lineno"> 7453</span>&#160;    out = ((y1 * (0xFFFFF - xfract)));</div><div class="line"><a name="l07454"></a><span class="lineno"> 7454</span>&#160;    acc += (((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (yfract)));</div><div class="line"><a name="l07455"></a><span class="lineno"> 7455</span>&#160;</div><div class="line"><a name="l07456"></a><span class="lineno"> 7456</span>&#160;    <span class="comment">/* y2 * (xfract) * (yfract)  in 2.22 and adding to acc */</span></div><div class="line"><a name="l07457"></a><span class="lineno"> 7457</span>&#160;    out = ((y2 * (yfract)));</div><div class="line"><a name="l07458"></a><span class="lineno"> 7458</span>&#160;    acc += (((<a class="code" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) out * (xfract)));</div><div class="line"><a name="l07459"></a><span class="lineno"> 7459</span>&#160;</div><div class="line"><a name="l07460"></a><span class="lineno"> 7460</span>&#160;    <span class="comment">/* acc in 16.47 format and down shift by 40 to convert to 1.7 format */</span></div><div class="line"><a name="l07461"></a><span class="lineno"> 7461</span>&#160;    <span class="keywordflow">return</span> (acc &gt;&gt; 40);</div><div class="line"><a name="l07462"></a><span class="lineno"> 7462</span>&#160;</div><div class="line"><a name="l07463"></a><span class="lineno"> 7463</span>&#160;  }</div><div class="line"><a name="l07464"></a><span class="lineno"> 7464</span>&#160;</div><div class="line"><a name="l07470"></a><span class="lineno"> 7470</span>&#160;<span class="comment">//SMMLAR</span></div><div class="line"><a name="l07471"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#aba3e538352fc7f9d6d15f9a18d469399"> 7471</a></span>&#160;<span class="preprocessor">#define multAcc_32x32_keep32_R(a, x, y) \</span></div><div class="line"><a name="l07472"></a><span class="lineno"> 7472</span>&#160;<span class="preprocessor">    a = (q31_t) (((((q63_t) a) &lt;&lt; 32) + ((q63_t) x * y) + 0x80000000LL ) &gt;&gt; 32)</span></div><div class="line"><a name="l07473"></a><span class="lineno"> 7473</span>&#160;</div><div class="line"><a name="l07474"></a><span class="lineno"> 7474</span>&#160;<span class="comment">//SMMLSR</span></div><div class="line"><a name="l07475"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a668fbf1cd1c3bc8faf1b1c83964ade23"> 7475</a></span>&#160;<span class="preprocessor">#define multSub_32x32_keep32_R(a, x, y) \</span></div><div class="line"><a name="l07476"></a><span class="lineno"> 7476</span>&#160;<span class="preprocessor">    a = (q31_t) (((((q63_t) a) &lt;&lt; 32) - ((q63_t) x * y) + 0x80000000LL ) &gt;&gt; 32)</span></div><div class="line"><a name="l07477"></a><span class="lineno"> 7477</span>&#160;</div><div class="line"><a name="l07478"></a><span class="lineno"> 7478</span>&#160;<span class="comment">//SMMULR</span></div><div class="line"><a name="l07479"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a960f210642058d2b3d5368729a6e8375"> 7479</a></span>&#160;<span class="preprocessor">#define mult_32x32_keep32_R(a, x, y) \</span></div><div class="line"><a name="l07480"></a><span class="lineno"> 7480</span>&#160;<span class="preprocessor">    a = (q31_t) (((q63_t) x * y + 0x80000000LL ) &gt;&gt; 32)</span></div><div class="line"><a name="l07481"></a><span class="lineno"> 7481</span>&#160;</div><div class="line"><a name="l07482"></a><span class="lineno"> 7482</span>&#160;<span class="comment">//SMMLA</span></div><div class="line"><a name="l07483"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a58454519e12e8157f0a1c36071333655"> 7483</a></span>&#160;<span class="preprocessor">#define multAcc_32x32_keep32(a, x, y) \</span></div><div class="line"><a name="l07484"></a><span class="lineno"> 7484</span>&#160;<span class="preprocessor">    a += (q31_t) (((q63_t) x * y) &gt;&gt; 32)</span></div><div class="line"><a name="l07485"></a><span class="lineno"> 7485</span>&#160;</div><div class="line"><a name="l07486"></a><span class="lineno"> 7486</span>&#160;<span class="comment">//SMMLS</span></div><div class="line"><a name="l07487"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#a9ec66f3082a4c65c78075638255f42ab"> 7487</a></span>&#160;<span class="preprocessor">#define multSub_32x32_keep32(a, x, y) \</span></div><div class="line"><a name="l07488"></a><span class="lineno"> 7488</span>&#160;<span class="preprocessor">    a -= (q31_t) (((q63_t) x * y) &gt;&gt; 32)</span></div><div class="line"><a name="l07489"></a><span class="lineno"> 7489</span>&#160;</div><div class="line"><a name="l07490"></a><span class="lineno"> 7490</span>&#160;<span class="comment">//SMMUL</span></div><div class="line"><a name="l07491"></a><span class="lineno"><a class="line" href="arm__math_8h.xhtml#abb4baa0192bbb6fabc9251af4b4cb322"> 7491</a></span>&#160;<span class="preprocessor">#define mult_32x32_keep32(a, x, y) \</span></div><div class="line"><a name="l07492"></a><span class="lineno"> 7492</span>&#160;<span class="preprocessor">    a = (q31_t) (((q63_t) x * y ) &gt;&gt; 32)</span></div><div class="line"><a name="l07493"></a><span class="lineno"> 7493</span>&#160;</div><div class="line"><a name="l07494"></a><span class="lineno"> 7494</span>&#160;</div><div class="line"><a name="l07495"></a><span class="lineno"> 7495</span>&#160;<span class="preprocessor">#if defined ( __CC_ARM ) //Keil</span></div><div class="line"><a name="l07496"></a><span class="lineno"> 7496</span>&#160;</div><div class="line"><a name="l07497"></a><span class="lineno"> 7497</span>&#160;<span class="comment">//Enter low optimization region - place directly above function definition</span></div><div class="line"><a name="l07498"></a><span class="lineno"> 7498</span>&#160;<span class="preprocessor">    #if defined( ARM_MATH_CM4 ) || defined( ARM_MATH_CM7)</span></div><div class="line"><a name="l07499"></a><span class="lineno"> 7499</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_ENTER \</span></div><div class="line"><a name="l07500"></a><span class="lineno"> 7500</span>&#160;<span class="preprocessor">         _Pragma (&quot;push&quot;)         \</span></div><div class="line"><a name="l07501"></a><span class="lineno"> 7501</span>&#160;<span class="preprocessor">         _Pragma (&quot;O1&quot;)</span></div><div class="line"><a name="l07502"></a><span class="lineno"> 7502</span>&#160;<span class="preprocessor">    #else</span></div><div class="line"><a name="l07503"></a><span class="lineno"> 7503</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07504"></a><span class="lineno"> 7504</span>&#160;<span class="preprocessor">    #endif</span></div><div class="line"><a name="l07505"></a><span class="lineno"> 7505</span>&#160;</div><div class="line"><a name="l07506"></a><span class="lineno"> 7506</span>&#160;<span class="comment">//Exit low optimization region - place directly after end of function definition</span></div><div class="line"><a name="l07507"></a><span class="lineno"> 7507</span>&#160;<span class="preprocessor">    #if defined( ARM_MATH_CM4 ) || defined( ARM_MATH_CM7)</span></div><div class="line"><a name="l07508"></a><span class="lineno"> 7508</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_EXIT \</span></div><div class="line"><a name="l07509"></a><span class="lineno"> 7509</span>&#160;<span class="preprocessor">         _Pragma (&quot;pop&quot;)</span></div><div class="line"><a name="l07510"></a><span class="lineno"> 7510</span>&#160;<span class="preprocessor">    #else</span></div><div class="line"><a name="l07511"></a><span class="lineno"> 7511</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07512"></a><span class="lineno"> 7512</span>&#160;<span class="preprocessor">    #endif</span></div><div class="line"><a name="l07513"></a><span class="lineno"> 7513</span>&#160;</div><div class="line"><a name="l07514"></a><span class="lineno"> 7514</span>&#160;<span class="comment">//Enter low optimization region - place directly above function definition</span></div><div class="line"><a name="l07515"></a><span class="lineno"> 7515</span>&#160;<span class="preprocessor">  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07516"></a><span class="lineno"> 7516</span>&#160;</div><div class="line"><a name="l07517"></a><span class="lineno"> 7517</span>&#160;<span class="comment">//Exit low optimization region - place directly after end of function definition</span></div><div class="line"><a name="l07518"></a><span class="lineno"> 7518</span>&#160;<span class="preprocessor">  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07519"></a><span class="lineno"> 7519</span>&#160;</div><div class="line"><a name="l07520"></a><span class="lineno"> 7520</span>&#160;<span class="preprocessor">#elif defined(__ICCARM__) //IAR</span></div><div class="line"><a name="l07521"></a><span class="lineno"> 7521</span>&#160;</div><div class="line"><a name="l07522"></a><span class="lineno"> 7522</span>&#160;<span class="comment">//Enter low optimization region - place directly above function definition</span></div><div class="line"><a name="l07523"></a><span class="lineno"> 7523</span>&#160;<span class="preprocessor">    #if defined( ARM_MATH_CM4 ) || defined( ARM_MATH_CM7)</span></div><div class="line"><a name="l07524"></a><span class="lineno"> 7524</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_ENTER \</span></div><div class="line"><a name="l07525"></a><span class="lineno"> 7525</span>&#160;<span class="preprocessor">         _Pragma (&quot;optimize=low&quot;)</span></div><div class="line"><a name="l07526"></a><span class="lineno"> 7526</span>&#160;<span class="preprocessor">    #else</span></div><div class="line"><a name="l07527"></a><span class="lineno"> 7527</span>&#160;<span class="preprocessor">      #define LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07528"></a><span class="lineno"> 7528</span>&#160;<span class="preprocessor">    #endif</span></div><div class="line"><a name="l07529"></a><span class="lineno"> 7529</span>&#160;</div><div class="line"><a name="l07530"></a><span class="lineno"> 7530</span>&#160;<span class="comment">//Exit low optimization region - place directly after end of function definition</span></div><div class="line"><a name="l07531"></a><span class="lineno"> 7531</span>&#160;<span class="preprocessor">  #define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07532"></a><span class="lineno"> 7532</span>&#160;</div><div class="line"><a name="l07533"></a><span class="lineno"> 7533</span>&#160;<span class="comment">//Enter low optimization region - place directly above function definition</span></div><div class="line"><a name="l07534"></a><span class="lineno"> 7534</span>&#160;<span class="preprocessor">    #if defined( ARM_MATH_CM4 ) || defined( ARM_MATH_CM7)</span></div><div class="line"><a name="l07535"></a><span class="lineno"> 7535</span>&#160;<span class="preprocessor">      #define IAR_ONLY_LOW_OPTIMIZATION_ENTER \</span></div><div class="line"><a name="l07536"></a><span class="lineno"> 7536</span>&#160;<span class="preprocessor">         _Pragma (&quot;optimize=low&quot;)</span></div><div class="line"><a name="l07537"></a><span class="lineno"> 7537</span>&#160;<span class="preprocessor">    #else</span></div><div class="line"><a name="l07538"></a><span class="lineno"> 7538</span>&#160;<span class="preprocessor">      #define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07539"></a><span class="lineno"> 7539</span>&#160;<span class="preprocessor">    #endif</span></div><div class="line"><a name="l07540"></a><span class="lineno"> 7540</span>&#160;</div><div class="line"><a name="l07541"></a><span class="lineno"> 7541</span>&#160;<span class="comment">//Exit low optimization region - place directly after end of function definition</span></div><div class="line"><a name="l07542"></a><span class="lineno"> 7542</span>&#160;<span class="preprocessor">  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07543"></a><span class="lineno"> 7543</span>&#160;</div><div class="line"><a name="l07544"></a><span class="lineno"> 7544</span>&#160;<span class="preprocessor">#elif defined(__GNUC__)</span></div><div class="line"><a name="l07545"></a><span class="lineno"> 7545</span>&#160;</div><div class="line"><a name="l07546"></a><span class="lineno"> 7546</span>&#160;<span class="preprocessor">  #define LOW_OPTIMIZATION_ENTER __attribute__(( optimize(&quot;-O1&quot;) ))</span></div><div class="line"><a name="l07547"></a><span class="lineno"> 7547</span>&#160;</div><div class="line"><a name="l07548"></a><span class="lineno"> 7548</span>&#160;<span class="preprocessor">  #define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07549"></a><span class="lineno"> 7549</span>&#160;</div><div class="line"><a name="l07550"></a><span class="lineno"> 7550</span>&#160;<span class="preprocessor">  #define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07551"></a><span class="lineno"> 7551</span>&#160;</div><div class="line"><a name="l07552"></a><span class="lineno"> 7552</span>&#160;<span class="preprocessor">  #define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07553"></a><span class="lineno"> 7553</span>&#160;</div><div class="line"><a name="l07554"></a><span class="lineno"> 7554</span>&#160;<span class="preprocessor">#elif defined(__CSMC__)      // Cosmic</span></div><div class="line"><a name="l07555"></a><span class="lineno"> 7555</span>&#160;</div><div class="line"><a name="l07556"></a><span class="lineno"> 7556</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07557"></a><span class="lineno"> 7557</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07558"></a><span class="lineno"> 7558</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07559"></a><span class="lineno"> 7559</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07560"></a><span class="lineno"> 7560</span>&#160;</div><div class="line"><a name="l07561"></a><span class="lineno"> 7561</span>&#160;<span class="preprocessor">#elif defined(__TASKING__)      // TASKING</span></div><div class="line"><a name="l07562"></a><span class="lineno"> 7562</span>&#160;</div><div class="line"><a name="l07563"></a><span class="lineno"> 7563</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07564"></a><span class="lineno"> 7564</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07565"></a><span class="lineno"> 7565</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07566"></a><span class="lineno"> 7566</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07567"></a><span class="lineno"> 7567</span>&#160;</div><div class="line"><a name="l07568"></a><span class="lineno"> 7568</span>&#160;<span class="preprocessor">#elif (__ARMCC_VERSION &gt;= 6010050)      // ARMCC V6</span></div><div class="line"><a name="l07569"></a><span class="lineno"> 7569</span>&#160;</div><div class="line"><a name="l07570"></a><span class="lineno"> 7570</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07571"></a><span class="lineno"> 7571</span>&#160;<span class="preprocessor">#define LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07572"></a><span class="lineno"> 7572</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_ENTER</span></div><div class="line"><a name="l07573"></a><span class="lineno"> 7573</span>&#160;<span class="preprocessor">#define IAR_ONLY_LOW_OPTIMIZATION_EXIT</span></div><div class="line"><a name="l07574"></a><span class="lineno"> 7574</span>&#160;</div><div class="line"><a name="l07575"></a><span class="lineno"> 7575</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l07576"></a><span class="lineno"> 7576</span>&#160;</div><div class="line"><a name="l07577"></a><span class="lineno"> 7577</span>&#160;</div><div class="line"><a name="l07578"></a><span class="lineno"> 7578</span>&#160;<span class="preprocessor">#ifdef   __cplusplus</span></div><div class="line"><a name="l07579"></a><span class="lineno"> 7579</span>&#160;}</div><div class="line"><a name="l07580"></a><span class="lineno"> 7580</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l07581"></a><span class="lineno"> 7581</span>&#160;</div><div class="line"><a name="l07582"></a><span class="lineno"> 7582</span>&#160;</div><div class="line"><a name="l07583"></a><span class="lineno"> 7583</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* _ARM_MATH_H */</span><span class="preprocessor"></span></div><div class="line"><a name="l07584"></a><span class="lineno"> 7584</span>&#160;</div><div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_a0bc03338687002ed5f2e4a363eb095ec"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#a0bc03338687002ed5f2e4a363eb095ec">arm_lms_norm_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4397</div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f64_xhtml"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a></div><div class="ttdoc">Instance structure for the floating-point transposed direct form II Biquad cascade filter...</div><div class="ttdef"><b>Definition:</b> arm_math.h:3864</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q15_xhtml_a5481104ef2f8f81360b80b47d69ae932"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q15.xhtml#a5481104ef2f8f81360b80b47d69ae932">arm_biquad_casd_df1_inst_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">Points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1297</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_aede85350fb5ae6baa1b3e8bfa15b18d6"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#aede85350fb5ae6baa1b3e8bfa15b18d6">arm_rfft_instance_f32::twidCoefRModifier</a></div><div class="ttdeci">uint32_t twidCoefRModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2351</div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml_acca5fbaef4a52ae411de24c9a0b929cf"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml#acca5fbaef4a52ae411de24c9a0b929cf">arm_lms_instance_q15::postShift</a></div><div class="ttdeci">uint32_t postShift</div><div class="ttdoc">bit shift applied to coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4291</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_af8300c1f60caa21e6b44b9240ab5af19"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#af8300c1f60caa21e6b44b9240ab5af19">arm_cfft_radix2_instance_q15::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2077</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_affbf2de522ac029432d98e8373c0ec53"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#affbf2de522ac029432d98e8373c0ec53">arm_rfft_instance_q15::pTwiddleAReal</a></div><div class="ttdeci">q15_t * pTwiddleAReal</div><div class="ttdoc">points to the real twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2299</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a997a8ee93088d15bda23c325d455b588"><div class="ttname"><a href="arm__math_8h.xhtml#a997a8ee93088d15bda23c325d455b588">arm_sub_q15</a></div><div class="ttdeci">void arm_sub_q15(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q15 vector subtraction. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a8fb31855ff8cce09c2ec9308f48ded69"><div class="ttname"><a href="arm__math_8h.xhtml#a8fb31855ff8cce09c2ec9308f48ded69">arm_q15_to_q7</a></div><div class="ttdeci">void arm_q15_to_q7(q15_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the Q15 vector to Q7 vector. </div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_a4c65cd40e0098ec2f5c0dc31488b9bc6"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#a4c65cd40e0098ec2f5c0dc31488b9bc6">arm_rfft_instance_q15::bitReverseFlagR</a></div><div class="ttdeci">uint8_t bitReverseFlagR</div><div class="ttdoc">flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2297</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a79dce009ed2de28a125aeb3f19631654"><div class="ttname"><a href="arm__math_8h.xhtml#a79dce009ed2de28a125aeb3f19631654">arm_var_q15</a></div><div class="ttdeci">void arm_var_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</div><div class="ttdoc">Variance of the elements of a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a4af3ca330e14587289518e6565fd04bd"><div class="ttname"><a href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a></div><div class="ttdeci">static __INLINE q15_t clip_q31_to_q15(q31_t x)</div><div class="ttdoc">Clips Q31 to Q15 values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:502</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a39f92964c9b649ba252e26ebe7b95594"><div class="ttname"><a href="arm__math_8h.xhtml#a39f92964c9b649ba252e26ebe7b95594">arm_abs_q15</a></div><div class="ttdeci">void arm_abs_q15(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q15 vector absolute value. </div></div>
<div class="ttc" id="structarm__matrix__instance__f32_xhtml"><div class="ttname"><a href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point matrix structure. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1461</div></div>
<div class="ttc" id="arm__math_8h_xhtml_affb9792c0220882efd4c58f3c6a05fd7"><div class="ttname"><a href="arm__math_8h.xhtml#affb9792c0220882efd4c58f3c6a05fd7">arm_biquad_cascade_df1_fast_q15</a></div><div class="ttdeci">void arm_biquad_cascade_df1_fast_q15(const arm_biquad_casd_df1_inst_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-M3 and Cortex-...</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_a937d815022adc557b435ba8c6cd58b0d"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#a937d815022adc557b435ba8c6cd58b0d">arm_rfft_instance_q15::pTwiddleBReal</a></div><div class="ttdeci">q15_t * pTwiddleBReal</div><div class="ttdoc">points to the imag twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2300</div></div>
<div class="ttc" id="core__cm3_8h_xhtml"><div class="ttname"><a href="core__cm3_8h.xhtml">core_cm3.h</a></div><div class="ttdoc">CMSIS Cortex-M3 Core Peripheral Access Layer Header File. </div></div>
<div class="ttc" id="structarm__linear__interp__instance__f32_xhtml_ab373001f6afad0850359c344a4d7eee4"><div class="ttname"><a href="structarm__linear__interp__instance__f32.xhtml#ab373001f6afad0850359c344a4d7eee4">arm_linear_interp_instance_f32::pYData</a></div><div class="ttdeci">float32_t * pYData</div><div class="ttdoc">pointer to the table of Y values </div><div class="ttdef"><b>Definition:</b> arm_math.h:1956</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q31_xhtml_a2082e3eac56354d75291f03e96ce4aa5"><div class="ttname"><a href="structarm__bilinear__interp__instance__q31.xhtml#a2082e3eac56354d75291f03e96ce4aa5">arm_bilinear_interp_instance_q31::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1976</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a10c5294cda8c4985386f4e3944be7650"><div class="ttname"><a href="arm__math_8h.xhtml#a10c5294cda8c4985386f4e3944be7650">arm_conv_partial_fast_q31</a></div><div class="ttdeci">arm_status arm_conv_partial_fast_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aff7cbd4e955382def06724cc4cc85795"><div class="ttname"><a href="arm__math_8h.xhtml#aff7cbd4e955382def06724cc4cc85795">arm_max_q31</a></div><div class="ttdeci">void arm_max_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Maximum value of a Q31 vector. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 normalized LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4446</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a23543ecfd027fea2477fe1eea23c3c4d"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a23543ecfd027fea2477fe1eea23c3c4d">arm_rfft_instance_f32::pTwiddleBReal</a></div><div class="ttdeci">float32_t * pTwiddleBReal</div><div class="ttdoc">points to the imag twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2353</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aaf3c0b171ca8412c77bab9fa90804737"><div class="ttname"><a href="arm__math_8h.xhtml#aaf3c0b171ca8412c77bab9fa90804737">arm_mat_cmplx_mult_q31</a></div><div class="ttdeci">arm_status arm_mat_cmplx_mult_q31(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31, complex, matrix multiplication. </div></div>
<div class="ttc" id="structarm__lms__instance__f32_xhtml_af73880d9009982f5d14529869494ec3d"><div class="ttname"><a href="structarm__lms__instance__f32.xhtml#af73880d9009982f5d14529869494ec3d">arm_lms_instance_f32::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4237</div></div>
<div class="ttc" id="structarm__fir__instance__q31_xhtml"><div class="ttname"><a href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1120</div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_ad7b0bed64915d0a25a3409fa2dc45556"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#ad7b0bed64915d0a25a3409fa2dc45556">arm_pid_instance_f32::A0</a></div><div class="ttdeci">float32_t A0</div><div class="ttdoc">The derived gain, A0 = Kp + Ki + Kd . </div><div class="ttdef"><b>Definition:</b> arm_math.h:1879</div></div>
<div class="ttc" id="structarm__lms__instance__f32_xhtml_ae2af43d74c93dba16b876e10c97a5b99"><div class="ttname"><a href="structarm__lms__instance__f32.xhtml#ae2af43d74c93dba16b876e10c97a5b99">arm_lms_instance_f32::mu</a></div><div class="ttdeci">float32_t mu</div><div class="ttdoc">step size that controls filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4240</div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_a155acf642ba2f521869f19d694cd7fa0"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#a155acf642ba2f521869f19d694cd7fa0">arm_pid_instance_f32::A2</a></div><div class="ttdeci">float32_t A2</div><div class="ttdoc">The derived gain, A2 = Kd . </div><div class="ttdef"><b>Definition:</b> arm_math.h:1881</div></div>
<div class="ttc" id="group___s_q_r_t_xhtml_ga119e25831e141d734d7ef10636670058"><div class="ttname"><a href="group___s_q_r_t.xhtml#ga119e25831e141d734d7ef10636670058">arm_sqrt_q31</a></div><div class="ttdeci">arm_status arm_sqrt_q31(q31_t in, q31_t *pOut)</div><div class="ttdoc">Q31 square root function. </div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a534cc7e6e9b3e3dd022fad611c762142"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a534cc7e6e9b3e3dd022fad611c762142">arm_rfft_instance_f32::pTwiddleAReal</a></div><div class="ttdeci">float32_t * pTwiddleAReal</div><div class="ttdoc">points to the real twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2352</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a6b25c96cf048b77078d62f4252a01ec4"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a6b25c96cf048b77078d62f4252a01ec4">arm_lms_norm_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4449</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a03e9c2f0f35ad67d20bac66be9f920ec"><div class="ttname"><a href="arm__math_8h.xhtml#a03e9c2f0f35ad67d20bac66be9f920ec">arm_fir_sparse_q31</a></div><div class="ttdeci">void arm_fir_sparse_q31(arm_fir_sparse_instance_q31 *S, q31_t *pSrc, q31_t *pDst, q31_t *pScratchIn, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 sparse FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad5caaafeec900c8ff72321c01bbd462c"><div class="ttname"><a href="arm__math_8h.xhtml#ad5caaafeec900c8ff72321c01bbd462c">arm_cfft_radix4_init_q31</a></div><div class="ttdeci">arm_status arm_cfft_radix4_init_q31(arm_cfft_radix4_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1829e50993a90742de225a0ce4213838"><div class="ttname"><a href="arm__math_8h.xhtml#a1829e50993a90742de225a0ce4213838">arm_cmplx_mult_cmplx_q31</a></div><div class="ttdeci">void arm_cmplx_mult_cmplx_q31(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q31 complex-by-complex multiplication. </div></div>
<div class="ttc" id="math_8h_xhtml"><div class="ttname"><a href="math_8h.xhtml">math.h</a></div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__f32_xhtml_a389e669e13ec56292a70db8e92194b12"><div class="ttname"><a href="structarm__fir__interpolate__instance__f32.xhtml#a389e669e13ec56292a70db8e92194b12">arm_fir_interpolate_instance_f32::phaseLength</a></div><div class="ttdeci">uint16_t phaseLength</div><div class="ttdoc">length of each polyphase filter component. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3674</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q7_xhtml_ad5a8067cab5f9ea4688b11a623e16607"><div class="ttname"><a href="structarm__bilinear__interp__instance__q7.xhtml#ad5a8067cab5f9ea4688b11a623e16607">arm_bilinear_interp_instance_q7::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1998</div></div>
<div class="ttc" id="structarm__matrix__instance__f32_xhtml_af3917c032600a9dfd5ed4a96f074910a"><div class="ttname"><a href="structarm__matrix__instance__f32.xhtml#af3917c032600a9dfd5ed4a96f074910a">arm_matrix_instance_f32::pData</a></div><div class="ttdeci">float32_t * pData</div><div class="ttdoc">points to the data of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1465</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_af74dacc1d34c078283e50f2530eb91df"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#af74dacc1d34c078283e50f2530eb91df">arm_fir_sparse_instance_q7::maxDelay</a></div><div class="ttdeci">uint16_t maxDelay</div><div class="ttdoc">maximum offset specified by the pTapDelay array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4774</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab686c14175581797d9c3ad7bf1d5cc1e"><div class="ttname"><a href="arm__math_8h.xhtml#ab686c14175581797d9c3ad7bf1d5cc1e">arm_iir_lattice_init_q31</a></div><div class="ttdeci">void arm_iir_lattice_init_q31(arm_iir_lattice_instance_q31 *S, uint16_t numStages, q31_t *pkCoeffs, q31_t *pvCoeffs, q31_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q31 IIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a646c25998bf35991c60299b1431460f7"><div class="ttname"><a href="arm__math_8h.xhtml#a646c25998bf35991c60299b1431460f7">arm_biquad_cascade_df2T_f32</a></div><div class="ttdeci">void arm_biquad_cascade_df2T_f32(const arm_biquad_cascade_df2T_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a29f839928f4752b73c8858d6dbb55294"><div class="ttname"><a href="arm__math_8h.xhtml#a29f839928f4752b73c8858d6dbb55294">INDEX_MASK</a></div><div class="ttdeci">#define INDEX_MASK</div><div class="ttdef"><b>Definition:</b> arm_math.h:324</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a6ff56c0896ce00712ba8f2fcf72cacd3"><div class="ttname"><a href="arm__math_8h.xhtml#a6ff56c0896ce00712ba8f2fcf72cacd3">arm_circularWrite_f32</a></div><div class="ttdeci">static __INLINE void arm_circularWrite_f32(int32_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const int32_t *src, int32_t srcInc, uint32_t blockSize)</div><div class="ttdoc">end of SQRT group </div><div class="ttdef"><b>Definition:</b> arm_math.h:6185</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___instruction_interface_xhtml_ga5d5bb1527e042be4a9fa5a33f65cc248"><div class="ttname"><a href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</a></div><div class="ttdeci">#define __CLZ</div><div class="ttdoc">Count leading zeros. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:500</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a14f82f9230e9d96d5b9774e2fefcb7be"><div class="ttname"><a href="arm__math_8h.xhtml#a14f82f9230e9d96d5b9774e2fefcb7be">arm_cmplx_mag_q31</a></div><div class="ttdeci">void arm_cmplx_mag_q31(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q31 complex magnitude. </div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_ad5b68fbf84d16188ae4747ff91f6f088"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#ad5b68fbf84d16188ae4747ff91f6f088">arm_pid_instance_f32::Kd</a></div><div class="ttdeci">float32_t Kd</div><div class="ttdoc">The derivative gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1885</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__f32_xhtml_a86053b715980a93c9df630d6de5bb63c"><div class="ttname"><a href="structarm__fir__interpolate__instance__f32.xhtml#a86053b715980a93c9df630d6de5bb63c">arm_fir_interpolate_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3675</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a88e48688224d42dc173dbcec702f0c1d"><div class="ttname"><a href="arm__math_8h.xhtml#a88e48688224d42dc173dbcec702f0c1d">arm_fir_init_q7</a></div><div class="ttdeci">void arm_fir_init_q7(arm_fir_instance_q7 *S, uint16_t numTaps, q7_t *pCoeffs, q7_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q7 FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a215456e35a18db86882e1d3f0d24e1f2"><div class="ttname"><a href="arm__math_8h.xhtml#a215456e35a18db86882e1d3f0d24e1f2">arm_float_to_q15</a></div><div class="ttdeci">void arm_float_to_q15(float32_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the floating-point vector to Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a48a5e5d37e1f062cc57fcfaf683343cc"><div class="ttname"><a href="arm__math_8h.xhtml#a48a5e5d37e1f062cc57fcfaf683343cc">arm_mat_init_q31</a></div><div class="ttdeci">void arm_mat_init_q31(arm_matrix_instance_q31 *S, uint16_t nRows, uint16_t nColumns, q31_t *pData)</div><div class="ttdoc">Q31 matrix initialization. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a631bb59c7c97c814ff7147ecba6a716a"><div class="ttname"><a href="arm__math_8h.xhtml#a631bb59c7c97c814ff7147ecba6a716a">arm_dct4_init_q31</a></div><div class="ttdeci">arm_status arm_dct4_init_q31(arm_dct4_instance_q31 *S, arm_rfft_instance_q31 *S_RFFT, arm_cfft_radix4_instance_q31 *S_CFFT, uint16_t N, uint16_t Nby2, q31_t normalize)</div><div class="ttdoc">Initialization function for the Q31 DCT4/IDCT4. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__f32_xhtml_af8de449af5efe1f30be82f9ba35587ee"><div class="ttname"><a href="structarm__iir__lattice__instance__f32.xhtml#af8de449af5efe1f30be82f9ba35587ee">arm_iir_lattice_instance_f32::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4119</div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_ac80ff7b28fca36aeef74dea12e8312dd"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#ac80ff7b28fca36aeef74dea12e8312dd">arm_dct4_instance_q31::normalize</a></div><div class="ttdeci">q31_t normalize</div><div class="ttdoc">normalizing factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2444</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q31_xhtml"><div class="ttname"><a href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 FIR decimator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3478</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_af8b8c775f4084c36774f06c082b4c078"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#af8b8c775f4084c36774f06c082b4c078">arm_fir_sparse_instance_f32::maxDelay</a></div><div class="ttdeci">uint16_t maxDelay</div><div class="ttdoc">maximum offset specified by the pTapDelay array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4732</div></div>
<div class="ttc" id="structarm__matrix__instance__f64_xhtml"><div class="ttname"><a href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a></div><div class="ttdoc">Instance structure for the floating-point matrix structure. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1473</div></div>
<div class="ttc" id="structarm__fir__instance__f32_xhtml_a7afcf4022e8560db9b8fd28b0d090a15"><div class="ttname"><a href="structarm__fir__instance__f32.xhtml#a7afcf4022e8560db9b8fd28b0d090a15">arm_fir_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1133</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af47689ae07962acaecb8ddde556df4a4"><div class="ttname"><a href="arm__math_8h.xhtml#af47689ae07962acaecb8ddde556df4a4">arm_cmplx_conj_q15</a></div><div class="ttdeci">void arm_cmplx_conj_q15(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q15 complex conjugate. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc">ARM_MATH_SINGULAR</a></div><div class="ttdoc">Generated by matrix inversion if the input matrix is singular and cannot be inverted. </div><div class="ttdef"><b>Definition:</b> arm_math.h:372</div></div>
<div class="ttc" id="structarm__linear__interp__instance__f32_xhtml_a95f02a926b16d35359aca5b31e813b11"><div class="ttname"><a href="structarm__linear__interp__instance__f32.xhtml#a95f02a926b16d35359aca5b31e813b11">arm_linear_interp_instance_f32::nValues</a></div><div class="ttdeci">uint32_t nValues</div><div class="ttdoc">nValues </div><div class="ttdef"><b>Definition:</b> arm_math.h:1953</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9fc7adca0966ff2cec1746fca8364cee"><div class="ttname"><a href="arm__math_8h.xhtml#a9fc7adca0966ff2cec1746fca8364cee">arm_lms_init_f32</a></div><div class="ttdeci">void arm_lms_init_f32(arm_lms_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, float32_t mu, uint32_t blockSize)</div><div class="ttdoc">Initialization function for floating-point LMS filter. </div></div>
<div class="ttc" id="group___p_i_d_xhtml_ga084f646bbb20d55f225c3efafcf7fc1f"><div class="ttname"><a href="group___p_i_d.xhtml#ga084f646bbb20d55f225c3efafcf7fc1f">arm_pid_q15</a></div><div class="ttdeci">static __INLINE q15_t arm_pid_q15(arm_pid_instance_q15 *S, q15_t in)</div><div class="ttdoc">Process function for the Q15 PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5201</div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_a84401d3cfc6c40f69c08223cf341b886"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#a84401d3cfc6c40f69c08223cf341b886">arm_lms_norm_instance_f32::mu</a></div><div class="ttdeci">float32_t mu</div><div class="ttdoc">step size that control filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4399</div></div>
<div class="ttc" id="group___p_i_d_xhtml_gac5c79ed46abf2d72b8cf41fa6c708bda"><div class="ttname"><a href="group___p_i_d.xhtml#gac5c79ed46abf2d72b8cf41fa6c708bda">arm_pid_f32</a></div><div class="ttdeci">static __INLINE float32_t arm_pid_f32(arm_pid_instance_f32 *S, float32_t in)</div><div class="ttdoc">Process function for the floating-point PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5118</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9cae104c5cf60b4e7671c82264a8c12e"><div class="ttname"><a href="arm__math_8h.xhtml#a9cae104c5cf60b4e7671c82264a8c12e">arm_fir_interpolate_f32</a></div><div class="ttdeci">void arm_fir_interpolate_f32(const arm_fir_interpolate_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point FIR interpolator. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1d9659dbbea4c89a7a9d14d5fc0dd490"><div class="ttname"><a href="arm__math_8h.xhtml#a1d9659dbbea4c89a7a9d14d5fc0dd490">arm_lms_norm_init_q31</a></div><div class="ttdeci">void arm_lms_norm_init_q31(arm_lms_norm_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, q31_t mu, uint32_t blockSize, uint8_t postShift)</div><div class="ttdoc">Initialization function for Q31 normalized LMS filter. </div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_aa5332635ce9c7078cdb4c1ecf442eadd"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#aa5332635ce9c7078cdb4c1ecf442eadd">arm_pid_instance_q31::A0</a></div><div class="ttdeci">q31_t A0</div><div class="ttdoc">The derived gain, A0 = Kp + Ki + Kd . </div><div class="ttdef"><b>Definition:</b> arm_math.h:1864</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1">ARM_MATH_LENGTH_ERROR</a></div><div class="ttdoc">Length of data buffer is incorrect. </div><div class="ttdef"><b>Definition:</b> arm_math.h:369</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a51112dcdf9b3624eb05182cdc4da9ec0"><div class="ttname"><a href="arm__math_8h.xhtml#a51112dcdf9b3624eb05182cdc4da9ec0">arm_conv_fast_q31</a></div><div class="ttdeci">void arm_conv_fast_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</div><div class="ttdoc">Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_ae7bca648c75a2ffa02d87852bb78bc8a"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#ae7bca648c75a2ffa02d87852bb78bc8a">arm_lms_norm_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4506</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a76b21c32a3783a2b3334d930a646e5d8"><div class="ttname"><a href="arm__math_8h.xhtml#a76b21c32a3783a2b3334d930a646e5d8">arm_fill_q15</a></div><div class="ttdeci">void arm_fill_q15(q15_t value, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fills a constant value into a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7050c04b7515e01a75c38f1abbaf71ba"><div class="ttname"><a href="arm__math_8h.xhtml#a7050c04b7515e01a75c38f1abbaf71ba">arm_power_q15</a></div><div class="ttdeci">void arm_power_q15(q15_t *pSrc, uint32_t blockSize, q63_t *pResult)</div><div class="ttdoc">Sum of the squares of the elements of a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab4c1d2391b599549e5a06fdfbc2747bf"><div class="ttname"><a href="arm__math_8h.xhtml#ab4c1d2391b599549e5a06fdfbc2747bf">arm_offset_q15</a></div><div class="ttdeci">void arm_offset_q15(q15_t *pSrc, q15_t offset, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Adds a constant offset to a Q15 vector. </div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f32_xhtml_a49a24fe1b6ad3b0b26779c32d8d80b2e"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a49a24fe1b6ad3b0b26779c32d8d80b2e">arm_biquad_cascade_df2T_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3842</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3df1766d230532bc068fc4ed69d0fcdc"><div class="ttname"><a href="arm__math_8h.xhtml#a3df1766d230532bc068fc4ed69d0fcdc">arm_rfft_f32</a></div><div class="ttdeci">void arm_rfft_f32(const arm_rfft_instance_f32 *S, float32_t *pSrc, float32_t *pDst)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a4611b605e45ab401f02cab15c5e38715"><div class="ttname"><a href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></div><div class="ttdeci">float float32_t</div><div class="ttdoc">32-bit floating-point type definition. </div><div class="ttdef"><b>Definition:</b> arm_math.h:399</div></div>
<div class="ttc" id="arm__math_8h_xhtml_acde16c17eb75979f81b34e2e2a58c7ac"><div class="ttname"><a href="arm__math_8h.xhtml#acde16c17eb75979f81b34e2e2a58c7ac">arm_lms_q15</a></div><div class="ttdeci">void arm_lms_q15(const arm_lms_instance_q15 *S, q15_t *pSrc, q15_t *pRef, q15_t *pOut, q15_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for Q15 LMS filter. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a85836d0907077b9ac660f7bbbaa9d694"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a85836d0907077b9ac660f7bbbaa9d694">arm_lms_norm_instance_q31::recipTable</a></div><div class="ttdeci">q31_t * recipTable</div><div class="ttdoc">points to the reciprocal initial value table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4453</div></div>
<div class="ttc" id="structarm__biquad__cascade__stereo__df2_t__instance__f32_xhtml_a5655328252da5c2c2425ceed253bc4f1"><div class="ttname"><a href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a5655328252da5c2c2425ceed253bc4f1">arm_biquad_cascade_stereo_df2T_instance_f32::numStages</a></div><div class="ttdeci">uint8_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3853</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__f32_xhtml_afd1e764591c991c212d56c893efb5ea4"><div class="ttname"><a href="structarm__bilinear__interp__instance__f32.xhtml#afd1e764591c991c212d56c893efb5ea4">arm_bilinear_interp_instance_f32::pData</a></div><div class="ttdeci">float32_t * pData</div><div class="ttdoc">points to the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1967</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_a3fc1d6f97d2c6d5324871de6895cb7e9"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#a3fc1d6f97d2c6d5324871de6895cb7e9">arm_lms_norm_instance_q15::x0</a></div><div class="ttdeci">q15_t x0</div><div class="ttdoc">saves previous input sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4511</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a715e4bb8e945b8ca51ec5237611697ce"><div class="ttname"><a href="arm__math_8h.xhtml#a715e4bb8e945b8ca51ec5237611697ce">arm_cmplx_mult_real_q31</a></div><div class="ttdeci">void arm_cmplx_mult_real_q31(q31_t *pSrcCmplx, q31_t *pSrcReal, q31_t *pCmplxDst, uint32_t numSamples)</div><div class="ttdoc">Q31 complex-by-real multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0">ARM_MATH_SUCCESS</a></div><div class="ttdoc">No error. </div><div class="ttdef"><b>Definition:</b> arm_math.h:367</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_a561c22dee4cbdcfa0fd5f15106ecc306"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#a561c22dee4cbdcfa0fd5f15106ecc306">arm_cfft_radix4_instance_q31::pTwiddle</a></div><div class="ttdeci">q31_t * pTwiddle</div><div class="ttdoc">points to the twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2161</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__f32_xhtml_af9df3820576fb921809d1462c9c6d16c"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__f32.xhtml#af9df3820576fb921809d1462c9c6d16c">arm_biquad_casd_df1_inst_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">Points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1323</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_a78a6565473b5f0b8c77c3f0f58a76069"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#a78a6565473b5f0b8c77c3f0f58a76069">arm_fir_sparse_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4759</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q31_xhtml_a5d243796584afc7cd6c557f00b7acca5"><div class="ttname"><a href="structarm__fir__interpolate__instance__q31.xhtml#a5d243796584afc7cd6c557f00b7acca5">arm_fir_interpolate_instance_q31::phaseLength</a></div><div class="ttdeci">uint16_t phaseLength</div><div class="ttdoc">length of each polyphase filter component. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3662</div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f64_xhtml_ae2f0180f9038c0393e1d6921bb3b878b"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ae2f0180f9038c0393e1d6921bb3b878b">arm_biquad_cascade_df2T_instance_f64::pCoeffs</a></div><div class="ttdeci">float64_t * pCoeffs</div><div class="ttdoc">points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3868</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__f32_xhtml_afc7c8f577e6f27d097fe55f57e707f72"><div class="ttname"><a href="structarm__iir__lattice__instance__f32.xhtml#afc7c8f577e6f27d097fe55f57e707f72">arm_iir_lattice_instance_f32::pvCoeffs</a></div><div class="ttdeci">float32_t * pvCoeffs</div><div class="ttdoc">points to the ladder coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4122</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_a9aabb0e4c79f3db807e7a441fa36f5f8"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#a9aabb0e4c79f3db807e7a441fa36f5f8">arm_lms_norm_instance_q15::recipTable</a></div><div class="ttdeci">q15_t * recipTable</div><div class="ttdoc">Points to the reciprocal initial value table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4509</div></div>
<div class="ttc" id="arm__math_8h_xhtml_abec9611e77382f31e152668bf6b4b638"><div class="ttname"><a href="arm__math_8h.xhtml#abec9611e77382f31e152668bf6b4b638">arm_cfft_radix2_init_q31</a></div><div class="ttdeci">arm_status arm_cfft_radix2_init_q31(arm_cfft_radix2_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_a25d1da64dd6487c291f04d226f9acc66"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#a25d1da64dd6487c291f04d226f9acc66">arm_cfft_radix4_instance_f32::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2214</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad5fb134f83f2c802261f172e3dceb131"><div class="ttname"><a href="arm__math_8h.xhtml#ad5fb134f83f2c802261f172e3dceb131">arm_circularRead_q15</a></div><div class="ttdeci">static __INLINE void arm_circularRead_q15(q15_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, q15_t *dst, q15_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</div><div class="ttdoc">Q15 Circular Read function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6330</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_ab5c073286bdd2f6e2bf783ced36bf1de"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#ab5c073286bdd2f6e2bf783ced36bf1de">arm_cfft_radix2_instance_q15::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2076</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q31_xhtml_a66c3364bf5863cd45e05f1652c3dc522"><div class="ttname"><a href="structarm__fir__lattice__instance__q31.xhtml#a66c3364bf5863cd45e05f1652c3dc522">arm_fir_lattice_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3987</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a39f42e0e3b7f115fbb909d6ff4e1329d"><div class="ttname"><a href="arm__math_8h.xhtml#a39f42e0e3b7f115fbb909d6ff4e1329d">arm_mat_sub_q31</a></div><div class="ttdeci">arm_status arm_mat_sub_q31(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix subtraction. </div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_afd394e1e52fb1d526aa472c83b8f2464"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#afd394e1e52fb1d526aa472c83b8f2464">arm_pid_instance_f32::state</a></div><div class="ttdeci">float32_t state[3]</div><div class="ttdoc">The state array of length 3. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1882</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aa6f1e5d0d276f42217e75f071ca84a2e"><div class="ttname"><a href="arm__math_8h.xhtml#aa6f1e5d0d276f42217e75f071ca84a2e">clip_q63_to_q15</a></div><div class="ttdeci">static __INLINE q15_t clip_q63_to_q15(q63_t x)</div><div class="ttdoc">Clips Q63 to Q15 values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:482</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a83e36cd82bf51ce35406a199e477d47c"><div class="ttname"><a href="arm__math_8h.xhtml#a83e36cd82bf51ce35406a199e477d47c">arm_scale_q31</a></div><div class="ttdeci">void arm_scale_q31(q31_t *pSrc, q31_t scaleFract, int8_t shift, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Multiplies a Q31 vector by a scalar. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q15_xhtml_a41c214a1ec38d4a82fae8899d715dd29"><div class="ttname"><a href="structarm__iir__lattice__instance__q15.xhtml#a41c214a1ec38d4a82fae8899d715dd29">arm_iir_lattice_instance_q15::pkCoeffs</a></div><div class="ttdeci">q15_t * pkCoeffs</div><div class="ttdoc">points to the reflection coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4099</div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f32_xhtml_a4d17958c33c3d0a905f974bac50f033f"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a4d17958c33c3d0a905f974bac50f033f">arm_biquad_cascade_df2T_instance_f32::numStages</a></div><div class="ttdeci">uint8_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3840</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q31_xhtml_a9f3773bbb76bc5a8a5ee9d37786bf478"><div class="ttname"><a href="structarm__fir__lattice__instance__q31.xhtml#a9f3773bbb76bc5a8a5ee9d37786bf478">arm_fir_lattice_instance_q31::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of filter stages. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3985</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a43140f04ca94c2a7394e7a222e2d8fb4"><div class="ttname"><a href="arm__math_8h.xhtml#a43140f04ca94c2a7394e7a222e2d8fb4">arm_recip_q31</a></div><div class="ttdeci">static __INLINE uint32_t arm_recip_q31(q31_t in, q31_t *dst, q31_t *pRecipTable)</div><div class="ttdoc">Function to Calculates 1/in (reciprocal) value of Q31 Data type. </div><div class="ttdef"><b>Definition:</b> arm_math.h:555</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a11e3dc41592a6401c13182fef9416a27"><div class="ttname"><a href="arm__math_8h.xhtml#a11e3dc41592a6401c13182fef9416a27">arm_mat_init_f32</a></div><div class="ttdeci">void arm_mat_init_f32(arm_matrix_instance_f32 *S, uint16_t nRows, uint16_t nColumns, float32_t *pData)</div><div class="ttdoc">Floating-point matrix initialization. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a14b47080054a1ba1250a86805be1ff6b"><div class="ttname"><a href="arm__math_8h.xhtml#a14b47080054a1ba1250a86805be1ff6b">arm_cmplx_mult_cmplx_f32</a></div><div class="ttdeci">void arm_cmplx_mult_cmplx_f32(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Floating-point complex-by-complex multiplication. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_a7284932ee8c36107c33815eb62eadffc"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#a7284932ee8c36107c33815eb62eadffc">arm_dct4_instance_q15::pCfft</a></div><div class="ttdeci">arm_cfft_radix4_instance_q15 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2495</div></div>
<div class="ttc" id="structarm__cfft__instance__f32_xhtml"><div class="ttname"><a href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2275</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1f4bc2dd3d5641e96815d3a5aad58998"><div class="ttname"><a href="arm__math_8h.xhtml#a1f4bc2dd3d5641e96815d3a5aad58998">arm_iir_lattice_init_q15</a></div><div class="ttdeci">void arm_iir_lattice_init_q15(arm_iir_lattice_instance_q15 *S, uint16_t numStages, q15_t *pkCoeffs, q15_t *pvCoeffs, q15_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q15 IIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9544cc26f18cd4465cfbed371be822b3"><div class="ttname"><a href="arm__math_8h.xhtml#a9544cc26f18cd4465cfbed371be822b3">arm_lms_init_q15</a></div><div class="ttdeci">void arm_lms_init_q15(arm_lms_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, q15_t mu, uint32_t blockSize, uint32_t postShift)</div><div class="ttdoc">Initialization function for the Q15 LMS filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac55f3ae81b5bc9053760baacf57e47f4"><div class="ttname"><a href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a></div><div class="ttdeci">double float64_t</div><div class="ttdoc">64-bit floating-point type definition. </div><div class="ttdef"><b>Definition:</b> arm_math.h:404</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a075076e07ebb8521d8e3b49a31db6c57"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a075076e07ebb8521d8e3b49a31db6c57">arm_rfft_instance_f32::fftLenBy2</a></div><div class="ttdeci">uint16_t fftLenBy2</div><div class="ttdoc">length of the complex FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2348</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac5fceb172551e7c11eb4d0e17ef15aa3"><div class="ttname"><a href="arm__math_8h.xhtml#ac5fceb172551e7c11eb4d0e17ef15aa3">arm_rfft_fast_init_f32</a></div><div class="ttdeci">arm_status arm_rfft_fast_init_f32(arm_rfft_fast_instance_f32 *S, uint16_t fftLen)</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 sparse FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4754</div></div>
<div class="ttc" id="structarm__matrix__instance__q15_xhtml_acbbce67ba058d8e1c867c71d57288c97"><div class="ttname"><a href="structarm__matrix__instance__q15.xhtml#acbbce67ba058d8e1c867c71d57288c97">arm_matrix_instance_q15::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1487</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q15_xhtml"><div class="ttname"><a href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 IIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4095</div></div>
<div class="ttc" id="structarm__rfft__fast__instance__f32_xhtml_aef06ab665041ec36f5b25d464f0cab14"><div class="ttname"><a href="structarm__rfft__fast__instance__f32.xhtml#aef06ab665041ec36f5b25d464f0cab14">arm_rfft_fast_instance_f32::fftLenRFFT</a></div><div class="ttdeci">uint16_t fftLenRFFT</div><div class="ttdoc">length of the real sequence </div><div class="ttdef"><b>Definition:</b> arm_math.h:2376</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2e36fd210e4a1a5dd333ce80dd6d9a88"><div class="ttname"><a href="arm__math_8h.xhtml#a2e36fd210e4a1a5dd333ce80dd6d9a88">arm_fir_lattice_q31</a></div><div class="ttdeci">void arm_fir_lattice_q31(const arm_fir_lattice_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 FIR lattice filter. </div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_a0dcc19d5c8f7bc401acea9e8318cd777"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#a0dcc19d5c8f7bc401acea9e8318cd777">arm_pid_instance_q15::Ki</a></div><div class="ttdeci">q15_t Ki</div><div class="ttdoc">The integral gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1855</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a78e73a5f02d103168a09821fb461e77a"><div class="ttname"><a href="arm__math_8h.xhtml#a78e73a5f02d103168a09821fb461e77a">arm_conv_partial_q31</a></div><div class="ttdeci">arm_status arm_conv_partial_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of Q31 sequences. </div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q31_xhtml"><div class="ttname"><a href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 FIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3983</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3dd167a2b71330f9f7b606374e9ec063"><div class="ttname"><a href="arm__math_8h.xhtml#a3dd167a2b71330f9f7b606374e9ec063">arm_mat_inverse_f64</a></div><div class="ttdeci">arm_status arm_mat_inverse_f64(const arm_matrix_instance_f64 *src, arm_matrix_instance_f64 *dst)</div><div class="ttdoc">Floating-point matrix inverse. </div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q15_xhtml_a767d91d61d4c0beeddd4325d28d28e24"><div class="ttname"><a href="structarm__fir__interpolate__instance__q15.xhtml#a767d91d61d4c0beeddd4325d28d28e24">arm_fir_interpolate_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3651</div></div>
<div class="ttc" id="structarm__fir__instance__q15_xhtml_aa8d25f44f45b6a6c4cf38c31569b8a01"><div class="ttname"><a href="structarm__fir__instance__q15.xhtml#aa8d25f44f45b6a6c4cf38c31569b8a01">arm_fir_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1113</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a6a904a547413b10565dd1d251c6bafbd"><div class="ttname"><a href="arm__math_8h.xhtml#a6a904a547413b10565dd1d251c6bafbd">arm_add_f32</a></div><div class="ttdeci">void arm_add_f32(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Floating-point vector addition. </div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_a978f37fc19add31af243ab5c63ae502f"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#a978f37fc19add31af243ab5c63ae502f">arm_dct4_instance_f32::pRfft</a></div><div class="ttdeci">arm_rfft_instance_f32 * pRfft</div><div class="ttdoc">points to the real FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2400</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q15_xhtml_a5431bdc079e72a973b51d359f7f13603"><div class="ttname"><a href="structarm__fir__interpolate__instance__q15.xhtml#a5431bdc079e72a973b51d359f7f13603">arm_fir_interpolate_instance_q15::L</a></div><div class="ttdeci">uint8_t L</div><div class="ttdoc">upsample factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3649</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc">ARM_MATH_NANINF</a></div><div class="ttdoc">Not-a-number (NaN) or infinity is generated. </div><div class="ttdef"><b>Definition:</b> arm_math.h:371</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_a92b8fa0a151cd800436094903a5ca0a4"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#a92b8fa0a151cd800436094903a5ca0a4">arm_cfft_radix2_instance_f32::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2189</div></div>
<div class="ttc" id="arm__math_8h_xhtml_adc89a3547f5324b7b3b95adec3806bc0"><div class="ttname"><a href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a></div><div class="ttdeci">int32_t q31_t</div><div class="ttdoc">32-bit fractional data type in 1.31 format. </div><div class="ttdef"><b>Definition:</b> arm_math.h:389</div></div>
<div class="ttc" id="structarm__biquad__cas__df1__32x64__ins__q31_xhtml"><div class="ttname"><a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a></div><div class="ttdoc">Instance structure for the high precision Q31 Biquad cascade filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3791</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 RFFT/RIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2293</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a656620f957b65512ed83db03fd455ec5"><div class="ttname"><a href="arm__math_8h.xhtml#a656620f957b65512ed83db03fd455ec5">arm_q7_to_float</a></div><div class="ttdeci">void arm_q7_to_float(q7_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">end of park group </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae31536b19b82b93ed184fb1ab73cfcb3"><div class="ttname"><a href="arm__math_8h.xhtml#ae31536b19b82b93ed184fb1ab73cfcb3">arm_pid_init_f32</a></div><div class="ttdeci">void arm_pid_init_f32(arm_pid_instance_f32 *S, int32_t resetStateFlag)</div><div class="ttdoc">Initialization function for the floating-point PID Control. </div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_a8051ffe268c147e431e1bea7bb4c4258"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#a8051ffe268c147e431e1bea7bb4c4258">arm_rfft_instance_q15::ifftFlagR</a></div><div class="ttdeci">uint8_t ifftFlagR</div><div class="ttdoc">flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2296</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q15_xhtml_a37b90dea2bc3ee7c9951a9fe74db0cbb"><div class="ttname"><a href="structarm__fir__lattice__instance__q15.xhtml#a37b90dea2bc3ee7c9951a9fe74db0cbb">arm_fir_lattice_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3975</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_a3809dd15e7cbf1a054c728cfbbb0cc5a"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#a3809dd15e7cbf1a054c728cfbbb0cc5a">arm_cfft_radix2_instance_q15::pTwiddle</a></div><div class="ttdeci">q15_t * pTwiddle</div><div class="ttdoc">points to the Sin twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2078</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q7_xhtml"><div class="ttname"><a href="structarm__bilinear__interp__instance__q7.xhtml">arm_bilinear_interp_instance_q7</a></div><div class="ttdoc">Instance structure for the Q15 bilinear interpolation function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1996</div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_ad228aae24a1b6d855c93a8b9bbc1c4f1"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#ad228aae24a1b6d855c93a8b9bbc1c4f1">arm_pid_instance_q15::Kp</a></div><div class="ttdeci">q15_t Kp</div><div class="ttdoc">The proportional gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1854</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_afd444d05858c5f419980e94e8240d5c3"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#afd444d05858c5f419980e94e8240d5c3">arm_rfft_instance_q15::twidCoefRModifier</a></div><div class="ttdeci">uint32_t twidCoefRModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2298</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q31_xhtml"><div class="ttname"><a href="structarm__bilinear__interp__instance__q31.xhtml">arm_bilinear_interp_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 bilinear interpolation function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1974</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_aeab2855176c6efdb231a73a3672837d5"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#aeab2855176c6efdb231a73a3672837d5">arm_fir_sparse_instance_q15::pTapDelay</a></div><div class="ttdeci">int32_t * pTapDelay</div><div class="ttdoc">points to the array of delay values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4761</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac8de3da44f58e86c2c86156276ca154f"><div class="ttname"><a href="arm__math_8h.xhtml#ac8de3da44f58e86c2c86156276ca154f">arm_correlate_fast_q15</a></div><div class="ttdeci">void arm_correlate_fast_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</div><div class="ttdoc">Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376">ARM_MATH_TEST_FAILURE</a></div><div class="ttdoc">Test Failed. </div><div class="ttdef"><b>Definition:</b> arm_math.h:373</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2e169c4de6cc6e3ba4be9473531e6657"><div class="ttname"><a href="arm__math_8h.xhtml#a2e169c4de6cc6e3ba4be9473531e6657">arm_negate_f32</a></div><div class="ttdeci">void arm_negate_f32(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Negates the elements of a floating-point vector. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q31_xhtml_a1d30aa16aac7722936ea9dee59211863"><div class="ttname"><a href="structarm__iir__lattice__instance__q31.xhtml#a1d30aa16aac7722936ea9dee59211863">arm_iir_lattice_instance_q31::pkCoeffs</a></div><div class="ttdeci">q31_t * pkCoeffs</div><div class="ttdoc">points to the reflection coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4110</div></div>
<div class="ttc" id="structarm__biquad__cascade__stereo__df2_t__instance__f32_xhtml_a58b15644de62a632c5e9d4a563569dc6"><div class="ttname"><a href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a58b15644de62a632c5e9d4a563569dc6">arm_biquad_cascade_stereo_df2T_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3855</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac02873f1c2cc80adfd799305f0e6465d"><div class="ttname"><a href="arm__math_8h.xhtml#ac02873f1c2cc80adfd799305f0e6465d">arm_var_q31</a></div><div class="ttdeci">void arm_var_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</div><div class="ttdoc">Variance of the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__biquad__cas__df1__32x64__ins__q31_xhtml_a490462d6ebe0fecfb6acbf51bed22ecf"><div class="ttname"><a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a490462d6ebe0fecfb6acbf51bed22ecf">arm_biquad_cas_df1_32x64_ins_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3795</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_a54cdd27ca1c672b126c38763ce678b1c"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#a54cdd27ca1c672b126c38763ce678b1c">arm_fir_sparse_instance_q7::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4770</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 normalized LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4502</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae45024c497392cde2ae358a76d435213"><div class="ttname"><a href="arm__math_8h.xhtml#ae45024c497392cde2ae358a76d435213">arm_cmplx_mag_f32</a></div><div class="ttdeci">void arm_cmplx_mag_f32(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Floating-point complex magnitude. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2ec612a8c2c4916477fb9bc1ab548a6e"><div class="ttname"><a href="arm__math_8h.xhtml#a2ec612a8c2c4916477fb9bc1ab548a6e">arm_mat_mult_q31</a></div><div class="ttdeci">arm_status arm_mat_mult_q31(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a30a4d49489ac67ff98a46b9f58f73bf1"><div class="ttname"><a href="arm__math_8h.xhtml#a30a4d49489ac67ff98a46b9f58f73bf1">arm_mat_trans_q31</a></div><div class="ttdeci">arm_status arm_mat_trans_q31(const arm_matrix_instance_q31 *pSrc, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix transpose. </div></div>
<div class="ttc" id="structarm__biquad__cas__df1__32x64__ins__q31_xhtml_a4c899cdfaf2bb955323e93637bd662e0"><div class="ttname"><a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a4c899cdfaf2bb955323e93637bd662e0">arm_biquad_cas_df1_32x64_ins_q31::pState</a></div><div class="ttdeci">q63_t * pState</div><div class="ttdoc">points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3794</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q31_xhtml_a6c3eff4eb17ff1d43f170efb84713a2d"><div class="ttname"><a href="structarm__bilinear__interp__instance__q31.xhtml#a6c3eff4eb17ff1d43f170efb84713a2d">arm_bilinear_interp_instance_q31::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1977</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a86199a1590af2b8941c6532ee9d03229"><div class="ttname"><a href="arm__math_8h.xhtml#a86199a1590af2b8941c6532ee9d03229">arm_fir_lattice_init_f32</a></div><div class="ttdeci">void arm_fir_lattice_init_f32(arm_fir_lattice_instance_f32 *S, uint16_t numStages, float32_t *pCoeffs, float32_t *pState)</div><div class="ttdoc">Initialization function for the floating-point FIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2248e8d3901b4afb7827163132baad94"><div class="ttname"><a href="arm__math_8h.xhtml#a2248e8d3901b4afb7827163132baad94">arm_fill_f32</a></div><div class="ttdeci">void arm_fill_f32(float32_t value, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fills a constant value into a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad71c0ec70ec69edbc48563d9a5f68451"><div class="ttname"><a href="arm__math_8h.xhtml#ad71c0ec70ec69edbc48563d9a5f68451">arm_correlate_opt_q15</a></div><div class="ttdeci">void arm_correlate_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch)</div><div class="ttdoc">Correlation of Q15 sequences. </div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml_a0078e894f805af1b360369e619fb57b3"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml#a0078e894f805af1b360369e619fb57b3">arm_lms_instance_q15::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4287</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aae78fc079a43bdaa3055f9b32e2a1f4c"><div class="ttname"><a href="arm__math_8h.xhtml#aae78fc079a43bdaa3055f9b32e2a1f4c">arm_negate_q7</a></div><div class="ttdeci">void arm_negate_q7(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Negates the elements of a Q7 vector. </div></div>
<div class="ttc" id="structarm__cfft__instance__q31_xhtml_a2250fa6b8fe73292c5418c50c0549f87"><div class="ttname"><a href="structarm__cfft__instance__q31.xhtml#a2250fa6b8fe73292c5418c50c0549f87">arm_cfft_instance_q31::bitRevLength</a></div><div class="ttdeci">uint16_t bitRevLength</div><div class="ttdoc">bit reversal table length. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2262</div></div>
<div class="ttc" id="arm__math_8h_xhtml_add1f737e677e0e6ca31767c7001417b3"><div class="ttname"><a href="arm__math_8h.xhtml#add1f737e677e0e6ca31767c7001417b3">arm_copy_f32</a></div><div class="ttdeci">void arm_copy_f32(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Copies the elements of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a209a2a913a0c5e5679c5988da8f46b03"><div class="ttname"><a href="arm__math_8h.xhtml#a209a2a913a0c5e5679c5988da8f46b03">arm_conv_partial_q15</a></div><div class="ttdeci">arm_status arm_conv_partial_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of Q15 sequences. </div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_af97204d1838925621fc82021a0c2d6c1"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#af97204d1838925621fc82021a0c2d6c1">arm_dct4_instance_q31::pCosFactor</a></div><div class="ttdeci">q31_t * pCosFactor</div><div class="ttdoc">points to the cosFactor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2446</div></div>
<div class="ttc" id="arm__math_8h_xhtml_abaeab5646aeea9844e6d42ca8c73fe3a"><div class="ttname"><a href="arm__math_8h.xhtml#abaeab5646aeea9844e6d42ca8c73fe3a">arm_rfft_q31</a></div><div class="ttdeci">void arm_rfft_q31(const arm_rfft_instance_q31 *S, q31_t *pSrc, q31_t *pDst)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3487af88b112f682ee90589cd419e123"><div class="ttname"><a href="arm__math_8h.xhtml#a3487af88b112f682ee90589cd419e123">arm_scale_f32</a></div><div class="ttdeci">void arm_scale_f32(float32_t *pSrc, float32_t scale, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Multiplies a floating-point vector by a scalar. </div></div>
<div class="ttc" id="structarm__matrix__instance__q31_xhtml_a63bacac158a821c8cfc06088d251598c"><div class="ttname"><a href="structarm__matrix__instance__q31.xhtml#a63bacac158a821c8cfc06088d251598c">arm_matrix_instance_q31::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1498</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ace15287f9c64b9b4084d1c797d4c49d8"><div class="ttname"><a href="arm__math_8h.xhtml#ace15287f9c64b9b4084d1c797d4c49d8">arm_cos_f32</a></div><div class="ttdeci">float32_t arm_cos_f32(float32_t x)</div><div class="ttdoc">Fast approximation to the trigonometric cosine function for floating-point data. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a55b424341dc3efd3fa0bcaaff4bdbf40"><div class="ttname"><a href="arm__math_8h.xhtml#a55b424341dc3efd3fa0bcaaff4bdbf40">arm_cfft_radix2_q15</a></div><div class="ttdeci">void arm_cfft_radix2_q15(const arm_cfft_radix2_instance_q15 *S, q15_t *pSrc)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad7dd9f108429da13d3864696ceeec789"><div class="ttname"><a href="arm__math_8h.xhtml#ad7dd9f108429da13d3864696ceeec789">arm_mat_trans_f32</a></div><div class="ttdeci">arm_status arm_mat_trans_f32(const arm_matrix_instance_f32 *pSrc, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point matrix transpose. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a55aa292e057b43c376428ea1d9a938cc"><div class="ttname"><a href="arm__math_8h.xhtml#a55aa292e057b43c376428ea1d9a938cc">arm_fir_fast_q31</a></div><div class="ttdeci">void arm_fir_fast_q31(const arm_fir_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a98d13def6427e29522829f945d0967db"><div class="ttname"><a href="arm__math_8h.xhtml#a98d13def6427e29522829f945d0967db">arm_fir_init_f32</a></div><div class="ttdeci">void arm_fir_init_f32(arm_fir_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the floating-point FIR filter. </div></div>
<div class="ttc" id="structarm__cfft__instance__q15_xhtml"><div class="ttname"><a href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a></div><div class="ttdoc">Instance structure for the fixed-point CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2239</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q31_xhtml_addde04514b6e6ac72be3d609f0398b1a"><div class="ttname"><a href="structarm__fir__interpolate__instance__q31.xhtml#addde04514b6e6ac72be3d609f0398b1a">arm_fir_interpolate_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3664</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q31_xhtml_a5cdf0a631cb74e0e9588c388abe5235c"><div class="ttname"><a href="structarm__fir__interpolate__instance__q31.xhtml#a5cdf0a631cb74e0e9588c388abe5235c">arm_fir_interpolate_instance_q31::L</a></div><div class="ttdeci">uint8_t L</div><div class="ttdoc">upsample factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3661</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a4219d4669699e4efdcb150ed7a0d9a57"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a4219d4669699e4efdcb150ed7a0d9a57">arm_rfft_instance_f32::fftLenReal</a></div><div class="ttdeci">uint32_t fftLenReal</div><div class="ttdoc">length of the real FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2347</div></div>
<div class="ttc" id="structarm__linear__interp__instance__f32_xhtml"><div class="ttname"><a href="structarm__linear__interp__instance__f32.xhtml">arm_linear_interp_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point Linear Interpolate function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1951</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a456390f5e448afad3a38bed7d6e380e3"><div class="ttname"><a href="arm__math_8h.xhtml#a456390f5e448afad3a38bed7d6e380e3">arm_biquad_cascade_df1_fast_q31</a></div><div class="ttdeci">void arm_biquad_cascade_df1_fast_q31(const arm_biquad_casd_df1_inst_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-M3 and Cortex-...</div></div>
<div class="ttc" id="structarm__fir__instance__q31_xhtml_a409f39c93b744784648bdc365541444d"><div class="ttname"><a href="structarm__fir__instance__q31.xhtml#a409f39c93b744784648bdc365541444d">arm_fir_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1123</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_ac10927a1620195a88649ce63dab66120"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#ac10927a1620195a88649ce63dab66120">arm_cfft_radix4_instance_f32::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2215</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aeecbacd3fb37c608ec25474d3a0dffa9"><div class="ttname"><a href="arm__math_8h.xhtml#aeecbacd3fb37c608ec25474d3a0dffa9">arm_pid_reset_q31</a></div><div class="ttdeci">void arm_pid_reset_q31(arm_pid_instance_q31 *S)</div><div class="ttdoc">Reset function for the Q31 PID Control. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_a04af7c738dfb0882ad102fcad501d94a"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#a04af7c738dfb0882ad102fcad501d94a">arm_fir_sparse_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4731</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9a0bb2134bc85d3e55c6be6d946ee634"><div class="ttname"><a href="arm__math_8h.xhtml#a9a0bb2134bc85d3e55c6be6d946ee634">arm_fir_sparse_init_q31</a></div><div class="ttdeci">void arm_fir_sparse_init_q31(arm_fir_sparse_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q31 sparse FIR filter. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q31_xhtml_a9df4570ed28c50fd9193ab654ff236ad"><div class="ttname"><a href="structarm__iir__lattice__instance__q31.xhtml#a9df4570ed28c50fd9193ab654ff236ad">arm_iir_lattice_instance_q31::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4108</div></div>
<div class="ttc" id="structarm__cfft__instance__q15_xhtml_ac9160b80243b99a0b6e2f75ddb5cf0ae"><div class="ttname"><a href="structarm__cfft__instance__q15.xhtml#ac9160b80243b99a0b6e2f75ddb5cf0ae">arm_cfft_instance_q15::pBitRevTable</a></div><div class="ttdeci">const uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2243</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a384b0538101e8c03fa4fa14271e63b04"><div class="ttname"><a href="arm__math_8h.xhtml#a384b0538101e8c03fa4fa14271e63b04">arm_cmplx_mag_squared_q31</a></div><div class="ttdeci">void arm_cmplx_mag_squared_q31(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q31 complex magnitude squared. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_a5e19e7f234ac30a3db843352bf2a8515"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#a5e19e7f234ac30a3db843352bf2a8515">arm_fir_sparse_instance_f32::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4728</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7f297d1a7d776805395095fdb24a8071"><div class="ttname"><a href="arm__math_8h.xhtml#a7f297d1a7d776805395095fdb24a8071">arm_q31_to_q7</a></div><div class="ttdeci">void arm_q31_to_q7(q31_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the Q31 vector to Q7 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a10717ee326bf50832ef1c25b85a23068"><div class="ttname"><a href="arm__math_8h.xhtml#a10717ee326bf50832ef1c25b85a23068">arm_rfft_init_f32</a></div><div class="ttdeci">arm_status arm_rfft_init_f32(arm_rfft_instance_f32 *S, arm_cfft_radix4_instance_f32 *S_CFFT, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac05a17a0188bb851b58d19e572870a54"><div class="ttname"><a href="arm__math_8h.xhtml#ac05a17a0188bb851b58d19e572870a54">arm_fir_lattice_init_q31</a></div><div class="ttdeci">void arm_fir_lattice_init_q31(arm_fir_lattice_instance_q31 *S, uint16_t numStages, q31_t *pCoeffs, q31_t *pState)</div><div class="ttdoc">Initialization function for the Q31 FIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac77dbcaef5c754cac27eab96c4753a3c"><div class="ttname"><a href="arm__math_8h.xhtml#ac77dbcaef5c754cac27eab96c4753a3c">arm_conv_opt_q15</a></div><div class="ttdeci">void arm_conv_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Convolution of Q15 sequences. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae2070cb792a167e78dbad8d06b97cdab"><div class="ttname"><a href="arm__math_8h.xhtml#ae2070cb792a167e78dbad8d06b97cdab">arm_conv_q7</a></div><div class="ttdeci">void arm_conv_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst)</div><div class="ttdoc">Convolution of Q7 sequences. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a3c0ae42869afec8555dc8e3a7ef9b386"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a3c0ae42869afec8555dc8e3a7ef9b386">arm_lms_norm_instance_q31::energy</a></div><div class="ttdeci">q31_t energy</div><div class="ttdoc">saves previous frame energy. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4454</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a4acf704ae0cf30b53bf0fbfae8e34a59"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a4acf704ae0cf30b53bf0fbfae8e34a59">arm_cfft_radix4_instance_q15::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2108</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a4f4f821cc695fd0ef9061d702e08050a"><div class="ttname"><a href="arm__math_8h.xhtml#a4f4f821cc695fd0ef9061d702e08050a">arm_mat_trans_q15</a></div><div class="ttdeci">arm_status arm_mat_trans_q15(const arm_matrix_instance_q15 *pSrc, arm_matrix_instance_q15 *pDst)</div><div class="ttdoc">Q15 matrix transpose. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_ab413d2a5d3f45fa187d93813bf3bf81b"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#ab413d2a5d3f45fa187d93813bf3bf81b">arm_cfft_radix4_instance_q31::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2158</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a4969b5b5f3d001377bc401a3ee99dfc2"><div class="ttname"><a href="arm__math_8h.xhtml#a4969b5b5f3d001377bc401a3ee99dfc2">arm_std_f32</a></div><div class="ttdeci">void arm_std_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</div><div class="ttdoc">Standard deviation of the elements of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a421b6275f9d35f50286c0ff3beceff02"><div class="ttname"><a href="arm__math_8h.xhtml#a421b6275f9d35f50286c0ff3beceff02">arm_abs_f32</a></div><div class="ttdeci">void arm_abs_f32(float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Floating-point vector absolute value. </div></div>
<div class="ttc" id="group__clarke_xhtml_ga7fd106ca8d346a2a472842e0656014c1"><div class="ttname"><a href="group__clarke.xhtml#ga7fd106ca8d346a2a472842e0656014c1">arm_clarke_q31</a></div><div class="ttdeci">static __INLINE void arm_clarke_q31(q31_t Ia, q31_t Ib, q31_t *pIalpha, q31_t *pIbeta)</div><div class="ttdoc">Clarke transform for Q31 version. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5354</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_af32fdc78bcc27ca385f9b76a0a1f71c3"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#af32fdc78bcc27ca385f9b76a0a1f71c3">arm_cfft_radix4_instance_q15::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2109</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a68cdacd2267a2967955e40e6b7ec1229"><div class="ttname"><a href="arm__math_8h.xhtml#a68cdacd2267a2967955e40e6b7ec1229">arm_cfft_q15</a></div><div class="ttdeci">void arm_cfft_q15(const arm_cfft_instance_q15 *S, q15_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a57a64c1ff102d033c1bd05043f1d9955"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a57a64c1ff102d033c1bd05043f1d9955">arm_lms_norm_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4450</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a9f47ba9f50c81e4445ae3827b981bc05"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a9f47ba9f50c81e4445ae3827b981bc05">arm_rfft_instance_f32::pCfft</a></div><div class="ttdeci">arm_cfft_radix4_instance_f32 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2354</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a177704107f94564e9abe4daaa36f4554"><div class="ttname"><a href="arm__math_8h.xhtml#a177704107f94564e9abe4daaa36f4554">arm_float_to_q31</a></div><div class="ttdeci">void arm_float_to_q31(float32_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the floating-point vector to Q31 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a284ddcc49e4ac532d52a70d0383c5992"><div class="ttname"><a href="arm__math_8h.xhtml#a284ddcc49e4ac532d52a70d0383c5992">arm_correlate_q7</a></div><div class="ttdeci">void arm_correlate_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst)</div><div class="ttdoc">Correlation of Q7 sequences. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_a14860c7544911702ca1fa0bf78204ef3"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#a14860c7544911702ca1fa0bf78204ef3">arm_cfft_radix4_instance_f32::pTwiddle</a></div><div class="ttdeci">float32_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2216</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__f32_xhtml"><div class="ttname"><a href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point FIR interpolator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3671</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_af5c2615e6cde15524df38fa57ea32d94"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#af5c2615e6cde15524df38fa57ea32d94">arm_rfft_instance_q31::ifftFlagR</a></div><div class="ttdeci">uint8_t ifftFlagR</div><div class="ttdoc">flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2322</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae86c145efc2d9ec32dc6d8c1ad2ccb3c"><div class="ttname"><a href="arm__math_8h.xhtml#ae86c145efc2d9ec32dc6d8c1ad2ccb3c">arm_fir_sparse_q7</a></div><div class="ttdeci">void arm_fir_sparse_q7(arm_fir_sparse_instance_q7 *S, q7_t *pSrc, q7_t *pDst, q7_t *pScratchIn, q31_t *pScratchOut, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q7 sparse FIR filter. </div></div>
<div class="ttc" id="structarm__fir__lattice__instance__f32_xhtml_ae348884a1ba9b83fadccd5da640cbcaf"><div class="ttname"><a href="structarm__fir__lattice__instance__f32.xhtml#ae348884a1ba9b83fadccd5da640cbcaf">arm_fir_lattice_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3997</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aef8e86add28f15fdc5ecc484e9dd7a4e"><div class="ttname"><a href="arm__math_8h.xhtml#aef8e86add28f15fdc5ecc484e9dd7a4e">arm_fir_decimate_q31</a></div><div class="ttdeci">void arm_fir_decimate_q31(const arm_fir_decimate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 FIR decimator. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2102</div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_aab4ff371d14441df501f1169f71cbd17"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#aab4ff371d14441df501f1169f71cbd17">arm_pid_instance_q31::Kd</a></div><div class="ttdeci">q31_t Kd</div><div class="ttdoc">The derivative gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1870</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point sparse FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4726</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__f32_xhtml_ad369bd9997a250f195254df37408a38f"><div class="ttname"><a href="structarm__fir__lattice__instance__f32.xhtml#ad369bd9997a250f195254df37408a38f">arm_fir_lattice_instance_f32::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of filter stages. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3996</div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_a7def89571c50f7137a213326a396e560"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#a7def89571c50f7137a213326a396e560">arm_pid_instance_f32::A1</a></div><div class="ttdeci">float32_t A1</div><div class="ttdoc">The derived gain, A1 = -Kp - 2Kd. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1880</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__f32_xhtml_a268a8b0e80a3d9764baf33e4bc10dde2"><div class="ttname"><a href="structarm__fir__decimate__instance__f32.xhtml#a268a8b0e80a3d9764baf33e4bc10dde2">arm_fir_decimate_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3495</div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point normalized LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4394</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a993c00dd7f661d66bdb6e58426e893aa"><div class="ttname"><a href="arm__math_8h.xhtml#a993c00dd7f661d66bdb6e58426e893aa">arm_power_f32</a></div><div class="ttdeci">void arm_power_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</div><div class="ttdoc">Sum of the squares of the elements of a floating-point vector. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_a1ba688d90aba7de003ed4ad8e2e7ddda"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#a1ba688d90aba7de003ed4ad8e2e7ddda">arm_lms_norm_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4398</div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_a6da1187e070801e011ce5e0582efa861"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#a6da1187e070801e011ce5e0582efa861">arm_dct4_instance_f32::pCosFactor</a></div><div class="ttdeci">float32_t * pCosFactor</div><div class="ttdoc">points to the cosFactor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2399</div></div>
<div class="ttc" id="structarm__lms__instance__f32_xhtml_aaf94285be2f99b5b9af40bea8dcb14b9"><div class="ttname"><a href="structarm__lms__instance__f32.xhtml#aaf94285be2f99b5b9af40bea8dcb14b9">arm_lms_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4238</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_a2a0c944e66bab92fcbe19d1c29153250"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#a2a0c944e66bab92fcbe19d1c29153250">arm_rfft_instance_q31::pTwiddleAReal</a></div><div class="ttdeci">q31_t * pTwiddleAReal</div><div class="ttdoc">points to the real twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2325</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__f32_xhtml"><div class="ttname"><a href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point FIR decimator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3491</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q15_xhtml_a01cacab67e73945e8289075598ede14d"><div class="ttname"><a href="structarm__fir__decimate__instance__q15.xhtml#a01cacab67e73945e8289075598ede14d">arm_fir_decimate_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3470</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 sparse FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4740</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5ec96b8e420d68b0e626df0812274d46"><div class="ttname"><a href="arm__math_8h.xhtml#a5ec96b8e420d68b0e626df0812274d46">arm_correlate_q15</a></div><div class="ttdeci">void arm_correlate_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</div><div class="ttdoc">Correlation of Q15 sequences. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a28d7b9e437817f83397e081967e90f3c"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a28d7b9e437817f83397e081967e90f3c">arm_lms_norm_instance_q31::postShift</a></div><div class="ttdeci">uint8_t postShift</div><div class="ttdoc">bit shift applied to coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4452</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae63a45a63a11a65f2eae8b8b1fe370a8"><div class="ttname"><a href="arm__math_8h.xhtml#ae63a45a63a11a65f2eae8b8b1fe370a8">arm_fir_lattice_f32</a></div><div class="ttdeci">void arm_fir_lattice_f32(const arm_fir_lattice_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point FIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a63066615e7d6f6a44f4358725092419e"><div class="ttname"><a href="arm__math_8h.xhtml#a63066615e7d6f6a44f4358725092419e">arm_mat_cmplx_mult_q15</a></div><div class="ttdeci">arm_status arm_mat_cmplx_mult_q15(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pScratch)</div><div class="ttdoc">Q15, complex, matrix multiplication. </div></div>
<div class="ttc" id="structarm__biquad__cas__df1__32x64__ins__q31_xhtml_a8e9d58e8dba5aa3b2fc4f36d2ed07996"><div class="ttname"><a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#a8e9d58e8dba5aa3b2fc4f36d2ed07996">arm_biquad_cas_df1_32x64_ins_q31::postShift</a></div><div class="ttdeci">uint8_t postShift</div><div class="ttdoc">additional shift, in bits, applied to each output sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3796</div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_a53d24009bb9b2e93d0aa07db7f1a6c25"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#a53d24009bb9b2e93d0aa07db7f1a6c25">arm_dct4_instance_q15::N</a></div><div class="ttdeci">uint16_t N</div><div class="ttdoc">length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2489</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q31_xhtml_a2c2b579f1df1d8273a5d9d945c27e1b2"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q31.xhtml#a2c2b579f1df1d8273a5d9d945c27e1b2">arm_biquad_casd_df1_inst_q31::numStages</a></div><div class="ttdeci">uint32_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1309</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1e4d43385cb62262a78c6752fe1fafb2"><div class="ttname"><a href="arm__math_8h.xhtml#a1e4d43385cb62262a78c6752fe1fafb2">arm_conv_partial_fast_q15</a></div><div class="ttdeci">arm_status arm_conv_partial_fast_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_a9d17a87263953fe3559a007512c9f3a4"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#a9d17a87263953fe3559a007512c9f3a4">arm_cfft_radix2_instance_q31::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2137</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1f5f8212a4994882b647f0538a55856c"><div class="ttname"><a href="arm__math_8h.xhtml#a1f5f8212a4994882b647f0538a55856c">arm_min_q7</a></div><div class="ttdeci">void arm_min_q7(q7_t *pSrc, uint32_t blockSize, q7_t *result, uint32_t *index)</div><div class="ttdoc">Minimum value of a Q7 vector. </div></div>
<div class="ttc" id="structarm__matrix__instance__q15_xhtml_a9bac6ed54be287c4d4f01a1a28be65f5"><div class="ttname"><a href="structarm__matrix__instance__q15.xhtml#a9bac6ed54be287c4d4f01a1a28be65f5">arm_matrix_instance_q15::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1486</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9cb4e385b18c9a0b9cbc940c1067ca12"><div class="ttname"><a href="arm__math_8h.xhtml#a9cb4e385b18c9a0b9cbc940c1067ca12">arm_mat_scale_f32</a></div><div class="ttdeci">arm_status arm_mat_scale_f32(const arm_matrix_instance_f32 *pSrc, float32_t scale, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point matrix scaling. </div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q31_xhtml_a030d0391538c2481c5b348fd09a952ff"><div class="ttname"><a href="structarm__fir__decimate__instance__q31.xhtml#a030d0391538c2481c5b348fd09a952ff">arm_fir_decimate_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3482</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab094ad3bc6fa1b84e8b12a24e1850a06"><div class="ttname"><a href="arm__math_8h.xhtml#ab094ad3bc6fa1b84e8b12a24e1850a06">arm_dct4_init_f32</a></div><div class="ttdeci">arm_status arm_dct4_init_f32(arm_dct4_instance_f32 *S, arm_rfft_instance_f32 *S_RFFT, arm_cfft_radix4_instance_f32 *S_CFFT, uint16_t N, uint16_t Nby2, float32_t normalize)</div><div class="ttdoc">Initialization function for the floating-point DCT4/IDCT4. </div></div>
<div class="ttc" id="structarm__rfft__fast__instance__f32_xhtml"><div class="ttname"><a href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point RFFT/RIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2373</div></div>
<div class="ttc" id="arm__math_8h_xhtml_acf2526d8c2d75e486e8f0b0e31877ad0"><div class="ttname"><a href="arm__math_8h.xhtml#acf2526d8c2d75e486e8f0b0e31877ad0">arm_mean_q31</a></div><div class="ttdeci">void arm_mean_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</div><div class="ttdoc">Mean value of a Q31 vector. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a6b010e5f02d1130c621e3d2e26b95df1"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a6b010e5f02d1130c621e3d2e26b95df1">arm_cfft_radix4_instance_q15::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2110</div></div>
<div class="ttc" id="core__cm7_8h_xhtml"><div class="ttname"><a href="core__cm7_8h.xhtml">core_cm7.h</a></div><div class="ttdoc">CMSIS Cortex-M7 Core Peripheral Access Layer Header File. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1adb839ac84445b8c2f04efa43faef35"><div class="ttname"><a href="arm__math_8h.xhtml#a1adb839ac84445b8c2f04efa43faef35">arm_mat_cmplx_mult_f32</a></div><div class="ttdeci">arm_status arm_mat_cmplx_mult_f32(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point, complex, matrix multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad8958cd3cb7f521466168b46a25b7908"><div class="ttname"><a href="arm__math_8h.xhtml#ad8958cd3cb7f521466168b46a25b7908">arm_q7_to_q31</a></div><div class="ttdeci">void arm_q7_to_q31(q7_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">end of clarke group </div></div>
<div class="ttc" id="group__inv__clarke_xhtml_ga137f0396d837477b899ecae89f075a50"><div class="ttname"><a href="group__inv__clarke.xhtml#ga137f0396d837477b899ecae89f075a50">arm_inv_clarke_f32</a></div><div class="ttdeci">static __INLINE void arm_inv_clarke_f32(float32_t Ialpha, float32_t Ibeta, float32_t *pIa, float32_t *pIb)</div><div class="ttdoc">Floating-point Inverse Clarke transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5429</div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_a4a3f0a878b5b6b055e3478a2f244cd30"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#a4a3f0a878b5b6b055e3478a2f244cd30">arm_pid_instance_q15::state</a></div><div class="ttdeci">q15_t state[3]</div><div class="ttdoc">The state array of length 3. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1853</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q31_xhtml_aa62366c632f3b5305086f841f079dbd2"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q31.xhtml#aa62366c632f3b5305086f841f079dbd2">arm_biquad_casd_df1_inst_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">Points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1311</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q31_xhtml_a843eae0c9db5f815e77e1aaf9afea358"><div class="ttname"><a href="structarm__bilinear__interp__instance__q31.xhtml#a843eae0c9db5f815e77e1aaf9afea358">arm_bilinear_interp_instance_q31::pData</a></div><div class="ttdeci">q31_t * pData</div><div class="ttdoc">points to the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1978</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a></div><div class="ttdoc">Instance structure for the Q7 sparse FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4768</div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_af5d4b53091f19eff7536636b7cc43111"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#af5d4b53091f19eff7536636b7cc43111">arm_pid_instance_q15::Kd</a></div><div class="ttdeci">q15_t Kd</div><div class="ttdoc">The derivative gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1856</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9ec860bcb6f8ca31205bf0f1b51ab723"><div class="ttname"><a href="arm__math_8h.xhtml#a9ec860bcb6f8ca31205bf0f1b51ab723">arm_pid_reset_f32</a></div><div class="ttdeci">void arm_pid_reset_f32(arm_pid_instance_f32 *S)</div><div class="ttdoc">Reset function for the floating-point PID Control. </div></div>
<div class="ttc" id="structarm__fir__instance__f32_xhtml_a20cf98c92b5323799b7881c9ff4d2f7c"><div class="ttname"><a href="structarm__fir__instance__f32.xhtml#a20cf98c92b5323799b7881c9ff4d2f7c">arm_fir_instance_f32::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of filter coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1132</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__f32_xhtml_a33bf5948c947f9ef80a99717cb0a0a43"><div class="ttname"><a href="structarm__fir__lattice__instance__f32.xhtml#a33bf5948c947f9ef80a99717cb0a0a43">arm_fir_lattice_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3998</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5b89d1b04575aeec494f678695fb87d8"><div class="ttname"><a href="arm__math_8h.xhtml#a5b89d1b04575aeec494f678695fb87d8">arm_max_f32</a></div><div class="ttdeci">void arm_max_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Maximum value of a floating-point vector. </div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q15_xhtml"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a></div><div class="ttdoc">Instance structure for the Q15 Biquad cascade filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1294</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac882495d5f098819fd3939c1ef7795b3"><div class="ttname"><a href="arm__math_8h.xhtml#ac882495d5f098819fd3939c1ef7795b3">arm_mean_q15</a></div><div class="ttdeci">void arm_mean_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</div><div class="ttdoc">Mean value of a Q15 vector. </div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q15_xhtml"><div class="ttname"><a href="structarm__bilinear__interp__instance__q15.xhtml">arm_bilinear_interp_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 bilinear interpolation function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1985</div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4340</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0a4a8f77a6a51d9b3f3b9d729f85b7a4"><div class="ttname"><a href="arm__math_8h.xhtml#a0a4a8f77a6a51d9b3f3b9d729f85b7a4">arm_cmplx_mag_q15</a></div><div class="ttdeci">void arm_cmplx_mag_q15(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q15 complex magnitude. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2073</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0b93d31bb5b5ed214c2b94d8a7744cd2"><div class="ttname"><a href="arm__math_8h.xhtml#a0b93d31bb5b5ed214c2b94d8a7744cd2">arm_power_q31</a></div><div class="ttdeci">void arm_power_q31(q31_t *pSrc, uint32_t blockSize, q63_t *pResult)</div><div class="ttdoc">Sum of the squares of the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a29dd693537e45421a36891f8439e1fba"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a29dd693537e45421a36891f8439e1fba">arm_cfft_radix4_instance_q15::pTwiddle</a></div><div class="ttdeci">q15_t * pTwiddle</div><div class="ttdoc">points to the twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2107</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_a411f75b6ed01690293f4f5988030ea42"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#a411f75b6ed01690293f4f5988030ea42">arm_cfft_radix2_instance_f32::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2190</div></div>
<div class="ttc" id="structarm__cfft__instance__f32_xhtml_a21ceaf59a1bb8440af57c28d2dd9bbab"><div class="ttname"><a href="structarm__cfft__instance__f32.xhtml#a21ceaf59a1bb8440af57c28d2dd9bbab">arm_cfft_instance_f32::pBitRevTable</a></div><div class="ttdeci">const uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2279</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0c2acfda3126c452e75b81669e8ad9ef"><div class="ttname"><a href="arm__math_8h.xhtml#a0c2acfda3126c452e75b81669e8ad9ef">arm_cfft_radix4_init_q15</a></div><div class="ttdeci">arm_status arm_cfft_radix4_init_q15(arm_cfft_radix4_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a4c7cf073e89d6d57cc4e711f078c3f68"><div class="ttname"><a href="arm__math_8h.xhtml#a4c7cf073e89d6d57cc4e711f078c3f68">arm_conv_opt_q7</a></div><div class="ttdeci">void arm_conv_opt_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Convolution of Q7 sequences. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0e3ab1b57da32d45388d1fa90d7fd88c"><div class="ttname"><a href="arm__math_8h.xhtml#a0e3ab1b57da32d45388d1fa90d7fd88c">arm_rms_f32</a></div><div class="ttdeci">void arm_rms_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</div><div class="ttdoc">Root Mean Square of the elements of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7f975a472de286331134227c08aad826"><div class="ttname"><a href="arm__math_8h.xhtml#a7f975a472de286331134227c08aad826">arm_sub_f32</a></div><div class="ttdeci">void arm_sub_f32(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Floating-point vector subtraction. </div></div>
<div class="ttc" id="structarm__fir__instance__q7_xhtml_a0e45aedefc3fffad6cb315c5b6e5bd49"><div class="ttname"><a href="structarm__fir__instance__q7.xhtml#a0e45aedefc3fffad6cb315c5b6e5bd49">arm_fir_instance_q7::pCoeffs</a></div><div class="ttdeci">q7_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1104</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q31_xhtml_ad3d6936c36303b30dd38f1eddf248ae5"><div class="ttname"><a href="structarm__fir__decimate__instance__q31.xhtml#ad3d6936c36303b30dd38f1eddf248ae5">arm_fir_decimate_instance_q31::M</a></div><div class="ttdeci">uint8_t M</div><div class="ttdoc">decimation factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3480</div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_ad13544aafad268588c62e3eb35ae662c"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#ad13544aafad268588c62e3eb35ae662c">arm_dct4_instance_f32::pTwiddle</a></div><div class="ttdeci">float32_t * pTwiddle</div><div class="ttdoc">points to the twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2398</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae164899c4a3fc0e946dc5d55555fe541"><div class="ttname"><a href="arm__math_8h.xhtml#ae164899c4a3fc0e946dc5d55555fe541">arm_sin_f32</a></div><div class="ttdeci">float32_t arm_sin_f32(float32_t x)</div><div class="ttdoc">end of LinearInterpolate group </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aca3f0b8227da431ab29225b88888aa32"><div class="ttname"><a href="arm__math_8h.xhtml#aca3f0b8227da431ab29225b88888aa32">arm_mult_f32</a></div><div class="ttdeci">void arm_mult_f32(float32_t *pSrcA, float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Floating-point vector multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35">ARM_MATH_ARGUMENT_ERROR</a></div><div class="ttdoc">One or more arguments are incorrect. </div><div class="ttdef"><b>Definition:</b> arm_math.h:368</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af647776a425b7f9dd0aca3e11d81f02f"><div class="ttname"><a href="arm__math_8h.xhtml#af647776a425b7f9dd0aca3e11d81f02f">arm_mat_sub_q15</a></div><div class="ttdeci">arm_status arm_mat_sub_q15(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst)</div><div class="ttdoc">Q15 matrix subtraction. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_af43dcbbc2fc661ffbc525afe3dcbd7da"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#af43dcbbc2fc661ffbc525afe3dcbd7da">arm_dct4_instance_q15::Nby2</a></div><div class="ttdeci">uint16_t Nby2</div><div class="ttdoc">half of the length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2490</div></div>
<div class="ttc" id="structarm__cfft__instance__q15_xhtml_a738907cf34bdbbaf724414ac2decbc3c"><div class="ttname"><a href="structarm__cfft__instance__q15.xhtml#a738907cf34bdbbaf724414ac2decbc3c">arm_cfft_instance_q15::bitRevLength</a></div><div class="ttdeci">uint16_t bitRevLength</div><div class="ttdoc">bit reversal table length. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2244</div></div>
<div class="ttc" id="group__inv__park_xhtml_ga0b33822b988a15455773d28440c5579a"><div class="ttname"><a href="group__inv__park.xhtml#ga0b33822b988a15455773d28440c5579a">arm_inv_park_q31</a></div><div class="ttdeci">static __INLINE void arm_inv_park_q31(q31_t Id, q31_t Iq, q31_t *pIalpha, q31_t *pIbeta, q31_t sinVal, q31_t cosVal)</div><div class="ttdoc">Inverse Park transform for Q31 version. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5699</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a47c4466d644e0d8ba407995adfa9b917"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a47c4466d644e0d8ba407995adfa9b917">arm_lms_norm_instance_q31::x0</a></div><div class="ttdeci">q31_t x0</div><div class="ttdoc">saves previous input sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4455</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab5a8fb21a5b3b983d5f54f31614052ea"><div class="ttname"><a href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a></div><div class="ttdeci">int16_t q15_t</div><div class="ttdoc">16-bit fractional data type in 1.15 format. </div><div class="ttdef"><b>Definition:</b> arm_math.h:384</div></div>
<div class="ttc" id="structarm__fir__instance__q31_xhtml_afaae4c884bdf11a4ec2f3b9bb2bb51d0"><div class="ttname"><a href="structarm__fir__instance__q31.xhtml#afaae4c884bdf11a4ec2f3b9bb2bb51d0">arm_fir_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1124</div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_ac0feffde05fe391eeab3bf78e953830a"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#ac0feffde05fe391eeab3bf78e953830a">arm_pid_instance_f32::Ki</a></div><div class="ttdeci">float32_t Ki</div><div class="ttdoc">The integral gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1884</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3de9c4ddcc7886de25b70d875099a8d9"><div class="ttname"><a href="arm__math_8h.xhtml#a3de9c4ddcc7886de25b70d875099a8d9">arm_conv_partial_fast_opt_q15</a></div><div class="ttdeci">arm_status arm_conv_partial_fast_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml_aa9b9aa9e413c6cec376a9dddc9f01ebe"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml#aa9b9aa9e413c6cec376a9dddc9f01ebe">arm_pid_instance_f32::Kp</a></div><div class="ttdeci">float32_t Kp</div><div class="ttdoc">The proportional gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1883</div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point DCT4/IDCT4 function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2393</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad47486a399dedb0bc85a5990ec5cf981"><div class="ttname"><a href="arm__math_8h.xhtml#ad47486a399dedb0bc85a5990ec5cf981">arm_lms_norm_q15</a></div><div class="ttdeci">void arm_lms_norm_q15(arm_lms_norm_instance_q15 *S, q15_t *pSrc, q15_t *pRef, q15_t *pOut, q15_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for Q15 normalized LMS filter. </div></div>
<div class="ttc" id="structarm__cfft__instance__q31_xhtml"><div class="ttname"><a href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a></div><div class="ttdoc">Instance structure for the fixed-point CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2257</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_a3dac86f15e33553e8f3e19e0d712bae5"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#a3dac86f15e33553e8f3e19e0d712bae5">arm_fir_sparse_instance_q7::pCoeffs</a></div><div class="ttdeci">q7_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4773</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__f32_xhtml_a76a8b2161731638eb3d67f277919f95d"><div class="ttname"><a href="structarm__fir__decimate__instance__f32.xhtml#a76a8b2161731638eb3d67f277919f95d">arm_fir_decimate_instance_f32::M</a></div><div class="ttdeci">uint8_t M</div><div class="ttdoc">decimation factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3493</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a74ce08c49ab61e57bd50c3a0ca1fdb2b"><div class="ttname"><a href="arm__math_8h.xhtml#a74ce08c49ab61e57bd50c3a0ca1fdb2b">arm_mean_f32</a></div><div class="ttdeci">void arm_mean_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</div><div class="ttdoc">Mean value of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a147e90b7c12a162735ab8824127a33ee"><div class="ttname"><a href="arm__math_8h.xhtml#a147e90b7c12a162735ab8824127a33ee">arm_mat_add_q15</a></div><div class="ttdeci">arm_status arm_mat_add_q15(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst)</div><div class="ttdoc">Q15 matrix addition. </div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q31_xhtml_a08fe9494ab7cd336b791e9657adadcf6"><div class="ttname"><a href="structarm__fir__lattice__instance__q31.xhtml#a08fe9494ab7cd336b791e9657adadcf6">arm_fir_lattice_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3986</div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f32_xhtml"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point transposed direct form II Biquad cascade filter...</div><div class="ttdef"><b>Definition:</b> arm_math.h:3838</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a609743821ee81fa8c34c4bcdc1ed9744"><div class="ttname"><a href="arm__math_8h.xhtml#a609743821ee81fa8c34c4bcdc1ed9744">arm_mat_scale_q31</a></div><div class="ttdeci">arm_status arm_mat_scale_q31(const arm_matrix_instance_q31 *pSrc, q31_t scaleFract, int32_t shift, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix scaling. </div></div>
<div class="ttc" id="structarm__fir__instance__q15_xhtml"><div class="ttname"><a href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1110</div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_a1b8412c517071962a9acfdc6778906ec"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#a1b8412c517071962a9acfdc6778906ec">arm_pid_instance_q15::A1</a></div><div class="ttdeci">q31_t A1</div><div class="ttdoc">The derived gain A1 = -Kp - 2Kd | Kd. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1851</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab15d8fa060fc85b4d948d091b7deaa11"><div class="ttname"><a href="arm__math_8h.xhtml#ab15d8fa060fc85b4d948d091b7deaa11">arm_dot_prod_q31</a></div><div class="ttdeci">void arm_dot_prod_q31(q31_t *pSrcA, q31_t *pSrcB, uint32_t blockSize, q63_t *result)</div><div class="ttdoc">Dot product of Q31 vectors. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a123b26fa9156cd8d3622dd85931741ed"><div class="ttname"><a href="arm__math_8h.xhtml#a123b26fa9156cd8d3622dd85931741ed">arm_iir_lattice_q31</a></div><div class="ttdeci">void arm_iir_lattice_q31(const arm_iir_lattice_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 IIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a57aade7d8892585992cdc6375bd82f9c"><div class="ttname"><a href="arm__math_8h.xhtml#a57aade7d8892585992cdc6375bd82f9c">arm_sin_q31</a></div><div class="ttdeci">q31_t arm_sin_q31(q31_t x)</div><div class="ttdoc">Fast approximation to the trigonometric sine function for Q31 data. </div></div>
<div class="ttc" id="structarm__cfft__instance__f32_xhtml_a3ba329ed153d182746376208e773d648"><div class="ttname"><a href="structarm__cfft__instance__f32.xhtml#a3ba329ed153d182746376208e773d648">arm_cfft_instance_f32::bitRevLength</a></div><div class="ttdeci">uint16_t bitRevLength</div><div class="ttdoc">bit reversal table length. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2280</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_ab87ae457adec8f727afefaa2599fc983"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#ab87ae457adec8f727afefaa2599fc983">arm_fir_sparse_instance_q31::pTapDelay</a></div><div class="ttdeci">int32_t * pTapDelay</div><div class="ttdoc">points to the array of delay values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4747</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_afdd3a1dc72132c854dc379154b68b674"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#afdd3a1dc72132c854dc379154b68b674">arm_fir_sparse_instance_q31::maxDelay</a></div><div class="ttdeci">uint16_t maxDelay</div><div class="ttdoc">maximum offset specified by the pTapDelay array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4746</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_a6f2ab87fb4c568656e1f92f687b5c850"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#a6f2ab87fb4c568656e1f92f687b5c850">arm_cfft_radix2_instance_q15::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2080</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a746e8857cafe33ec5d6780729c18c311"><div class="ttname"><a href="arm__math_8h.xhtml#a746e8857cafe33ec5d6780729c18c311">arm_correlate_opt_q7</a></div><div class="ttdeci">void arm_correlate_opt_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Correlation of Q7 sequences. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2b08b5e8001d2c15204639d00893fc70"><div class="ttname"><a href="arm__math_8h.xhtml#a2b08b5e8001d2c15204639d00893fc70">arm_cmplx_dot_prod_q15</a></div><div class="ttdeci">void arm_cmplx_dot_prod_q15(q15_t *pSrcA, q15_t *pSrcB, uint32_t numSamples, q31_t *realResult, q31_t *imagResult)</div><div class="ttdoc">Q15 complex dot product. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_afaac0e1927daffeb68a42719b53ea780"><div class="ttname"><a href="arm__math_8h.xhtml#afaac0e1927daffeb68a42719b53ea780">arm_scale_q15</a></div><div class="ttdeci">void arm_scale_q15(q15_t *pSrc, q15_t scaleFract, int8_t shift, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Multiplies a Q15 vector by a scalar. </div></div>
<div class="ttc" id="structarm__fir__lattice__instance__f32_xhtml"><div class="ttname"><a href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point FIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3994</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0465cf326ada039ed792f94b033d9ec5"><div class="ttname"><a href="arm__math_8h.xhtml#a0465cf326ada039ed792f94b033d9ec5">arm_fill_q7</a></div><div class="ttdeci">void arm_fill_q7(q7_t value, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fills a constant value into a Q7 vector. </div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_a2f7492bd6fb92fae5e2de7fbbec39b0e"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#a2f7492bd6fb92fae5e2de7fbbec39b0e">arm_pid_instance_q31::A1</a></div><div class="ttdeci">q31_t A1</div><div class="ttdoc">The derived gain, A1 = -Kp - 2Kd. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1865</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac84ec42cbbebc5c197a87d0221819acf"><div class="ttname"><a href="arm__math_8h.xhtml#ac84ec42cbbebc5c197a87d0221819acf">arm_offset_q31</a></div><div class="ttdeci">void arm_offset_q31(q31_t *pSrc, q31_t offset, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Adds a constant offset to a Q31 vector. </div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q31_xhtml_a37915d42b0dc5e3057ebe83110798482"><div class="ttname"><a href="structarm__fir__decimate__instance__q31.xhtml#a37915d42b0dc5e3057ebe83110798482">arm_fir_decimate_instance_q31::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3481</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0f857457a815946f7e4dca989ebf6ff6"><div class="ttname"><a href="arm__math_8h.xhtml#a0f857457a815946f7e4dca989ebf6ff6">arm_fir_interpolate_init_f32</a></div><div class="ttdeci">arm_status arm_fir_interpolate_init_f32(arm_fir_interpolate_instance_f32 *S, uint8_t L, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the floating-point FIR interpolator. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_a28e4c085af69c9c3e2e95dacf8004c3e"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#a28e4c085af69c9c3e2e95dacf8004c3e">arm_lms_norm_instance_q31::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4448</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9ed47c4e0f58affa935d84e0508a7f39"><div class="ttname"><a href="arm__math_8h.xhtml#a9ed47c4e0f58affa935d84e0508a7f39">arm_fir_decimate_init_q31</a></div><div class="ttdeci">arm_status arm_fir_decimate_init_q31(arm_fir_decimate_instance_q31 *S, uint16_t numTaps, uint8_t M, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q31 FIR decimator. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3f860dc98c6fc4cafc421e4a2aed3c89"><div class="ttname"><a href="arm__math_8h.xhtml#a3f860dc98c6fc4cafc421e4a2aed3c89">arm_conv_f32</a></div><div class="ttdeci">void arm_conv_f32(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst)</div><div class="ttdoc">Convolution of floating-point sequences. </div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml_ac0d84f7d054555931ef8a62511fbcb8a"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml#ac0d84f7d054555931ef8a62511fbcb8a">arm_lms_instance_q31::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4342</div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f64_xhtml_a0bde57b618e3f9059b23b0de64e12ce3"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#a0bde57b618e3f9059b23b0de64e12ce3">arm_biquad_cascade_df2T_instance_f64::pState</a></div><div class="ttdeci">float64_t * pState</div><div class="ttdoc">points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3867</div></div>
<div class="ttc" id="group___bilinear_interpolate_xhtml_gab49a4c0f64854903d996d01ba38f711a"><div class="ttname"><a href="group___bilinear_interpolate.xhtml#gab49a4c0f64854903d996d01ba38f711a">arm_bilinear_interp_f32</a></div><div class="ttdeci">static __INLINE float32_t arm_bilinear_interp_f32(const arm_bilinear_interp_instance_f32 *S, float32_t X, float32_t Y)</div><div class="ttdoc">Floating-point bilinear interpolation. </div><div class="ttdef"><b>Definition:</b> arm_math.h:7173</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a24d6c3f7f8b9fae4847c0c3f26a39a3b"><div class="ttname"><a href="arm__math_8h.xhtml#a24d6c3f7f8b9fae4847c0c3f26a39a3b">arm_add_q31</a></div><div class="ttdeci">void arm_add_q31(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q31 vector addition. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_ac95f8ca3d816524c2070643852fac5e8"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#ac95f8ca3d816524c2070643852fac5e8">arm_lms_norm_instance_f32::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4396</div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_adb1ef2739ddbe62e5cdadc47455a4147"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#adb1ef2739ddbe62e5cdadc47455a4147">arm_dct4_instance_f32::Nby2</a></div><div class="ttdeci">uint16_t Nby2</div><div class="ttdoc">half of the length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2396</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3707e16af1435b215840006a7ab0c98f"><div class="ttname"><a href="arm__math_8h.xhtml#a3707e16af1435b215840006a7ab0c98f">arm_conv_partial_opt_q7</a></div><div class="ttdeci">arm_status arm_conv_partial_opt_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Partial convolution of Q7 sequences. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_ac76df681b1bd502fb4874c06f055dded"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#ac76df681b1bd502fb4874c06f055dded">arm_dct4_instance_q15::pCosFactor</a></div><div class="ttdeci">q15_t * pCosFactor</div><div class="ttdoc">points to the cosFactor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2493</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aa1757e53279780107acc92cf100adb61"><div class="ttname"><a href="arm__math_8h.xhtml#aa1757e53279780107acc92cf100adb61">arm_shift_q15</a></div><div class="ttdeci">void arm_shift_q15(q15_t *pSrc, int8_t shiftBits, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Shifts the elements of a Q15 vector a specified number of bits. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a98f5c1a097d4572ce4ff3b0c58ebcdbd"><div class="ttname"><a href="arm__math_8h.xhtml#a98f5c1a097d4572ce4ff3b0c58ebcdbd">arm_fir_sparse_init_q7</a></div><div class="ttdeci">void arm_fir_sparse_init_q7(arm_fir_sparse_instance_q7 *S, uint16_t numTaps, q7_t *pCoeffs, q7_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q7 sparse FIR filter. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2156</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7521d59196189bb6dde26e8cdfb66e21"><div class="ttname"><a href="arm__math_8h.xhtml#a7521d59196189bb6dde26e8cdfb66e21">arm_mat_mult_q15</a></div><div class="ttdeci">arm_status arm_mat_mult_q15(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pState)</div><div class="ttdoc">Q15 matrix multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_af9d27afa9928ff28a63cd98ea9218a72"><div class="ttname"><a href="arm__math_8h.xhtml#af9d27afa9928ff28a63cd98ea9218a72">arm_std_q15</a></div><div class="ttdeci">void arm_std_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</div><div class="ttdoc">Standard deviation of the elements of a Q15 vector. </div></div>
<div class="ttc" id="group___p_i_d_xhtml_ga5f6f941e7ae981728dd3a662f8f4ecd7"><div class="ttname"><a href="group___p_i_d.xhtml#ga5f6f941e7ae981728dd3a662f8f4ecd7">arm_pid_q31</a></div><div class="ttdeci">static __INLINE q31_t arm_pid_q31(arm_pid_instance_q31 *S, q31_t in)</div><div class="ttdoc">Process function for the Q31 PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5153</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a25aa3d58a90bf91b6a82272a0bc518f7"><div class="ttname"><a href="arm__math_8h.xhtml#a25aa3d58a90bf91b6a82272a0bc518f7">arm_fir_decimate_f32</a></div><div class="ttdeci">void arm_fir_decimate_f32(const arm_fir_decimate_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point FIR decimator. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a6a0abfe6041253a6f91c63b383a64257"><div class="ttname"><a href="arm__math_8h.xhtml#a6a0abfe6041253a6f91c63b383a64257">arm_lms_q31</a></div><div class="ttdeci">void arm_lms_q31(const arm_lms_instance_q31 *S, q31_t *pSrc, q31_t *pRef, q31_t *pOut, q31_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for Q31 LMS filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a405197c89fe4d34003efd23786296425"><div class="ttname"><a href="arm__math_8h.xhtml#a405197c89fe4d34003efd23786296425">arm_biquad_cascade_stereo_df2T_init_f32</a></div><div class="ttdeci">void arm_biquad_cascade_stereo_df2T_init_f32(arm_biquad_cascade_stereo_df2T_instance_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</div><div class="ttdoc">Initialization function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q15_xhtml_a3f7b5184bb28853ef401b001df121047"><div class="ttname"><a href="structarm__fir__decimate__instance__q15.xhtml#a3f7b5184bb28853ef401b001df121047">arm_fir_decimate_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3471</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_a2f915a1c29635c1623086aaaa726be8f"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#a2f915a1c29635c1623086aaaa726be8f">arm_cfft_radix2_instance_f32::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2185</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5c5b2127b3c4ea2d03692127f8543858"><div class="ttname"><a href="arm__math_8h.xhtml#a5c5b2127b3c4ea2d03692127f8543858">arm_cfft_radix2_init_q15</a></div><div class="ttdeci">arm_status arm_cfft_radix2_init_q15(arm_cfft_radix2_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a67e96abfc9c3e30efb70a2ec9d0fe7e8"><div class="ttname"><a href="arm__math_8h.xhtml#a67e96abfc9c3e30efb70a2ec9d0fe7e8">arm_cmplx_mult_cmplx_q15</a></div><div class="ttdeci">void arm_cmplx_mult_cmplx_q15(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q15 complex-by-complex multiplication. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_a794af0916666d11cc564d6df08553555"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#a794af0916666d11cc564d6df08553555">arm_fir_sparse_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state buffer array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4730</div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml_acb6ca9996b3c5f740d5d6c8e9f4f1d46"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml#acb6ca9996b3c5f740d5d6c8e9f4f1d46">arm_lms_instance_q31::mu</a></div><div class="ttdeci">q31_t mu</div><div class="ttdoc">step size that controls filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4345</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a101e3f7b0bd6b5b14cd5214f23df4133"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a101e3f7b0bd6b5b14cd5214f23df4133">arm_cfft_radix4_instance_q15::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2106</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_a1d5bbe9a991e133f81652a77a7985d23"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#a1d5bbe9a991e133f81652a77a7985d23">arm_cfft_radix2_instance_q31::pTwiddle</a></div><div class="ttdeci">q31_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2134</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aaa2524b08220fd6c3f753e692ffc7d3b"><div class="ttname"><a href="arm__math_8h.xhtml#aaa2524b08220fd6c3f753e692ffc7d3b">arm_fir_decimate_init_f32</a></div><div class="ttdeci">arm_status arm_fir_decimate_init_f32(arm_fir_decimate_instance_f32 *S, uint16_t numTaps, uint8_t M, float32_t *pCoeffs, float32_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the floating-point FIR decimator. </div></div>
<div class="ttc" id="structarm__matrix__instance__q31_xhtml_a09a64267c0579fef086efc9059741e56"><div class="ttname"><a href="structarm__matrix__instance__q31.xhtml#a09a64267c0579fef086efc9059741e56">arm_matrix_instance_q31::pData</a></div><div class="ttdeci">q31_t * pData</div><div class="ttdoc">points to the data of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1500</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a2ecff6ea735cb4d22e922d0fd5736655"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a2ecff6ea735cb4d22e922d0fd5736655">arm_cfft_radix4_instance_q15::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2105</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__f32_xhtml_aede17bebfb1f835b61d71dd813eab3f8"><div class="ttname"><a href="structarm__bilinear__interp__instance__f32.xhtml#aede17bebfb1f835b61d71dd813eab3f8">arm_bilinear_interp_instance_f32::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1966</div></div>
<div class="ttc" id="group__park_xhtml_gaf4cc6370c0cfc14ea66774ed3c5bb10f"><div class="ttname"><a href="group__park.xhtml#gaf4cc6370c0cfc14ea66774ed3c5bb10f">arm_park_q31</a></div><div class="ttdeci">static __INLINE void arm_park_q31(q31_t Ialpha, q31_t Ibeta, q31_t *pId, q31_t *pIq, q31_t sinVal, q31_t cosVal)</div><div class="ttdoc">Park transform for Q31 version. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5579</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_ac342f3248157cbbd2f04a3c8ec9fc9eb"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#ac342f3248157cbbd2f04a3c8ec9fc9eb">arm_rfft_instance_f32::bitReverseFlagR</a></div><div class="ttdeci">uint8_t bitReverseFlagR</div><div class="ttdoc">flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2350</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad7373e53d3c2e1adfeafc8c2e9720b5c"><div class="ttname"><a href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a></div><div class="ttdeci">static __INLINE q31_t clip_q63_to_q31(q63_t x)</div><div class="ttdoc">Clips Q63 to Q31 values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:472</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad04d0baab6ed081d8e8afe02538eb80b"><div class="ttname"><a href="arm__math_8h.xhtml#ad04d0baab6ed081d8e8afe02538eb80b">arm_dct4_q31</a></div><div class="ttdeci">void arm_dct4_q31(const arm_dct4_instance_q31 *S, q31_t *pState, q31_t *pInlineBuffer)</div><div class="ttdoc">Processing function for the Q31 DCT4/IDCT4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aac9c0f01ed91c53f7083995d7411f5ee"><div class="ttname"><a href="arm__math_8h.xhtml#aac9c0f01ed91c53f7083995d7411f5ee">arm_fir_interpolate_q31</a></div><div class="ttdeci">void arm_fir_interpolate_q31(const arm_fir_interpolate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 FIR interpolator. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a45537f576102d960d467eb722b8431f2"><div class="ttname"><a href="arm__math_8h.xhtml#a45537f576102d960d467eb722b8431f2">arm_cmplx_mag_squared_q15</a></div><div class="ttdeci">void arm_cmplx_mag_squared_q15(q15_t *pSrc, q15_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q15 complex magnitude squared. </div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q15_xhtml_a7fa8772d01583374ff8ac18205a26a37"><div class="ttname"><a href="structarm__bilinear__interp__instance__q15.xhtml#a7fa8772d01583374ff8ac18205a26a37">arm_bilinear_interp_instance_q15::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1988</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae2a50f692f41ba57e44ed0719b1368bd"><div class="ttname"><a href="arm__math_8h.xhtml#ae2a50f692f41ba57e44ed0719b1368bd">arm_fir_init_q15</a></div><div class="ttdeci">arm_status arm_fir_init_q15(arm_fir_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q15 FIR filter. </div></div>
<div class="ttc" id="structarm__matrix__instance__q15_xhtml_a6da33a5553e634787d0f515cf8d724af"><div class="ttname"><a href="structarm__matrix__instance__q15.xhtml#a6da33a5553e634787d0f515cf8d724af">arm_matrix_instance_q15::pData</a></div><div class="ttdeci">q15_t * pData</div><div class="ttdoc">points to the data of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1488</div></div>
<div class="ttc" id="structarm__matrix__instance__q31_xhtml"><div class="ttname"><a href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 matrix structure. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1496</div></div>
<div class="ttc" id="group___linear_interpolate_xhtml_ga2269263d810cafcd19681957b37d5cf6"><div class="ttname"><a href="group___linear_interpolate.xhtml#ga2269263d810cafcd19681957b37d5cf6">arm_linear_interp_f32</a></div><div class="ttdeci">static __INLINE float32_t arm_linear_interp_f32(arm_linear_interp_instance_f32 *S, float32_t x)</div><div class="ttdoc">Process function for the floating-point Linear Interpolation Function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5797</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae266d009e682180421601627c79a3843"><div class="ttname"><a href="arm__math_8h.xhtml#ae266d009e682180421601627c79a3843">arm_lms_f32</a></div><div class="ttdeci">void arm_lms_f32(const arm_lms_instance_f32 *S, float32_t *pSrc, float32_t *pRef, float32_t *pOut, float32_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for floating-point LMS filter. </div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml_a42f95368b94898eb82608e1113d18cab"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml#a42f95368b94898eb82608e1113d18cab">arm_lms_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4289</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a834b23b4ade8682beeb55778399101f8"><div class="ttname"><a href="arm__math_8h.xhtml#a834b23b4ade8682beeb55778399101f8">arm_conv_partial_opt_q15</a></div><div class="ttdeci">arm_status arm_conv_partial_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, uint32_t firstIndex, uint32_t numPoints, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Partial convolution of Q15 sequences. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_a8da0d2ca69749fde8cbb95caeac6fe6a"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#a8da0d2ca69749fde8cbb95caeac6fe6a">arm_cfft_radix4_instance_f32::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2217</div></div>
<div class="ttc" id="structarm__fir__instance__q7_xhtml"><div class="ttname"><a href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a></div><div class="ttdoc">Instance structure for the Q7 FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1100</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__f32_xhtml_a42a8ba1bda85fa86d7b6c84d3da4c75b"><div class="ttname"><a href="structarm__fir__interpolate__instance__f32.xhtml#a42a8ba1bda85fa86d7b6c84d3da4c75b">arm_fir_interpolate_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3676</div></div>
<div class="ttc" id="structarm__matrix__instance__f64_xhtml_a5b2475f8ff1e4818955cdd18bc40a097"><div class="ttname"><a href="structarm__matrix__instance__f64.xhtml#a5b2475f8ff1e4818955cdd18bc40a097">arm_matrix_instance_f64::pData</a></div><div class="ttdeci">float64_t * pData</div><div class="ttdoc">points to the data of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1477</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a213ab1ee2e154cc2fa30d667b1994b89"><div class="ttname"><a href="arm__math_8h.xhtml#a213ab1ee2e154cc2fa30d667b1994b89">arm_lms_norm_init_q15</a></div><div class="ttdeci">void arm_lms_norm_init_q15(arm_lms_norm_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, q15_t mu, uint32_t blockSize, uint8_t postShift)</div><div class="ttdoc">Initialization function for Q15 normalized LMS filter. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2183</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_acc8cb18a8b901b8321ab9d86491e41a3"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#acc8cb18a8b901b8321ab9d86491e41a3">arm_cfft_radix4_instance_f32::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2219</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a262d173058d6f80fdf60404ba262a8f5"><div class="ttname"><a href="arm__math_8h.xhtml#a262d173058d6f80fdf60404ba262a8f5">arm_fir_q15</a></div><div class="ttdeci">void arm_fir_q15(const arm_fir_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a59eafcdcdb52da60d37f20aec6ff4577"><div class="ttname"><a href="arm__math_8h.xhtml#a59eafcdcdb52da60d37f20aec6ff4577">arm_abs_q31</a></div><div class="ttdeci">void arm_abs_q31(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q31 vector absolute value. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_a830be89daa5a393b225048889aa045d1"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#a830be89daa5a393b225048889aa045d1">arm_fir_sparse_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state buffer array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4744</div></div>
<div class="ttc" id="group__inv__clarke_xhtml_ga2d0c60f114f095a2f27442d98781ba02"><div class="ttname"><a href="group__inv__clarke.xhtml#ga2d0c60f114f095a2f27442d98781ba02">arm_inv_clarke_q31</a></div><div class="ttdeci">static __INLINE void arm_inv_clarke_q31(q31_t Ialpha, q31_t Ibeta, q31_t *pIa, q31_t *pIb)</div><div class="ttdoc">Inverse Clarke transform for Q31 version. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5458</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_aa0d435fbcf7dedb7179d4467e9b79e9f"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#aa0d435fbcf7dedb7179d4467e9b79e9f">arm_lms_norm_instance_q15::postShift</a></div><div class="ttdeci">uint8_t postShift</div><div class="ttdoc">bit shift applied to coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4508</div></div>
<div class="ttc" id="group___bilinear_interpolate_xhtml_gaa8dffbc2a01bb7accf231384498ec85e"><div class="ttname"><a href="group___bilinear_interpolate.xhtml#gaa8dffbc2a01bb7accf231384498ec85e">arm_bilinear_interp_q15</a></div><div class="ttdeci">static __INLINE q15_t arm_bilinear_interp_q15(arm_bilinear_interp_instance_q15 *S, q31_t X, q31_t Y)</div><div class="ttdoc">Q15 bilinear interpolation. </div><div class="ttdef"><b>Definition:</b> arm_math.h:7317</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af16f490d245391ec18a42adc73d6d749"><div class="ttname"><a href="arm__math_8h.xhtml#af16f490d245391ec18a42adc73d6d749">arm_conv_fast_opt_q15</a></div><div class="ttdeci">void arm_conv_fast_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch1, q15_t *pScratch2)</div><div class="ttdoc">Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q31_xhtml"><div class="ttname"><a href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 FIR interpolator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3659</div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1844</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3a102aead6460ad9fcb0626f6b226ffb"><div class="ttname"><a href="arm__math_8h.xhtml#a3a102aead6460ad9fcb0626f6b226ffb">arm_cmplx_conj_f32</a></div><div class="ttdeci">void arm_cmplx_conj_f32(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Floating-point complex conjugate. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aed633f415a7840a66861debca2dfb96b"><div class="ttname"><a href="arm__math_8h.xhtml#aed633f415a7840a66861debca2dfb96b">arm_add_q7</a></div><div class="ttdeci">void arm_add_q7(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q7 vector addition. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_a18072cf3ef3666d588f0d49512f2b28f"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#a18072cf3ef3666d588f0d49512f2b28f">arm_fir_sparse_instance_q7::pState</a></div><div class="ttdeci">q7_t * pState</div><div class="ttdoc">points to the state buffer array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4772</div></div>
<div class="ttc" id="structarm__matrix__instance__q31_xhtml_abd161da7614eda927157f18b698074b1"><div class="ttname"><a href="structarm__matrix__instance__q31.xhtml#abd161da7614eda927157f18b698074b1">arm_matrix_instance_q31::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1499</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a55418d4362f6ba84c327f9b4f089a8c3"><div class="ttname"><a href="arm__math_8h.xhtml#a55418d4362f6ba84c327f9b4f089a8c3">arm_dot_prod_f32</a></div><div class="ttdeci">void arm_dot_prod_f32(float32_t *pSrcA, float32_t *pSrcB, uint32_t blockSize, float32_t *result)</div><div class="ttdoc">Dot product of floating-point vectors. </div></div>
<div class="ttc" id="structarm__cfft__instance__f32_xhtml_acd8f9e9540e3dd348212726e5d6aaa95"><div class="ttname"><a href="structarm__cfft__instance__f32.xhtml#acd8f9e9540e3dd348212726e5d6aaa95">arm_cfft_instance_f32::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2277</div></div>
<div class="ttc" id="arm__math_8h_xhtml_addf70be7e3f87e535c324862b501f3f9"><div class="ttname"><a href="arm__math_8h.xhtml#addf70be7e3f87e535c324862b501f3f9">arm_copy_q31</a></div><div class="ttdeci">void arm_copy_q31(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Copies the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_a557ed9d477e76e4ad2019344f19f568a"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#a557ed9d477e76e4ad2019344f19f568a">arm_fir_sparse_instance_q31::stateIndex</a></div><div class="ttdeci">uint16_t stateIndex</div><div class="ttdoc">state buffer index. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4743</div></div>
<div class="ttc" id="arm__math_8h_xhtml_afd538d68886848bc090ec2b0d364cc81"><div class="ttname"><a href="arm__math_8h.xhtml#afd538d68886848bc090ec2b0d364cc81">arm_dct4_f32</a></div><div class="ttdeci">void arm_dct4_f32(const arm_dct4_instance_f32 *S, float32_t *pState, float32_t *pInlineBuffer)</div><div class="ttdoc">Processing function for the floating-point DCT4/IDCT4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad146359b7ab526d6ebc81d8aca530f78"><div class="ttname"><a href="arm__math_8h.xhtml#ad146359b7ab526d6ebc81d8aca530f78">arm_biquad_cascade_df2T_f64</a></div><div class="ttdeci">void arm_biquad_cascade_df2T_f64(const arm_biquad_cascade_df2T_instance_f64 *S, float64_t *pSrc, float64_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q31_xhtml"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a></div><div class="ttdoc">Instance structure for the Q31 Biquad cascade filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1307</div></div>
<div class="ttc" id="arm__math_8h_xhtml_abc9fd3d37904c58df56492b351d21fb0"><div class="ttname"><a href="arm__math_8h.xhtml#abc9fd3d37904c58df56492b351d21fb0">arm_scale_q7</a></div><div class="ttdeci">void arm_scale_q7(q7_t *pSrc, q7_t scaleFract, int8_t shift, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Multiplies a Q7 vector by a scalar. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_a33a3bc774c97373261699463c05dfe54"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#a33a3bc774c97373261699463c05dfe54">arm_cfft_radix4_instance_q31::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2162</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a18e8c4a74ff1d0f88876cc63f675288f"><div class="ttname"><a href="arm__math_8h.xhtml#a18e8c4a74ff1d0f88876cc63f675288f">arm_fir_interpolate_init_q15</a></div><div class="ttdeci">arm_status arm_fir_interpolate_init_q15(arm_fir_interpolate_instance_q15 *S, uint8_t L, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q15 FIR interpolator. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a></div><div class="ttdoc">Instance structure for the Radix-2 Q31 CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2129</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad75ca978ce906e04abdf86a8d76306d4"><div class="ttname"><a href="arm__math_8h.xhtml#ad75ca978ce906e04abdf86a8d76306d4">arm_conv_fast_q15</a></div><div class="ttdeci">void arm_conv_fast_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</div><div class="ttdoc">Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__f32_xhtml"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a></div><div class="ttdoc">Instance structure for the floating-point Biquad cascade filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1319</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q15_xhtml_ad6d95e70abcf4ff1300181415ad92153"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q15.xhtml#ad6d95e70abcf4ff1300181415ad92153">arm_biquad_casd_df1_inst_q15::numStages</a></div><div class="ttdeci">int8_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1296</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q15_xhtml"><div class="ttname"><a href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 FIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3972</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a8d4bc251169f4b102355097a9f7530d6"><div class="ttname"><a href="arm__math_8h.xhtml#a8d4bc251169f4b102355097a9f7530d6">arm_lms_init_q31</a></div><div class="ttdeci">void arm_lms_init_q31(arm_lms_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, q31_t mu, uint32_t blockSize, uint32_t postShift)</div><div class="ttdoc">Initialization function for Q31 LMS filter. </div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_a7db236e22673146bb1d2c962f0713f08"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#a7db236e22673146bb1d2c962f0713f08">arm_dct4_instance_q31::pTwiddle</a></div><div class="ttdeci">q31_t * pTwiddle</div><div class="ttdoc">points to the twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2445</div></div>
<div class="ttc" id="arm__math_8h_xhtml_abecd3d7b077dbbef43f93e9e037815ed"><div class="ttname"><a href="arm__math_8h.xhtml#abecd3d7b077dbbef43f93e9e037815ed">arm_correlate_fast_q31</a></div><div class="ttdeci">void arm_correlate_fast_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</div><div class="ttdoc">Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_a2d2e65473fe3a3f2b953b4e0b60824df"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#a2d2e65473fe3a3f2b953b4e0b60824df">arm_fir_sparse_instance_q7::stateIndex</a></div><div class="ttdeci">uint16_t stateIndex</div><div class="ttdoc">state buffer index. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4771</div></div>
<div class="ttc" id="core__cm4_8h_xhtml"><div class="ttname"><a href="core__cm4_8h.xhtml">core_cm4.h</a></div><div class="ttdoc">CMSIS Cortex-M4 Core Peripheral Access Layer Header File. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a8567259fe18396dd972242c41741ebf4"><div class="ttname"><a href="arm__math_8h.xhtml#a8567259fe18396dd972242c41741ebf4">arm_conv_partial_q7</a></div><div class="ttdeci">arm_status arm_conv_partial_q7(q7_t *pSrcA, uint32_t srcALen, q7_t *pSrcB, uint32_t srcBLen, q7_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of Q7 sequences. </div></div>
<div class="ttc" id="group___linear_interpolate_xhtml_ga690e63e9a513ca0a741b1b174805d031"><div class="ttname"><a href="group___linear_interpolate.xhtml#ga690e63e9a513ca0a741b1b174805d031">arm_linear_interp_q31</a></div><div class="ttdeci">static __INLINE q31_t arm_linear_interp_q31(q31_t *pYData, q31_t x, uint32_t nValues)</div><div class="ttdoc">Process function for the Q31 Linear Interpolation Function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5856</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q7_xhtml_ac625393c84bc0342ffdf26fc4eba1ac1"><div class="ttname"><a href="structarm__fir__sparse__instance__q7.xhtml#ac625393c84bc0342ffdf26fc4eba1ac1">arm_fir_sparse_instance_q7::pTapDelay</a></div><div class="ttdeci">int32_t * pTapDelay</div><div class="ttdoc">points to the array of delay values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4775</div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_aa861d69fd398f29aa0b4b455a823ed72"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#aa861d69fd398f29aa0b4b455a823ed72">arm_pid_instance_q31::Ki</a></div><div class="ttdeci">q31_t Ki</div><div class="ttdoc">The integral gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1869</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q31_xhtml_a636c7fbe09ec4bef0bc0a4b4e2151cbe"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q31.xhtml#a636c7fbe09ec4bef0bc0a4b4e2151cbe">arm_biquad_casd_df1_inst_q31::postShift</a></div><div class="ttdeci">uint8_t postShift</div><div class="ttdoc">Additional shift, in bits, applied to each output sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1312</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_ab88afeff6493be3c8b5e4530efa82d51"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#ab88afeff6493be3c8b5e4530efa82d51">arm_cfft_radix2_instance_q15::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2079</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a44a393818cdee8dce80f2d66add25411"><div class="ttname"><a href="arm__math_8h.xhtml#a44a393818cdee8dce80f2d66add25411">arm_float_to_q7</a></div><div class="ttdeci">void arm_float_to_q7(float32_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the floating-point vector to Q7 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a04bbf64a5f9c9e57dd1efb26a768aba1"><div class="ttname"><a href="arm__math_8h.xhtml#a04bbf64a5f9c9e57dd1efb26a768aba1">arm_mat_add_f32</a></div><div class="ttdeci">arm_status arm_mat_add_f32(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point matrix addition. </div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_a3e34537c53af4f9ad7bfffa4dff27c82"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#a3e34537c53af4f9ad7bfffa4dff27c82">arm_pid_instance_q31::A2</a></div><div class="ttdeci">q31_t A2</div><div class="ttdoc">The derived gain, A2 = Kd . </div><div class="ttdef"><b>Definition:</b> arm_math.h:1866</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a44900cecb8083afcaabf905ffcd656bb"><div class="ttname"><a href="arm__math_8h.xhtml#a44900cecb8083afcaabf905ffcd656bb">arm_biquad_cas_df1_32x64_init_q31</a></div><div class="ttdeci">void arm_biquad_cas_df1_32x64_init_q31(arm_biquad_cas_df1_32x64_ins_q31 *S, uint8_t numStages, q31_t *pCoeffs, q63_t *pState, uint8_t postShift)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab09941de7dfeb247e5c29b406a435fcc"><div class="ttname"><a href="arm__math_8h.xhtml#ab09941de7dfeb247e5c29b406a435fcc">arm_sub_q7</a></div><div class="ttdeci">void arm_sub_q7(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q7 vector subtraction. </div></div>
<div class="ttc" id="structarm__fir__instance__q15_xhtml_a6d16db16a5f8f0db54938f2967244d9e"><div class="ttname"><a href="structarm__fir__instance__q15.xhtml#a6d16db16a5f8f0db54938f2967244d9e">arm_fir_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1114</div></div>
<div class="ttc" id="structarm__cfft__instance__q31_xhtml_a4406f23e8fd0bff8d555225612e2a2a8"><div class="ttname"><a href="structarm__cfft__instance__q31.xhtml#a4406f23e8fd0bff8d555225612e2a2a8">arm_cfft_instance_q31::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2259</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q15_xhtml_a4c4f57f45b223abbe2a9fb727bd2cad9"><div class="ttname"><a href="structarm__iir__lattice__instance__q15.xhtml#a4c4f57f45b223abbe2a9fb727bd2cad9">arm_iir_lattice_instance_q15::pvCoeffs</a></div><div class="ttdeci">q15_t * pvCoeffs</div><div class="ttdoc">points to the ladder coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4100</div></div>
<div class="ttc" id="arm__math_8h_xhtml_abb51285a41f511670bbff62fc0e1bf62"><div class="ttname"><a href="arm__math_8h.xhtml#abb51285a41f511670bbff62fc0e1bf62">arm_add_q15</a></div><div class="ttdeci">void arm_add_q15(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q15 vector addition. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_adc30985e33fbf96802a5a7954dece3b1"><div class="ttname"><a href="arm__math_8h.xhtml#adc30985e33fbf96802a5a7954dece3b1">arm_abs_q7</a></div><div class="ttdeci">void arm_abs_q7(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q7 vector absolute value. </div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 DCT4/IDCT4 function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2440</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7ba2d87366990ad5380439e2b4a4c0a5"><div class="ttname"><a href="arm__math_8h.xhtml#a7ba2d87366990ad5380439e2b4a4c0a5">arm_q15_to_q31</a></div><div class="ttdeci">void arm_q15_to_q31(q15_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the Q15 vector to Q31 vector. </div></div>
<div class="ttc" id="structarm__fir__instance__q15_xhtml_a0e46f93cf51bfb18b1be808be9c5bfc9"><div class="ttname"><a href="structarm__fir__instance__q15.xhtml#a0e46f93cf51bfb18b1be808be9c5bfc9">arm_fir_instance_q15::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of filter coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1112</div></div>
<div class="ttc" id="structarm__matrix__instance__f64_xhtml_a8b44d1e5003345047c4ead9e1593bf22"><div class="ttname"><a href="structarm__matrix__instance__f64.xhtml#a8b44d1e5003345047c4ead9e1593bf22">arm_matrix_instance_f64::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1475</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9c18616f56cb4d3c0889ce0b339221ca"><div class="ttname"><a href="arm__math_8h.xhtml#a9c18616f56cb4d3c0889ce0b339221ca">arm_cmplx_mult_real_f32</a></div><div class="ttdeci">void arm_cmplx_mult_real_f32(float32_t *pSrcCmplx, float32_t *pSrcReal, float32_t *pCmplxDst, uint32_t numSamples)</div><div class="ttdoc">Floating-point complex-by-real multiplication. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_aaa54ae67e5d10c6dd0d697945c638d31"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#aaa54ae67e5d10c6dd0d697945c638d31">arm_fir_sparse_instance_f32::pTapDelay</a></div><div class="ttdeci">int32_t * pTapDelay</div><div class="ttdoc">points to the array of delay values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4733</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af42a44f9b16d61e636418c83eefe577b"><div class="ttname"><a href="arm__math_8h.xhtml#af42a44f9b16d61e636418c83eefe577b">arm_biquad_cascade_df1_init_q31</a></div><div class="ttdeci">void arm_biquad_cascade_df1_init_q31(arm_biquad_casd_df1_inst_q31 *S, uint8_t numStages, q31_t *pCoeffs, q31_t *pState, int8_t postShift)</div><div class="ttdoc">Initialization function for the Q31 Biquad cascade filter. </div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_ac96579cfb28d08bb11dd2fe4c6303833"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#ac96579cfb28d08bb11dd2fe4c6303833">arm_dct4_instance_q31::pCfft</a></div><div class="ttdeci">arm_cfft_radix4_instance_q31 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2448</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a8e73b69a788e681a61bccc8959d823c5"><div class="ttname"><a href="arm__math_8h.xhtml#a8e73b69a788e681a61bccc8959d823c5">arm_biquad_cascade_df1_init_f32</a></div><div class="ttdeci">void arm_biquad_cascade_df1_init_f32(arm_biquad_casd_df1_inst_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</div><div class="ttdoc">Initialization function for the floating-point Biquad cascade filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a23a9284de5ee39406713b91d18ac8838"><div class="ttname"><a href="arm__math_8h.xhtml#a23a9284de5ee39406713b91d18ac8838">arm_fir_sparse_f32</a></div><div class="ttdeci">void arm_fir_sparse_f32(arm_fir_sparse_instance_f32 *S, float32_t *pSrc, float32_t *pDst, float32_t *pScratchIn, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point sparse FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a946b58da734f1e4e78c91fcaab4b12b6"><div class="ttname"><a href="arm__math_8h.xhtml#a946b58da734f1e4e78c91fcaab4b12b6">arm_conv_q31</a></div><div class="ttdeci">void arm_conv_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</div><div class="ttdoc">Convolution of Q31 sequences. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_a093d6227f0d1597982cd083fb126f4e0"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#a093d6227f0d1597982cd083fb126f4e0">arm_fir_sparse_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4745</div></div>
<div class="ttc" id="structarm__matrix__instance__f32_xhtml_a23f4e34d70a82c9cad7612add5640b7b"><div class="ttname"><a href="structarm__matrix__instance__f32.xhtml#a23f4e34d70a82c9cad7612add5640b7b">arm_matrix_instance_f32::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1463</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a642a29d71f7951a7f6c0b797c300b711"><div class="ttname"><a href="arm__math_8h.xhtml#a642a29d71f7951a7f6c0b797c300b711">mult32x64</a></div><div class="ttdeci">static __INLINE q63_t mult32x64(q63_t x, q31_t y)</div><div class="ttdoc">Multiplies 32 X 64 and returns 32 bit result in 2.30 format. </div><div class="ttdef"><b>Definition:</b> arm_math.h:513</div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_a61ce8c967b2e998a9c0041cca73cdef8"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#a61ce8c967b2e998a9c0041cca73cdef8">arm_dct4_instance_f32::normalize</a></div><div class="ttdeci">float32_t normalize</div><div class="ttdoc">normalizing factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2397</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a00bd9cc17c5bf905e76c91ad50886393"><div class="ttname"><a href="arm__math_8h.xhtml#a00bd9cc17c5bf905e76c91ad50886393">arm_offset_q7</a></div><div class="ttdeci">void arm_offset_q7(q7_t *pSrc, q7_t offset, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Adds a constant offset to a Q7 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_abb0ab07fd313b4d863070c3ddca51542"><div class="ttname"><a href="arm__math_8h.xhtml#abb0ab07fd313b4d863070c3ddca51542">arm_fir_lattice_q15</a></div><div class="ttdeci">void arm_fir_lattice_q15(const arm_fir_lattice_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 FIR lattice filter. </div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_a018f7860b6e070af533fb7d76c7cdc32"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#a018f7860b6e070af533fb7d76c7cdc32">arm_dct4_instance_f32::pCfft</a></div><div class="ttdeci">arm_cfft_radix4_instance_f32 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2401</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af62b1673740fc516ea64daf777b7d74a"><div class="ttname"><a href="arm__math_8h.xhtml#af62b1673740fc516ea64daf777b7d74a">arm_min_f32</a></div><div class="ttdeci">void arm_min_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Minimum value of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a053450cc600a55410ba5b5605e96245d"><div class="ttname"><a href="arm__math_8h.xhtml#a053450cc600a55410ba5b5605e96245d">arm_rfft_init_q15</a></div><div class="ttdeci">arm_status arm_rfft_init_q15(arm_rfft_instance_q15 *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</div></div>
<div class="ttc" id="structarm__biquad__cascade__stereo__df2_t__instance__f32_xhtml"><div class="ttname"><a href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point transposed direct form II Biquad cascade filter...</div><div class="ttdef"><b>Definition:</b> arm_math.h:3851</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9fadd650b802f612ae558ddaab789a6d"><div class="ttname"><a href="arm__math_8h.xhtml#a9fadd650b802f612ae558ddaab789a6d">arm_cfft_radix2_f32</a></div><div class="ttdeci">void arm_cfft_radix2_f32(const arm_cfft_radix2_instance_f32 *S, float32_t *pSrc)</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_aa4de490b3bdbd03561b76ee07901c8e3"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#aa4de490b3bdbd03561b76ee07901c8e3">arm_lms_norm_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4505</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a989dfae15235799d82f62ef9d356abb4"><div class="ttname"><a href="arm__math_8h.xhtml#a989dfae15235799d82f62ef9d356abb4">arm_offset_f32</a></div><div class="ttdeci">void arm_offset_f32(float32_t *pSrc, float32_t offset, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Adds a constant offset to a floating-point vector. </div></div>
<div class="ttc" id="structarm__cfft__instance__q31_xhtml_a8a464461649f023325ced1e10470f5d0"><div class="ttname"><a href="structarm__cfft__instance__q31.xhtml#a8a464461649f023325ced1e10470f5d0">arm_cfft_instance_q31::pBitRevTable</a></div><div class="ttdeci">const uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2261</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2418c929087c6eba719758eaae3f3300"><div class="ttname"><a href="arm__math_8h.xhtml#a2418c929087c6eba719758eaae3f3300">arm_lms_norm_f32</a></div><div class="ttdeci">void arm_lms_norm_f32(arm_lms_norm_instance_f32 *S, float32_t *pSrc, float32_t *pRef, float32_t *pOut, float32_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for floating-point normalized LMS filter. </div></div>
<div class="ttc" id="group__clarke_xhtml_ga2b4ebec76215e1277c970c269ffdbd76"><div class="ttname"><a href="group__clarke.xhtml#ga2b4ebec76215e1277c970c269ffdbd76">arm_clarke_f32</a></div><div class="ttdeci">static __INLINE void arm_clarke_f32(float32_t Ia, float32_t Ib, float32_t *pIalpha, float32_t *pIbeta)</div><div class="ttdoc">Floating-point Clarke transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5324</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aa9918ce19228b0d4f072fb84776eabc1"><div class="ttname"><a href="arm__math_8h.xhtml#aa9918ce19228b0d4f072fb84776eabc1">clip_q31_to_q7</a></div><div class="ttdeci">static __INLINE q7_t clip_q31_to_q7(q31_t x)</div><div class="ttdoc">Clips Q31 to Q7 values. </div><div class="ttdef"><b>Definition:</b> arm_math.h:492</div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_aec958fe89b164a30f38bcca9f5d96218"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#aec958fe89b164a30f38bcca9f5d96218">arm_lms_norm_instance_f32::x0</a></div><div class="ttdeci">float32_t x0</div><div class="ttdoc">saves previous input sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4401</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_a94d2fead4efa4d5eaae142bbe30b0e15"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#a94d2fead4efa4d5eaae142bbe30b0e15">arm_cfft_radix4_instance_q31::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2164</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a28aa6908d092752144413e21933dc878"><div class="ttname"><a href="arm__math_8h.xhtml#a28aa6908d092752144413e21933dc878">arm_sub_q31</a></div><div class="ttdeci">void arm_sub_q31(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q31 vector subtraction. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_a960199f1373a192366878ef279eab00f"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#a960199f1373a192366878ef279eab00f">arm_cfft_radix2_instance_q31::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2131</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_aac5cf9e825917cbb14f439e56bb86ab3"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#aac5cf9e825917cbb14f439e56bb86ab3">arm_rfft_instance_q15::fftLenReal</a></div><div class="ttdeci">uint32_t fftLenReal</div><div class="ttdoc">length of the real FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2295</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac9565e6bc7229577ecf5e090313cafd7"><div class="ttname"><a href="arm__math_8h.xhtml#ac9565e6bc7229577ecf5e090313cafd7">arm_cfft_radix2_init_f32</a></div><div class="ttdeci">arm_status arm_cfft_radix2_init_f32(arm_cfft_radix2_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae33015fda23fc44e7ead5e5ed7e8d314"><div class="ttname"><a href="arm__math_8h.xhtml#ae33015fda23fc44e7ead5e5ed7e8d314">arm_rms_q31</a></div><div class="ttdeci">void arm_rms_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</div><div class="ttdoc">Root Mean Square of the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_a0f66b126dd8b85f7467cfb01b7bc4d77"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#a0f66b126dd8b85f7467cfb01b7bc4d77">arm_fir_sparse_instance_q15::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4756</div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q15_xhtml_a38b179138d6a6c9cac4f8f79b6fd5357"><div class="ttname"><a href="structarm__fir__lattice__instance__q15.xhtml#a38b179138d6a6c9cac4f8f79b6fd5357">arm_fir_lattice_instance_q15::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of filter stages. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3974</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q31_xhtml_a04507e2b982b1dfa97b7b55752dea6b9"><div class="ttname"><a href="structarm__iir__lattice__instance__q31.xhtml#a04507e2b982b1dfa97b7b55752dea6b9">arm_iir_lattice_instance_q31::pvCoeffs</a></div><div class="ttdeci">q31_t * pvCoeffs</div><div class="ttdoc">points to the ladder coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4111</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a901dede4661365c9e7c630d3eb31c32c"><div class="ttname"><a href="arm__math_8h.xhtml#a901dede4661365c9e7c630d3eb31c32c">arm_q31_to_q15</a></div><div class="ttdeci">void arm_q31_to_q15(q31_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the Q31 vector to Q15 vector. </div></div>
<div class="ttc" id="structarm__cfft__instance__f32_xhtml_a59cc6f753f1498716e1444ac054c06de"><div class="ttname"><a href="structarm__cfft__instance__f32.xhtml#a59cc6f753f1498716e1444ac054c06de">arm_cfft_instance_f32::pTwiddle</a></div><div class="ttdeci">const float32_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2278</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a387dd8b7b87377378280978f16cdb13d"><div class="ttname"><a href="arm__math_8h.xhtml#a387dd8b7b87377378280978f16cdb13d">arm_shift_q31</a></div><div class="ttdeci">void arm_shift_q31(q31_t *pSrc, int8_t shiftBits, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Shifts the elements of a Q31 vector a specified number of bits. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aa0dbe330d763e3c1d8030b3ef12d5bdc"><div class="ttname"><a href="arm__math_8h.xhtml#aa0dbe330d763e3c1d8030b3ef12d5bdc">arm_biquad_cascade_df1_f32</a></div><div class="ttdeci">void arm_biquad_cascade_df1_f32(const arm_biquad_casd_df1_inst_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point Biquad cascade filter. </div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__f32_xhtml_af69820c37a87252c46453e4cfe120585"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__f32.xhtml#af69820c37a87252c46453e4cfe120585">arm_biquad_casd_df1_inst_f32::numStages</a></div><div class="ttdeci">uint32_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1321</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a966fd1b66a80873964533703ab5dc054"><div class="ttname"><a href="arm__math_8h.xhtml#a966fd1b66a80873964533703ab5dc054">arm_dct4_init_q15</a></div><div class="ttdeci">arm_status arm_dct4_init_q15(arm_dct4_instance_q15 *S, arm_rfft_instance_q15 *S_RFFT, arm_cfft_radix4_instance_q15 *S_CFFT, uint16_t N, uint16_t Nby2, q15_t normalize)</div><div class="ttdoc">Initialization function for the Q15 DCT4/IDCT4. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_a11cf95c1cd9dd2dd5e4b81b8f88dc208"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#a11cf95c1cd9dd2dd5e4b81b8f88dc208">arm_dct4_instance_q15::pRfft</a></div><div class="ttdeci">arm_rfft_instance_q15 * pRfft</div><div class="ttdoc">points to the real FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2494</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q15_xhtml_a5fc543e7d84ca8cb7cf6648970f21ca6"><div class="ttname"><a href="structarm__cfft__radix4__instance__q15.xhtml#a5fc543e7d84ca8cb7cf6648970f21ca6">arm_cfft_radix4_instance_q15::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2104</div></div>
<div class="ttc" id="core__cm0_8h_xhtml"><div class="ttname"><a href="core__cm0_8h.xhtml">core_cm0.h</a></div><div class="ttdoc">CMSIS Cortex-M0 Core Peripheral Access Layer Header File. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a16677275ed83ff0878da531e875c27ef"><div class="ttname"><a href="arm__math_8h.xhtml#a16677275ed83ff0878da531e875c27ef">arm_mult_q7</a></div><div class="ttdeci">void arm_mult_q7(q7_t *pSrcA, q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q7 vector multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_afb0778d27ed98a2a6f2ecb7d48cc8c75"><div class="ttname"><a href="arm__math_8h.xhtml#afb0778d27ed98a2a6f2ecb7d48cc8c75">arm_mult_q15</a></div><div class="ttdeci">void arm_mult_q15(q15_t *pSrcA, q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q15 vector multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab1283b23c96da04362a0efcdc7f23901"><div class="ttname"><a href="arm__math_8h.xhtml#ab1283b23c96da04362a0efcdc7f23901">arm_mat_inverse_f32</a></div><div class="ttdeci">arm_status arm_mat_inverse_f32(const arm_matrix_instance_f32 *src, arm_matrix_instance_f32 *dst)</div><div class="ttdoc">end of PID group </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7521769e2cf1c3d9c4656138cd2ae2ca"><div class="ttname"><a href="arm__math_8h.xhtml#a7521769e2cf1c3d9c4656138cd2ae2ca">arm_mat_scale_q15</a></div><div class="ttdeci">arm_status arm_mat_scale_q15(const arm_matrix_instance_q15 *pSrc, q15_t scaleFract, int32_t shift, arm_matrix_instance_q15 *pDst)</div><div class="ttdoc">Q15 matrix scaling. </div></div>
<div class="ttc" id="structarm__cfft__instance__q31_xhtml_af751114feb91de3ace8600e91bdd0872"><div class="ttname"><a href="structarm__cfft__instance__q31.xhtml#af751114feb91de3ace8600e91bdd0872">arm_cfft_instance_q31::pTwiddle</a></div><div class="ttdeci">const q31_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2260</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q31_xhtml_afa719433687e1936ec3403d0d32f06e6"><div class="ttname"><a href="structarm__fir__interpolate__instance__q31.xhtml#afa719433687e1936ec3403d0d32f06e6">arm_fir_interpolate_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3663</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a872ca4cfc18c680b8991ccd569a5fda0"><div class="ttname"><a href="arm__math_8h.xhtml#a872ca4cfc18c680b8991ccd569a5fda0">arm_copy_q15</a></div><div class="ttdeci">void arm_copy_q15(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Copies the elements of a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac00d53af87684cbbe135767b55e748a5"><div class="ttname"><a href="arm__math_8h.xhtml#ac00d53af87684cbbe135767b55e748a5">arm_fir_init_q31</a></div><div class="ttdeci">void arm_fir_init_q31(arm_fir_instance_q31 *S, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q31 FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a></div><div class="ttdeci">arm_status</div><div class="ttdoc">Error status returned by some functions in the library. </div><div class="ttdef"><b>Definition:</b> arm_math.h:365</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1b22f30ce1cc19bf5a5d7c9fca154d72"><div class="ttname"><a href="arm__math_8h.xhtml#a1b22f30ce1cc19bf5a5d7c9fca154d72">arm_fir_lattice_init_q15</a></div><div class="ttdeci">void arm_fir_lattice_init_q15(arm_fir_lattice_instance_q15 *S, uint16_t numStages, q15_t *pCoeffs, q15_t *pState)</div><div class="ttdoc">Initialization function for the Q15 FIR lattice filter. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_a197098140d68e89a08f7a249003a0b86"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#a197098140d68e89a08f7a249003a0b86">arm_dct4_instance_q15::normalize</a></div><div class="ttdeci">q15_t normalize</div><div class="ttdoc">normalizing factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2491</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_ad14cc1070eecf7e1926d8f67a8273182"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#ad14cc1070eecf7e1926d8f67a8273182">arm_fir_sparse_instance_q15::maxDelay</a></div><div class="ttdeci">uint16_t maxDelay</div><div class="ttdoc">maximum offset specified by the pTapDelay array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4760</div></div>
<div class="ttc" id="group___bilinear_interpolate_xhtml_gade8db9706a3ae9ad03b2750a239d2ee6"><div class="ttname"><a href="group___bilinear_interpolate.xhtml#gade8db9706a3ae9ad03b2750a239d2ee6">arm_bilinear_interp_q7</a></div><div class="ttdeci">static __INLINE q7_t arm_bilinear_interp_q7(arm_bilinear_interp_instance_q7 *S, q31_t X, q31_t Y)</div><div class="ttdoc">Q7 bilinear interpolation. </div><div class="ttdef"><b>Definition:</b> arm_math.h:7397</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_a3cb90cdc928a88b0203917dcb3dc1b71"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#a3cb90cdc928a88b0203917dcb3dc1b71">arm_rfft_instance_q31::bitReverseFlagR</a></div><div class="ttdeci">uint8_t bitReverseFlagR</div><div class="ttdoc">flag that enables (bitReverseFlagR=1) or disables (bitReverseFlagR=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2323</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q15_xhtml_aad9320284218b3aa378527ea518cf093"><div class="ttname"><a href="structarm__fir__decimate__instance__q15.xhtml#aad9320284218b3aa378527ea518cf093">arm_fir_decimate_instance_q15::M</a></div><div class="ttdeci">uint8_t M</div><div class="ttdoc">decimation factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3468</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac132856c68f4bf2a056eaad5921c7880"><div class="ttname"><a href="arm__math_8h.xhtml#ac132856c68f4bf2a056eaad5921c7880">arm_max_q15</a></div><div class="ttdeci">void arm_max_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Maximum value of a Q15 vector. </div></div>
<div class="ttc" id="structarm__cfft__instance__q15_xhtml_afdaf12ce4687cec021c5ae73d0987a3f"><div class="ttname"><a href="structarm__cfft__instance__q15.xhtml#afdaf12ce4687cec021c5ae73d0987a3f">arm_cfft_instance_q15::pTwiddle</a></div><div class="ttdeci">const q15_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2242</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q7_xhtml_af05194d691bbefb02c34bafb22ca9ef0"><div class="ttname"><a href="structarm__bilinear__interp__instance__q7.xhtml#af05194d691bbefb02c34bafb22ca9ef0">arm_bilinear_interp_instance_q7::pData</a></div><div class="ttdeci">q7_t * pData</div><div class="ttdoc">points to the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2000</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae469fac5e1df35f8bcf1b3d7c3136484"><div class="ttname"><a href="arm__math_8h.xhtml#ae469fac5e1df35f8bcf1b3d7c3136484">arm_circularRead_f32</a></div><div class="ttdeci">static __INLINE void arm_circularRead_f32(int32_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, int32_t *dst, int32_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</div><div class="ttdoc">floating-point Circular Read function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6230</div></div>
<div class="ttc" id="group___bilinear_interpolate_xhtml_ga202a033c8a2ad3678b136f93153b6d13"><div class="ttname"><a href="group___bilinear_interpolate.xhtml#ga202a033c8a2ad3678b136f93153b6d13">arm_bilinear_interp_q31</a></div><div class="ttdeci">static __INLINE q31_t arm_bilinear_interp_q31(arm_bilinear_interp_instance_q31 *S, q31_t X, q31_t Y)</div><div class="ttdoc">Q31 bilinear interpolation. </div><div class="ttdef"><b>Definition:</b> arm_math.h:7241</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q15_xhtml_a50d75b1316cee3e0dfad6dcc4c9a2954"><div class="ttname"><a href="structarm__bilinear__interp__instance__q15.xhtml#a50d75b1316cee3e0dfad6dcc4c9a2954">arm_bilinear_interp_instance_q15::pData</a></div><div class="ttdeci">q15_t * pData</div><div class="ttdoc">points to the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1989</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad065e37535ebb726750ac1545cb3fa6f"><div class="ttname"><a href="arm__math_8h.xhtml#ad065e37535ebb726750ac1545cb3fa6f">arm_min_q15</a></div><div class="ttdeci">void arm_min_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Minimum value of a Q15 vector. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__f32_xhtml_a30babe7815510219e6e3d28e6e4a5969"><div class="ttname"><a href="structarm__iir__lattice__instance__f32.xhtml#a30babe7815510219e6e3d28e6e4a5969">arm_iir_lattice_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4120</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5b731a59db062a9ad84562ef68a6c8af"><div class="ttname"><a href="arm__math_8h.xhtml#a5b731a59db062a9ad84562ef68a6c8af">arm_cmplx_dot_prod_q31</a></div><div class="ttdeci">void arm_cmplx_dot_prod_q31(q31_t *pSrcA, q31_t *pSrcB, uint32_t numSamples, q63_t *realResult, q63_t *imagResult)</div><div class="ttdoc">Q31 complex dot product. </div></div>
<div class="ttc" id="structarm__fir__sparse__instance__f32_xhtml_a57585aeca9dc8686e08df2865375a86d"><div class="ttname"><a href="structarm__fir__sparse__instance__f32.xhtml#a57585aeca9dc8686e08df2865375a86d">arm_fir_sparse_instance_f32::stateIndex</a></div><div class="ttdeci">uint16_t stateIndex</div><div class="ttdoc">state buffer index. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4729</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a12dc5d8e8892806ad70e79ca2ff9f86e"><div class="ttname"><a href="arm__math_8h.xhtml#a12dc5d8e8892806ad70e79ca2ff9f86e">arm_biquad_cascade_df2T_init_f64</a></div><div class="ttdeci">void arm_biquad_cascade_df2T_init_f64(arm_biquad_cascade_df2T_instance_f64 *S, uint8_t numStages, float64_t *pCoeffs, float64_t *pState)</div><div class="ttdoc">Initialization function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5aea1cb12fc02d9d44c8abf217eaa5c6"><div class="ttname"><a href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a></div><div class="ttdeci">int64_t q63_t</div><div class="ttdoc">64-bit fractional data type in 1.63 format. </div><div class="ttdef"><b>Definition:</b> arm_math.h:394</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1a087fa2be56e29d5ac7bb2afa590aee"><div class="ttname"><a href="arm__math_8h.xhtml#a1a087fa2be56e29d5ac7bb2afa590aee">arm_sin_cos_f32</a></div><div class="ttdeci">void arm_sin_cos_f32(float32_t theta, float32_t *pSinVal, float32_t *pCcosVal)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac8b72fb70246ccfee3b372002345732c"><div class="ttname"><a href="arm__math_8h.xhtml#ac8b72fb70246ccfee3b372002345732c">arm_mat_sub_f32</a></div><div class="ttdeci">arm_status arm_mat_sub_f32(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point matrix subtraction. </div></div>
<div class="ttc" id="structarm__dct4__instance__f32_xhtml_a262b29a51c371b46efc89120e31ccf37"><div class="ttname"><a href="structarm__dct4__instance__f32.xhtml#a262b29a51c371b46efc89120e31ccf37">arm_dct4_instance_f32::N</a></div><div class="ttdeci">uint16_t N</div><div class="ttdoc">length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2395</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q31_xhtml"><div class="ttname"><a href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 IIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4106</div></div>
<div class="ttc" id="structarm__matrix__instance__f64_xhtml_ab0f0399aff3201880e2d8a447de9a7ee"><div class="ttname"><a href="structarm__matrix__instance__f64.xhtml#ab0f0399aff3201880e2d8a447de9a7ee">arm_matrix_instance_f64::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1476</div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml_abc6c847e9f906781e1d5da40e9aafa76"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml#abc6c847e9f906781e1d5da40e9aafa76">arm_dct4_instance_q15::pTwiddle</a></div><div class="ttdeci">q15_t * pTwiddle</div><div class="ttdoc">points to the twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2492</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a0239a833d72cf00290b9723c394e5042"><div class="ttname"><a href="arm__math_8h.xhtml#a0239a833d72cf00290b9723c394e5042">arm_negate_q15</a></div><div class="ttdeci">void arm_negate_q15(q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Negates the elements of a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_aed3b0230bb77439dc902daa625985e04"><div class="ttname"><a href="arm__math_8h.xhtml#aed3b0230bb77439dc902daa625985e04">arm_iir_lattice_init_f32</a></div><div class="ttdeci">void arm_iir_lattice_init_f32(arm_iir_lattice_instance_f32 *S, uint16_t numStages, float32_t *pkCoeffs, float32_t *pvCoeffs, float32_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the floating-point IIR lattice filter. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_ac1688dafa5177f6b1505abbfd0cf8b21"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#ac1688dafa5177f6b1505abbfd0cf8b21">arm_cfft_radix2_instance_f32::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2191</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a27b0c54da702713976e5202d20b4473f"><div class="ttname"><a href="arm__math_8h.xhtml#a27b0c54da702713976e5202d20b4473f">arm_biquad_cascade_df1_q31</a></div><div class="ttdeci">void arm_biquad_cascade_df1_q31(const arm_biquad_casd_df1_inst_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 Biquad cascade filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad9d88485234fa9460b1ce9e64989ac86"><div class="ttname"><a href="arm__math_8h.xhtml#ad9d88485234fa9460b1ce9e64989ac86">arm_pid_init_q31</a></div><div class="ttdeci">void arm_pid_init_q31(arm_pid_instance_q31 *S, int32_t resetStateFlag)</div><div class="ttdoc">Initialization function for the Q31 PID Control. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_a9ee7a45f4f315d7996a969e25fdc7146"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#a9ee7a45f4f315d7996a969e25fdc7146">arm_lms_norm_instance_q15::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">Number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4504</div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_a32d3268ba4629908dba056599f0a904d"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#a32d3268ba4629908dba056599f0a904d">arm_dct4_instance_q31::Nby2</a></div><div class="ttdeci">uint16_t Nby2</div><div class="ttdoc">half of the length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2443</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a39495e74f96116178be085c9dc7742f5"><div class="ttname"><a href="arm__math_8h.xhtml#a39495e74f96116178be085c9dc7742f5">arm_std_q31</a></div><div class="ttdeci">void arm_std_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult)</div><div class="ttdoc">Standard deviation of the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_a874085647351dcf3f0de39d2b1d49744"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#a874085647351dcf3f0de39d2b1d49744">arm_cfft_radix2_instance_q15::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2075</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a8d66cdac41b8bf6cefdb895456eee84a"><div class="ttname"><a href="arm__math_8h.xhtml#a8d66cdac41b8bf6cefdb895456eee84a">arm_cfft_radix4_q15</a></div><div class="ttdeci">void arm_cfft_radix4_q15(const arm_cfft_radix4_instance_q15 *S, q15_t *pSrc)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a114cb9635059f678df291fcc887aaf2b"><div class="ttname"><a href="arm__math_8h.xhtml#a114cb9635059f678df291fcc887aaf2b">arm_dct4_q15</a></div><div class="ttdeci">void arm_dct4_q15(const arm_dct4_instance_q15 *S, q15_t *pState, q15_t *pInlineBuffer)</div><div class="ttdoc">Processing function for the Q15 DCT4/IDCT4. </div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1862</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a31c91a0bf0962327ef8f626fae68ea32"><div class="ttname"><a href="arm__math_8h.xhtml#a31c91a0bf0962327ef8f626fae68ea32">arm_fir_q7</a></div><div class="ttdeci">void arm_fir_q7(const arm_fir_instance_q7 *S, q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q7 FIR filter. </div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f32_xhtml_a24d223addfd926a7177088cf2efe76b1"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#a24d223addfd926a7177088cf2efe76b1">arm_biquad_cascade_df2T_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3841</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3f434c9a5d3b4e68061feac0714ea2ac"><div class="ttname"><a href="arm__math_8h.xhtml#a3f434c9a5d3b4e68061feac0714ea2ac">arm_fir_decimate_fast_q15</a></div><div class="ttdeci">void arm_fir_decimate_fast_q15(const arm_fir_decimate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a08f37d93a5bfef0c5000dc5e0a411f93"><div class="ttname"><a href="arm__math_8h.xhtml#a08f37d93a5bfef0c5000dc5e0a411f93">arm_mat_mult_fast_q15</a></div><div class="ttdeci">arm_status arm_mat_mult_fast_q15(const arm_matrix_instance_q15 *pSrcA, const arm_matrix_instance_q15 *pSrcB, arm_matrix_instance_q15 *pDst, q15_t *pState)</div><div class="ttdoc">Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q15_xhtml"><div class="ttname"><a href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 FIR interpolator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3647</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af336459f684f0b17bfae539ef1b1b78a"><div class="ttname"><a href="arm__math_8h.xhtml#af336459f684f0b17bfae539ef1b1b78a">arm_cfft_radix4_init_f32</a></div><div class="ttdeci">arm_status arm_cfft_radix4_init_f32(arm_cfft_radix4_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a393f26c5a3bfa05624fb8d32232a6d96"><div class="ttname"><a href="arm__math_8h.xhtml#a393f26c5a3bfa05624fb8d32232a6d96">arm_var_f32</a></div><div class="ttdeci">void arm_var_f32(float32_t *pSrc, uint32_t blockSize, float32_t *pResult)</div><div class="ttdoc">Variance of the elements of a floating-point vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac7d35e9472e49ccd88800f37f3476bd3"><div class="ttname"><a href="arm__math_8h.xhtml#ac7d35e9472e49ccd88800f37f3476bd3">arm_fir_fast_q15</a></div><div class="ttdeci">void arm_fir_fast_q15(const arm_fir_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3c18cc3d0548a410c577f1bead9582b7"><div class="ttname"><a href="arm__math_8h.xhtml#a3c18cc3d0548a410c577f1bead9582b7">arm_fir_decimate_fast_q31</a></div><div class="ttdeci">void arm_fir_decimate_fast_q31(arm_fir_decimate_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__lms__instance__f32_xhtml"><div class="ttname"><a href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4235</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a180d8b764d59cbb85d37a2d5f7cd9799"><div class="ttname"><a href="arm__math_8h.xhtml#a180d8b764d59cbb85d37a2d5f7cd9799">arm_rfft_fast_f32</a></div><div class="ttdeci">void arm_rfft_fast_f32(arm_rfft_fast_instance_f32 *S, float32_t *p, float32_t *pOut, uint8_t ifftFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7128775e99817c183a7d7ad34e8b6e05"><div class="ttname"><a href="arm__math_8h.xhtml#a7128775e99817c183a7d7ad34e8b6e05">arm_lms_norm_q31</a></div><div class="ttdeci">void arm_lms_norm_q31(arm_lms_norm_instance_q31 *S, q31_t *pSrc, q31_t *pRef, q31_t *pOut, q31_t *pErr, uint32_t blockSize)</div><div class="ttdoc">Processing function for Q31 normalized LMS filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_abc02597fc3f01033daf43ec0547a2f78"><div class="ttname"><a href="arm__math_8h.xhtml#abc02597fc3f01033daf43ec0547a2f78">arm_q7_to_q15</a></div><div class="ttdeci">void arm_q7_to_q15(q7_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">end of inv_clarke group </div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__f32_xhtml_a8c245d79e0d8cfabc82409d4b54fb682"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__f32.xhtml#a8c245d79e0d8cfabc82409d4b54fb682">arm_biquad_casd_df1_inst_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">Points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1322</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a436d5bed28a4b73b24acbde436a3044b"><div class="ttname"><a href="arm__math_8h.xhtml#a436d5bed28a4b73b24acbde436a3044b">arm_dot_prod_q15</a></div><div class="ttdeci">void arm_dot_prod_q15(q15_t *pSrcA, q15_t *pSrcB, uint32_t blockSize, q63_t *result)</div><div class="ttdoc">Dot product of Q15 vectors. </div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml_a4afe56e991a5416adfd462aa88bda500"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml#a4afe56e991a5416adfd462aa88bda500">arm_lms_instance_q31::pCoeffs</a></div><div class="ttdeci">q31_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4344</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a521f670cd9c571bc61aff9bec89f4c26"><div class="ttname"><a href="arm__math_8h.xhtml#a521f670cd9c571bc61aff9bec89f4c26">arm_cfft_radix4_f32</a></div><div class="ttdeci">void arm_cfft_radix4_f32(const arm_cfft_radix4_instance_f32 *S, float32_t *pSrc)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_adcfaf567a25eb641da4043eafb9bb076"><div class="ttname"><a href="arm__math_8h.xhtml#adcfaf567a25eb641da4043eafb9bb076">arm_cmplx_dot_prod_f32</a></div><div class="ttdeci">void arm_cmplx_dot_prod_f32(float32_t *pSrcA, float32_t *pSrcB, uint32_t numSamples, float32_t *realResult, float32_t *imagResult)</div><div class="ttdoc">Floating-point complex dot product. </div></div>
<div class="ttc" id="structarm__fir__lattice__instance__q15_xhtml_a78f872826140069cf67836fff87360bc"><div class="ttname"><a href="structarm__fir__lattice__instance__q15.xhtml#a78f872826140069cf67836fff87360bc">arm_fir_lattice_instance_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3976</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__f32_xhtml_ae6f94dcc0ccd8aa4bc699b20985d9df5"><div class="ttname"><a href="structarm__fir__interpolate__instance__f32.xhtml#ae6f94dcc0ccd8aa4bc699b20985d9df5">arm_fir_interpolate_instance_f32::L</a></div><div class="ttdeci">uint8_t L</div><div class="ttdoc">upsample factor. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3673</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad80f121949ef885a77d83ab36e002567"><div class="ttname"><a href="arm__math_8h.xhtml#ad80f121949ef885a77d83ab36e002567">arm_cos_q31</a></div><div class="ttdeci">q31_t arm_cos_q31(q31_t x)</div><div class="ttdoc">Fast approximation to the trigonometric cosine function for Q31 data. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a70eaddf317a4a8bde6bd6a97df67fedd"><div class="ttname"><a href="arm__math_8h.xhtml#a70eaddf317a4a8bde6bd6a97df67fedd">arm_biquad_cascade_df2T_init_f32</a></div><div class="ttdeci">void arm_biquad_cascade_df2T_init_f32(arm_biquad_cascade_df2T_instance_f32 *S, uint8_t numStages, float32_t *pCoeffs, float32_t *pState)</div><div class="ttdoc">Initialization function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a6321f703ec87a274aedaab33d3e766b4"><div class="ttname"><a href="arm__math_8h.xhtml#a6321f703ec87a274aedaab33d3e766b4">arm_cfft_radix2_q31</a></div><div class="ttdeci">void arm_cfft_radix2_q31(const arm_cfft_radix2_instance_q31 *S, q31_t *pSrc)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af5b836b72dda9e5dfbbd17c7906fd13f"><div class="ttname"><a href="arm__math_8h.xhtml#af5b836b72dda9e5dfbbd17c7906fd13f">arm_rms_q15</a></div><div class="ttdeci">void arm_rms_q15(q15_t *pSrc, uint32_t blockSize, q15_t *pResult)</div><div class="ttdoc">Root Mean Square of the elements of a Q15 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7d9d7d81a0832a17b831aad1e4a5dc16"><div class="ttname"><a href="arm__math_8h.xhtml#a7d9d7d81a0832a17b831aad1e4a5dc16">arm_mat_add_q31</a></div><div class="ttdeci">arm_status arm_mat_add_q31(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix addition. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q31_xhtml_ad3dd2a2406e02fdaa7782ba6c3940a64"><div class="ttname"><a href="structarm__lms__norm__instance__q31.xhtml#ad3dd2a2406e02fdaa7782ba6c3940a64">arm_lms_norm_instance_q31::mu</a></div><div class="ttdeci">q31_t mu</div><div class="ttdoc">step size that controls filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4451</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q31_xhtml_a0ef0ef9e265f7ab873cfc6daa7593fdb"><div class="ttname"><a href="structarm__fir__decimate__instance__q31.xhtml#a0ef0ef9e265f7ab873cfc6daa7593fdb">arm_fir_decimate_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3483</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point RFFT/RIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2345</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2784c6887686a73dc7c364e2e41c776c"><div class="ttname"><a href="arm__math_8h.xhtml#a2784c6887686a73dc7c364e2e41c776c">arm_negate_q31</a></div><div class="ttdeci">void arm_negate_q31(q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Negates the elements of a Q31 vector. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_af713b4ac5256a19bc965c89fe3005fa3"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#af713b4ac5256a19bc965c89fe3005fa3">arm_cfft_radix2_instance_f32::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2187</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a30aa80ea20abe71f3afa99f2f0391ed5"><div class="ttname"><a href="arm__math_8h.xhtml#a30aa80ea20abe71f3afa99f2f0391ed5">arm_circularRead_q7</a></div><div class="ttdeci">static __INLINE void arm_circularRead_q7(q7_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, q7_t *dst, q7_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</div><div class="ttdoc">Q7 Circular Read function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6432</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_a98b92b0f5208110129b9a67b1db90408"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#a98b92b0f5208110129b9a67b1db90408">arm_fir_sparse_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state buffer array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4758</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1c66e370a6ae91aaafbaec5e979198d7"><div class="ttname"><a href="arm__math_8h.xhtml#a1c66e370a6ae91aaafbaec5e979198d7">arm_recip_q15</a></div><div class="ttdeci">static __INLINE uint32_t arm_recip_q15(q15_t in, q15_t *dst, q15_t *pRecipTable)</div><div class="ttdoc">Function to Calculates 1/in (reciprocal) value of Q15 Data type. </div><div class="ttdef"><b>Definition:</b> arm_math.h:606</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__f32_xhtml"><div class="ttname"><a href="structarm__bilinear__interp__instance__f32.xhtml">arm_bilinear_interp_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point bilinear interpolation function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1963</div></div>
<div class="ttc" id="arm__math_8h_xhtml_afde3ee1f58cf393b45a9073174fff548"><div class="ttname"><a href="arm__math_8h.xhtml#afde3ee1f58cf393b45a9073174fff548">arm_cfft_radix4_q31</a></div><div class="ttdeci">void arm_cfft_radix4_q31(const arm_cfft_radix4_instance_q31 *S, q31_t *pSrc)</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_af777b0cadd5abaf064323692c2e6693b"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#af777b0cadd5abaf064323692c2e6693b">arm_rfft_instance_q31::fftLenReal</a></div><div class="ttdeci">uint32_t fftLenReal</div><div class="ttdoc">length of the real FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2321</div></div>
<div class="ttc" id="structarm__lms__instance__f32_xhtml_a4795c6f7d3f17cec15c2fd09f66edd1a"><div class="ttname"><a href="structarm__lms__instance__f32.xhtml#a4795c6f7d3f17cec15c2fd09f66edd1a">arm_lms_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4239</div></div>
<div class="ttc" id="structarm__fir__instance__q7_xhtml_a9b50840e2c5ef5b17e1a584fb4cf0d06"><div class="ttname"><a href="structarm__fir__instance__q7.xhtml#a9b50840e2c5ef5b17e1a584fb4cf0d06">arm_fir_instance_q7::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of filter coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1102</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_a7e6a6d290ce158ce9a15a45e364b021a"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#a7e6a6d290ce158ce9a15a45e364b021a">arm_cfft_radix4_instance_f32::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2213</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5abde938abbe72e95c5bab080eb33c45"><div class="ttname"><a href="arm__math_8h.xhtml#a5abde938abbe72e95c5bab080eb33c45">arm_rfft_init_q31</a></div><div class="ttdeci">arm_status arm_rfft_init_q31(arm_rfft_instance_q31 *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</div></div>
<div class="ttc" id="structarm__biquad__cascade__stereo__df2_t__instance__f32_xhtml_a2cb00048bb1fe957a03c1ff56dfaf8f0"><div class="ttname"><a href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#a2cb00048bb1fe957a03c1ff56dfaf8f0">arm_biquad_cascade_stereo_df2T_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3854</div></div>
<div class="ttc" id="arm__math_8h_xhtml_add66a0aefdc645031d607b0a5b37a942"><div class="ttname"><a href="arm__math_8h.xhtml#add66a0aefdc645031d607b0a5b37a942">arm_biquad_cascade_df1_q15</a></div><div class="ttdeci">void arm_biquad_cascade_df1_q15(const arm_biquad_casd_df1_inst_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 Biquad cascade filter. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_ab9eed39e40b8d7c16381fbccf84467cd"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#ab9eed39e40b8d7c16381fbccf84467cd">arm_cfft_radix4_instance_f32::onebyfftLen</a></div><div class="ttdeci">float32_t onebyfftLen</div><div class="ttdoc">value of 1/fftLen. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2220</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q31_xhtml_a07b6c01e58ec6dde384719130d36b0dc"><div class="ttname"><a href="structarm__fir__sparse__instance__q31.xhtml#a07b6c01e58ec6dde384719130d36b0dc">arm_fir_sparse_instance_q31::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4742</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab20faeceb5ff5d2d9dd628c2ecf41303"><div class="ttname"><a href="arm__math_8h.xhtml#ab20faeceb5ff5d2d9dd628c2ecf41303">arm_min_q31</a></div><div class="ttdeci">void arm_min_q31(q31_t *pSrc, uint32_t blockSize, q31_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Minimum value of a Q31 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_acf407b007a37da18e99dabd9023c56b4"><div class="ttname"><a href="arm__math_8h.xhtml#acf407b007a37da18e99dabd9023c56b4">arm_q31_to_float</a></div><div class="ttdeci">void arm_q31_to_float(q31_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">end of Inverse park group </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5a0008bd997ab6e2e299ef2fb272fb4b"><div class="ttname"><a href="arm__math_8h.xhtml#a5a0008bd997ab6e2e299ef2fb272fb4b">arm_cfft_q31</a></div><div class="ttdeci">void arm_cfft_q31(const arm_cfft_instance_q31 *S, q31_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a953a83e69685de6575cff37feb358a93"><div class="ttname"><a href="arm__math_8h.xhtml#a953a83e69685de6575cff37feb358a93">arm_biquad_cas_df1_32x64_q31</a></div><div class="ttdeci">void arm_biquad_cas_df1_32x64_q31(const arm_biquad_cas_df1_32x64_ins_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aadd938c68ab08967cbb5fc696f384bb5"><div class="ttname"><a href="arm__math_8h.xhtml#aadd938c68ab08967cbb5fc696f384bb5">arm_fir_q31</a></div><div class="ttdeci">void arm_fir_q31(const arm_fir_instance_q31 *S, q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q31 FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ab8bef6d0f6a26fdbfce9485727713ce5"><div class="ttname"><a href="arm__math_8h.xhtml#ab8bef6d0f6a26fdbfce9485727713ce5">arm_fir_decimate_q15</a></div><div class="ttdeci">void arm_fir_decimate_q15(const arm_fir_decimate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 FIR decimator. </div></div>
<div class="ttc" id="structarm__dct4__instance__q15_xhtml"><div class="ttname"><a href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 DCT4/IDCT4 function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2487</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a917bf0270310c1d3f0eda1fc7c0026a0"><div class="ttname"><a href="arm__math_8h.xhtml#a917bf0270310c1d3f0eda1fc7c0026a0">arm_mat_mult_f32</a></div><div class="ttdeci">arm_status arm_mat_mult_f32(const arm_matrix_instance_f32 *pSrcA, const arm_matrix_instance_f32 *pSrcB, arm_matrix_instance_f32 *pDst)</div><div class="ttdoc">Floating-point matrix multiplication. </div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point CFFT/CIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2211</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_a6fc90252b579f7c29e01bd279334fc43"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#a6fc90252b579f7c29e01bd279334fc43">arm_rfft_instance_q31::twidCoefRModifier</a></div><div class="ttdeci">uint32_t twidCoefRModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2324</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_ada8e5264f4b22ff4c621817978994674"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#ada8e5264f4b22ff4c621817978994674">arm_cfft_radix2_instance_q31::pBitRevTable</a></div><div class="ttdeci">uint16_t * pBitRevTable</div><div class="ttdoc">points to the bit reversal table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2135</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9d0ba38ce9f12a850dd242731d307476"><div class="ttname"><a href="arm__math_8h.xhtml#a9d0ba38ce9f12a850dd242731d307476">arm_fir_interpolate_init_q31</a></div><div class="ttdeci">arm_status arm_fir_interpolate_init_q31(arm_fir_interpolate_instance_q31 *S, uint8_t L, uint16_t numTaps, q31_t *pCoeffs, q31_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q31 FIR interpolator. </div></div>
<div class="ttc" id="structarm__pid__instance__q15_xhtml_ad77f3a2823c7f96de42c92a3fbf3246b"><div class="ttname"><a href="structarm__pid__instance__q15.xhtml#ad77f3a2823c7f96de42c92a3fbf3246b">arm_pid_instance_q15::A0</a></div><div class="ttdeci">q15_t A0</div><div class="ttdoc">The derived gain, A0 = Kp + Ki + Kd . </div><div class="ttdef"><b>Definition:</b> arm_math.h:1846</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ade0f9c4ff157b6b9c72a1eafd86ebf80"><div class="ttname"><a href="arm__math_8h.xhtml#ade0f9c4ff157b6b9c72a1eafd86ebf80">arm_cfft_f32</a></div><div class="ttdeci">void arm_cfft_f32(const arm_cfft_instance_f32 *S, float32_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ac7ccbaea863882056eee815456464670"><div class="ttname"><a href="arm__math_8h.xhtml#ac7ccbaea863882056eee815456464670">arm_lms_norm_init_f32</a></div><div class="ttdeci">void arm_lms_norm_init_f32(arm_lms_norm_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, float32_t mu, uint32_t blockSize)</div><div class="ttdoc">Initialization function for floating-point normalized LMS filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a467579beda492aa92797529d794c88fb"><div class="ttname"><a href="arm__math_8h.xhtml#a467579beda492aa92797529d794c88fb">arm_copy_q7</a></div><div class="ttdeci">void arm_copy_q7(q7_t *pSrc, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Copies the elements of a Q7 vector. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_a1c81ded399919d8181026bc1c8602e7b"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#a1c81ded399919d8181026bc1c8602e7b">arm_lms_norm_instance_q15::energy</a></div><div class="ttdeci">q15_t energy</div><div class="ttdoc">saves previous frame energy. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4510</div></div>
<div class="ttc" id="structarm__rfft__instance__q15_xhtml_a4329c15b056444746d37ff082a24d31a"><div class="ttname"><a href="structarm__rfft__instance__q15.xhtml#a4329c15b056444746d37ff082a24d31a">arm_rfft_instance_q15::pCfft</a></div><div class="ttdeci">const arm_cfft_instance_q15 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2301</div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_ac2410bf7f856d58dc1d773d4983cac8e"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#ac2410bf7f856d58dc1d773d4983cac8e">arm_pid_instance_q31::Kp</a></div><div class="ttdeci">q31_t Kp</div><div class="ttdoc">The proportional gain. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1868</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q15_xhtml_a96fbed313bef01070409fa182d26ba3f"><div class="ttname"><a href="structarm__iir__lattice__instance__q15.xhtml#a96fbed313bef01070409fa182d26ba3f">arm_iir_lattice_instance_q15::numStages</a></div><div class="ttdeci">uint16_t numStages</div><div class="ttdoc">number of stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4097</div></div>
<div class="ttc" id="structarm__biquad__cas__df1__32x64__ins__q31_xhtml_ad7cb9a9f5df8f4fcfc7a0b633672e574"><div class="ttname"><a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#ad7cb9a9f5df8f4fcfc7a0b633672e574">arm_biquad_cas_df1_32x64_ins_q31::numStages</a></div><div class="ttdeci">uint8_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3793</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aa7faccc0d96b061d8b7d0d7d82045074"><div class="ttname"><a href="arm__math_8h.xhtml#aa7faccc0d96b061d8b7d0d7d82045074">arm_cmplx_mag_squared_f32</a></div><div class="ttdeci">void arm_cmplx_mag_squared_f32(float32_t *pSrc, float32_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Floating-point complex magnitude squared. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_a2607378ce64be16698bb8a3b1af8d3c8"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#a2607378ce64be16698bb8a3b1af8d3c8">arm_cfft_radix2_instance_q31::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2132</div></div>
<div class="ttc" id="structarm__rfft__fast__instance__f32_xhtml_a9f30b04f163fabc1b24421d3c323d5fc"><div class="ttname"><a href="structarm__rfft__fast__instance__f32.xhtml#a9f30b04f163fabc1b24421d3c323d5fc">arm_rfft_fast_instance_f32::pTwiddleRFFT</a></div><div class="ttdeci">float32_t * pTwiddleRFFT</div><div class="ttdoc">Twiddle factors real stage. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2377</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q15_xhtml_ac1e9844488ec717da334fbd4c4f41990"><div class="ttname"><a href="structarm__fir__decimate__instance__q15.xhtml#ac1e9844488ec717da334fbd4c4f41990">arm_fir_decimate_instance_q15::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3469</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aeff8ab405c3db567ae26344ec7539911"><div class="ttname"><a href="arm__math_8h.xhtml#aeff8ab405c3db567ae26344ec7539911">arm_biquad_cascade_stereo_df2T_f32</a></div><div class="ttdeci">void arm_biquad_cascade_stereo_df2T_f32(const arm_biquad_cascade_stereo_df2T_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point transposed direct form II Biquad cascade filter...</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae9e4ddebff9d4eb5d0a093e28e0bc504"><div class="ttname"><a href="arm__math_8h.xhtml#ae9e4ddebff9d4eb5d0a093e28e0bc504">arm_sin_cos_q31</a></div><div class="ttdeci">void arm_sin_cos_q31(q31_t theta, q31_t *pSinVal, q31_t *pCosVal)</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q31_xhtml_a5dcf4727f58eb4e8e8b392508d8657bb"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q31.xhtml#a5dcf4727f58eb4e8e8b392508d8657bb">arm_biquad_casd_df1_inst_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">Points to the array of state coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1310</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aeb9e9599a288832ed123183eaa8b294a"><div class="ttname"><a href="arm__math_8h.xhtml#aeb9e9599a288832ed123183eaa8b294a">arm_iir_lattice_q15</a></div><div class="ttdeci">void arm_iir_lattice_q15(const arm_iir_lattice_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 IIR lattice filter. </div></div>
<div class="ttc" id="structarm__lms__norm__instance__f32_xhtml_a6a4119e4f39447bbee31b066deafa16f"><div class="ttname"><a href="structarm__lms__norm__instance__f32.xhtml#a6a4119e4f39447bbee31b066deafa16f">arm_lms_norm_instance_f32::energy</a></div><div class="ttdeci">float32_t energy</div><div class="ttdoc">saves previous frame energy. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4400</div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml_a4705a8f0011bb9166e09bf5bd51e595e"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml#a4705a8f0011bb9166e09bf5bd51e595e">arm_lms_instance_q31::postShift</a></div><div class="ttdeci">uint32_t postShift</div><div class="ttdoc">bit shift applied to coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4346</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_adc0a62ba669ad2282ecbe43d5d96abab"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#adc0a62ba669ad2282ecbe43d5d96abab">arm_cfft_radix4_instance_q31::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2159</div></div>
<div class="ttc" id="structarm__matrix__instance__f32_xhtml_acdd1fb73734df68b89565c54f1dd8ae2"><div class="ttname"><a href="structarm__matrix__instance__f32.xhtml#acdd1fb73734df68b89565c54f1dd8ae2">arm_matrix_instance_f32::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns of the matrix. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1464</div></div>
<div class="ttc" id="structarm__rfft__instance__f32_xhtml_a5ee6d10a934ab4b666e0bb286c3d633f"><div class="ttname"><a href="structarm__rfft__instance__f32.xhtml#a5ee6d10a934ab4b666e0bb286c3d633f">arm_rfft_instance_f32::ifftFlagR</a></div><div class="ttdeci">uint8_t ifftFlagR</div><div class="ttdoc">flag that selects forward (ifftFlagR=0) or inverse (ifftFlagR=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2349</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q15_xhtml_a26b864363fa47954248f2590e3a82a3c"><div class="ttname"><a href="structarm__fir__interpolate__instance__q15.xhtml#a26b864363fa47954248f2590e3a82a3c">arm_fir_interpolate_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3652</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__f32_xhtml_a2aa2986129db8affef03ede88dd45a03"><div class="ttname"><a href="structarm__fir__decimate__instance__f32.xhtml#a2aa2986129db8affef03ede88dd45a03">arm_fir_decimate_instance_f32::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3494</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_a1d3d289d47443e597d88a40effd14b8f"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#a1d3d289d47443e597d88a40effd14b8f">arm_cfft_radix2_instance_f32::onebyfftLen</a></div><div class="ttdeci">float32_t onebyfftLen</div><div class="ttdoc">value of 1/fftLen. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2192</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_adb0c9d47dbfbd90a6f6ed0a05313a974"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#adb0c9d47dbfbd90a6f6ed0a05313a974">arm_cfft_radix2_instance_f32::pTwiddle</a></div><div class="ttdeci">float32_t * pTwiddle</div><div class="ttdoc">points to the Twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2188</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3ba2d215477e692def7fda46dda883ed"><div class="ttname"><a href="arm__math_8h.xhtml#a3ba2d215477e692def7fda46dda883ed">arm_circularWrite_q15</a></div><div class="ttdeci">static __INLINE void arm_circularWrite_q15(q15_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const q15_t *src, int32_t srcInc, uint32_t blockSize)</div><div class="ttdoc">Q15 Circular write function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6285</div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_af1487dab5e7963b85dc0fdc6bf492542"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#af1487dab5e7963b85dc0fdc6bf492542">arm_dct4_instance_q31::pRfft</a></div><div class="ttdeci">arm_rfft_instance_q31 * pRfft</div><div class="ttdoc">points to the real FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2447</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a7962b5f9636e54899f75d0c5936800b5"><div class="ttname"><a href="arm__math_8h.xhtml#a7962b5f9636e54899f75d0c5936800b5">arm_fir_interpolate_q15</a></div><div class="ttdeci">void arm_fir_interpolate_q15(const arm_fir_interpolate_instance_q15 *S, q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 FIR interpolator. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b"><div class="ttname"><a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b">ARM_MATH_SIZE_MISMATCH</a></div><div class="ttdoc">Size of matrices is not compatible with the operation. </div><div class="ttdef"><b>Definition:</b> arm_math.h:370</div></div>
<div class="ttc" id="arm__math_8h_xhtml_accd6a89b0ff7a94df64610598e6e6893"><div class="ttname"><a href="arm__math_8h.xhtml#accd6a89b0ff7a94df64610598e6e6893">arm_conv_q15</a></div><div class="ttdeci">void arm_conv_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst)</div><div class="ttdoc">Convolution of Q15 sequences. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3528c0f54a0607acc603f0490d3ca6c6"><div class="ttname"><a href="arm__math_8h.xhtml#a3528c0f54a0607acc603f0490d3ca6c6">arm_mult_q31</a></div><div class="ttdeci">void arm_mult_q31(q31_t *pSrcA, q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Q31 vector multiplication. </div></div>
<div class="ttc" id="structarm__fir__decimate__instance__q15_xhtml"><div class="ttname"><a href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 FIR decimator. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3466</div></div>
<div class="ttc" id="group___s_q_r_t_xhtml_ga5abe5ca724f3e15849662b03752c1238"><div class="ttname"><a href="group___s_q_r_t.xhtml#ga5abe5ca724f3e15849662b03752c1238">arm_sqrt_q15</a></div><div class="ttdeci">arm_status arm_sqrt_q15(q15_t in, q15_t *pOut)</div><div class="ttdoc">Q15 square root function. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a3bd8889dcb45980e1d3e53344df54e85"><div class="ttname"><a href="arm__math_8h.xhtml#a3bd8889dcb45980e1d3e53344df54e85">arm_cmplx_mult_real_q15</a></div><div class="ttdeci">void arm_cmplx_mult_real_q15(q15_t *pSrcCmplx, q15_t *pSrcReal, q15_t *pCmplxDst, uint32_t numSamples)</div><div class="ttdoc">Q15 complex-by-real multiplication. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_addba85b1f7fbd472fd00ddd9ce43aea8"><div class="ttname"><a href="arm__math_8h.xhtml#addba85b1f7fbd472fd00ddd9ce43aea8">arm_circularWrite_q7</a></div><div class="ttdeci">static __INLINE void arm_circularWrite_q7(q7_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const q7_t *src, int32_t srcInc, uint32_t blockSize)</div><div class="ttdoc">Q7 Circular write function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6387</div></div>
<div class="ttc" id="structarm__fir__decimate__instance__f32_xhtml_a5bddf29aaaf2011d2e3bcec59a83f633"><div class="ttname"><a href="structarm__fir__decimate__instance__f32.xhtml#a5bddf29aaaf2011d2e3bcec59a83f633">arm_fir_decimate_instance_f32::pState</a></div><div class="ttdeci">float32_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3496</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_a5a7c4f4c7b3fb655cbb2bc11ef160a2a"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#a5a7c4f4c7b3fb655cbb2bc11ef160a2a">arm_cfft_radix4_instance_q31::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2160</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__f32_xhtml_aa69fcdd3775e828d450ce1bbd978fa31"><div class="ttname"><a href="structarm__iir__lattice__instance__f32.xhtml#aa69fcdd3775e828d450ce1bbd978fa31">arm_iir_lattice_instance_f32::pkCoeffs</a></div><div class="ttdeci">float32_t * pkCoeffs</div><div class="ttdoc">points to the reflection coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4121</div></div>
<div class="ttc" id="structarm__fir__sparse__instance__q15_xhtml_a89487f28cab52637426024005e478985"><div class="ttname"><a href="structarm__fir__sparse__instance__q15.xhtml#a89487f28cab52637426024005e478985">arm_fir_sparse_instance_q15::stateIndex</a></div><div class="ttdeci">uint16_t stateIndex</div><div class="ttdoc">state buffer index. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4757</div></div>
<div class="ttc" id="group___linear_interpolate_xhtml_ga42c9206e5d2d22b8808716dc30622846"><div class="ttname"><a href="group___linear_interpolate.xhtml#ga42c9206e5d2d22b8808716dc30622846">arm_linear_interp_q15</a></div><div class="ttdeci">static __INLINE q15_t arm_linear_interp_q15(q15_t *pYData, q31_t x, uint32_t nValues)</div><div class="ttdoc">Process function for the Q15 Linear Interpolation Function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5918</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__f32_xhtml_a8dbe98d2c924e35e0a3fed2fe948176f"><div class="ttname"><a href="structarm__cfft__radix2__instance__f32.xhtml#a8dbe98d2c924e35e0a3fed2fe948176f">arm_cfft_radix2_instance_f32::ifftFlag</a></div><div class="ttdeci">uint8_t ifftFlag</div><div class="ttdoc">flag that selects forward (ifftFlag=0) or inverse (ifftFlag=1) transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2186</div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q15_xhtml_ada7e9d6269e6ed4eacf8f68729e9832d"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q15.xhtml#ada7e9d6269e6ed4eacf8f68729e9832d">arm_biquad_casd_df1_inst_q15::postShift</a></div><div class="ttdeci">int8_t postShift</div><div class="ttdoc">Additional shift, in bits, applied to each output sample. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1299</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ada660e54b93d5d32178c6f5e1c6f368d"><div class="ttname"><a href="arm__math_8h.xhtml#ada660e54b93d5d32178c6f5e1c6f368d">arm_fir_decimate_init_q15</a></div><div class="ttdeci">arm_status arm_fir_decimate_init_q15(arm_fir_decimate_instance_q15 *S, uint16_t numTaps, uint8_t M, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q15 FIR decimator. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_ae63ca9193322cd477970c1d2086407d1"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#ae63ca9193322cd477970c1d2086407d1">arm_cfft_radix2_instance_q31::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2136</div></div>
<div class="ttc" id="group__inv__park_xhtml_gaaf6bef0de21946f774d49df050dd8b05"><div class="ttname"><a href="group__inv__park.xhtml#gaaf6bef0de21946f774d49df050dd8b05">arm_inv_park_f32</a></div><div class="ttdeci">static __INLINE void arm_inv_park_f32(float32_t Id, float32_t Iq, float32_t *pIalpha, float32_t *pIbeta, float32_t sinVal, float32_t cosVal)</div><div class="ttdoc">Floating-point Inverse Park transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5664</div></div>
<div class="ttc" id="structarm__lms__norm__instance__q15_xhtml_a7ce00f21d11cfda6d963240641deea8c"><div class="ttname"><a href="structarm__lms__norm__instance__q15.xhtml#a7ce00f21d11cfda6d963240641deea8c">arm_lms_norm_instance_q15::mu</a></div><div class="ttdeci">q15_t mu</div><div class="ttdoc">step size that controls filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4507</div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml_aae46129d7cfd7f1c162cc502ed0a9d49"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml#aae46129d7cfd7f1c162cc502ed0a9d49">arm_lms_instance_q15::mu</a></div><div class="ttdeci">q15_t mu</div><div class="ttdoc">step size that controls filter coefficient updates. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4290</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a31a7c2b991803d49719393eb2d53dc26"><div class="ttname"><a href="arm__math_8h.xhtml#a31a7c2b991803d49719393eb2d53dc26">arm_mat_init_q15</a></div><div class="ttdeci">void arm_mat_init_q15(arm_matrix_instance_q15 *S, uint16_t nRows, uint16_t nColumns, q15_t *pData)</div><div class="ttdoc">Q15 matrix initialization. </div></div>
<div class="ttc" id="structarm__fir__instance__q7_xhtml_aaddea3b9c7e16ddfd9428b7bf9f9c200"><div class="ttname"><a href="structarm__fir__instance__q7.xhtml#aaddea3b9c7e16ddfd9428b7bf9f9c200">arm_fir_instance_q7::pState</a></div><div class="ttdeci">q7_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1103</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_a8fe10d425b59e096c23aa4bb5caa1974"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#a8fe10d425b59e096c23aa4bb5caa1974">arm_rfft_instance_q31::pCfft</a></div><div class="ttdeci">const arm_cfft_instance_q31 * pCfft</div><div class="ttdoc">points to the complex FFT instance. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2327</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__f32_xhtml"><div class="ttname"><a href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point IIR lattice filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4117</div></div>
<div class="ttc" id="structarm__linear__interp__instance__f32_xhtml_a08352dc6ea82fbc0827408e018535481"><div class="ttname"><a href="structarm__linear__interp__instance__f32.xhtml#a08352dc6ea82fbc0827408e018535481">arm_linear_interp_instance_f32::x1</a></div><div class="ttdeci">float32_t x1</div><div class="ttdoc">x1 </div><div class="ttdef"><b>Definition:</b> arm_math.h:1954</div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml_ae5070be4c2e0327e618f5e1f4c5b9d80"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml#ae5070be4c2e0327e618f5e1f4c5b9d80">arm_rfft_instance_q31::pTwiddleBReal</a></div><div class="ttdeci">q31_t * pTwiddleBReal</div><div class="ttdoc">points to the imag twiddle factor table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2326</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2cb1e3d3ebb167348fdabec74653d5c3"><div class="ttname"><a href="arm__math_8h.xhtml#a2cb1e3d3ebb167348fdabec74653d5c3">arm_pid_init_q15</a></div><div class="ttdeci">void arm_pid_init_q15(arm_pid_instance_q15 *S, int32_t resetStateFlag)</div><div class="ttdoc">Initialization function for the Q15 PID Control. </div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q15_xhtml_afd0136ab917b529554d93f41a5e04618"><div class="ttname"><a href="structarm__iir__lattice__instance__q15.xhtml#afd0136ab917b529554d93f41a5e04618">arm_iir_lattice_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4098</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af969c85c5655e3d72d7b99ff188f92c9"><div class="ttname"><a href="arm__math_8h.xhtml#af969c85c5655e3d72d7b99ff188f92c9">arm_power_q7</a></div><div class="ttdeci">void arm_power_q7(q7_t *pSrc, uint32_t blockSize, q31_t *pResult)</div><div class="ttdoc">Sum of the squares of the elements of a Q7 vector. </div></div>
<div class="ttc" id="structarm__biquad__cascade__df2_t__instance__f64_xhtml_ad55380ff835b533aa5168f836db8a4de"><div class="ttname"><a href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#ad55380ff835b533aa5168f836db8a4de">arm_biquad_cascade_df2T_instance_f64::numStages</a></div><div class="ttdeci">uint8_t numStages</div><div class="ttdoc">number of 2nd order stages in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3866</div></div>
<div class="ttc" id="arm__math_8h_xhtml_ad54c724132f6d742a444eb6df0e9c731"><div class="ttname"><a href="arm__math_8h.xhtml#ad54c724132f6d742a444eb6df0e9c731">arm_biquad_cascade_df1_init_q15</a></div><div class="ttdeci">void arm_biquad_cascade_df1_init_q15(arm_biquad_casd_df1_inst_q15 *S, uint8_t numStages, q15_t *pCoeffs, q15_t *pState, int8_t postShift)</div><div class="ttdoc">Initialization function for the Q15 Biquad cascade filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a00e615f5db21736ad5b27fb6146f3fc5"><div class="ttname"><a href="arm__math_8h.xhtml#a00e615f5db21736ad5b27fb6146f3fc5">arm_rfft_q15</a></div><div class="ttdeci">void arm_rfft_q15(const arm_rfft_instance_q15 *S, q15_t *pSrc, q15_t *pDst)</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__f32_xhtml_abe31ea2157dfa233e389cdfd3b9993ee"><div class="ttname"><a href="structarm__cfft__radix4__instance__f32.xhtml#abe31ea2157dfa233e389cdfd3b9993ee">arm_cfft_radix4_instance_f32::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2218</div></div>
<div class="ttc" id="structarm__fir__instance__f32_xhtml"><div class="ttname"><a href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point FIR filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1130</div></div>
<div class="ttc" id="arm__math_8h_xhtml_aebc707ee539020357c25da4c75b52eb7"><div class="ttname"><a href="arm__math_8h.xhtml#aebc707ee539020357c25da4c75b52eb7">arm_mean_q7</a></div><div class="ttdeci">void arm_mean_q7(q7_t *pSrc, uint32_t blockSize, q7_t *pResult)</div><div class="ttdoc">Mean value of a Q7 vector. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a86378a08a9d9e1e0e5de77843b34d396"><div class="ttname"><a href="arm__math_8h.xhtml#a86378a08a9d9e1e0e5de77843b34d396">arm_fir_sparse_init_f32</a></div><div class="ttdeci">void arm_fir_sparse_init_f32(arm_fir_sparse_instance_f32 *S, uint16_t numTaps, float32_t *pCoeffs, float32_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the floating-point sparse FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a47295d08a685f7de700a48dafb4db6fb"><div class="ttname"><a href="arm__math_8h.xhtml#a47295d08a685f7de700a48dafb4db6fb">arm_shift_q7</a></div><div class="ttdeci">void arm_shift_q7(q7_t *pSrc, int8_t shiftBits, q7_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Shifts the elements of a Q7 vector a specified number of bits. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a22021e4222773f01e9960358a531cfb8"><div class="ttname"><a href="arm__math_8h.xhtml#a22021e4222773f01e9960358a531cfb8">arm_correlate_f32</a></div><div class="ttdeci">void arm_correlate_f32(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst)</div><div class="ttdoc">Correlation of floating-point sequences. </div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q15_xhtml_a2130ae30a804995a9f5d0e2189e08565"><div class="ttname"><a href="structarm__bilinear__interp__instance__q15.xhtml#a2130ae30a804995a9f5d0e2189e08565">arm_bilinear_interp_instance_q15::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1987</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a408566dacb4fa6e0458b2c75672e525f"><div class="ttname"><a href="arm__math_8h.xhtml#a408566dacb4fa6e0458b2c75672e525f">arm_pid_reset_q15</a></div><div class="ttdeci">void arm_pid_reset_q15(arm_pid_instance_q15 *S)</div><div class="ttdoc">Reset function for the Q15 PID Control. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a40a0236b17220e8e22a22b5bc1c53c6b"><div class="ttname"><a href="arm__math_8h.xhtml#a40a0236b17220e8e22a22b5bc1c53c6b">arm_correlate_fast_opt_q15</a></div><div class="ttdeci">void arm_correlate_fast_opt_q15(q15_t *pSrcA, uint32_t srcALen, q15_t *pSrcB, uint32_t srcBLen, q15_t *pDst, q15_t *pScratch)</div><div class="ttdoc">Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__biquad__casd__df1__inst__q15_xhtml_a1edaacdebb5b09d7635bf20c779855fc"><div class="ttname"><a href="structarm__biquad__casd__df1__inst__q15.xhtml#a1edaacdebb5b09d7635bf20c779855fc">arm_biquad_casd_df1_inst_q15::pCoeffs</a></div><div class="ttdeci">q15_t * pCoeffs</div><div class="ttdoc">Points to the array of coefficients. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1298</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1367dc6c80476406c951e68d7fac4e8c"><div class="ttname"><a href="arm__math_8h.xhtml#a1367dc6c80476406c951e68d7fac4e8c">arm_correlate_q31</a></div><div class="ttdeci">void arm_correlate_q31(q31_t *pSrcA, uint32_t srcALen, q31_t *pSrcB, uint32_t srcBLen, q31_t *pDst)</div><div class="ttdoc">Correlation of Q31 sequences. </div></div>
<div class="ttc" id="structarm__rfft__fast__instance__f32_xhtml_a37419ababdfb3151b1891ae6bcd21012"><div class="ttname"><a href="structarm__rfft__fast__instance__f32.xhtml#a37419ababdfb3151b1891ae6bcd21012">arm_rfft_fast_instance_f32::Sint</a></div><div class="ttdeci">arm_cfft_instance_f32 Sint</div><div class="ttdoc">Internal CFFT structure. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2375</div></div>
<div class="ttc" id="structarm__iir__lattice__instance__q31_xhtml_a941282745effd26a889fbfadf4b95e6a"><div class="ttname"><a href="structarm__iir__lattice__instance__q31.xhtml#a941282745effd26a889fbfadf4b95e6a">arm_iir_lattice_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4109</div></div>
<div class="ttc" id="core__cm0plus_8h_xhtml"><div class="ttname"><a href="core__cm0plus_8h.xhtml">core_cm0plus.h</a></div><div class="ttdoc">CMSIS Cortex-M0+ Core Peripheral Access Layer Header File. </div></div>
<div class="ttc" id="structarm__fir__instance__f32_xhtml_a1c9cfca901d5902afeb640f2831488f4"><div class="ttname"><a href="structarm__fir__instance__f32.xhtml#a1c9cfca901d5902afeb640f2831488f4">arm_fir_instance_f32::pCoeffs</a></div><div class="ttdeci">float32_t * pCoeffs</div><div class="ttdoc">points to the coefficient array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1134</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a56164a0fe48619b8ceec160347bdd2ff"><div class="ttname"><a href="arm__math_8h.xhtml#a56164a0fe48619b8ceec160347bdd2ff">arm_iir_lattice_f32</a></div><div class="ttdeci">void arm_iir_lattice_f32(const arm_iir_lattice_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point IIR lattice filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_afecc94879a383c5208ec3ef99485e4b5"><div class="ttname"><a href="arm__math_8h.xhtml#afecc94879a383c5208ec3ef99485e4b5">arm_cmplx_conj_q31</a></div><div class="ttdeci">void arm_cmplx_conj_q31(q31_t *pSrc, q31_t *pDst, uint32_t numSamples)</div><div class="ttdoc">Q31 complex conjugate. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a69cc781cf337bd0a31bb85c772a35f7f"><div class="ttname"><a href="arm__math_8h.xhtml#a69cc781cf337bd0a31bb85c772a35f7f">arm_fill_q31</a></div><div class="ttdeci">void arm_fill_q31(q31_t value, q31_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Fills a constant value into a Q31 vector. </div></div>
<div class="ttc" id="group___s_q_r_t_xhtml_ga56a40d1cf842b0b45267df6761975da0"><div class="ttname"><a href="group___s_q_r_t.xhtml#ga56a40d1cf842b0b45267df6761975da0">arm_sqrt_f32</a></div><div class="ttdeci">static __INLINE arm_status arm_sqrt_f32(float32_t in, float32_t *pOut)</div><div class="ttdoc">Floating-point square root function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:6123</div></div>
<div class="ttc" id="structarm__lms__instance__q31_xhtml_a206d47b49de6f357f933ebe61520753c"><div class="ttname"><a href="structarm__lms__instance__q31.xhtml#a206d47b49de6f357f933ebe61520753c">arm_lms_instance_q31::pState</a></div><div class="ttdeci">q31_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4343</div></div>
<div class="ttc" id="structarm__fir__interpolate__instance__q15_xhtml_ad5178a02a697a77e0d0e60705d9f0a19"><div class="ttname"><a href="structarm__fir__interpolate__instance__q15.xhtml#ad5178a02a697a77e0d0e60705d9f0a19">arm_fir_interpolate_instance_q15::phaseLength</a></div><div class="ttdeci">uint16_t phaseLength</div><div class="ttdoc">length of each polyphase filter component. </div><div class="ttdef"><b>Definition:</b> arm_math.h:3650</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1fc6d6640be6cfa688a8bea0a48397ee"><div class="ttname"><a href="arm__math_8h.xhtml#a1fc6d6640be6cfa688a8bea0a48397ee">arm_sin_q15</a></div><div class="ttdeci">q15_t arm_sin_q15(q15_t x)</div><div class="ttdoc">Fast approximation to the trigonometric sine function for Q15 data. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae8fb334ea67eb6ecbd31824ddc14cd6a"><div class="ttname"><a href="arm__math_8h.xhtml#ae8fb334ea67eb6ecbd31824ddc14cd6a">arm_fir_f32</a></div><div class="ttdeci">void arm_fir_f32(const arm_fir_instance_f32 *S, float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Processing function for the floating-point FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a6afd64d381b5c232de59163ebfe71e35"><div class="ttname"><a href="arm__math_8h.xhtml#a6afd64d381b5c232de59163ebfe71e35">arm_max_q7</a></div><div class="ttdeci">void arm_max_q7(q7_t *pSrc, uint32_t blockSize, q7_t *pResult, uint32_t *pIndex)</div><div class="ttdoc">Maximum value of a Q7 vector. </div></div>
<div class="ttc" id="group___linear_interpolate_xhtml_gacb0d44fe00aca0ba1d036d469a1763fc"><div class="ttname"><a href="group___linear_interpolate.xhtml#gacb0d44fe00aca0ba1d036d469a1763fc">arm_linear_interp_q7</a></div><div class="ttdeci">static __INLINE q7_t arm_linear_interp_q7(q7_t *pYData, q31_t x, uint32_t nValues)</div><div class="ttdoc">Process function for the Q7 Linear Interpolation Function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5978</div></div>
<div class="ttc" id="structarm__cfft__radix4__instance__q31_xhtml_a8cf8187b8232815cf17ee82bf572ecf9"><div class="ttname"><a href="structarm__cfft__radix4__instance__q31.xhtml#a8cf8187b8232815cf17ee82bf572ecf9">arm_cfft_radix4_instance_q31::twidCoefModifier</a></div><div class="ttdeci">uint16_t twidCoefModifier</div><div class="ttdoc">twiddle coefficient modifier that supports different size FFTs with the same twiddle factor table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2163</div></div>
<div class="ttc" id="structarm__pid__instance__f32_xhtml"><div class="ttname"><a href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a></div><div class="ttdoc">Instance structure for the floating-point PID Control. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1877</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a16d10f32072cd79fc5fb6e785df45f5e"><div class="ttname"><a href="arm__math_8h.xhtml#a16d10f32072cd79fc5fb6e785df45f5e">arm_conv_partial_f32</a></div><div class="ttdeci">arm_status arm_conv_partial_f32(float32_t *pSrcA, uint32_t srcALen, float32_t *pSrcB, uint32_t srcBLen, float32_t *pDst, uint32_t firstIndex, uint32_t numPoints)</div><div class="ttdoc">Partial convolution of floating-point sequences. </div></div>
<div class="ttc" id="structarm__matrix__instance__q15_xhtml"><div class="ttname"><a href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 matrix structure. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1484</div></div>
<div class="ttc" id="group__park_xhtml_ga08b3a683197de7e143fb00497787683c"><div class="ttname"><a href="group__park.xhtml#ga08b3a683197de7e143fb00497787683c">arm_park_f32</a></div><div class="ttdeci">static __INLINE void arm_park_f32(float32_t Ialpha, float32_t Ibeta, float32_t *pId, float32_t *pIq, float32_t sinVal, float32_t cosVal)</div><div class="ttdoc">Floating-point Park transform. </div><div class="ttdef"><b>Definition:</b> arm_math.h:5545</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a9c3293a50ac7ec8ba928bf8e3aaea6c1"><div class="ttname"><a href="arm__math_8h.xhtml#a9c3293a50ac7ec8ba928bf8e3aaea6c1">arm_dot_prod_q7</a></div><div class="ttdeci">void arm_dot_prod_q7(q7_t *pSrcA, q7_t *pSrcB, uint32_t blockSize, q31_t *result)</div><div class="ttdoc">Dot product of Q7 vectors. </div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__q7_xhtml_a860dd0d24380ea06cfbb348fb3b12c9a"><div class="ttname"><a href="structarm__bilinear__interp__instance__q7.xhtml#a860dd0d24380ea06cfbb348fb3b12c9a">arm_bilinear_interp_instance_q7::numCols</a></div><div class="ttdeci">uint16_t numCols</div><div class="ttdoc">number of columns in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1999</div></div>
<div class="ttc" id="structarm__cfft__instance__q15_xhtml_a5f9e1d3a8c127ee323b5e6929aeb90df"><div class="ttname"><a href="structarm__cfft__instance__q15.xhtml#a5f9e1d3a8c127ee323b5e6929aeb90df">arm_cfft_instance_q15::fftLen</a></div><div class="ttdeci">uint16_t fftLen</div><div class="ttdoc">length of the FFT. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2241</div></div>
<div class="ttc" id="structarm__dct4__instance__q31_xhtml_a46a9f136457350676e2bfd3768ff9d6d"><div class="ttname"><a href="structarm__dct4__instance__q31.xhtml#a46a9f136457350676e2bfd3768ff9d6d">arm_dct4_instance_q31::N</a></div><div class="ttdeci">uint16_t N</div><div class="ttdoc">length of the DCT4. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2442</div></div>
<div class="ttc" id="arm__math_8h_xhtml_adfd60c24def501638c0d5db20f4c869b"><div class="ttname"><a href="arm__math_8h.xhtml#adfd60c24def501638c0d5db20f4c869b">arm_cos_q15</a></div><div class="ttdeci">q15_t arm_cos_q15(q15_t x)</div><div class="ttdoc">Fast approximation to the trigonometric cosine function for Q15 data. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_ae541b6f232c305361e9b416fc9eed263"><div class="ttname"><a href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a></div><div class="ttdeci">int8_t q7_t</div><div class="ttdoc">8-bit fractional data type in 1.7 format. </div><div class="ttdef"><b>Definition:</b> arm_math.h:379</div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q31_xhtml_a6239b8d268285334e88c008c07d68616"><div class="ttname"><a href="structarm__cfft__radix2__instance__q31.xhtml#a6239b8d268285334e88c008c07d68616">arm_cfft_radix2_instance_q31::bitReverseFlag</a></div><div class="ttdeci">uint8_t bitReverseFlag</div><div class="ttdoc">flag that enables (bitReverseFlag=1) or disables (bitReverseFlag=0) bit reversal of output...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2133</div></div>
<div class="ttc" id="structarm__fir__instance__q31_xhtml_a918fadd775b7a0482b21bf34dae2f094"><div class="ttname"><a href="structarm__fir__instance__q31.xhtml#a918fadd775b7a0482b21bf34dae2f094">arm_fir_instance_q31::numTaps</a></div><div class="ttdeci">uint16_t numTaps</div><div class="ttdoc">number of filter coefficients in the filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1122</div></div>
<div class="ttc" id="structarm__pid__instance__q31_xhtml_a228e4a64da6014844a0a671a1fa391d4"><div class="ttname"><a href="structarm__pid__instance__q31.xhtml#a228e4a64da6014844a0a671a1fa391d4">arm_pid_instance_q31::state</a></div><div class="ttdeci">q31_t state[3]</div><div class="ttdoc">The state array of length 3. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1867</div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml_a9a575ff82c1e68cbb583083439260d08"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml#a9a575ff82c1e68cbb583083439260d08">arm_lms_instance_q15::pState</a></div><div class="ttdeci">q15_t * pState</div><div class="ttdoc">points to the state variable array. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4288</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2bffda2e156e72427e19276cd9c3d3cc"><div class="ttname"><a href="arm__math_8h.xhtml#a2bffda2e156e72427e19276cd9c3d3cc">arm_fir_sparse_q15</a></div><div class="ttdeci">void arm_fir_sparse_q15(arm_fir_sparse_instance_q15 *S, q15_t *pSrc, q15_t *pDst, q15_t *pScratchIn, q31_t *pScratchOut, uint32_t blockSize)</div><div class="ttdoc">Processing function for the Q15 sparse FIR filter. </div></div>
<div class="ttc" id="arm__math_8h_xhtml_a1185d670d798aaf52eec13f0403f3407"><div class="ttname"><a href="arm__math_8h.xhtml#a1185d670d798aaf52eec13f0403f3407">__SIMD32_CONST</a></div><div class="ttdeci">#define __SIMD32_CONST(addr)</div><div class="ttdef"><b>Definition:</b> arm_math.h:432</div></div>
<div class="ttc" id="structarm__bilinear__interp__instance__f32_xhtml_a34f2b17cc57b95011960df9718af6ed6"><div class="ttname"><a href="structarm__bilinear__interp__instance__f32.xhtml#a34f2b17cc57b95011960df9718af6ed6">arm_bilinear_interp_instance_f32::numRows</a></div><div class="ttdeci">uint16_t numRows</div><div class="ttdoc">number of rows in the data table. </div><div class="ttdef"><b>Definition:</b> arm_math.h:1965</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a5eaa80bf72bcccef5a2c5fc6648d1baa"><div class="ttname"><a href="arm__math_8h.xhtml#a5eaa80bf72bcccef5a2c5fc6648d1baa">arm_fir_sparse_init_q15</a></div><div class="ttdeci">void arm_fir_sparse_init_q15(arm_fir_sparse_instance_q15 *S, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</div><div class="ttdoc">Initialization function for the Q15 sparse FIR filter. </div></div>
<div class="ttc" id="structarm__lms__instance__q15_xhtml"><div class="ttname"><a href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a></div><div class="ttdoc">Instance structure for the Q15 LMS filter. </div><div class="ttdef"><b>Definition:</b> arm_math.h:4285</div></div>
<div class="ttc" id="arm__math_8h_xhtml_a2785e8c1b785348b0c439b56aaf585a3"><div class="ttname"><a href="arm__math_8h.xhtml#a2785e8c1b785348b0c439b56aaf585a3">arm_mat_mult_fast_q31</a></div><div class="ttdeci">arm_status arm_mat_mult_fast_q31(const arm_matrix_instance_q31 *pSrcA, const arm_matrix_instance_q31 *pSrcB, arm_matrix_instance_q31 *pDst)</div><div class="ttdoc">Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </div></div>
<div class="ttc" id="structarm__cfft__radix2__instance__q15_xhtml_a8722720c542cabd41df83fe88ef4f4cb"><div class="ttname"><a href="structarm__cfft__radix2__instance__q15.xhtml#a8722720c542cabd41df83fe88ef4f4cb">arm_cfft_radix2_instance_q15::bitRevFactor</a></div><div class="ttdeci">uint16_t bitRevFactor</div><div class="ttdoc">bit reversal modifier that supports different size FFTs with the same bit reversal table...</div><div class="ttdef"><b>Definition:</b> arm_math.h:2081</div></div>
<div class="ttc" id="structarm__linear__interp__instance__f32_xhtml_aa8e2d686b5434a406d390b347b183511"><div class="ttname"><a href="structarm__linear__interp__instance__f32.xhtml#aa8e2d686b5434a406d390b347b183511">arm_linear_interp_instance_f32::xSpacing</a></div><div class="ttdeci">float32_t xSpacing</div><div class="ttdoc">xSpacing </div><div class="ttdef"><b>Definition:</b> arm_math.h:1955</div></div>
<div class="ttc" id="arm__math_8h_xhtml_af8b0d2324de273fc430b0e61ad4e9eb2"><div class="ttname"><a href="arm__math_8h.xhtml#af8b0d2324de273fc430b0e61ad4e9eb2">arm_q15_to_float</a></div><div class="ttdeci">void arm_q15_to_float(q15_t *pSrc, float32_t *pDst, uint32_t blockSize)</div><div class="ttdoc">Converts the elements of the Q15 vector to floating-point vector. </div></div>
<div class="ttc" id="structarm__rfft__instance__q31_xhtml"><div class="ttname"><a href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a></div><div class="ttdoc">Instance structure for the Q31 RFFT/RIFFT function. </div><div class="ttdef"><b>Definition:</b> arm_math.h:2319</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
