<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: XEP system health monitoring</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">XEP system health monitoring </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>To monitor the system health of an application using XEP, the MCU watchdog and a monitor task is used.</p>
<p>When an error is found, the monitor task will do a system reset.</p>
<p>A special FreeRTOS task called monitor_task has the code to check that the other tasks are alive. To get the monitor_task recognize which tasks to monitor, a register function <a class="el" href="task__monitor_8h.xhtml#ad3bca8672de4a4773999e28299cdc195">monitor_task_register</a> is provided to register the task to the monitor system. This register task has a timeout parameter to set the maximum time between two adjacent calls of an "alive" function call (<a class="el" href="task__monitor_8h.xhtml#a0c7f7f8017a34d24de6b5c6fd90fbfe3">monitor_task_alive</a>) before the monitor task will trigger and do a system reset.</p>
<p>The monitor task will execute with an interval defined by <a class="el" href="task__monitor_8c.xhtml#a9ee057510281e40b82b1baec47b14419">MONITOR_TASK_CYCLE_TIME</a>.</p>
<p>Example of using the monitor task to monitor a FreeRTOS task: </p><pre class="fragment">#include "monitor_task.h"

static void task_application(void *pvParameters)
{
    // Your init code

    // Register the current task to the monitor system.
    // Timeout is set to 1000ms
    monitor_task_t * monitor_task_handle;
    status = monitor_task_register(&amp;monitor_task_handle, 1000);

    // The task loop
    for(;;)
    {
        // Signal alive to the monitor system
        status = monitor_task_alive(monitor_task_handle);

        // Your task code
    }
}
</pre><p>If the monitor task do not catch the error, the MCU watchdog timer is enabled and will do a system reset when the watchdog timer expires.</p>
<p>The reason for a reset is stored in a non volatile MCU register that can be examined after a reset. To get the reason for the last reset, the function <a class="el" href="xt__system_8c.xhtml#a5e62effeb5c5323c3d423225a6a3dbf3">xt_get_reset_reason</a> will return the last reason for a reset. See <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> for a description of reset reasons. </p>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
