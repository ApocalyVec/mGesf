<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/System/File/xfs.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_ef68f1e1f5148ff8ef7fb1c955106c3c.xhtml">System</a></li><li class="navelem"><a class="el" href="dir_46250802dedbf2e879301074378bab7e.xhtml">File</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">xfs.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;stddef.h&gt;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for xfs.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h__incl.svg" width="284" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h__dep__incl.svg" width="767" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="xfs_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_x_f_s_header__t.xhtml">XFSHeader_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_x_f_s_file_entry_v1__t.xhtml">XFSFileEntryV1_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_x_f_s_allocation_table_v1__t.xhtml">XFSAllocationTableV1_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ad856118aa5741cad649fb07da1ac8168"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#ad856118aa5741cad649fb07da1ac8168">XFS_MAGIC_KEY</a>&#160;&#160;&#160;0x24584653</td></tr>
<tr class="separator:ad856118aa5741cad649fb07da1ac8168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a6885fd0494062d3ed786bcadffcfbf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a5a6885fd0494062d3ed786bcadffcfbf">XFS_MAX_FILES</a>&#160;&#160;&#160;20</td></tr>
<tr class="separator:a5a6885fd0494062d3ed786bcadffcfbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a1821ff845b066a881c72a2b7fbd9e653"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct_x_f_s_header__t.xhtml">XFSHeader_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a1821ff845b066a881c72a2b7fbd9e653">XFSHeader_t</a></td></tr>
<tr class="separator:a1821ff845b066a881c72a2b7fbd9e653"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51d61897a7fcb0e6f471270af1050e15"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct_x_f_s_allocation_table_v1__t.xhtml">XFSAllocationTableV1_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a51d61897a7fcb0e6f471270af1050e15">XFSAllocationTableV1_t</a></td></tr>
<tr class="separator:a51d61897a7fcb0e6f471270af1050e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ead75c0fb4498b0618c4e42d8286c3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct_x_f_s_file_entry_v1__t.xhtml">XFSFileEntryV1_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a76ead75c0fb4498b0618c4e42d8286c3">XFSFileEntryV1_t</a></td></tr>
<tr class="separator:a76ead75c0fb4498b0618c4e42d8286c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a3107c84a19e5d8d2e0a869d4ff6af8a5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> { <br />
&#160;&#160;<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5ab490808c247fc2c85926f561a97d3f9f">XFS_OK</a> = 0, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a3b62e16c8f20a53f87e31d3442ffa77f">XFS_NOT_INITIALIZED</a> = 1, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a585ddc40470e442d23a187b297c0dd4a">XFS_INVALID_PARAMETER</a> = 2, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a97ad7f0b554a3cb0bb4a3bb33de4ceea">XFS_OUT_OF_MEMORY</a> = 3, 
<br />
&#160;&#160;<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a506e6228dfc593c98f0d918ea5b1aa9f">XFS_CORRUPTED</a> = 4, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a98eb1310563f4899ad1df96a79d1c8e2">XFS_FILE_NOT_FOUND</a> = 5, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5acef3f0f17b1184fedc1cdcc81c1b7a77">XFS_FILE_ALREADY_EXISTS</a> = 6, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5aa4a6effc6562b72666746afcee64cf55">XFS_NO_FREE_SPACE</a> = 7, 
<br />
&#160;&#160;<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5ac46c0ee3c76f05f84b25be6b1fca7d58">XFS_NOT_IMPLEMENTED</a> = 8, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5a994989f268748576ed27f1e425a7b513">XFS_FILE_ENTRY_FULL</a> = 9, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5ad65ff20705c579fdc0739f7912c27717">XFS_STORAGE_ERROR</a> = 10, 
<a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5ac79f87ec3408b322c5797a81ac88fa50">XFS_LOCKED</a> = 11
<br />
 }<tr class="memdesc:a3107c84a19e5d8d2e0a869d4ff6af8a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error codes for File System.  <a href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a3107c84a19e5d8d2e0a869d4ff6af8a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:acb8c539cd456d3e5789a479ae0642acd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#acb8c539cd456d3e5789a479ae0642acd">xfs_init</a> (uint32_t address, uint32_t size)</td></tr>
<tr class="memdesc:acb8c539cd456d3e5789a479ae0642acd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the file system.  <a href="#acb8c539cd456d3e5789a479ae0642acd">More...</a><br /></td></tr>
<tr class="separator:acb8c539cd456d3e5789a479ae0642acd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f9263257de25f5a132282b680db4622"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a0f9263257de25f5a132282b680db4622">xfs_ignore_lock</a> (bool ignore)</td></tr>
<tr class="memdesc:a0f9263257de25f5a132282b680db4622"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to ignore locking mechanism.  <a href="#a0f9263257de25f5a132282b680db4622">More...</a><br /></td></tr>
<tr class="separator:a0f9263257de25f5a132282b680db4622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a975b6f2d064a2205832dfc2b7e0b7799"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a975b6f2d064a2205832dfc2b7e0b7799">xfs_format</a> (void)</td></tr>
<tr class="memdesc:a975b6f2d064a2205832dfc2b7e0b7799"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats the file system to an empty state.  <a href="#a975b6f2d064a2205832dfc2b7e0b7799">More...</a><br /></td></tr>
<tr class="separator:a975b6f2d064a2205832dfc2b7e0b7799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb34fc9c9f7a98b52c85b58718cac560"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#aeb34fc9c9f7a98b52c85b58718cac560">xfs_defragment</a> (void)</td></tr>
<tr class="memdesc:aeb34fc9c9f7a98b52c85b58718cac560"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defragments the file system to optimize the free space.  <a href="#aeb34fc9c9f7a98b52c85b58718cac560">More...</a><br /></td></tr>
<tr class="separator:aeb34fc9c9f7a98b52c85b58718cac560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a827d597e895a84ac2619f1bec910e6a6"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a827d597e895a84ac2619f1bec910e6a6">xfs_get_largest_free_size</a> (uint32_t *size)</td></tr>
<tr class="memdesc:a827d597e895a84ac2619f1bec910e6a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the largest free section.  <a href="#a827d597e895a84ac2619f1bec910e6a6">More...</a><br /></td></tr>
<tr class="separator:a827d597e895a84ac2619f1bec910e6a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45314021b3ff3d7ba73714877bd92e72"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a45314021b3ff3d7ba73714877bd92e72">xfs_find_all_files</a> (uint32_t *type, uint32_t *identifier, uint32_t max_count, uint32_t *count)</td></tr>
<tr class="memdesc:a45314021b3ff3d7ba73714877bd92e72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds all files and stores the type and identifier of each file in the given buffers.  <a href="#a45314021b3ff3d7ba73714877bd92e72">More...</a><br /></td></tr>
<tr class="separator:a45314021b3ff3d7ba73714877bd92e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48e596dbfbcdc817280a503fdf637a71"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a48e596dbfbcdc817280a503fdf637a71">xfs_search_for_files_of_type</a> (uint32_t type, uint32_t *identifier, uint32_t max_count, uint32_t *count)</td></tr>
<tr class="memdesc:a48e596dbfbcdc817280a503fdf637a71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for files of a specific type and stores the identifier of each file in the given buffer.  <a href="#a48e596dbfbcdc817280a503fdf637a71">More...</a><br /></td></tr>
<tr class="separator:a48e596dbfbcdc817280a503fdf637a71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51fef9f1383012edd34a7ad0608f90eb"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a51fef9f1383012edd34a7ad0608f90eb">xfs_file_exists</a> (uint32_t type, uint32_t identifier)</td></tr>
<tr class="memdesc:a51fef9f1383012edd34a7ad0608f90eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a file with given type and identifier exists.  <a href="#a51fef9f1383012edd34a7ad0608f90eb">More...</a><br /></td></tr>
<tr class="separator:a51fef9f1383012edd34a7ad0608f90eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b8e251b6d5e10731cd7a9379e67b8be"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a7b8e251b6d5e10731cd7a9379e67b8be">xfs_get_size</a> (uint32_t type, uint32_t identifier, uint32_t *size)</td></tr>
<tr class="memdesc:a7b8e251b6d5e10731cd7a9379e67b8be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of file with given type and identifier.  <a href="#a7b8e251b6d5e10731cd7a9379e67b8be">More...</a><br /></td></tr>
<tr class="separator:a7b8e251b6d5e10731cd7a9379e67b8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa10482aaaf404deb85d1c214c6aaea4"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#aaa10482aaaf404deb85d1c214c6aaea4">xfs_create_file</a> (uint32_t type, uint32_t identifier, uint32_t size)</td></tr>
<tr class="memdesc:aaa10482aaaf404deb85d1c214c6aaea4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new file.  <a href="#aaa10482aaaf404deb85d1c214c6aaea4">More...</a><br /></td></tr>
<tr class="separator:aaa10482aaaf404deb85d1c214c6aaea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1944fe2fe57fccee85079970b8f38432"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a1944fe2fe57fccee85079970b8f38432">xfs_clear_file</a> (uint32_t type, uint32_t identifier)</td></tr>
<tr class="memdesc:a1944fe2fe57fccee85079970b8f38432"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the flash area used to store file data.  <a href="#a1944fe2fe57fccee85079970b8f38432">More...</a><br /></td></tr>
<tr class="separator:a1944fe2fe57fccee85079970b8f38432"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fadb27c69014a6f606f00781d0c24e5"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a9fadb27c69014a6f606f00781d0c24e5">xfs_write_file</a> (uint32_t type, uint32_t identifier, void *data, uint32_t data_offset, uint32_t size)</td></tr>
<tr class="memdesc:a9fadb27c69014a6f606f00781d0c24e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the file data to flash at given offset.  <a href="#a9fadb27c69014a6f606f00781d0c24e5">More...</a><br /></td></tr>
<tr class="separator:a9fadb27c69014a6f606f00781d0c24e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbd27cc31bf59c4ecf4520a56c871a6"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#afcbd27cc31bf59c4ecf4520a56c871a6">xfs_get_file_pointer</a> (uint32_t type, uint32_t identifier, void **data, uint32_t *size)</td></tr>
<tr class="memdesc:afcbd27cc31bf59c4ecf4520a56c871a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the file data in flash.  <a href="#afcbd27cc31bf59c4ecf4520a56c871a6">More...</a><br /></td></tr>
<tr class="separator:afcbd27cc31bf59c4ecf4520a56c871a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31395d7a15d30dbd0e24e0f6800dccf2"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a31395d7a15d30dbd0e24e0f6800dccf2">xfs_commit_file</a> (uint32_t type, uint32_t identifier, void *data, uint32_t size)</td></tr>
<tr class="memdesc:a31395d7a15d30dbd0e24e0f6800dccf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Commits the file allocation and file contents to flash.  <a href="#a31395d7a15d30dbd0e24e0f6800dccf2">More...</a><br /></td></tr>
<tr class="separator:a31395d7a15d30dbd0e24e0f6800dccf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a846fd4b556aae87a84be2435336e17ca"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#a846fd4b556aae87a84be2435336e17ca">xfs_delete_file</a> (uint32_t type, uint32_t identifier)</td></tr>
<tr class="memdesc:a846fd4b556aae87a84be2435336e17ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the file with the given type and identifier.  <a href="#a846fd4b556aae87a84be2435336e17ca">More...</a><br /></td></tr>
<tr class="separator:a846fd4b556aae87a84be2435336e17ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8bf4b21f48539701e1cbeb7a4001912"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xfs_8h.xhtml#ad8bf4b21f48539701e1cbeb7a4001912">xfs_get_file_data</a> (uint32_t type, uint32_t identifier, void *data, uint32_t data_offset, uint32_t max_size, uint32_t *size)</td></tr>
<tr class="memdesc:ad8bf4b21f48539701e1cbeb7a4001912"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from the file into the given buffer.  <a href="#ad8bf4b21f48539701e1cbeb7a4001912">More...</a><br /></td></tr>
<tr class="separator:ad8bf4b21f48539701e1cbeb7a4001912"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ad856118aa5741cad649fb07da1ac8168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad856118aa5741cad649fb07da1ac8168">&sect;&nbsp;</a></span>XFS_MAGIC_KEY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XFS_MAGIC_KEY&#160;&#160;&#160;0x24584653</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a6885fd0494062d3ed786bcadffcfbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a6885fd0494062d3ed786bcadffcfbf">&sect;&nbsp;</a></span>XFS_MAX_FILES</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XFS_MAX_FILES&#160;&#160;&#160;20</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a51d61897a7fcb0e6f471270af1050e15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51d61897a7fcb0e6f471270af1050e15">&sect;&nbsp;</a></span>XFSAllocationTableV1_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct_x_f_s_allocation_table_v1__t.xhtml">XFSAllocationTableV1_t</a> <a class="el" href="struct_x_f_s_allocation_table_v1__t.xhtml">XFSAllocationTableV1_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a76ead75c0fb4498b0618c4e42d8286c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76ead75c0fb4498b0618c4e42d8286c3">&sect;&nbsp;</a></span>XFSFileEntryV1_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct_x_f_s_file_entry_v1__t.xhtml">XFSFileEntryV1_t</a> <a class="el" href="struct_x_f_s_file_entry_v1__t.xhtml">XFSFileEntryV1_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1821ff845b066a881c72a2b7fbd9e653"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1821ff845b066a881c72a2b7fbd9e653">&sect;&nbsp;</a></span>XFSHeader_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct_x_f_s_header__t.xhtml">XFSHeader_t</a> <a class="el" href="struct_x_f_s_header__t.xhtml">XFSHeader_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a3107c84a19e5d8d2e0a869d4ff6af8a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3107c84a19e5d8d2e0a869d4ff6af8a5">&sect;&nbsp;</a></span>xfs_error_codes_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error codes for File System. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5ab490808c247fc2c85926f561a97d3f9f"></a>XFS_OK&#160;</td><td class="fielddoc"><p>Executed successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a3b62e16c8f20a53f87e31d3442ffa77f"></a>XFS_NOT_INITIALIZED&#160;</td><td class="fielddoc"><p>File system is not initialized. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a585ddc40470e442d23a187b297c0dd4a"></a>XFS_INVALID_PARAMETER&#160;</td><td class="fielddoc"><p>Invalid parameter was given. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a97ad7f0b554a3cb0bb4a3bb33de4ceea"></a>XFS_OUT_OF_MEMORY&#160;</td><td class="fielddoc"><p>Could not allocate memory. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a506e6228dfc593c98f0d918ea5b1aa9f"></a>XFS_CORRUPTED&#160;</td><td class="fielddoc"><p>File system is corrupted. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a98eb1310563f4899ad1df96a79d1c8e2"></a>XFS_FILE_NOT_FOUND&#160;</td><td class="fielddoc"><p>File was not found. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5acef3f0f17b1184fedc1cdcc81c1b7a77"></a>XFS_FILE_ALREADY_EXISTS&#160;</td><td class="fielddoc"><p>File already exists. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5aa4a6effc6562b72666746afcee64cf55"></a>XFS_NO_FREE_SPACE&#160;</td><td class="fielddoc"><p>File system is full. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5ac46c0ee3c76f05f84b25be6b1fca7d58"></a>XFS_NOT_IMPLEMENTED&#160;</td><td class="fielddoc"><p>Function not implemented. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5a994989f268748576ed27f1e425a7b513"></a>XFS_FILE_ENTRY_FULL&#160;</td><td class="fielddoc"><p>All available locations in the allocation table is taken. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5ad65ff20705c579fdc0739f7912c27717"></a>XFS_STORAGE_ERROR&#160;</td><td class="fielddoc"><p>Error occured while storing to flash. </p>
</td></tr>
<tr><td class="fieldname"><a id="a3107c84a19e5d8d2e0a869d4ff6af8a5ac79f87ec3408b322c5797a81ac88fa50"></a>XFS_LOCKED&#160;</td><td class="fielddoc"><p>Lock mutex timed out. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1944fe2fe57fccee85079970b8f38432"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1944fe2fe57fccee85079970b8f38432">&sect;&nbsp;</a></span>xfs_clear_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_clear_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the flash area used to store file data. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a1944fe2fe57fccee85079970b8f38432_cgraph.svg" width="295" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a1944fe2fe57fccee85079970b8f38432_icgraph.svg" width="332" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a31395d7a15d30dbd0e24e0f6800dccf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31395d7a15d30dbd0e24e0f6800dccf2">&sect;&nbsp;</a></span>xfs_commit_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_commit_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Commits the file allocation and file contents to flash. </p>
<p>Note that the file allocation will be committed for all pending files, no matter what type and identifier is given.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to file contents to commit </td></tr>
    <tr><td class="paramname">size</td><td>Size of file, must match with the allocated size and can't be changed </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a31395d7a15d30dbd0e24e0f6800dccf2_cgraph.svg" width="464" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a31395d7a15d30dbd0e24e0f6800dccf2_icgraph.svg" width="352" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaa10482aaaf404deb85d1c214c6aaea4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa10482aaaf404deb85d1c214c6aaea4">&sect;&nbsp;</a></span>xfs_create_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_create_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new file. </p>
<p>This only creates an entry in the buffered allocation table. The file will not be stored to flash before commit is called.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">size</td><td>Size of file </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_aaa10482aaaf404deb85d1c214c6aaea4_cgraph.svg" width="507" height="374"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_aaa10482aaaf404deb85d1c214c6aaea4_icgraph.svg" width="344" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aeb34fc9c9f7a98b52c85b58718cac560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb34fc9c9f7a98b52c85b58718cac560">&sect;&nbsp;</a></span>xfs_defragment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_defragment </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defragments the file system to optimize the free space. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>

</div>
</div>
<a id="a846fd4b556aae87a84be2435336e17ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a846fd4b556aae87a84be2435336e17ca">&sect;&nbsp;</a></span>xfs_delete_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_delete_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes the file with the given type and identifier. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a846fd4b556aae87a84be2435336e17ca_cgraph.svg" width="338" height="222"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a846fd4b556aae87a84be2435336e17ca_icgraph.svg" width="343" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a51fef9f1383012edd34a7ad0608f90eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51fef9f1383012edd34a7ad0608f90eb">&sect;&nbsp;</a></span>xfs_file_exists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_file_exists </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a file with given type and identifier exists. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a51fef9f1383012edd34a7ad0608f90eb_cgraph.svg" width="276" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a51fef9f1383012edd34a7ad0608f90eb_icgraph.svg" width="282" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a45314021b3ff3d7ba73714877bd92e72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45314021b3ff3d7ba73714877bd92e72">&sect;&nbsp;</a></span>xfs_find_all_files()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_find_all_files </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>max_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds all files and stores the type and identifier of each file in the given buffers. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Pointer to list for types </td></tr>
    <tr><td class="paramname">identifier</td><td>Pointer to list for identifiers </td></tr>
    <tr><td class="paramname">max_count</td><td>Max number of list </td></tr>
    <tr><td class="paramname">count</td><td>Pointer to variable to hold count of files </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a45314021b3ff3d7ba73714877bd92e72_cgraph.svg" width="290" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a45314021b3ff3d7ba73714877bd92e72_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a975b6f2d064a2205832dfc2b7e0b7799"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a975b6f2d064a2205832dfc2b7e0b7799">&sect;&nbsp;</a></span>xfs_format()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_format </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formats the file system to an empty state. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a975b6f2d064a2205832dfc2b7e0b7799_cgraph.svg" width="310" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a975b6f2d064a2205832dfc2b7e0b7799_icgraph.svg" width="252" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad8bf4b21f48539701e1cbeb7a4001912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8bf4b21f48539701e1cbeb7a4001912">&sect;&nbsp;</a></span>xfs_get_file_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_get_file_data </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>data_offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>max_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the data from the file into the given buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to buffer to store data in </td></tr>
    <tr><td class="paramname">data_offset</td><td>Offset into file to start read, must be 4-byte aligned </td></tr>
    <tr><td class="paramname">max_size</td><td>Maximum size to read </td></tr>
    <tr><td class="paramname">size</td><td>Pointer to variable to store size read </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_ad8bf4b21f48539701e1cbeb7a4001912_cgraph.svg" width="322" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afcbd27cc31bf59c4ecf4520a56c871a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcbd27cc31bf59c4ecf4520a56c871a6">&sect;&nbsp;</a></span>xfs_get_file_pointer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_get_file_pointer </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the file data in flash. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to file contents </td></tr>
    <tr><td class="paramname">size</td><td>Size of contents </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_afcbd27cc31bf59c4ecf4520a56c871a6_cgraph.svg" width="338" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_afcbd27cc31bf59c4ecf4520a56c871a6_icgraph.svg" width="375" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a827d597e895a84ac2619f1bec910e6a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a827d597e895a84ac2619f1bec910e6a6">&sect;&nbsp;</a></span>xfs_get_largest_free_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_get_largest_free_size </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the size of the largest free section. </p>
<p>This is the size of the largest file that can be stored without deleting files or defragmenting.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>Pointer to variable that will hold free size </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a827d597e895a84ac2619f1bec910e6a6_cgraph.svg" width="330" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a827d597e895a84ac2619f1bec910e6a6_icgraph.svg" width="414" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7b8e251b6d5e10731cd7a9379e67b8be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b8e251b6d5e10731cd7a9379e67b8be">&sect;&nbsp;</a></span>xfs_get_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_get_size </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the size of file with given type and identifier. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">size</td><td>Pointer to variable to hold size of file </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a7b8e251b6d5e10731cd7a9379e67b8be_cgraph.svg" width="292" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a7b8e251b6d5e10731cd7a9379e67b8be_icgraph.svg" width="331" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0f9263257de25f5a132282b680db4622"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f9263257de25f5a132282b680db4622">&sect;&nbsp;</a></span>xfs_ignore_lock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_ignore_lock </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ignore</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function to ignore locking mechanism. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a0f9263257de25f5a132282b680db4622_icgraph.svg" width="350" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acb8c539cd456d3e5789a479ae0642acd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb8c539cd456d3e5789a479ae0642acd">&sect;&nbsp;</a></span>xfs_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_init </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the file system. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>Address of application storage </td></tr>
    <tr><td class="paramname">size</td><td>Size of application storage </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_acb8c539cd456d3e5789a479ae0642acd_cgraph.svg" width="296" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_acb8c539cd456d3e5789a479ae0642acd_icgraph.svg" width="204" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a48e596dbfbcdc817280a503fdf637a71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48e596dbfbcdc817280a503fdf637a71">&sect;&nbsp;</a></span>xfs_search_for_files_of_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_search_for_files_of_type </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>max_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Searches for files of a specific type and stores the identifier of each file in the given buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Pointer to list for identifiers </td></tr>
    <tr><td class="paramname">max_count</td><td>Max number of identifiers for list </td></tr>
    <tr><td class="paramname">count</td><td>Pointer to variable to hold count of files </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a48e596dbfbcdc817280a503fdf637a71_cgraph.svg" width="314" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a48e596dbfbcdc817280a503fdf637a71_icgraph.svg" width="364" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9fadb27c69014a6f606f00781d0c24e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fadb27c69014a6f606f00781d0c24e5">&sect;&nbsp;</a></span>xfs_write_file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xfs_write_file </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>identifier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>data_offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes the file data to flash at given offset. </p>
<p>Make sure to clear the file before writing data.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xfs_8h.xhtml#a3107c84a19e5d8d2e0a869d4ff6af8a5">xfs_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Type of file </td></tr>
    <tr><td class="paramname">identifier</td><td>Identifier of file </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to file contents to write </td></tr>
    <tr><td class="paramname">data_offset</td><td>Offset into file to write contents </td></tr>
    <tr><td class="paramname">size</td><td>Size of contents </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a9fadb27c69014a6f606f00781d0c24e5_cgraph.svg" width="295" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xfs_8h_a9fadb27c69014a6f606f00781d0c24e5_icgraph.svg" width="332" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
