<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: XeThru X4 radar driver - X4Driver</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">XeThru X4 radar driver - X4Driver </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>X4Driver is a driver module used to interact with the XeThru X4 radar chip. X4Driver is implemented as a platform independent component, that is designed to be portable to a variety of platforms. It contains all elements needed to initialize, configure and read data from the X4 radar chip.</p>
<p>Most of the X4Driver methods are used to configure the X4 chip directly. Reference on the different X4 registers and values can be found in the X4 datasheet.</p>
<h2>X4Driver overall features</h2>
<ul>
<li>X4 internal MCU firmware</li>
<li>Low level configuration of X4</li>
<li>Higher level abstract methods for X4</li>
</ul>
<h2>Typical use of X4Driver</h2>
<p>Here is a simple example on how to use X4Driver to configure the XeThru X4 radar chip, and start radar sweeping:</p>
<div class="fragment"><div class="line"><a class="code" href="x4driver_8h.xhtml#a86dbadcb2e415d23600ef1bb31c9dbde">x4driver_init</a>(x4driver);</div><div class="line"><a class="code" href="x4driver_8h.xhtml#a5b607d8c62783dfffb46c688ec90781e">x4driver_set_dac_min</a>(x4driver, 500);</div><div class="line"><a class="code" href="x4driver_8h.xhtml#aef1600f41584063c096ca246aafdee40">x4driver_set_dac_max</a>(x4driver, 1500);</div><div class="line"><a class="code" href="x4driver_8h.xhtml#a62754f21c23479836bc83d5e96514602">x4driver_set_iterations</a>(x4driver, 16);</div><div class="line"><a class="code" href="x4driver_8h.xhtml#a7ac1a5f45b02284571e297c672ca61de">x4driver_set_pulses_per_step</a>(x4driver, 10);</div><div class="line"><a class="code" href="x4driver_8h.xhtml#aca2f2487a46b5debe6656dd21a816e97">x4driver_set_downconversion</a>(x4driver, 1); <span class="comment">// Radar data as downconverted baseband IQ, not RF.</span></div><div class="line"><a class="code" href="x4driver_8h.xhtml#a6c801c9a8b3010ebe47eb1ee881c9503">x4driver_set_frame_area_offset</a>(x4driver, 0.6); <span class="comment">// Given by module HW. Makes frame_area start = 0 at front of module.</span></div><div class="line"><a class="code" href="x4driver_8h.xhtml#a59bb6ec7d08888223c01bffa2aedcf50">x4driver_set_frame_area</a>(x4driver, 0.5, 4.0); <span class="comment">// Observe from 0.5m to 4.0m.</span></div><div class="line"><a class="code" href="x4driver_8h.xhtml#af6c32021e202b0dfe0a8b104ebd7a0b6">x4driver_set_fps</a>(x4driver, 20); <span class="comment">// Generate 20 frames per second</span></div></div><!-- fragment --><h2>API documentation</h2>
<p>API functions and macros are documented in <a class="el" href="x4driver_8h.xhtml" title="Platform independent driver to interface with x4 radar. ">x4driver.h</a>.</p>
<h2>XEP use of X4Driver</h2>
<p>X4Driver is an integral part of the XeThru Embedded Platform, providing XEP with a full-featured direct access to the X4 radar chip. In XEP, this is typically used in <a class="el" href="task__radar_8c.xhtml">task_radar.c</a>, which does the initial setup of X4Driver and also facilitates the asynchronous access to X4Driver, such as event-driven read from X4. Also, <a class="el" href="task__radar_8c.xhtml">task_radar.c</a> contains the XEP port of X4Driver dependencies, e.g. semaphores, timers etc. Another use of X4Driver in XEP is demonstrated in <a class="el" href="xep__application__mcp__callbacks_8c.xhtml">xep_application_mcp_callbacks.c</a>, where all external serial host commands are implemented.</p>
<h2>Custom port of X4Driver</h2>
<p>X4Driver is implemented in a way that enables it to be used on any device or platform providing the necessary dependencies. X4Driver itself is written in C, with a small set of abstractions that needs to be implemented specifically for the running platform.</p>
<p>The features that need to be ported to a custom platform are:</p>
<ul>
<li><a class="el" href="struct_x4_driver_lock__t.xhtml" title="Abstract lock struct to allow for platform independent configuration of Locks. ">X4DriverLock_t</a>: Semaphore mechanism</li>
<li><a class="el" href="struct_x4_driver_timer__t.xhtml" title="Abstract timer struct to allow for platform independent configuration of Timers. ">X4DriverTimer_t</a>: Timers used by X4Driver</li>
<li><a class="el" href="struct_x4_driver_callbacks__t.xhtml" title="Collection of callbacks, used to configure interact with the X4 chip. ">X4DriverCallbacks_t</a>: Typically hardware callbacks, e.g. SPI and physical pin use</li>
</ul>
<p>For examples on how this is implemented for XEP, have a look at <a class="el" href="task__radar_8c.xhtml">task_radar.c</a>.</p>
<p>The following code illustrates how this is done in <a class="el" href="task__radar_8c.xhtml">task_radar.c</a>, in the <a class="el" href="task__radar_8c.xhtml#a8e1bd6586c853a5ad3fd6df6c3b930bf" title="Initialize Radar task. ">task_radar_init()</a> method:</p>
<div class="fragment"><div class="line"></div><div class="line">    <span class="comment">// X4Driver lock mechanism, including methods for locking and unlocking.</span></div><div class="line">    <a class="code" href="struct_x4_driver_lock__t.xhtml">X4DriverLock_t</a> lock;</div><div class="line">    lock.<a class="code" href="struct_x4_driver_lock__t.xhtml#acd48013d374544136574d75decca02a8">object</a> = (<span class="keywordtype">void</span>*)xSemaphoreCreateRecursiveMutex();</div><div class="line">    lock.<a class="code" href="struct_x4_driver_lock__t.xhtml#a6047816e644ab7348e0394800f256783">lock</a> = <a class="code" href="task__radar_8c.xhtml#aff4b9d0838128b37cbe6cbca67f3c2d8">x4driver_callback_take_sem</a>;</div><div class="line">    lock.<a class="code" href="struct_x4_driver_lock__t.xhtml#a068082df07f8424c9c85c641df19a70b">unlock</a> = <a class="code" href="task__radar_8c.xhtml#a8452a91801c0e7213eba56c0986d7303">x4driver_callback_give_sem</a>;</div><div class="line"></div><div class="line">    <span class="comment">// X4Driver timer for generating sweep FPS on MCU. Not used when sweep FPS is generated on X4.</span></div><div class="line">    uint32_t timer_id_sweep = 2;</div><div class="line">    <a class="code" href="struct_x4_driver_timer__t.xhtml">X4DriverTimer_t</a> timer_sweep;</div><div class="line">    timer_sweep.<a class="code" href="struct_x4_driver_timer__t.xhtml#afc9ccf4373b70a94f13d22b0317a20c6">object</a> = xTimerCreate(<span class="stringliteral">&quot;X4Driver_sweep_timer&quot;</span>, 1000 / portTICK_PERIOD_MS, pdTRUE, (<span class="keywordtype">void</span>*)timer_id_sweep, <a class="code" href="task__radar_8c.xhtml#a88b56fb0b5f851081e2019ebcd39c16d">x4driver_timer_sweep_timeout</a>);</div><div class="line">    timer_sweep.<a class="code" href="struct_x4_driver_timer__t.xhtml#ab876429156eac2c160610eced645276e">configure</a> = <a class="code" href="task__radar_8c.xhtml#a816fc4fa062c45ec3e681f58b3499cbc">x4driver_timer_set_timer_timeout_frequency</a>;</div><div class="line"></div><div class="line">    <span class="comment">// X4Driver timer used for driver action timeout.</span></div><div class="line">    uint32_t timer_id_action = 3;</div><div class="line">    <a class="code" href="struct_x4_driver_timer__t.xhtml">X4DriverTimer_t</a> timer_action;</div><div class="line">    timer_action.<a class="code" href="struct_x4_driver_timer__t.xhtml#afc9ccf4373b70a94f13d22b0317a20c6">object</a> = xTimerCreate(<span class="stringliteral">&quot;X4Driver_action_timer&quot;</span>, 1000 / portTICK_PERIOD_MS, pdTRUE, (<span class="keywordtype">void</span>*)timer_id_action, <a class="code" href="task__radar_8c.xhtml#afccac1c7313b53fb1e7554dc1fa48e9e">x4driver_timer_action_timeout</a>);</div><div class="line">    timer_action.<a class="code" href="struct_x4_driver_timer__t.xhtml#ab876429156eac2c160610eced645276e">configure</a> = <a class="code" href="task__radar_8c.xhtml#a816fc4fa062c45ec3e681f58b3499cbc">x4driver_timer_set_timer_timeout_frequency</a>;</div><div class="line"></div><div class="line">    <span class="comment">// X4Driver callback methods.</span></div><div class="line">    <a class="code" href="struct_x4_driver_callbacks__t.xhtml">X4DriverCallbacks_t</a> x4driver_callbacks;</div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#ad9e36f76de61a2950d84615ad777536b">pin_set_enable</a> = <a class="code" href="task__radar_8c.xhtml#ac435da96b3f4e5737f4c74ceae0d768f">x4driver_callback_pin_set_enable</a>;   <span class="comment">// X4 ENABLE pin</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#a98af5096c93eb06f069231978a4cf1e7">spi_read</a> = <a class="code" href="task__radar_8c.xhtml#a1da830412d2139fcff036c9ed19d3353">x4driver_callback_spi_read</a>;               <span class="comment">// SPI read method</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#a3c31f2b805879ce9d0bbf35179855a45">spi_write</a> = <a class="code" href="task__radar_8c.xhtml#ae4c33e41c848443aa7dcddda26f9cc25">x4driver_callback_spi_write</a>;             <span class="comment">// SPI write method</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#ae0df79816073159d9df3420b58b2aec3">spi_write_read</a> = <a class="code" href="task__radar_8c.xhtml#aa8b3c8912f612a62ff7fa141dfabd13b">x4driver_callback_spi_write_read</a>;   <span class="comment">// SPI write and read method</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#a884d4fbc22b64d2b5b420e115ce74cb8">wait_us</a> = <a class="code" href="task__radar_8c.xhtml#a3daa8e1e64e92bf7c33923c8b5c69db9">x4driver_callback_wait_us</a>;                 <span class="comment">// Delay method</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#a3208a2082a85a9ba1947e317a7971b9e">notify_data_ready</a> = <a class="code" href="task__radar_8c.xhtml#a6457a77ea4d90d4174deca8f8b772360">x4driver_notify_data_ready</a>;      <span class="comment">// Notification when radar data is ready to read</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#ae880f18a2a489924e759961848bd3fe7">trigger_sweep</a> = <a class="code" href="task__radar_8c.xhtml#a5b304d710c485763ad4596454b7a4636">x4driver_trigger_sweep_pin</a>;          <span class="comment">// Method to set X4 sweep trigger pin</span></div><div class="line">    x4driver_callbacks.<a class="code" href="struct_x4_driver_callbacks__t.xhtml#ab81558917b3b4d47fdb626f98c1ec563">enable_data_ready_isr</a> = <a class="code" href="task__radar_8c.xhtml#a4fee3ee4025e6d4e8dc667598f8bc27f">x4driver_enable_ISR</a>;         <span class="comment">// Control data ready notification ISR</span></div><div class="line"></div></div><!-- fragment --></div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
