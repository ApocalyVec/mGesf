<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/xt_system.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">xt_system.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>System level hardware functionality.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="board_8h_source.xhtml">board.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="xep__hal_8h_source.xhtml">xep_hal.h</a>&quot;</code><br />
<code>#include &quot;FreeRTOS.h&quot;</code><br />
<code>#include &quot;task.h&quot;</code><br />
<code>#include &quot;<a class="el" href="sams70_8h_source.xhtml">sams70.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="xt__system_8h_source.xhtml">xt_system.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="xt__config_8h_source.xhtml">xt_config.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for xt_system.c:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c__incl.svg" width="772" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a7cfd045358d23b8b6d3bcd76c4cd76c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a7cfd045358d23b8b6d3bcd76c4cd76c4">CERT_MODE_GPNVM_BIT</a>&#160;&#160;&#160;3</td></tr>
<tr class="separator:a7cfd045358d23b8b6d3bcd76c4cd76c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d108b2c06f3e9a20eebe4fa7308b2f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a8d108b2c06f3e9a20eebe4fa7308b2f6">EXT_CLOCK_GPNVM_BIT</a>&#160;&#160;&#160;4</td></tr>
<tr class="separator:a8d108b2c06f3e9a20eebe4fa7308b2f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea3a93706947ed27f21f9b6ec81b9ef9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#aea3a93706947ed27f21f9b6ec81b9ef9">RESET_REASON_GPBR_REG</a>&#160;&#160;&#160;4</td></tr>
<tr class="separator:aea3a93706947ed27f21f9b6ec81b9ef9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5774e972fffadfdf126706ef5d5505"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a7a5774e972fffadfdf126706ef5d5505">RESET_COUNT_GPBR_REG</a>&#160;&#160;&#160;5</td></tr>
<tr class="separator:a7a5774e972fffadfdf126706ef5d5505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff6da00b6549edf1a8f9a57f86e59d3b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#aff6da00b6549edf1a8f9a57f86e59d3b">CRASH_COUNT_GPBR_REG</a>&#160;&#160;&#160;6</td></tr>
<tr class="separator:aff6da00b6549edf1a8f9a57f86e59d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a2e87d75c02bb78d1462ca076da4a50"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a5a2e87d75c02bb78d1462ca076da4a50">EXT_MEM_DISABLE_GPNVM_BIT</a>&#160;&#160;&#160;2</td></tr>
<tr class="separator:a5a2e87d75c02bb78d1462ca076da4a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd0d4b9988142b1530d87e0a3adb46f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#abd0d4b9988142b1530d87e0a3adb46f6">GPBR_READ</a>(reg)&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71_q21__base.xhtml#ga5a1a653525bbbba1b545b920802d3169">GPBR</a>-&gt;SYS_GPBR[reg]</td></tr>
<tr class="separator:abd0d4b9988142b1530d87e0a3adb46f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a966e4b8e898ef39e4b47c86463646932"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a966e4b8e898ef39e4b47c86463646932">GPBR_WRITE</a>(reg,  val)&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71_q21__base.xhtml#ga5a1a653525bbbba1b545b920802d3169">GPBR</a>-&gt;SYS_GPBR[reg]=val</td></tr>
<tr class="separator:a966e4b8e898ef39e4b47c86463646932"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:afd2617026109aed181bfdf4506d1961d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#afd2617026109aed181bfdf4506d1961d">xt_task_report_idle</a> (void)</td></tr>
<tr class="separator:afd2617026109aed181bfdf4506d1961d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4987330d65f24fe1d70291545f0a7870"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a4987330d65f24fe1d70291545f0a7870">xt_task_report_active</a> (void *task)</td></tr>
<tr class="separator:a4987330d65f24fe1d70291545f0a7870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eae6ea89e4a10f1b4406019ff8fc8ce"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a2eae6ea89e4a10f1b4406019ff8fc8ce">xt_idle_sleep</a> (void)</td></tr>
<tr class="memdesc:a2eae6ea89e4a10f1b4406019ff8fc8ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the processor in an idle state waiting for interrupt.  <a href="#a2eae6ea89e4a10f1b4406019ff8fc8ce">More...</a><br /></td></tr>
<tr class="separator:a2eae6ea89e4a10f1b4406019ff8fc8ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa19e5f6d86723f910b65cf0aadc2ec58"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#aa19e5f6d86723f910b65cf0aadc2ec58">xt_deep_sleep</a> (void)</td></tr>
<tr class="memdesc:aa19e5f6d86723f910b65cf0aadc2ec58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the processor in a deep sleep state.  <a href="#aa19e5f6d86723f910b65cf0aadc2ec58">More...</a><br /></td></tr>
<tr class="separator:aa19e5f6d86723f910b65cf0aadc2ec58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a8e58faffa8a7b0934ca76bc1fa5ef6fa">xt_wait</a> (uint32_t ms_to_wait)</td></tr>
<tr class="memdesc:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the calling task to wait and yields to another task.  <a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">More...</a><br /></td></tr>
<tr class="separator:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a7d0980e5e1fb4f42a5d10102c91609f4">xt_delay_us</a> (uint32_t us_to_wait)</td></tr>
<tr class="memdesc:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delays the execution for the specified number of microseconds.  <a href="#a7d0980e5e1fb4f42a5d10102c91609f4">More...</a><br /></td></tr>
<tr class="separator:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2af126089abe1d676edfc1400d0bf7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ace2af126089abe1d676edfc1400d0bf7">xt_software_reset</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:ace2af126089abe1d676edfc1400d0bf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers a software reset of MCU.  <a href="#ace2af126089abe1d676edfc1400d0bf7">More...</a><br /></td></tr>
<tr class="separator:ace2af126089abe1d676edfc1400d0bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a368ae5b6898f4745b8ccf4d3d15b38ac">xt_use_external_memory</a> (bool use)</td></tr>
<tr class="memdesc:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Controls whether or not to use external memory.  <a href="#a368ae5b6898f4745b8ccf4d3d15b38ac">More...</a><br /></td></tr>
<tr class="separator:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31dcedbddd6f896d0157ce276d449fd4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a31dcedbddd6f896d0157ce276d449fd4">xt_external_memory_enabled</a> (void)</td></tr>
<tr class="memdesc:a31dcedbddd6f896d0157ce276d449fd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if external memory is enabled.  <a href="#a31dcedbddd6f896d0157ce276d449fd4">More...</a><br /></td></tr>
<tr class="separator:a31dcedbddd6f896d0157ce276d449fd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf93e159c610831f349d07c00962f80d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#acf93e159c610831f349d07c00962f80d">xt_fast_memory_enabled</a> (void)</td></tr>
<tr class="memdesc:acf93e159c610831f349d07c00962f80d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if fast memory is enabled.  <a href="#acf93e159c610831f349d07c00962f80d">More...</a><br /></td></tr>
<tr class="separator:acf93e159c610831f349d07c00962f80d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88a96f708160bd3ccf8a8f0986f51d88"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a88a96f708160bd3ccf8a8f0986f51d88">xt_get_crash_count</a> (void)</td></tr>
<tr class="memdesc:a88a96f708160bd3ccf8a8f0986f51d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get crash count.  <a href="#a88a96f708160bd3ccf8a8f0986f51d88">More...</a><br /></td></tr>
<tr class="separator:a88a96f708160bd3ccf8a8f0986f51d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1edd0aeeab16f7278315403bcd6a29b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ac1edd0aeeab16f7278315403bcd6a29b">xt_reset_crash_count</a> (void)</td></tr>
<tr class="memdesc:ac1edd0aeeab16f7278315403bcd6a29b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets crash count.  <a href="#ac1edd0aeeab16f7278315403bcd6a29b">More...</a><br /></td></tr>
<tr class="separator:ac1edd0aeeab16f7278315403bcd6a29b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c4b3201bcc90f24579249f3b6297fb3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a3c4b3201bcc90f24579249f3b6297fb3">xt_get_reset_count</a> (void)</td></tr>
<tr class="memdesc:a3c4b3201bcc90f24579249f3b6297fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get reset count.  <a href="#a3c4b3201bcc90f24579249f3b6297fb3">More...</a><br /></td></tr>
<tr class="separator:a3c4b3201bcc90f24579249f3b6297fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a389bc6b896aa270d8a1e473dd9c32ffc">xt_set_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the cause of the coming software reset.  <a href="#a389bc6b896aa270d8a1e473dd9c32ffc">More...</a><br /></td></tr>
<tr class="separator:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a5e62effeb5c5323c3d423225a6a3dbf3">xt_get_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *reason)</td></tr>
<tr class="memdesc:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cause of the previous software reset.  <a href="#a5e62effeb5c5323c3d423225a6a3dbf3">More...</a><br /></td></tr>
<tr class="separator:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2426ce12540f282ecbb2a73534d8ecb4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a2426ce12540f282ecbb2a73534d8ecb4">xt_use_external_clock</a> (bool use)</td></tr>
<tr class="memdesc:a2426ce12540f282ecbb2a73534d8ecb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instructs the firmware whether to use either a crystal oscillator or external clock.  <a href="#a2426ce12540f282ecbb2a73534d8ecb4">More...</a><br /></td></tr>
<tr class="separator:a2426ce12540f282ecbb2a73534d8ecb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56773fb0b5a5ce0e8e4633581137100d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a56773fb0b5a5ce0e8e4633581137100d">xt_using_external_clock</a> (void)</td></tr>
<tr class="memdesc:a56773fb0b5a5ce0e8e4633581137100d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the crystal oscillator or external clock should be used.  <a href="#a56773fb0b5a5ce0e8e4633581137100d">More...</a><br /></td></tr>
<tr class="separator:a56773fb0b5a5ce0e8e4633581137100d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d576cef4eead3e26b3adf733cd487c2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a8d576cef4eead3e26b3adf733cd487c2">xt_get_certification_submode</a> (void)</td></tr>
<tr class="memdesc:a8d576cef4eead3e26b3adf733cd487c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the submode of the module for certification.  <a href="#a8d576cef4eead3e26b3adf733cd487c2">More...</a><br /></td></tr>
<tr class="separator:a8d576cef4eead3e26b3adf733cd487c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b11107e926aa1fb774e745fb5fcc624"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a9b11107e926aa1fb774e745fb5fcc624">xt_enable_certification_mode</a> (bool <a class="el" href="task__radar_8c.xhtml#a3d63c44ce107c7bb17d4baed93c1292e">cert_mode</a>)</td></tr>
<tr class="memdesc:a9b11107e926aa1fb774e745fb5fcc624"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables certification mode.  <a href="#a9b11107e926aa1fb774e745fb5fcc624">More...</a><br /></td></tr>
<tr class="separator:a9b11107e926aa1fb774e745fb5fcc624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1b1f4d4aeef95ca21470d9b67aa2baa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ac1b1f4d4aeef95ca21470d9b67aa2baa">xt_is_in_certification_mode</a> (void)</td></tr>
<tr class="memdesc:ac1b1f4d4aeef95ca21470d9b67aa2baa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether or not certification mode is enabled.  <a href="#ac1b1f4d4aeef95ca21470d9b67aa2baa">More...</a><br /></td></tr>
<tr class="separator:ac1b1f4d4aeef95ca21470d9b67aa2baa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f57228b9448df87a3f5f30968b3fa8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#af1f57228b9448df87a3f5f30968b3fa8">xt_get_operation_mode</a> (void)</td></tr>
<tr class="memdesc:af1f57228b9448df87a3f5f30968b3fa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the operation mode of the module.  <a href="#af1f57228b9448df87a3f5f30968b3fa8">More...</a><br /></td></tr>
<tr class="separator:af1f57228b9448df87a3f5f30968b3fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ac6fbcd6ee86a6cc239db400a2f9560a6">xt_get_system_timer_us</a> (void)</td></tr>
<tr class="memdesc:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the system timer in microseconds.  <a href="#ac6fbcd6ee86a6cc239db400a2f9560a6">More...</a><br /></td></tr>
<tr class="separator:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1aeb63655f640d476a8d095dda591ae"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ab1aeb63655f640d476a8d095dda591ae">get_pc</a> (void)</td></tr>
<tr class="separator:ab1aeb63655f640d476a8d095dda591ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b086edc4d10515d81e925efba022638"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a9b086edc4d10515d81e925efba022638">xt_get_program_counter_from_task_handle</a> (void *handle)</td></tr>
<tr class="memdesc:a9b086edc4d10515d81e925efba022638"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the program counter of the specified task.  <a href="#a9b086edc4d10515d81e925efba022638">More...</a><br /></td></tr>
<tr class="separator:a9b086edc4d10515d81e925efba022638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab218029969f3b92b546b111d1c1e03d0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ab218029969f3b92b546b111d1c1e03d0">xt_get_stack_area_from_task_handle</a> (void *handle, uint32_t stack_size, void **stack_pointer, uint32_t *depth)</td></tr>
<tr class="memdesc:ab218029969f3b92b546b111d1c1e03d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the stack start pointer and depth for specified task.  <a href="#ab218029969f3b92b546b111d1c1e03d0">More...</a><br /></td></tr>
<tr class="separator:ab218029969f3b92b546b111d1c1e03d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba84ec695575730f2fd3b4f75eefe28a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#aba84ec695575730f2fd3b4f75eefe28a">xt_feed_watchdog</a> (void)</td></tr>
<tr class="memdesc:aba84ec695575730f2fd3b4f75eefe28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the watchdog timer.  <a href="#aba84ec695575730f2fd3b4f75eefe28a">More...</a><br /></td></tr>
<tr class="separator:aba84ec695575730f2fd3b4f75eefe28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe26eed3d46d8d18c673b026a4c1af49"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#abe26eed3d46d8d18c673b026a4c1af49">xt_get_cpu_load</a> (void)</td></tr>
<tr class="memdesc:abe26eed3d46d8d18c673b026a4c1af49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current average CPU load.  <a href="#abe26eed3d46d8d18c673b026a4c1af49">More...</a><br /></td></tr>
<tr class="separator:abe26eed3d46d8d18c673b026a4c1af49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0abc6238971ef9384a4f3d73736651e1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a0abc6238971ef9384a4f3d73736651e1">xt_register_crashdump_callback</a> (int(*callback)(<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>, const char *, bool))</td></tr>
<tr class="memdesc:a0abc6238971ef9384a4f3d73736651e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register callback for crash dump.  <a href="#a0abc6238971ef9384a4f3d73736651e1">More...</a><br /></td></tr>
<tr class="separator:a0abc6238971ef9384a4f3d73736651e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a362d4391cf2e203a9ed7b1dbbfe65f25">xt_trigger_crash</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> crash_reason, const char *crash_info, bool full_dump)</td></tr>
<tr class="memdesc:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers a crashdump and reset of module.  <a href="#a362d4391cf2e203a9ed7b1dbbfe65f25">More...</a><br /></td></tr>
<tr class="separator:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a2e83b64bfd57689085381db4ac7dee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70_j19__cmsis.xhtml#ga3a2e83b64bfd57689085381db4ac7dee">WDT_Handler</a> (void)</td></tr>
<tr class="separator:ga3a2e83b64bfd57689085381db4ac7dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga167104520375d36a7d8e8263779920b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70_j19__cmsis.xhtml#ga167104520375d36a7d8e8263779920b0">TC1_Handler</a> (void)</td></tr>
<tr class="separator:ga167104520375d36a7d8e8263779920b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4316287f7b348fc5799124596685b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#aad4316287f7b348fc5799124596685b9">xt_has_bootloader</a> (void)</td></tr>
<tr class="memdesc:aad4316287f7b348fc5799124596685b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if we have a bootloader available.  <a href="#aad4316287f7b348fc5799124596685b9">More...</a><br /></td></tr>
<tr class="separator:aad4316287f7b348fc5799124596685b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bd9bef2216392003bffa6c552e0779b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a8bd9bef2216392003bffa6c552e0779b">xt_bootloader_string</a> (void)</td></tr>
<tr class="memdesc:a8bd9bef2216392003bffa6c552e0779b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a string identifying what type of bootloader we have, or "" if we don't.  <a href="#a8bd9bef2216392003bffa6c552e0779b">More...</a><br /></td></tr>
<tr class="separator:a8bd9bef2216392003bffa6c552e0779b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ae67f2f7704e429c9f2db2bb475c1d382"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#ae67f2f7704e429c9f2db2bb475c1d382">cpu_load</a> = 0</td></tr>
<tr class="separator:ae67f2f7704e429c9f2db2bb475c1d382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20a18651e683353184b2ba8e4fa9b306"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a20a18651e683353184b2ba8e4fa9b306">_end_fast_heap_memory</a></td></tr>
<tr class="separator:a20a18651e683353184b2ba8e4fa9b306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfe98445da670387fc96c687f29e05ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#abfe98445da670387fc96c687f29e05ee">_start_fast_heap_memory</a></td></tr>
<tr class="separator:abfe98445da670387fc96c687f29e05ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d4052c5fedfdd65c7aa20e53e4187df"><td class="memItemLeft" align="right" valign="top">int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a1d4052c5fedfdd65c7aa20e53e4187df">crashdump_callback</a> )(<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>, const char *, bool) = NULL</td></tr>
<tr class="separator:a1d4052c5fedfdd65c7aa20e53e4187df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4889407218b3ebcbb20e578911912524"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group___s_a_m_e70_j19__cmsis.xhtml#gab68dc58361a6bbb8db7664200fc9cdda">DeviceVectors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xt__system_8c.xhtml#a4889407218b3ebcbb20e578911912524">exception_table</a></td></tr>
<tr class="separator:a4889407218b3ebcbb20e578911912524"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>System level hardware functionality. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a7cfd045358d23b8b6d3bcd76c4cd76c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cfd045358d23b8b6d3bcd76c4cd76c4">&sect;&nbsp;</a></span>CERT_MODE_GPNVM_BIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CERT_MODE_GPNVM_BIT&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aff6da00b6549edf1a8f9a57f86e59d3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff6da00b6549edf1a8f9a57f86e59d3b">&sect;&nbsp;</a></span>CRASH_COUNT_GPBR_REG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CRASH_COUNT_GPBR_REG&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d108b2c06f3e9a20eebe4fa7308b2f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d108b2c06f3e9a20eebe4fa7308b2f6">&sect;&nbsp;</a></span>EXT_CLOCK_GPNVM_BIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EXT_CLOCK_GPNVM_BIT&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a2e87d75c02bb78d1462ca076da4a50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a2e87d75c02bb78d1462ca076da4a50">&sect;&nbsp;</a></span>EXT_MEM_DISABLE_GPNVM_BIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EXT_MEM_DISABLE_GPNVM_BIT&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abd0d4b9988142b1530d87e0a3adb46f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd0d4b9988142b1530d87e0a3adb46f6">&sect;&nbsp;</a></span>GPBR_READ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GPBR_READ</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">reg</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71_q21__base.xhtml#ga5a1a653525bbbba1b545b920802d3169">GPBR</a>-&gt;SYS_GPBR[reg]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a966e4b8e898ef39e4b47c86463646932"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a966e4b8e898ef39e4b47c86463646932">&sect;&nbsp;</a></span>GPBR_WRITE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GPBR_WRITE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">reg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71_q21__base.xhtml#ga5a1a653525bbbba1b545b920802d3169">GPBR</a>-&gt;SYS_GPBR[reg]=val</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7a5774e972fffadfdf126706ef5d5505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a5774e972fffadfdf126706ef5d5505">&sect;&nbsp;</a></span>RESET_COUNT_GPBR_REG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RESET_COUNT_GPBR_REG&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea3a93706947ed27f21f9b6ec81b9ef9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea3a93706947ed27f21f9b6ec81b9ef9">&sect;&nbsp;</a></span>RESET_REASON_GPBR_REG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RESET_REASON_GPBR_REG&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ab1aeb63655f640d476a8d095dda591ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1aeb63655f640d476a8d095dda591ae">&sect;&nbsp;</a></span>get_pc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void * get_pc </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ab1aeb63655f640d476a8d095dda591ae_icgraph.svg" width="304" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8bd9bef2216392003bffa6c552e0779b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bd9bef2216392003bffa6c552e0779b">&sect;&nbsp;</a></span>xt_bootloader_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* xt_bootloader_string </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a string identifying what type of bootloader we have, or "" if we don't. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a8bd9bef2216392003bffa6c552e0779b_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a8bd9bef2216392003bffa6c552e0779b_icgraph.svg" width="371" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa19e5f6d86723f910b65cf0aadc2ec58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa19e5f6d86723f910b65cf0aadc2ec58">&sect;&nbsp;</a></span>xt_deep_sleep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_deep_sleep </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the processor in a deep sleep state. </p>
<p>A power toggle or reset is required to wake it</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_aa19e5f6d86723f910b65cf0aadc2ec58_icgraph.svg" width="331" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7d0980e5e1fb4f42a5d10102c91609f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d0980e5e1fb4f42a5d10102c91609f4">&sect;&nbsp;</a></span>xt_delay_us()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_delay_us </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>us_to_wait</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delays the execution for the specified number of microseconds. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">us_to_wait</td><td>Microseconds to delay </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a7d0980e5e1fb4f42a5d10102c91609f4_cgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a7d0980e5e1fb4f42a5d10102c91609f4_icgraph.svg" width="342" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9b11107e926aa1fb774e745fb5fcc624"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b11107e926aa1fb774e745fb5fcc624">&sect;&nbsp;</a></span>xt_enable_certification_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_enable_certification_mode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cert_mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables certification mode. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a9b11107e926aa1fb774e745fb5fcc624_icgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a31dcedbddd6f896d0157ce276d449fd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31dcedbddd6f896d0157ce276d449fd4">&sect;&nbsp;</a></span>xt_external_memory_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_external_memory_enabled </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if external memory is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a31dcedbddd6f896d0157ce276d449fd4_icgraph.svg" width="868" height="899"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acf93e159c610831f349d07c00962f80d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf93e159c610831f349d07c00962f80d">&sect;&nbsp;</a></span>xt_fast_memory_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_fast_memory_enabled </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if fast memory is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_acf93e159c610831f349d07c00962f80d_icgraph.svg" width="476" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aba84ec695575730f2fd3b4f75eefe28a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba84ec695575730f2fd3b4f75eefe28a">&sect;&nbsp;</a></span>xt_feed_watchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_feed_watchdog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the watchdog timer. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_aba84ec695575730f2fd3b4f75eefe28a_cgraph.svg" width="299" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_aba84ec695575730f2fd3b4f75eefe28a_icgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8d576cef4eead3e26b3adf733cd487c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d576cef4eead3e26b3adf733cd487c2">&sect;&nbsp;</a></span>xt_get_certification_submode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_certification_submode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the submode of the module for certification. </p>
<dl class="section return"><dt>Returns</dt><dd>Operation mode as defined in <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a8d576cef4eead3e26b3adf733cd487c2_cgraph.svg" width="344" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a8d576cef4eead3e26b3adf733cd487c2_icgraph.svg" width="339" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe26eed3d46d8d18c673b026a4c1af49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe26eed3d46d8d18c673b026a4c1af49">&sect;&nbsp;</a></span>xt_get_cpu_load()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xt_get_cpu_load </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current average CPU load. </p>
<dl class="section return"><dt>Returns</dt><dd>Current average CPU load, 0 means no load, 1000 means full load </dd></dl>

</div>
</div>
<a id="a88a96f708160bd3ccf8a8f0986f51d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88a96f708160bd3ccf8a8f0986f51d88">&sect;&nbsp;</a></span>xt_get_crash_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_crash_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get crash count. </p>
<dl class="section return"><dt>Returns</dt><dd>Crash count </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a88a96f708160bd3ccf8a8f0986f51d88_cgraph.svg" width="359" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a88a96f708160bd3ccf8a8f0986f51d88_icgraph.svg" width="424" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af1f57228b9448df87a3f5f30968b3fa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f57228b9448df87a3f5f30968b3fa8">&sect;&nbsp;</a></span>xt_get_operation_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> xt_get_operation_mode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the operation mode of the module. </p>
<dl class="section return"><dt>Returns</dt><dd>Operation mode as defined in <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_af1f57228b9448df87a3f5f30968b3fa8_cgraph.svg" width="428" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_af1f57228b9448df87a3f5f30968b3fa8_icgraph.svg" width="463" height="459"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9b086edc4d10515d81e925efba022638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b086edc4d10515d81e925efba022638">&sect;&nbsp;</a></span>xt_get_program_counter_from_task_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* xt_get_program_counter_from_task_handle </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the program counter of the specified task. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to instruction </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a9b086edc4d10515d81e925efba022638_cgraph.svg" width="304" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a9b086edc4d10515d81e925efba022638_icgraph.svg" width="411" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3c4b3201bcc90f24579249f3b6297fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c4b3201bcc90f24579249f3b6297fb3">&sect;&nbsp;</a></span>xt_get_reset_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_reset_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get reset count. </p>
<p>Must be called at least once every reset to update counter.</p>
<dl class="section return"><dt>Returns</dt><dd>Reset count </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a3c4b3201bcc90f24579249f3b6297fb3_cgraph.svg" width="358" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a3c4b3201bcc90f24579249f3b6297fb3_icgraph.svg" width="376" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5e62effeb5c5323c3d423225a6a3dbf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e62effeb5c5323c3d423225a6a3dbf3">&sect;&nbsp;</a></span>xt_get_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cause of the previous software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a5e62effeb5c5323c3d423225a6a3dbf3_cgraph.svg" width="364" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a5e62effeb5c5323c3d423225a6a3dbf3_icgraph.svg" width="780" height="211"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab218029969f3b92b546b111d1c1e03d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab218029969f3b92b546b111d1c1e03d0">&sect;&nbsp;</a></span>xt_get_stack_area_from_task_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_stack_area_from_task_handle </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>stack_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>stack_pointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the stack start pointer and depth for specified task. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ab218029969f3b92b546b111d1c1e03d0_icgraph.svg" width="407" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac6fbcd6ee86a6cc239db400a2f9560a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6fbcd6ee86a6cc239db400a2f9560a6">&sect;&nbsp;</a></span>xt_get_system_timer_us()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t xt_get_system_timer_us </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the system timer in microseconds. </p>
<dl class="section return"><dt>Returns</dt><dd>System timer in microseconds </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ac6fbcd6ee86a6cc239db400a2f9560a6_cgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ac6fbcd6ee86a6cc239db400a2f9560a6_icgraph.svg" width="410" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aad4316287f7b348fc5799124596685b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad4316287f7b348fc5799124596685b9">&sect;&nbsp;</a></span>xt_has_bootloader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_has_bootloader </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if we have a bootloader available. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_aad4316287f7b348fc5799124596685b9_icgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2eae6ea89e4a10f1b4406019ff8fc8ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2eae6ea89e4a10f1b4406019ff8fc8ce">&sect;&nbsp;</a></span>xt_idle_sleep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_idle_sleep </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the processor in an idle state waiting for interrupt. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a2eae6ea89e4a10f1b4406019ff8fc8ce_cgraph.svg" width="322" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a2eae6ea89e4a10f1b4406019ff8fc8ce_icgraph.svg" width="318" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac1b1f4d4aeef95ca21470d9b67aa2baa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1b1f4d4aeef95ca21470d9b67aa2baa">&sect;&nbsp;</a></span>xt_is_in_certification_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_is_in_certification_mode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks whether or not certification mode is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True for certification mode, false otherwise. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ac1b1f4d4aeef95ca21470d9b67aa2baa_icgraph.svg" width="428" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0abc6238971ef9384a4f3d73736651e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0abc6238971ef9384a4f3d73736651e1">&sect;&nbsp;</a></span>xt_register_crashdump_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_register_crashdump_callback </td>
          <td>(</td>
          <td class="paramtype">int(*)(<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>, const char *, bool)&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register callback for crash dump. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a0abc6238971ef9384a4f3d73736651e1_icgraph.svg" width="378" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac1edd0aeeab16f7278315403bcd6a29b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1edd0aeeab16f7278315403bcd6a29b">&sect;&nbsp;</a></span>xt_reset_crash_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_reset_crash_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets crash count. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ac1edd0aeeab16f7278315403bcd6a29b_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a389bc6b896aa270d8a1e473dd9c32ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389bc6b896aa270d8a1e473dd9c32ffc">&sect;&nbsp;</a></span>xt_set_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_set_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the cause of the coming software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a389bc6b896aa270d8a1e473dd9c32ffc_icgraph.svg" width="434" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ace2af126089abe1d676edfc1400d0bf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace2af126089abe1d676edfc1400d0bf7">&sect;&nbsp;</a></span>xt_software_reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_software_reset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triggers a software reset of MCU. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ace2af126089abe1d676edfc1400d0bf7_cgraph.svg" width="352" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_ace2af126089abe1d676edfc1400d0bf7_icgraph.svg" width="412" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4987330d65f24fe1d70291545f0a7870"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4987330d65f24fe1d70291545f0a7870">&sect;&nbsp;</a></span>xt_task_report_active()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xt_task_report_active </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>task</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a4987330d65f24fe1d70291545f0a7870_icgraph.svg" width="322" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afd2617026109aed181bfdf4506d1961d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd2617026109aed181bfdf4506d1961d">&sect;&nbsp;</a></span>xt_task_report_idle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xt_task_report_idle </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_afd2617026109aed181bfdf4506d1961d_icgraph.svg" width="306" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a362d4391cf2e203a9ed7b1dbbfe65f25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a362d4391cf2e203a9ed7b1dbbfe65f25">&sect;&nbsp;</a></span>xt_trigger_crash()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_trigger_crash </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>crash_reason</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>crash_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>full_dump</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triggers a crashdump and reset of module. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a362d4391cf2e203a9ed7b1dbbfe65f25_cgraph.svg" width="319" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a362d4391cf2e203a9ed7b1dbbfe65f25_icgraph.svg" width="392" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2426ce12540f282ecbb2a73534d8ecb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2426ce12540f282ecbb2a73534d8ecb4">&sect;&nbsp;</a></span>xt_use_external_clock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_use_external_clock </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Instructs the firmware whether to use either a crystal oscillator or external clock. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>

</div>
</div>
<a id="a368ae5b6898f4745b8ccf4d3d15b38ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a368ae5b6898f4745b8ccf4d3d15b38ac">&sect;&nbsp;</a></span>xt_use_external_memory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_use_external_memory </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Controls whether or not to use external memory. </p>
<p>Requires a system reset to take effect.</p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a368ae5b6898f4745b8ccf4d3d15b38ac_cgraph.svg" width="398" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a56773fb0b5a5ce0e8e4633581137100d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56773fb0b5a5ce0e8e4633581137100d">&sect;&nbsp;</a></span>xt_using_external_clock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_using_external_clock </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks whether the crystal oscillator or external clock should be used. </p>
<dl class="section return"><dt>Returns</dt><dd>True for external clock, false for crystal oscillator. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a56773fb0b5a5ce0e8e4633581137100d_icgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8e58faffa8a7b0934ca76bc1fa5ef6fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">&sect;&nbsp;</a></span>xt_wait()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_wait </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ms_to_wait</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Causes the calling task to wait and yields to another task. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ms_to_wait</td><td>Milliseconds to wait </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xt__system_8c_a8e58faffa8a7b0934ca76bc1fa5ef6fa_icgraph.svg" width="319" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a20a18651e683353184b2ba8e4fa9b306"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20a18651e683353184b2ba8e4fa9b306">&sect;&nbsp;</a></span>_end_fast_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _end_fast_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abfe98445da670387fc96c687f29e05ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfe98445da670387fc96c687f29e05ee">&sect;&nbsp;</a></span>_start_fast_heap_memory</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int _start_fast_heap_memory</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae67f2f7704e429c9f2db2bb475c1d382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae67f2f7704e429c9f2db2bb475c1d382">&sect;&nbsp;</a></span>cpu_load</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t cpu_load = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d4052c5fedfdd65c7aa20e53e4187df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d4052c5fedfdd65c7aa20e53e4187df">&sect;&nbsp;</a></span>crashdump_callback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int(* crashdump_callback) (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>, const char *, bool) = NULL</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4889407218b3ebcbb20e578911912524"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4889407218b3ebcbb20e578911912524">&sect;&nbsp;</a></span>exception_table</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group___s_a_m_e70_j19__cmsis.xhtml#gab68dc58361a6bbb8db7664200fc9cdda">DeviceVectors</a> exception_table</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
