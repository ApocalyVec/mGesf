<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/twi.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">twi.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="twi_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*                  Atmel Microcontroller Software Support                      */</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*                       SAM Software Package License                           */</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/* Copyright (c) 2015, Atmel Corporation                                        */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/* All rights reserved.                                                         */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/* Redistribution and use in source and binary forms, with or without           */</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/* modification, are permitted provided that the following condition is met:    */</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/* - Redistributions of source code must retain the above copyright notice,     */</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/* this list of conditions and the disclaimer below.                            */</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* Atmel&#39;s name may not be used to endorse or promote products derived from     */</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/* this software without specific prior written permission.                     */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL &quot;AS IS&quot; AND ANY EXPRESS OR   */</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE   */</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,      */</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,  */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF    */</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">/* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING         */</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, */</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                           */</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#ifndef _TWI_</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#define _TWI_</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/*------------------------------------------------------------------------------</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> *         Headers</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> *----------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="chip_8h.xhtml">chip.h</a>&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">/*----------------------------------------------------------------------------</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"> *        Macros</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"> *----------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">/* Returns 1 if the TXRDY bit (ready to transmit data) is set in the given</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    status register value.*/</span></div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="twi_8h.xhtml#af7e15b22aaa6d2e9e782afed5b59374d">   53</a></span>&#160;<span class="preprocessor">#define TWI_STATUS_TXRDY(status) ((status &amp; TWIHS_SR_TXRDY) == TWIHS_SR_TXRDY)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">/* Returns 1 if the RXRDY bit (ready to receive data) is set in the given</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    status register value.*/</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="twi_8h.xhtml#a0e22913ecfdece55b1b8f553351893bb">   57</a></span>&#160;<span class="preprocessor">#define TWI_STATUS_RXRDY(status) ((status &amp; TWIHS_SR_RXRDY) == TWIHS_SR_RXRDY)</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">/* Returns 1 if the TXCOMP bit (transfer complete) is set in the given</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    status register value.*/</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="twi_8h.xhtml#a249be77a569ec813dfeb2983085e9423">   61</a></span>&#160;<span class="preprocessor">#define TWI_STATUS_TXCOMP(status) ((status &amp; TWIHS_SR_TXCOMP) == TWIHS_SR_TXCOMP)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/*----------------------------------------------------------------------------</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *        External function</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> *----------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ac90d2f32c99191c21f02626a9584b6bb">TWI_ConfigureMaster</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t twck, uint32_t mck);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#adf540599d435de6b06ddc35427a17fed">TWI_ConfigureSlave</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t slaveAddress);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ab6f6a89c7dbb1075f904386273252977">TWI_Stop</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#a806d1ace472ce5f4e2fe2de6f5a425ff">TWI_StartRead</a>(</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    uint8_t address,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    uint32_t iaddress,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    uint8_t isize);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">extern</span> uint8_t <a class="code" href="twi_8h.xhtml#a8b4e96e6ce1126921517147b048fde51">TWI_ReadByte</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ad728b448499f0b4d4633dfe0cc4a5ee7">TWI_WriteByte</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t byte);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#a933fafb0a0d430f7feb10d01138b0466">TWI_StartWrite</a>(</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    uint8_t address,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    uint32_t iaddress,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    uint8_t isize,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    uint8_t byte);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">extern</span> uint8_t <a class="code" href="twi_8h.xhtml#a2bb399b4984df2fdaabf741326636de2">TWI_ByteReceived</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">extern</span> uint8_t <a class="code" href="twi_8h.xhtml#a908535df2873ebeaa63f6fda73ea6708">TWI_ByteSent</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">extern</span> uint8_t <a class="code" href="twi_8h.xhtml#a8d8a0d10a7d128428c350f7337191fbd">TWI_TransferComplete</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ab3bf1b5df694229af5fae34ca569ab7b">TWI_EnableIt</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t sources);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ac976e61b9b9d4488753f960d3df80c63">TWI_DisableIt</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t sources);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">extern</span> uint32_t <a class="code" href="twi_8h.xhtml#a316b5d5ffbfa49a8d6517a061b92a4a6">TWI_GetStatus</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">extern</span> uint32_t <a class="code" href="twi_8h.xhtml#aee8c3520f24c54aedbad6cee6ab2eeaa">TWI_GetMaskedStatus</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">void</span> <a class="code" href="twi_8h.xhtml#ade1813a089ae27dac920fa1b07d46b94">TWI_SendSTOPCondition</a>(<a class="code" href="struct_twihs.xhtml">Twihs</a> *pTwi);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* #ifndef _TWI_ */</span><span class="preprocessor"></span></div><div class="ttc" id="twi_8h_xhtml_a806d1ace472ce5f4e2fe2de6f5a425ff"><div class="ttname"><a href="twi_8h.xhtml#a806d1ace472ce5f4e2fe2de6f5a425ff">TWI_StartRead</a></div><div class="ttdeci">void TWI_StartRead(Twihs *pTwi, uint8_t address, uint32_t iaddress, uint8_t isize)</div><div class="ttdoc">Starts a read operation on the TWI bus with the specified slave, it returns immediately. </div><div class="ttdef"><b>Definition:</b> twi.c:188</div></div>
<div class="ttc" id="twi_8h_xhtml_a8b4e96e6ce1126921517147b048fde51"><div class="ttname"><a href="twi_8h.xhtml#a8b4e96e6ce1126921517147b048fde51">TWI_ReadByte</a></div><div class="ttdeci">uint8_t TWI_ReadByte(Twihs *pTwi)</div><div class="ttdoc">Reads a byte from the TWI bus. </div><div class="ttdef"><b>Definition:</b> twi.c:222</div></div>
<div class="ttc" id="twi_8h_xhtml_a933fafb0a0d430f7feb10d01138b0466"><div class="ttname"><a href="twi_8h.xhtml#a933fafb0a0d430f7feb10d01138b0466">TWI_StartWrite</a></div><div class="ttdeci">void TWI_StartWrite(Twihs *pTwi, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t byte)</div><div class="ttdoc">Starts a write operation on the TWI to access the selected slave, then returns immediately. </div><div class="ttdef"><b>Definition:</b> twi.c:255</div></div>
<div class="ttc" id="twi_8h_xhtml_ac90d2f32c99191c21f02626a9584b6bb"><div class="ttname"><a href="twi_8h.xhtml#ac90d2f32c99191c21f02626a9584b6bb">TWI_ConfigureMaster</a></div><div class="ttdeci">void TWI_ConfigureMaster(Twihs *pTwi, uint32_t twck, uint32_t mck)</div><div class="ttdoc">Configures a TWI peripheral to operate in master mode, at the given frequency (in Hz)...</div><div class="ttdef"><b>Definition:</b> twi.c:112</div></div>
<div class="ttc" id="twi_8h_xhtml_ac976e61b9b9d4488753f960d3df80c63"><div class="ttname"><a href="twi_8h.xhtml#ac976e61b9b9d4488753f960d3df80c63">TWI_DisableIt</a></div><div class="ttdeci">void TWI_DisableIt(Twihs *pTwi, uint32_t sources)</div><div class="ttdoc">Disables the selected interrupts sources on a TWI peripheral. </div><div class="ttdef"><b>Definition:</b> twi.c:330</div></div>
<div class="ttc" id="chip_8h_xhtml"><div class="ttname"><a href="chip_8h.xhtml">chip.h</a></div></div>
<div class="ttc" id="twi_8h_xhtml_ab3bf1b5df694229af5fae34ca569ab7b"><div class="ttname"><a href="twi_8h.xhtml#ab3bf1b5df694229af5fae34ca569ab7b">TWI_EnableIt</a></div><div class="ttdeci">void TWI_EnableIt(Twihs *pTwi, uint32_t sources)</div><div class="ttdoc">Enables the selected interrupts sources on a TWI peripheral. </div><div class="ttdef"><b>Definition:</b> twi.c:317</div></div>
<div class="ttc" id="twi_8h_xhtml_ab6f6a89c7dbb1075f904386273252977"><div class="ttname"><a href="twi_8h.xhtml#ab6f6a89c7dbb1075f904386273252977">TWI_Stop</a></div><div class="ttdeci">void TWI_Stop(Twihs *pTwi)</div><div class="ttdoc">Sends a STOP condition on the TWI. </div><div class="ttdef"><b>Definition:</b> twi.c:172</div></div>
<div class="ttc" id="twi_8h_xhtml_aee8c3520f24c54aedbad6cee6ab2eeaa"><div class="ttname"><a href="twi_8h.xhtml#aee8c3520f24c54aedbad6cee6ab2eeaa">TWI_GetMaskedStatus</a></div><div class="ttdeci">uint32_t TWI_GetMaskedStatus(Twihs *pTwi)</div><div class="ttdoc">Returns the current status register of the given TWI peripheral, but masking interrupt sources which ...</div><div class="ttdef"><b>Definition:</b> twi.c:359</div></div>
<div class="ttc" id="twi_8h_xhtml_a316b5d5ffbfa49a8d6517a061b92a4a6"><div class="ttname"><a href="twi_8h.xhtml#a316b5d5ffbfa49a8d6517a061b92a4a6">TWI_GetStatus</a></div><div class="ttdeci">uint32_t TWI_GetStatus(Twihs *pTwi)</div><div class="ttdoc">Get the current status register of the given TWI peripheral. </div><div class="ttdef"><b>Definition:</b> twi.c:345</div></div>
<div class="ttc" id="twi_8h_xhtml_a908535df2873ebeaa63f6fda73ea6708"><div class="ttname"><a href="twi_8h.xhtml#a908535df2873ebeaa63f6fda73ea6708">TWI_ByteSent</a></div><div class="ttdeci">uint8_t TWI_ByteSent(Twihs *pTwi)</div><div class="ttdoc">Check if a byte have been sent to TWI. </div><div class="ttdef"><b>Definition:</b> twi.c:296</div></div>
<div class="ttc" id="twi_8h_xhtml_a2bb399b4984df2fdaabf741326636de2"><div class="ttname"><a href="twi_8h.xhtml#a2bb399b4984df2fdaabf741326636de2">TWI_ByteReceived</a></div><div class="ttdeci">uint8_t TWI_ByteReceived(Twihs *pTwi)</div><div class="ttdoc">Check if a byte have been received from TWI. </div><div class="ttdef"><b>Definition:</b> twi.c:285</div></div>
<div class="ttc" id="twi_8h_xhtml_a8d8a0d10a7d128428c350f7337191fbd"><div class="ttname"><a href="twi_8h.xhtml#a8d8a0d10a7d128428c350f7337191fbd">TWI_TransferComplete</a></div><div class="ttdeci">uint8_t TWI_TransferComplete(Twihs *pTwi)</div><div class="ttdoc">Check if current transmission is completed. </div><div class="ttdef"><b>Definition:</b> twi.c:307</div></div>
<div class="ttc" id="struct_twihs_xhtml"><div class="ttname"><a href="struct_twihs.xhtml">Twihs</a></div><div class="ttdoc">Twihs hardware registers. </div><div class="ttdef"><b>Definition:</b> component_twihs.h:41</div></div>
<div class="ttc" id="twi_8h_xhtml_adf540599d435de6b06ddc35427a17fed"><div class="ttname"><a href="twi_8h.xhtml#adf540599d435de6b06ddc35427a17fed">TWI_ConfigureSlave</a></div><div class="ttdeci">void TWI_ConfigureSlave(Twihs *pTwi, uint8_t slaveAddress)</div><div class="ttdoc">Configures a TWI peripheral to operate in slave mode. </div><div class="ttdef"><b>Definition:</b> twi.c:151</div></div>
<div class="ttc" id="twi_8h_xhtml_ad728b448499f0b4d4633dfe0cc4a5ee7"><div class="ttname"><a href="twi_8h.xhtml#ad728b448499f0b4d4633dfe0cc4a5ee7">TWI_WriteByte</a></div><div class="ttdeci">void TWI_WriteByte(Twihs *pTwi, uint8_t byte)</div><div class="ttdoc">Sends a byte of data to one of the TWI slaves on the bus. </div><div class="ttdef"><b>Definition:</b> twi.c:237</div></div>
<div class="ttc" id="twi_8h_xhtml_ade1813a089ae27dac920fa1b07d46b94"><div class="ttname"><a href="twi_8h.xhtml#ade1813a089ae27dac920fa1b07d46b94">TWI_SendSTOPCondition</a></div><div class="ttdeci">void TWI_SendSTOPCondition(Twihs *pTwi)</div><div class="ttdoc">Sends a STOP condition. </div><div class="ttdef"><b>Definition:</b> twi.c:376</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
