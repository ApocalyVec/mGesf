<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/usart.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">usart.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="usart_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*                  Atmel Microcontroller Software Support                      */</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*                       SAM Software Package License                           */</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/* Copyright (c) 2015, Atmel Corporation                                        */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/* All rights reserved.                                                         */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/* Redistribution and use in source and binary forms, with or without           */</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/* modification, are permitted provided that the following condition is met:    */</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/* - Redistributions of source code must retain the above copyright notice,     */</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/* this list of conditions and the disclaimer below.                            */</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* Atmel&#39;s name may not be used to endorse or promote products derived from     */</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/* this software without specific prior written permission.                     */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL &quot;AS IS&quot; AND ANY EXPRESS OR   */</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE   */</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,      */</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,  */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF    */</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">/* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING         */</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, */</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                           */</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#ifndef _USART_</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#define _USART_</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">/*------------------------------------------------------------------------------</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"> *         Headers</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"> *----------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="chip_8h.xhtml">chip.h</a>&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">/*------------------------------------------------------------------------------</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> *         Definitions</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> *----------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#af27cef049eb87418f833f81193899d88">   77</a></span>&#160;<span class="preprocessor">#define USART_MODE_ASYNCHRONOUS        (US_MR_CHRL_8_BIT | US_MR_PAR_NO)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#aee0e036ac8f3967121716761d60fcc25">   79</a></span>&#160;<span class="preprocessor">#define MAX_RX_TIMEOUT          131071</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#ae3e7ce1ee302ade431ad5f8eb99685c4">   82</a></span>&#160;<span class="preprocessor">#define USART_MODE_IRDA \</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">    (US_MR_USART_MODE_IRDA | US_MR_CHRL_8_BIT | US_MR_PAR_NO | US_MR_FILTER)</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#a6f2d00c8dcd41ee61e0f9c8d46a63c5a">   86</a></span>&#160;<span class="preprocessor">#define AT91C_US_USMODE_SPIM     0xE</span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">   87</a></span>&#160;<span class="preprocessor">#define US_SPI_CPOL_0           (0x0&lt;&lt;16)</span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">   88</a></span>&#160;<span class="preprocessor">#define US_SPI_CPHA_0            (0x0&lt;&lt;8)</span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">   89</a></span>&#160;<span class="preprocessor">#define US_SPI_CPOL_1            (0x1&lt;&lt;16)</span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">   90</a></span>&#160;<span class="preprocessor">#define US_SPI_CPHA_1            (0x1&lt;&lt;8)</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#a479aadf555be76b3988d63c9cd59a0a0">   91</a></span>&#160;<span class="preprocessor">#define US_SPI_BPMODE_0    (US_SPI_CPOL_0|US_SPI_CPHA_1)</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#a07a5b9e05891a040155161cba3631655">   92</a></span>&#160;<span class="preprocessor">#define US_SPI_BPMODE_1    (US_SPI_CPOL_0|US_SPI_CPHA_0)</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#adb9a863a1f22fb913e6cb7f37b32ec3e">   93</a></span>&#160;<span class="preprocessor">#define US_SPI_BPMODE_2    (US_SPI_CPOL_1|US_SPI_CPHA_1)</span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="usart_8h.xhtml#ad04d9779305fc19a048d03ca952a0364">   94</a></span>&#160;<span class="preprocessor">#define US_SPI_BPMODE_3    (US_SPI_CPOL_1|US_SPI_CPHA_0)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">/*------------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">/*         Exported functions                                                   */</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">/*------------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a6280c3578315c2a06e1857b7dca0c1be">USART_Configure</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart, uint32_t mode, uint32_t baudrate,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                      uint32_t masterClock);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a2c462751711f86351d7f6503ff6c2063">USART_SetBaudrate</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart,  uint8_t OverSamp, uint32_t baudrate,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                       uint32_t masterClock);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;uint32_t <a class="code" href="usart_8h.xhtml#a02636838445be4a9a09aaa320567d666">USART_GetStatus</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#ae2451d0cf9cc3558d7995d558f0527dc">USART_ResetRx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#afbe4736584da2a8fbe2cd1d66567aa21">USART_ResetTx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a7cefc761ba2532430bc1fdd734cae76e">USART_EnableTx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#af5e161fbea5927507473f4fc257b481d">USART_EnableRx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a1bab2f603811a65889918c56b6c8c4a2">USART_DisableRx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#abc481556ca791aac3310b5ffb31ec850">USART_DisableTx</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#aa7360fa2d1dbee570c3adefe6efaf873">USART_EnableIt</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint32_t mode);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a8ff26bcf6b452fb6a979d47b4bbb0bd8">USART_DisableIt</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint32_t mode);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;uint32_t <a class="code" href="usart_8h.xhtml#a978ff27f5cc5f033dcd5bf7a9a71dbcd">USART_GetItMask</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a18a00bc79be656904ce8c7043f4c6d19">USART_SetTransmitterEnabled</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a246df8753ea10e0ac19913c1dac062fb">USART_SetReceiverEnabled</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a1f9c6f1c6f5776df66022ede3667e908">USART_SetRTSEnabled</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#a863e6a2ce2e4fc81dd3d008d231143e2">USART_Write</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint16_t data, <span class="keyword">volatile</span> uint32_t timeOut);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;uint16_t <a class="code" href="usart_8h.xhtml#ac7360162f07a0b42c59bc94e0ce3e475">USART_Read</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, <span class="keyword">volatile</span> uint32_t timeOut);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;uint8_t <a class="code" href="usart_8h.xhtml#a5d6f0dbab1e2c60024fdb58e71eb5ad2">USART_IsDataAvailable</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#aa299c70c15f0a174e9666209ded82cbf">USART_SetIrdaFilter</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart, uint8_t filter);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#ab0567c51f89573846ed7571dd839ebcc">USART_PutChar</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint8_t c);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;uint32_t <a class="code" href="usart_8h.xhtml#a02f248788c426b70d089409c1c38548f">USART_IsRxReady</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;uint32_t <a class="code" href="usart_8h.xhtml#a80daa504b1ce9b4f31efa5258996d3fe">USART_IsTxReady</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;uint8_t <a class="code" href="usart_8h.xhtml#a8b87ef0f6c9f2dfdea2358a47363be67">USART_GetChar</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#ae70c9ce0e4cf3d14158f0faf36a357a2">USART_EnableRecvTimeOut</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint32_t timeout);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#adf34e0625d9ca2055453bda426d6321c">USART_EnableTxTimeGaurd</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *pUsart, uint32_t TimeGaurd);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keywordtype">void</span> <a class="code" href="usart_8h.xhtml#abc98910e94b5806647b00a7edade64fe">USART_AcknowledgeRxTimeOut</a>(<a class="code" href="struct_usart.xhtml">Usart</a> *usart, uint8_t Periodic);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* #ifndef _USART_ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="ttc" id="struct_usart_xhtml"><div class="ttname"><a href="struct_usart.xhtml">Usart</a></div><div class="ttdoc">Usart hardware registers. </div><div class="ttdef"><b>Definition:</b> component_usart.h:41</div></div>
<div class="ttc" id="usart_8h_xhtml_a80daa504b1ce9b4f31efa5258996d3fe"><div class="ttname"><a href="usart_8h.xhtml#a80daa504b1ce9b4f31efa5258996d3fe">USART_IsTxReady</a></div><div class="ttdeci">uint32_t USART_IsTxReady(Usart *pUsart)</div><div class="ttdoc">Returns 1 if the transmitter is ready; otherwise returns 0. </div><div class="ttdef"><b>Definition:</b> usart.c:357</div></div>
<div class="ttc" id="usart_8h_xhtml_af5e161fbea5927507473f4fc257b481d"><div class="ttname"><a href="usart_8h.xhtml#af5e161fbea5927507473f4fc257b481d">USART_EnableRx</a></div><div class="ttdeci">void USART_EnableRx(Usart *pUsart)</div><div class="ttdoc">Enables the Receiver of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:196</div></div>
<div class="ttc" id="usart_8h_xhtml_ae2451d0cf9cc3558d7995d558f0527dc"><div class="ttname"><a href="usart_8h.xhtml#ae2451d0cf9cc3558d7995d558f0527dc">USART_ResetRx</a></div><div class="ttdeci">void USART_ResetRx(Usart *pUsart)</div><div class="ttdoc">Resets or disables the Receiver of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:217</div></div>
<div class="ttc" id="usart_8h_xhtml_a8ff26bcf6b452fb6a979d47b4bbb0bd8"><div class="ttname"><a href="usart_8h.xhtml#a8ff26bcf6b452fb6a979d47b4bbb0bd8">USART_DisableIt</a></div><div class="ttdeci">void USART_DisableIt(Usart *usart, uint32_t mode)</div><div class="ttdoc">Disable interrupt. </div><div class="ttdef"><b>Definition:</b> usart.c:395</div></div>
<div class="ttc" id="usart_8h_xhtml_ac7360162f07a0b42c59bc94e0ce3e475"><div class="ttname"><a href="usart_8h.xhtml#ac7360162f07a0b42c59bc94e0ce3e475">USART_Read</a></div><div class="ttdeci">uint16_t USART_Read(Usart *usart, volatile uint32_t timeOut)</div><div class="ttdoc">Reads and return a packet of data on the specified USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:300</div></div>
<div class="ttc" id="usart_8h_xhtml_a02636838445be4a9a09aaa320567d666"><div class="ttname"><a href="usart_8h.xhtml#a02636838445be4a9a09aaa320567d666">USART_GetStatus</a></div><div class="ttdeci">uint32_t USART_GetStatus(Usart *usart)</div><div class="ttdoc">Get present status. </div><div class="ttdef"><b>Definition:</b> usart.c:375</div></div>
<div class="ttc" id="usart_8h_xhtml_a246df8753ea10e0ac19913c1dac062fb"><div class="ttname"><a href="usart_8h.xhtml#a246df8753ea10e0ac19913c1dac062fb">USART_SetReceiverEnabled</a></div><div class="ttdeci">void USART_SetReceiverEnabled(Usart *usart, uint8_t enabled)</div><div class="ttdoc">Enables or disables the receiver of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:240</div></div>
<div class="ttc" id="usart_8h_xhtml_a1bab2f603811a65889918c56b6c8c4a2"><div class="ttname"><a href="usart_8h.xhtml#a1bab2f603811a65889918c56b6c8c4a2">USART_DisableRx</a></div><div class="ttdeci">void USART_DisableRx(Usart *pUsart)</div><div class="ttdoc">Disables the Receiver of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:175</div></div>
<div class="ttc" id="usart_8h_xhtml_aa7360fa2d1dbee570c3adefe6efaf873"><div class="ttname"><a href="usart_8h.xhtml#aa7360fa2d1dbee570c3adefe6efaf873">USART_EnableIt</a></div><div class="ttdeci">void USART_EnableIt(Usart *usart, uint32_t mode)</div><div class="ttdoc">Enable interrupt. </div><div class="ttdef"><b>Definition:</b> usart.c:385</div></div>
<div class="ttc" id="usart_8h_xhtml_a978ff27f5cc5f033dcd5bf7a9a71dbcd"><div class="ttname"><a href="usart_8h.xhtml#a978ff27f5cc5f033dcd5bf7a9a71dbcd">USART_GetItMask</a></div><div class="ttdeci">uint32_t USART_GetItMask(Usart *usart)</div><div class="ttdoc">Return interrupt mask. </div><div class="ttdef"><b>Definition:</b> usart.c:404</div></div>
<div class="ttc" id="usart_8h_xhtml_ab0567c51f89573846ed7571dd839ebcc"><div class="ttname"><a href="usart_8h.xhtml#ab0567c51f89573846ed7571dd839ebcc">USART_PutChar</a></div><div class="ttdeci">void USART_PutChar(Usart *usart, uint8_t c)</div><div class="ttdoc">Sends one packet of data through the specified USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:340</div></div>
<div class="ttc" id="usart_8h_xhtml_a863e6a2ce2e4fc81dd3d008d231143e2"><div class="ttname"><a href="usart_8h.xhtml#a863e6a2ce2e4fc81dd3d008d231143e2">USART_Write</a></div><div class="ttdeci">void USART_Write(Usart *usart, uint16_t data, volatile uint32_t timeOut)</div><div class="ttdoc">Sends one packet of data through the specified USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:274</div></div>
<div class="ttc" id="usart_8h_xhtml_abc98910e94b5806647b00a7edade64fe"><div class="ttname"><a href="usart_8h.xhtml#abc98910e94b5806647b00a7edade64fe">USART_AcknowledgeRxTimeOut</a></div><div class="ttdeci">void USART_AcknowledgeRxTimeOut(Usart *usart, uint8_t Periodic)</div><div class="ttdoc">Acknowledge Rx timeout and sets to Idle or periodic repetitive state. </div><div class="ttdef"><b>Definition:</b> usart.c:464</div></div>
<div class="ttc" id="usart_8h_xhtml_a18a00bc79be656904ce8c7043f4c6d19"><div class="ttname"><a href="usart_8h.xhtml#a18a00bc79be656904ce8c7043f4c6d19">USART_SetTransmitterEnabled</a></div><div class="ttdeci">void USART_SetTransmitterEnabled(Usart *usart, uint8_t enabled)</div><div class="ttdoc">Enables or disables the transmitter of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:162</div></div>
<div class="ttc" id="chip_8h_xhtml"><div class="ttname"><a href="chip_8h.xhtml">chip.h</a></div></div>
<div class="ttc" id="usart_8h_xhtml_adf34e0625d9ca2055453bda426d6321c"><div class="ttname"><a href="usart_8h.xhtml#adf34e0625d9ca2055453bda426d6321c">USART_EnableTxTimeGaurd</a></div><div class="ttdeci">void USART_EnableTxTimeGaurd(Usart *pUsart, uint32_t TimeGaurd)</div><div class="ttdoc">Enable Tx Timeout for USART. </div><div class="ttdef"><b>Definition:</b> usart.c:449</div></div>
<div class="ttc" id="usart_8h_xhtml_ae70c9ce0e4cf3d14158f0faf36a357a2"><div class="ttname"><a href="usart_8h.xhtml#ae70c9ce0e4cf3d14158f0faf36a357a2">USART_EnableRecvTimeOut</a></div><div class="ttdeci">void USART_EnableRecvTimeOut(Usart *usart, uint32_t timeout)</div><div class="ttdoc">Enable Rx Timeout for USART. </div><div class="ttdef"><b>Definition:</b> usart.c:430</div></div>
<div class="ttc" id="usart_8h_xhtml_a6280c3578315c2a06e1857b7dca0c1be"><div class="ttname"><a href="usart_8h.xhtml#a6280c3578315c2a06e1857b7dca0c1be">USART_Configure</a></div><div class="ttdeci">void USART_Configure(Usart *pUsart, uint32_t mode, uint32_t baudrate, uint32_t masterClock)</div><div class="ttdoc">Configures an USART peripheral with the specified parameters. </div><div class="ttdef"><b>Definition:</b> usart.c:130</div></div>
<div class="ttc" id="usart_8h_xhtml_aa299c70c15f0a174e9666209ded82cbf"><div class="ttname"><a href="usart_8h.xhtml#aa299c70c15f0a174e9666209ded82cbf">USART_SetIrdaFilter</a></div><div class="ttdeci">void USART_SetIrdaFilter(Usart *pUsart, uint8_t filter)</div></div>
<div class="ttc" id="usart_8h_xhtml_a7cefc761ba2532430bc1fdd734cae76e"><div class="ttname"><a href="usart_8h.xhtml#a7cefc761ba2532430bc1fdd734cae76e">USART_EnableTx</a></div><div class="ttdeci">void USART_EnableTx(Usart *pUsart)</div><div class="ttdoc">Enables the transmitter of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:207</div></div>
<div class="ttc" id="usart_8h_xhtml_abc481556ca791aac3310b5ffb31ec850"><div class="ttname"><a href="usart_8h.xhtml#abc481556ca791aac3310b5ffb31ec850">USART_DisableTx</a></div><div class="ttdeci">void USART_DisableTx(Usart *pUsart)</div><div class="ttdoc">Disables the transmitter of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:186</div></div>
<div class="ttc" id="usart_8h_xhtml_afbe4736584da2a8fbe2cd1d66567aa21"><div class="ttname"><a href="usart_8h.xhtml#afbe4736584da2a8fbe2cd1d66567aa21">USART_ResetTx</a></div><div class="ttdeci">void USART_ResetTx(Usart *pUsart)</div><div class="ttdoc">resets and disables the transmitter of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:229</div></div>
<div class="ttc" id="usart_8h_xhtml_a8b87ef0f6c9f2dfdea2358a47363be67"><div class="ttname"><a href="usart_8h.xhtml#a8b87ef0f6c9f2dfdea2358a47363be67">USART_GetChar</a></div><div class="ttdeci">uint8_t USART_GetChar(Usart *usart)</div><div class="ttdoc">Reads and returns a character from the USART. </div><div class="ttdef"><b>Definition:</b> usart.c:416</div></div>
<div class="ttc" id="usart_8h_xhtml_a2c462751711f86351d7f6503ff6c2063"><div class="ttname"><a href="usart_8h.xhtml#a2c462751711f86351d7f6503ff6c2063">USART_SetBaudrate</a></div><div class="ttdeci">void USART_SetBaudrate(Usart *pUsart, uint8_t OverSamp, uint32_t baudrate, uint32_t masterClock)</div><div class="ttdoc">Configures an USART baudrate. </div><div class="ttdef"><b>Definition:</b> usart.c:62</div></div>
<div class="ttc" id="usart_8h_xhtml_a1f9c6f1c6f5776df66022ede3667e908"><div class="ttname"><a href="usart_8h.xhtml#a1f9c6f1c6f5776df66022ede3667e908">USART_SetRTSEnabled</a></div><div class="ttdeci">void USART_SetRTSEnabled(Usart *usart, uint8_t enabled)</div><div class="ttdoc">Enables or disables the Request To Send (RTS) of an USART peripheral. </div><div class="ttdef"><b>Definition:</b> usart.c:255</div></div>
<div class="ttc" id="usart_8h_xhtml_a5d6f0dbab1e2c60024fdb58e71eb5ad2"><div class="ttname"><a href="usart_8h.xhtml#a5d6f0dbab1e2c60024fdb58e71eb5ad2">USART_IsDataAvailable</a></div><div class="ttdeci">uint8_t USART_IsDataAvailable(Usart *usart)</div><div class="ttdoc">Returns 1 if some data has been received and can be read from an USART; otherwise returns 0...</div><div class="ttdef"><b>Definition:</b> usart.c:324</div></div>
<div class="ttc" id="usart_8h_xhtml_a02f248788c426b70d089409c1c38548f"><div class="ttname"><a href="usart_8h.xhtml#a02f248788c426b70d089409c1c38548f">USART_IsRxReady</a></div><div class="ttdeci">uint32_t USART_IsRxReady(Usart *usart)</div><div class="ttdoc">Return 1 if a character can be read in USART. </div><div class="ttdef"><b>Definition:</b> usart.c:366</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
