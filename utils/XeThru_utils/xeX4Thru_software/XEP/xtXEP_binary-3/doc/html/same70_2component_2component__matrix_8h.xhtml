<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/same70/component/component_matrix.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_7b7565db77d65bc83fa3e860a0e5625c.xhtml">same70</a></li><li class="navelem"><a class="el" href="dir_063a3d76154bf3c24738e370a948fe65.xhtml">component</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">component_matrix.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="same70_2component_2component__matrix_8h__dep__incl.svg" width="1955" height="171"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="same70_2component_2component__matrix_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_matrix_pr.xhtml">MatrixPr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_matrix_pr.xhtml" title="MatrixPr hardware registers. ">MatrixPr</a> hardware registers.  <a href="struct_matrix_pr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_matrix.xhtml">Matrix</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_matrix.xhtml" title="Matrix hardware registers. ">Matrix</a> hardware registers.  <a href="struct_matrix.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gafdd5910e0fa935742d5f7a0ab3dd8004"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gafdd5910e0fa935742d5f7a0ab3dd8004">MATRIXPR_NUMBER</a>&#160;&#160;&#160;9</td></tr>
<tr class="memdesc:gafdd5910e0fa935742d5f7a0ab3dd8004"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_matrix.xhtml" title="Matrix hardware registers. ">Matrix</a> hardware registers.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gafdd5910e0fa935742d5f7a0ab3dd8004">More...</a><br /></td></tr>
<tr class="separator:gafdd5910e0fa935742d5f7a0ab3dd8004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdf8355a07696be09be884af4528a965"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacdf8355a07696be09be884af4528a965">MATRIX_MCFG0_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gacdf8355a07696be09be884af4528a965"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0387cd5fd352f9c60e44a20f6b359665"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0387cd5fd352f9c60e44a20f6b359665">MATRIX_MCFG0_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG0_ULBT_Pos)</td></tr>
<tr class="memdesc:ga0387cd5fd352f9c60e44a20f6b359665"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0387cd5fd352f9c60e44a20f6b359665">More...</a><br /></td></tr>
<tr class="separator:ga0387cd5fd352f9c60e44a20f6b359665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga78a940ff2998526ba301620f186708ca"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga78a940ff2998526ba301620f186708ca">MATRIX_MCFG0_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga0387cd5fd352f9c60e44a20f6b359665">MATRIX_MCFG0_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#gacdf8355a07696be09be884af4528a965">MATRIX_MCFG0_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga78a940ff2998526ba301620f186708ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31c3afc145f0373f9a8d6360114512c0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga31c3afc145f0373f9a8d6360114512c0">MATRIX_MCFG0_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga31c3afc145f0373f9a8d6360114512c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga31c3afc145f0373f9a8d6360114512c0">More...</a><br /></td></tr>
<tr class="separator:ga31c3afc145f0373f9a8d6360114512c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02177ea0b817d714e4c03d56cb33a2e3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga02177ea0b817d714e4c03d56cb33a2e3">MATRIX_MCFG0_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga02177ea0b817d714e4c03d56cb33a2e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga02177ea0b817d714e4c03d56cb33a2e3">More...</a><br /></td></tr>
<tr class="separator:ga02177ea0b817d714e4c03d56cb33a2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fd507012b5e1b40045c76622f1a6ac4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3fd507012b5e1b40045c76622f1a6ac4">MATRIX_MCFG0_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3fd507012b5e1b40045c76622f1a6ac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3fd507012b5e1b40045c76622f1a6ac4">More...</a><br /></td></tr>
<tr class="separator:ga3fd507012b5e1b40045c76622f1a6ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga966f9ac315c1b235963be6476d6461ac"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga966f9ac315c1b235963be6476d6461ac">MATRIX_MCFG0_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga966f9ac315c1b235963be6476d6461ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga966f9ac315c1b235963be6476d6461ac">More...</a><br /></td></tr>
<tr class="separator:ga966f9ac315c1b235963be6476d6461ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga114c6d13b5832dc7d2b8c4983a3dd73d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga114c6d13b5832dc7d2b8c4983a3dd73d">MATRIX_MCFG0_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga114c6d13b5832dc7d2b8c4983a3dd73d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga114c6d13b5832dc7d2b8c4983a3dd73d">More...</a><br /></td></tr>
<tr class="separator:ga114c6d13b5832dc7d2b8c4983a3dd73d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa78b74bc1b7201a94de5cc87640adeea"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa78b74bc1b7201a94de5cc87640adeea">MATRIX_MCFG0_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaa78b74bc1b7201a94de5cc87640adeea"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa78b74bc1b7201a94de5cc87640adeea">More...</a><br /></td></tr>
<tr class="separator:gaa78b74bc1b7201a94de5cc87640adeea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad7dc5b92f5a8ab21a4f2d662c355d6d9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad7dc5b92f5a8ab21a4f2d662c355d6d9">MATRIX_MCFG0_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad7dc5b92f5a8ab21a4f2d662c355d6d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad7dc5b92f5a8ab21a4f2d662c355d6d9">More...</a><br /></td></tr>
<tr class="separator:gad7dc5b92f5a8ab21a4f2d662c355d6d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2200a7c99037461f8f4cbef6b123e9d6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2200a7c99037461f8f4cbef6b123e9d6">MATRIX_MCFG0_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga2200a7c99037461f8f4cbef6b123e9d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG0) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2200a7c99037461f8f4cbef6b123e9d6">More...</a><br /></td></tr>
<tr class="separator:ga2200a7c99037461f8f4cbef6b123e9d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga436266af11999ebf0587b290c80dd563"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga436266af11999ebf0587b290c80dd563">MATRIX_MCFG1_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga436266af11999ebf0587b290c80dd563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadbfc1b7cb2dc2cfca27d83f68f5a11af"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadbfc1b7cb2dc2cfca27d83f68f5a11af">MATRIX_MCFG1_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG1_ULBT_Pos)</td></tr>
<tr class="memdesc:gadbfc1b7cb2dc2cfca27d83f68f5a11af"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadbfc1b7cb2dc2cfca27d83f68f5a11af">More...</a><br /></td></tr>
<tr class="separator:gadbfc1b7cb2dc2cfca27d83f68f5a11af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e2a5adc448666bea542523dd6b304c2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8e2a5adc448666bea542523dd6b304c2">MATRIX_MCFG1_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#gadbfc1b7cb2dc2cfca27d83f68f5a11af">MATRIX_MCFG1_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga436266af11999ebf0587b290c80dd563">MATRIX_MCFG1_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga8e2a5adc448666bea542523dd6b304c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e59a9ebadc6d590b9cbeec1af27daf5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6e59a9ebadc6d590b9cbeec1af27daf5">MATRIX_MCFG1_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga6e59a9ebadc6d590b9cbeec1af27daf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6e59a9ebadc6d590b9cbeec1af27daf5">More...</a><br /></td></tr>
<tr class="separator:ga6e59a9ebadc6d590b9cbeec1af27daf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad564216af6a589a7b9af1d43729604a9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad564216af6a589a7b9af1d43729604a9">MATRIX_MCFG1_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad564216af6a589a7b9af1d43729604a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad564216af6a589a7b9af1d43729604a9">More...</a><br /></td></tr>
<tr class="separator:gad564216af6a589a7b9af1d43729604a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d7c519ef642b5b480fa4a38613bb325"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4d7c519ef642b5b480fa4a38613bb325">MATRIX_MCFG1_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga4d7c519ef642b5b480fa4a38613bb325"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4d7c519ef642b5b480fa4a38613bb325">More...</a><br /></td></tr>
<tr class="separator:ga4d7c519ef642b5b480fa4a38613bb325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8019fcbbc6f1d6a4912f5ab5079c58e3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8019fcbbc6f1d6a4912f5ab5079c58e3">MATRIX_MCFG1_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga8019fcbbc6f1d6a4912f5ab5079c58e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8019fcbbc6f1d6a4912f5ab5079c58e3">More...</a><br /></td></tr>
<tr class="separator:ga8019fcbbc6f1d6a4912f5ab5079c58e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd581ffcd3f9d07d04b7ba812a554820"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadd581ffcd3f9d07d04b7ba812a554820">MATRIX_MCFG1_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gadd581ffcd3f9d07d04b7ba812a554820"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadd581ffcd3f9d07d04b7ba812a554820">More...</a><br /></td></tr>
<tr class="separator:gadd581ffcd3f9d07d04b7ba812a554820"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b317b50ee5e7dc9052c10dcbef87083"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9b317b50ee5e7dc9052c10dcbef87083">MATRIX_MCFG1_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga9b317b50ee5e7dc9052c10dcbef87083"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9b317b50ee5e7dc9052c10dcbef87083">More...</a><br /></td></tr>
<tr class="separator:ga9b317b50ee5e7dc9052c10dcbef87083"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga920fe4e42fc0e3bdcbe748020e3947b5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga920fe4e42fc0e3bdcbe748020e3947b5">MATRIX_MCFG1_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga920fe4e42fc0e3bdcbe748020e3947b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga920fe4e42fc0e3bdcbe748020e3947b5">More...</a><br /></td></tr>
<tr class="separator:ga920fe4e42fc0e3bdcbe748020e3947b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a91a9c1d331f8cc8c3b1c772dad1f17"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3a91a9c1d331f8cc8c3b1c772dad1f17">MATRIX_MCFG1_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3a91a9c1d331f8cc8c3b1c772dad1f17"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG1) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3a91a9c1d331f8cc8c3b1c772dad1f17">More...</a><br /></td></tr>
<tr class="separator:ga3a91a9c1d331f8cc8c3b1c772dad1f17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6621e585257588f6811943af33ad1055"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6621e585257588f6811943af33ad1055">MATRIX_MCFG2_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga6621e585257588f6811943af33ad1055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e43d81dd66d25f8c53c77564b03754b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6e43d81dd66d25f8c53c77564b03754b">MATRIX_MCFG2_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG2_ULBT_Pos)</td></tr>
<tr class="memdesc:ga6e43d81dd66d25f8c53c77564b03754b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6e43d81dd66d25f8c53c77564b03754b">More...</a><br /></td></tr>
<tr class="separator:ga6e43d81dd66d25f8c53c77564b03754b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75993e1b69a7a75b49b37435e0816f88"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga75993e1b69a7a75b49b37435e0816f88">MATRIX_MCFG2_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga6e43d81dd66d25f8c53c77564b03754b">MATRIX_MCFG2_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga6621e585257588f6811943af33ad1055">MATRIX_MCFG2_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga75993e1b69a7a75b49b37435e0816f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0d73af8b260e70526a6ee0034404e92"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab0d73af8b260e70526a6ee0034404e92">MATRIX_MCFG2_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gab0d73af8b260e70526a6ee0034404e92"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab0d73af8b260e70526a6ee0034404e92">More...</a><br /></td></tr>
<tr class="separator:gab0d73af8b260e70526a6ee0034404e92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gace88404a7af9ef52f126e01e729edd5e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gace88404a7af9ef52f126e01e729edd5e">MATRIX_MCFG2_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gace88404a7af9ef52f126e01e729edd5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gace88404a7af9ef52f126e01e729edd5e">More...</a><br /></td></tr>
<tr class="separator:gace88404a7af9ef52f126e01e729edd5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ada7541f8c1915bfcec8ecd6a913425"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4ada7541f8c1915bfcec8ecd6a913425">MATRIX_MCFG2_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga4ada7541f8c1915bfcec8ecd6a913425"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4ada7541f8c1915bfcec8ecd6a913425">More...</a><br /></td></tr>
<tr class="separator:ga4ada7541f8c1915bfcec8ecd6a913425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17f6d0dca5022ca10e7060ca07f4a0ed"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga17f6d0dca5022ca10e7060ca07f4a0ed">MATRIX_MCFG2_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga17f6d0dca5022ca10e7060ca07f4a0ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga17f6d0dca5022ca10e7060ca07f4a0ed">More...</a><br /></td></tr>
<tr class="separator:ga17f6d0dca5022ca10e7060ca07f4a0ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0ab619adbeac617521f4e326c31ceea"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad0ab619adbeac617521f4e326c31ceea">MATRIX_MCFG2_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad0ab619adbeac617521f4e326c31ceea"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad0ab619adbeac617521f4e326c31ceea">More...</a><br /></td></tr>
<tr class="separator:gad0ab619adbeac617521f4e326c31ceea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga924acbf777010d25e2ce1b08c482a4b8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga924acbf777010d25e2ce1b08c482a4b8">MATRIX_MCFG2_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga924acbf777010d25e2ce1b08c482a4b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga924acbf777010d25e2ce1b08c482a4b8">More...</a><br /></td></tr>
<tr class="separator:ga924acbf777010d25e2ce1b08c482a4b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0053b90901490f8c9c5d34610054af22"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0053b90901490f8c9c5d34610054af22">MATRIX_MCFG2_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga0053b90901490f8c9c5d34610054af22"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0053b90901490f8c9c5d34610054af22">More...</a><br /></td></tr>
<tr class="separator:ga0053b90901490f8c9c5d34610054af22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5132ee1d2781563e368b71764cd03988"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga5132ee1d2781563e368b71764cd03988">MATRIX_MCFG2_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga5132ee1d2781563e368b71764cd03988"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG2) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga5132ee1d2781563e368b71764cd03988">More...</a><br /></td></tr>
<tr class="separator:ga5132ee1d2781563e368b71764cd03988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga593430b723f80f2e0c905f75dd0e8a77"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga593430b723f80f2e0c905f75dd0e8a77">MATRIX_MCFG3_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga593430b723f80f2e0c905f75dd0e8a77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga985afc9ed430615f27867fd084145e22"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga985afc9ed430615f27867fd084145e22">MATRIX_MCFG3_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG3_ULBT_Pos)</td></tr>
<tr class="memdesc:ga985afc9ed430615f27867fd084145e22"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga985afc9ed430615f27867fd084145e22">More...</a><br /></td></tr>
<tr class="separator:ga985afc9ed430615f27867fd084145e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad59b776b725a01a0e4f5a885c22f941a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad59b776b725a01a0e4f5a885c22f941a">MATRIX_MCFG3_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga985afc9ed430615f27867fd084145e22">MATRIX_MCFG3_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga593430b723f80f2e0c905f75dd0e8a77">MATRIX_MCFG3_ULBT_Pos</a>)))</td></tr>
<tr class="separator:gad59b776b725a01a0e4f5a885c22f941a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f03fed31a60506e09d50fca5c848ba4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8f03fed31a60506e09d50fca5c848ba4">MATRIX_MCFG3_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga8f03fed31a60506e09d50fca5c848ba4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8f03fed31a60506e09d50fca5c848ba4">More...</a><br /></td></tr>
<tr class="separator:ga8f03fed31a60506e09d50fca5c848ba4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58292d84711c90c7ff68d8b29699be5d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga58292d84711c90c7ff68d8b29699be5d">MATRIX_MCFG3_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga58292d84711c90c7ff68d8b29699be5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga58292d84711c90c7ff68d8b29699be5d">More...</a><br /></td></tr>
<tr class="separator:ga58292d84711c90c7ff68d8b29699be5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d0cb937cd74e958217b0db4e372d0e0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3d0cb937cd74e958217b0db4e372d0e0">MATRIX_MCFG3_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3d0cb937cd74e958217b0db4e372d0e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3d0cb937cd74e958217b0db4e372d0e0">More...</a><br /></td></tr>
<tr class="separator:ga3d0cb937cd74e958217b0db4e372d0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ccc12c039816839bfeda6846f2ca79c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0ccc12c039816839bfeda6846f2ca79c">MATRIX_MCFG3_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga0ccc12c039816839bfeda6846f2ca79c"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0ccc12c039816839bfeda6846f2ca79c">More...</a><br /></td></tr>
<tr class="separator:ga0ccc12c039816839bfeda6846f2ca79c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42e118ae6e7748f8b37afb6c606eb6ea"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga42e118ae6e7748f8b37afb6c606eb6ea">MATRIX_MCFG3_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga42e118ae6e7748f8b37afb6c606eb6ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga42e118ae6e7748f8b37afb6c606eb6ea">More...</a><br /></td></tr>
<tr class="separator:ga42e118ae6e7748f8b37afb6c606eb6ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga665bb575ed067169dfb8db5a282f08e7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga665bb575ed067169dfb8db5a282f08e7">MATRIX_MCFG3_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga665bb575ed067169dfb8db5a282f08e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga665bb575ed067169dfb8db5a282f08e7">More...</a><br /></td></tr>
<tr class="separator:ga665bb575ed067169dfb8db5a282f08e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3c84a1dd77600ae891583056767b4b2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad3c84a1dd77600ae891583056767b4b2">MATRIX_MCFG3_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad3c84a1dd77600ae891583056767b4b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad3c84a1dd77600ae891583056767b4b2">More...</a><br /></td></tr>
<tr class="separator:gad3c84a1dd77600ae891583056767b4b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacda0076c5f239af69c396341841810e0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacda0076c5f239af69c396341841810e0">MATRIX_MCFG3_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gacda0076c5f239af69c396341841810e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG3) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacda0076c5f239af69c396341841810e0">More...</a><br /></td></tr>
<tr class="separator:gacda0076c5f239af69c396341841810e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00edf777c2276c71c5a0c1334be3c8eb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga00edf777c2276c71c5a0c1334be3c8eb">MATRIX_MCFG4_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga00edf777c2276c71c5a0c1334be3c8eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ce6240b9f37c8b9e5abfb50ed77aec8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga5ce6240b9f37c8b9e5abfb50ed77aec8">MATRIX_MCFG4_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG4_ULBT_Pos)</td></tr>
<tr class="memdesc:ga5ce6240b9f37c8b9e5abfb50ed77aec8"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga5ce6240b9f37c8b9e5abfb50ed77aec8">More...</a><br /></td></tr>
<tr class="separator:ga5ce6240b9f37c8b9e5abfb50ed77aec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2302d3a2e76ee5230265cf6893c8e2e3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2302d3a2e76ee5230265cf6893c8e2e3">MATRIX_MCFG4_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga5ce6240b9f37c8b9e5abfb50ed77aec8">MATRIX_MCFG4_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga00edf777c2276c71c5a0c1334be3c8eb">MATRIX_MCFG4_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga2302d3a2e76ee5230265cf6893c8e2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46b538a8a9584ba352f74d9ddc7bc2d7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga46b538a8a9584ba352f74d9ddc7bc2d7">MATRIX_MCFG4_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga46b538a8a9584ba352f74d9ddc7bc2d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga46b538a8a9584ba352f74d9ddc7bc2d7">More...</a><br /></td></tr>
<tr class="separator:ga46b538a8a9584ba352f74d9ddc7bc2d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62644e141a71e5ac1088a119c1d8565f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga62644e141a71e5ac1088a119c1d8565f">MATRIX_MCFG4_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga62644e141a71e5ac1088a119c1d8565f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga62644e141a71e5ac1088a119c1d8565f">More...</a><br /></td></tr>
<tr class="separator:ga62644e141a71e5ac1088a119c1d8565f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b65f1e17bdd7a8c4d15135905cf21e8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4b65f1e17bdd7a8c4d15135905cf21e8">MATRIX_MCFG4_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga4b65f1e17bdd7a8c4d15135905cf21e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4b65f1e17bdd7a8c4d15135905cf21e8">More...</a><br /></td></tr>
<tr class="separator:ga4b65f1e17bdd7a8c4d15135905cf21e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa30c457e7c6e72a379a5f43bf3dca306"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa30c457e7c6e72a379a5f43bf3dca306">MATRIX_MCFG4_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaa30c457e7c6e72a379a5f43bf3dca306"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa30c457e7c6e72a379a5f43bf3dca306">More...</a><br /></td></tr>
<tr class="separator:gaa30c457e7c6e72a379a5f43bf3dca306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3d57fd0d676259a513cc3cfe3b397fd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab3d57fd0d676259a513cc3cfe3b397fd">MATRIX_MCFG4_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gab3d57fd0d676259a513cc3cfe3b397fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab3d57fd0d676259a513cc3cfe3b397fd">More...</a><br /></td></tr>
<tr class="separator:gab3d57fd0d676259a513cc3cfe3b397fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8f104d86419a5cb29a7c15650b43d660"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8f104d86419a5cb29a7c15650b43d660">MATRIX_MCFG4_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga8f104d86419a5cb29a7c15650b43d660"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8f104d86419a5cb29a7c15650b43d660">More...</a><br /></td></tr>
<tr class="separator:ga8f104d86419a5cb29a7c15650b43d660"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga60a38623cbed90074b5aaa11a991adeb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga60a38623cbed90074b5aaa11a991adeb">MATRIX_MCFG4_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga60a38623cbed90074b5aaa11a991adeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga60a38623cbed90074b5aaa11a991adeb">More...</a><br /></td></tr>
<tr class="separator:ga60a38623cbed90074b5aaa11a991adeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga130d6f02654b6b778ca08959ed3a141b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga130d6f02654b6b778ca08959ed3a141b">MATRIX_MCFG4_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga130d6f02654b6b778ca08959ed3a141b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG4) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga130d6f02654b6b778ca08959ed3a141b">More...</a><br /></td></tr>
<tr class="separator:ga130d6f02654b6b778ca08959ed3a141b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9507c5a287a45c0bc179c73688871fa8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9507c5a287a45c0bc179c73688871fa8">MATRIX_MCFG5_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga9507c5a287a45c0bc179c73688871fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfb737383bff73d613bc283bc9f13776"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacfb737383bff73d613bc283bc9f13776">MATRIX_MCFG5_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG5_ULBT_Pos)</td></tr>
<tr class="memdesc:gacfb737383bff73d613bc283bc9f13776"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacfb737383bff73d613bc283bc9f13776">More...</a><br /></td></tr>
<tr class="separator:gacfb737383bff73d613bc283bc9f13776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga279ce09b25671448ae4a58ec546b2465"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga279ce09b25671448ae4a58ec546b2465">MATRIX_MCFG5_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#gacfb737383bff73d613bc283bc9f13776">MATRIX_MCFG5_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga9507c5a287a45c0bc179c73688871fa8">MATRIX_MCFG5_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga279ce09b25671448ae4a58ec546b2465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7a55783d3fe37a2f92da44224a37b8f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac7a55783d3fe37a2f92da44224a37b8f">MATRIX_MCFG5_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gac7a55783d3fe37a2f92da44224a37b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac7a55783d3fe37a2f92da44224a37b8f">More...</a><br /></td></tr>
<tr class="separator:gac7a55783d3fe37a2f92da44224a37b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab78b7adbf67f309f6f89cf9f81ee6679"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab78b7adbf67f309f6f89cf9f81ee6679">MATRIX_MCFG5_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gab78b7adbf67f309f6f89cf9f81ee6679"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab78b7adbf67f309f6f89cf9f81ee6679">More...</a><br /></td></tr>
<tr class="separator:gab78b7adbf67f309f6f89cf9f81ee6679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0487ae7f639f95b0f1abe93f6b4b0011"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0487ae7f639f95b0f1abe93f6b4b0011">MATRIX_MCFG5_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga0487ae7f639f95b0f1abe93f6b4b0011"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0487ae7f639f95b0f1abe93f6b4b0011">More...</a><br /></td></tr>
<tr class="separator:ga0487ae7f639f95b0f1abe93f6b4b0011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47f10d6ce90404b4b4d086a597ba1d5b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga47f10d6ce90404b4b4d086a597ba1d5b">MATRIX_MCFG5_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga47f10d6ce90404b4b4d086a597ba1d5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga47f10d6ce90404b4b4d086a597ba1d5b">More...</a><br /></td></tr>
<tr class="separator:ga47f10d6ce90404b4b4d086a597ba1d5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacfb42d2990e8c4c272a329efbb4091d3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacfb42d2990e8c4c272a329efbb4091d3">MATRIX_MCFG5_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gacfb42d2990e8c4c272a329efbb4091d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacfb42d2990e8c4c272a329efbb4091d3">More...</a><br /></td></tr>
<tr class="separator:gacfb42d2990e8c4c272a329efbb4091d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga239a887729e23525e15604ff0b40b9c8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga239a887729e23525e15604ff0b40b9c8">MATRIX_MCFG5_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga239a887729e23525e15604ff0b40b9c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga239a887729e23525e15604ff0b40b9c8">More...</a><br /></td></tr>
<tr class="separator:ga239a887729e23525e15604ff0b40b9c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae87335d1769ac3d3a5b119ddc55b6ff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae87335d1769ac3d3a5b119ddc55b6ff">MATRIX_MCFG5_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaae87335d1769ac3d3a5b119ddc55b6ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae87335d1769ac3d3a5b119ddc55b6ff">More...</a><br /></td></tr>
<tr class="separator:gaae87335d1769ac3d3a5b119ddc55b6ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cdc95274ef1ae455ebb66e501d34137"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2cdc95274ef1ae455ebb66e501d34137">MATRIX_MCFG5_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga2cdc95274ef1ae455ebb66e501d34137"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG5) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2cdc95274ef1ae455ebb66e501d34137">More...</a><br /></td></tr>
<tr class="separator:ga2cdc95274ef1ae455ebb66e501d34137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3d80417bd7396dc8666871c2f261889"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae3d80417bd7396dc8666871c2f261889">MATRIX_MCFG6_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gae3d80417bd7396dc8666871c2f261889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74f4a388f3bd82ba8549d384f5710a1c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga74f4a388f3bd82ba8549d384f5710a1c">MATRIX_MCFG6_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG6_ULBT_Pos)</td></tr>
<tr class="memdesc:ga74f4a388f3bd82ba8549d384f5710a1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga74f4a388f3bd82ba8549d384f5710a1c">More...</a><br /></td></tr>
<tr class="separator:ga74f4a388f3bd82ba8549d384f5710a1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e9605229ab87527cade2bd02098ac2f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3e9605229ab87527cade2bd02098ac2f">MATRIX_MCFG6_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga74f4a388f3bd82ba8549d384f5710a1c">MATRIX_MCFG6_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#gae3d80417bd7396dc8666871c2f261889">MATRIX_MCFG6_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga3e9605229ab87527cade2bd02098ac2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa9d8ed734e988917b19f9b3486671af"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaa9d8ed734e988917b19f9b3486671af">MATRIX_MCFG6_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaaa9d8ed734e988917b19f9b3486671af"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaa9d8ed734e988917b19f9b3486671af">More...</a><br /></td></tr>
<tr class="separator:gaaa9d8ed734e988917b19f9b3486671af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2118565bf50fef9d7d3c74649c29859"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac2118565bf50fef9d7d3c74649c29859">MATRIX_MCFG6_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gac2118565bf50fef9d7d3c74649c29859"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac2118565bf50fef9d7d3c74649c29859">More...</a><br /></td></tr>
<tr class="separator:gac2118565bf50fef9d7d3c74649c29859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9936a97b00b01af88374b0917e2ac494"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9936a97b00b01af88374b0917e2ac494">MATRIX_MCFG6_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga9936a97b00b01af88374b0917e2ac494"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9936a97b00b01af88374b0917e2ac494">More...</a><br /></td></tr>
<tr class="separator:ga9936a97b00b01af88374b0917e2ac494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7d26c03e4dabfb8868fbc6149115289d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7d26c03e4dabfb8868fbc6149115289d">MATRIX_MCFG6_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga7d26c03e4dabfb8868fbc6149115289d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7d26c03e4dabfb8868fbc6149115289d">More...</a><br /></td></tr>
<tr class="separator:ga7d26c03e4dabfb8868fbc6149115289d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaafaf5eb11c787fe793ce3ca117a4070"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaafaf5eb11c787fe793ce3ca117a4070">MATRIX_MCFG6_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaaafaf5eb11c787fe793ce3ca117a4070"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaafaf5eb11c787fe793ce3ca117a4070">More...</a><br /></td></tr>
<tr class="separator:gaaafaf5eb11c787fe793ce3ca117a4070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4511e10b7baf851a42483d20dd011bff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4511e10b7baf851a42483d20dd011bff">MATRIX_MCFG6_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga4511e10b7baf851a42483d20dd011bff"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4511e10b7baf851a42483d20dd011bff">More...</a><br /></td></tr>
<tr class="separator:ga4511e10b7baf851a42483d20dd011bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55a407b41da656065ee246208cf585fe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga55a407b41da656065ee246208cf585fe">MATRIX_MCFG6_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga55a407b41da656065ee246208cf585fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga55a407b41da656065ee246208cf585fe">More...</a><br /></td></tr>
<tr class="separator:ga55a407b41da656065ee246208cf585fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17399cc34ed4c1acd1dc77ea5b1d213b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga17399cc34ed4c1acd1dc77ea5b1d213b">MATRIX_MCFG6_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga17399cc34ed4c1acd1dc77ea5b1d213b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG6) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga17399cc34ed4c1acd1dc77ea5b1d213b">More...</a><br /></td></tr>
<tr class="separator:ga17399cc34ed4c1acd1dc77ea5b1d213b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f966d5704988e6d44c0fc580a1bae2b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0f966d5704988e6d44c0fc580a1bae2b">MATRIX_MCFG8_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga0f966d5704988e6d44c0fc580a1bae2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a1875a3f46b451286eef4954b1ab397"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7a1875a3f46b451286eef4954b1ab397">MATRIX_MCFG8_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG8_ULBT_Pos)</td></tr>
<tr class="memdesc:ga7a1875a3f46b451286eef4954b1ab397"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7a1875a3f46b451286eef4954b1ab397">More...</a><br /></td></tr>
<tr class="separator:ga7a1875a3f46b451286eef4954b1ab397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fa99b17e0bb94c4e80eddac9ac969b8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8fa99b17e0bb94c4e80eddac9ac969b8">MATRIX_MCFG8_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga7a1875a3f46b451286eef4954b1ab397">MATRIX_MCFG8_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_s70___m_a_t_r_i_x.xhtml#ga0f966d5704988e6d44c0fc580a1bae2b">MATRIX_MCFG8_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga8fa99b17e0bb94c4e80eddac9ac969b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd65d6bb1b1580665f6b0161d10d986f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacd65d6bb1b1580665f6b0161d10d986f">MATRIX_MCFG8_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gacd65d6bb1b1580665f6b0161d10d986f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacd65d6bb1b1580665f6b0161d10d986f">More...</a><br /></td></tr>
<tr class="separator:gacd65d6bb1b1580665f6b0161d10d986f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa36145b34d32e4ac18d3e11b2ea95467"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa36145b34d32e4ac18d3e11b2ea95467">MATRIX_MCFG8_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaa36145b34d32e4ac18d3e11b2ea95467"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa36145b34d32e4ac18d3e11b2ea95467">More...</a><br /></td></tr>
<tr class="separator:gaa36145b34d32e4ac18d3e11b2ea95467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08bd64fe7b07705fc2538b5eddfad723"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga08bd64fe7b07705fc2538b5eddfad723">MATRIX_MCFG8_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga08bd64fe7b07705fc2538b5eddfad723"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga08bd64fe7b07705fc2538b5eddfad723">More...</a><br /></td></tr>
<tr class="separator:ga08bd64fe7b07705fc2538b5eddfad723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae485963e5b2b9818b9577563b2dab85d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae485963e5b2b9818b9577563b2dab85d">MATRIX_MCFG8_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gae485963e5b2b9818b9577563b2dab85d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae485963e5b2b9818b9577563b2dab85d">More...</a><br /></td></tr>
<tr class="separator:gae485963e5b2b9818b9577563b2dab85d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga747360e79614c49592b0bd84d3fe9b60"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga747360e79614c49592b0bd84d3fe9b60">MATRIX_MCFG8_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga747360e79614c49592b0bd84d3fe9b60"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga747360e79614c49592b0bd84d3fe9b60">More...</a><br /></td></tr>
<tr class="separator:ga747360e79614c49592b0bd84d3fe9b60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee9744ffea1409d93c88a896593e18f2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaee9744ffea1409d93c88a896593e18f2">MATRIX_MCFG8_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaee9744ffea1409d93c88a896593e18f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaee9744ffea1409d93c88a896593e18f2">More...</a><br /></td></tr>
<tr class="separator:gaee9744ffea1409d93c88a896593e18f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga68bc9a7728b76cf449e7918de9f78403"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga68bc9a7728b76cf449e7918de9f78403">MATRIX_MCFG8_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga68bc9a7728b76cf449e7918de9f78403"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga68bc9a7728b76cf449e7918de9f78403">More...</a><br /></td></tr>
<tr class="separator:ga68bc9a7728b76cf449e7918de9f78403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a1b8ba6e77a85a29ba8a9a0700ed171"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9a1b8ba6e77a85a29ba8a9a0700ed171">MATRIX_MCFG8_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga9a1b8ba6e77a85a29ba8a9a0700ed171"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG8) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9a1b8ba6e77a85a29ba8a9a0700ed171">More...</a><br /></td></tr>
<tr class="separator:ga9a1b8ba6e77a85a29ba8a9a0700ed171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26502e744b87f4960c38c2e1a46c7155"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga26502e744b87f4960c38c2e1a46c7155">MATRIX_MCFG9_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga26502e744b87f4960c38c2e1a46c7155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8913a6d08d687f6c88f009b96648a81f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8913a6d08d687f6c88f009b96648a81f">MATRIX_MCFG9_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG9_ULBT_Pos)</td></tr>
<tr class="memdesc:ga8913a6d08d687f6c88f009b96648a81f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8913a6d08d687f6c88f009b96648a81f">More...</a><br /></td></tr>
<tr class="separator:ga8913a6d08d687f6c88f009b96648a81f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ded795faeb31d82087ae1177034ed16"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1ded795faeb31d82087ae1177034ed16">MATRIX_MCFG9_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8913a6d08d687f6c88f009b96648a81f">MATRIX_MCFG9_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga26502e744b87f4960c38c2e1a46c7155">MATRIX_MCFG9_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga1ded795faeb31d82087ae1177034ed16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf3d72cf8ccb44db543693365a44dab9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaf3d72cf8ccb44db543693365a44dab9">MATRIX_MCFG9_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaaf3d72cf8ccb44db543693365a44dab9"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaaf3d72cf8ccb44db543693365a44dab9">More...</a><br /></td></tr>
<tr class="separator:gaaf3d72cf8ccb44db543693365a44dab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99883cf89e4cdfa666791eb06897eb87"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga99883cf89e4cdfa666791eb06897eb87">MATRIX_MCFG9_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga99883cf89e4cdfa666791eb06897eb87"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga99883cf89e4cdfa666791eb06897eb87">More...</a><br /></td></tr>
<tr class="separator:ga99883cf89e4cdfa666791eb06897eb87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43e3d3a492af1fc0f8c2eb368f561eac"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga43e3d3a492af1fc0f8c2eb368f561eac">MATRIX_MCFG9_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga43e3d3a492af1fc0f8c2eb368f561eac"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga43e3d3a492af1fc0f8c2eb368f561eac">More...</a><br /></td></tr>
<tr class="separator:ga43e3d3a492af1fc0f8c2eb368f561eac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3769c1e631e668e7c326206810acde36"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3769c1e631e668e7c326206810acde36">MATRIX_MCFG9_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3769c1e631e668e7c326206810acde36"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3769c1e631e668e7c326206810acde36">More...</a><br /></td></tr>
<tr class="separator:ga3769c1e631e668e7c326206810acde36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf5ac8537b82b5d760846a93646e9d23"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacf5ac8537b82b5d760846a93646e9d23">MATRIX_MCFG9_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gacf5ac8537b82b5d760846a93646e9d23"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacf5ac8537b82b5d760846a93646e9d23">More...</a><br /></td></tr>
<tr class="separator:gacf5ac8537b82b5d760846a93646e9d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1a64b79f28ce9a256132178057f7afa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae1a64b79f28ce9a256132178057f7afa">MATRIX_MCFG9_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gae1a64b79f28ce9a256132178057f7afa"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae1a64b79f28ce9a256132178057f7afa">More...</a><br /></td></tr>
<tr class="separator:gae1a64b79f28ce9a256132178057f7afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52e2f7908d153261b7bdfcb925f613ca"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga52e2f7908d153261b7bdfcb925f613ca">MATRIX_MCFG9_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga52e2f7908d153261b7bdfcb925f613ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga52e2f7908d153261b7bdfcb925f613ca">More...</a><br /></td></tr>
<tr class="separator:ga52e2f7908d153261b7bdfcb925f613ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf50cab86252b65a3adefd4274d7adbb2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf50cab86252b65a3adefd4274d7adbb2">MATRIX_MCFG9_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaf50cab86252b65a3adefd4274d7adbb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG9) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf50cab86252b65a3adefd4274d7adbb2">More...</a><br /></td></tr>
<tr class="separator:gaf50cab86252b65a3adefd4274d7adbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82d6d704d8a1fcf822c0da95a642c4a2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga82d6d704d8a1fcf822c0da95a642c4a2">MATRIX_MCFG10_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga82d6d704d8a1fcf822c0da95a642c4a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4c509dab7673c2c25f94988b72ae2fe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf4c509dab7673c2c25f94988b72ae2fe">MATRIX_MCFG10_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG10_ULBT_Pos)</td></tr>
<tr class="memdesc:gaf4c509dab7673c2c25f94988b72ae2fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf4c509dab7673c2c25f94988b72ae2fe">More...</a><br /></td></tr>
<tr class="separator:gaf4c509dab7673c2c25f94988b72ae2fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f4a9ae6313b30b24c078227e9472897"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9f4a9ae6313b30b24c078227e9472897">MATRIX_MCFG10_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf4c509dab7673c2c25f94988b72ae2fe">MATRIX_MCFG10_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga82d6d704d8a1fcf822c0da95a642c4a2">MATRIX_MCFG10_ULBT_Pos</a>)))</td></tr>
<tr class="separator:ga9f4a9ae6313b30b24c078227e9472897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad14fba6d1b18f255e752df30569fb868"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad14fba6d1b18f255e752df30569fb868">MATRIX_MCFG10_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad14fba6d1b18f255e752df30569fb868"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad14fba6d1b18f255e752df30569fb868">More...</a><br /></td></tr>
<tr class="separator:gad14fba6d1b18f255e752df30569fb868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad212161aa5e77816d8a7a4bd77b6f6c0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad212161aa5e77816d8a7a4bd77b6f6c0">MATRIX_MCFG10_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gad212161aa5e77816d8a7a4bd77b6f6c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad212161aa5e77816d8a7a4bd77b6f6c0">More...</a><br /></td></tr>
<tr class="separator:gad212161aa5e77816d8a7a4bd77b6f6c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7af0a04dff67ccfb7ab4de4ba7875ace"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7af0a04dff67ccfb7ab4de4ba7875ace">MATRIX_MCFG10_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga7af0a04dff67ccfb7ab4de4ba7875ace"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7af0a04dff67ccfb7ab4de4ba7875ace">More...</a><br /></td></tr>
<tr class="separator:ga7af0a04dff67ccfb7ab4de4ba7875ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab25c687454a2f229f13bddeda65951f4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab25c687454a2f229f13bddeda65951f4">MATRIX_MCFG10_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gab25c687454a2f229f13bddeda65951f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab25c687454a2f229f13bddeda65951f4">More...</a><br /></td></tr>
<tr class="separator:gab25c687454a2f229f13bddeda65951f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa65ba25e4b1eece073bea98632a5e87e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa65ba25e4b1eece073bea98632a5e87e">MATRIX_MCFG10_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaa65ba25e4b1eece073bea98632a5e87e"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa65ba25e4b1eece073bea98632a5e87e">More...</a><br /></td></tr>
<tr class="separator:gaa65ba25e4b1eece073bea98632a5e87e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga310cf2e8bf944e3132bd3b4dc74456be"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga310cf2e8bf944e3132bd3b4dc74456be">MATRIX_MCFG10_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga310cf2e8bf944e3132bd3b4dc74456be"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga310cf2e8bf944e3132bd3b4dc74456be">More...</a><br /></td></tr>
<tr class="separator:ga310cf2e8bf944e3132bd3b4dc74456be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3026dc1841125fd22d0cc0975741b24"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac3026dc1841125fd22d0cc0975741b24">MATRIX_MCFG10_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gac3026dc1841125fd22d0cc0975741b24"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac3026dc1841125fd22d0cc0975741b24">More...</a><br /></td></tr>
<tr class="separator:gac3026dc1841125fd22d0cc0975741b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64ce00f422011ff81ebf7d96d571fdb7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga64ce00f422011ff81ebf7d96d571fdb7">MATRIX_MCFG10_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga64ce00f422011ff81ebf7d96d571fdb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG10) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga64ce00f422011ff81ebf7d96d571fdb7">More...</a><br /></td></tr>
<tr class="separator:ga64ce00f422011ff81ebf7d96d571fdb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6e737276cef5a6d038ad8c7469feb81"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf6e737276cef5a6d038ad8c7469feb81">MATRIX_MCFG11_ULBT_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaf6e737276cef5a6d038ad8c7469feb81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8efc027d6da9b033ca98817dbbdf84f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac8efc027d6da9b033ca98817dbbdf84f">MATRIX_MCFG11_ULBT_Msk</a>&#160;&#160;&#160;(0x7u &lt;&lt; MATRIX_MCFG11_ULBT_Pos)</td></tr>
<tr class="memdesc:gac8efc027d6da9b033ca98817dbbdf84f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) Undefined Length Burst Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac8efc027d6da9b033ca98817dbbdf84f">More...</a><br /></td></tr>
<tr class="separator:gac8efc027d6da9b033ca98817dbbdf84f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac6c7a60daf8c9fec47762434b0b33c6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaac6c7a60daf8c9fec47762434b0b33c6">MATRIX_MCFG11_ULBT</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac8efc027d6da9b033ca98817dbbdf84f">MATRIX_MCFG11_ULBT_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf6e737276cef5a6d038ad8c7469feb81">MATRIX_MCFG11_ULBT_Pos</a>)))</td></tr>
<tr class="separator:gaac6c7a60daf8c9fec47762434b0b33c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf60fa6b354152eaa9d610f4f53a2537c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf60fa6b354152eaa9d610f4f53a2537c">MATRIX_MCFG11_ULBT_UNLTD_LENGTH</a>&#160;&#160;&#160;(0x0u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaf60fa6b354152eaa9d610f4f53a2537c"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf60fa6b354152eaa9d610f4f53a2537c">More...</a><br /></td></tr>
<tr class="separator:gaf60fa6b354152eaa9d610f4f53a2537c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga334935e8e0285f3ea953a3124cd39bfd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga334935e8e0285f3ea953a3124cd39bfd">MATRIX_MCFG11_ULBT_SINGLE_ACCESS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga334935e8e0285f3ea953a3124cd39bfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga334935e8e0285f3ea953a3124cd39bfd">More...</a><br /></td></tr>
<tr class="separator:ga334935e8e0285f3ea953a3124cd39bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c743b88aaa2ce0e0283ad1c0e25a0a8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0c743b88aaa2ce0e0283ad1c0e25a0a8">MATRIX_MCFG11_ULBT_4BEAT_BURST</a>&#160;&#160;&#160;(0x2u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga0c743b88aaa2ce0e0283ad1c0e25a0a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0c743b88aaa2ce0e0283ad1c0e25a0a8">More...</a><br /></td></tr>
<tr class="separator:ga0c743b88aaa2ce0e0283ad1c0e25a0a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab1b191a6b67d2cff621571e46fa3590"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaab1b191a6b67d2cff621571e46fa3590">MATRIX_MCFG11_ULBT_8BEAT_BURST</a>&#160;&#160;&#160;(0x3u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaab1b191a6b67d2cff621571e46fa3590"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaab1b191a6b67d2cff621571e46fa3590">More...</a><br /></td></tr>
<tr class="separator:gaab1b191a6b67d2cff621571e46fa3590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3eeeab90898aee12e7349c7f836ee337"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3eeeab90898aee12e7349c7f836ee337">MATRIX_MCFG11_ULBT_16BEAT_BURST</a>&#160;&#160;&#160;(0x4u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3eeeab90898aee12e7349c7f836ee337"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3eeeab90898aee12e7349c7f836ee337">More...</a><br /></td></tr>
<tr class="separator:ga3eeeab90898aee12e7349c7f836ee337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga933235a5cb1e30381b8fb3d424e46a0a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga933235a5cb1e30381b8fb3d424e46a0a">MATRIX_MCFG11_ULBT_32BEAT_BURST</a>&#160;&#160;&#160;(0x5u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga933235a5cb1e30381b8fb3d424e46a0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 32-beat Burst -The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga933235a5cb1e30381b8fb3d424e46a0a">More...</a><br /></td></tr>
<tr class="separator:ga933235a5cb1e30381b8fb3d424e46a0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3d7016974318986c15c86f73c8d0221"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf3d7016974318986c15c86f73c8d0221">MATRIX_MCFG11_ULBT_64BEAT_BURST</a>&#160;&#160;&#160;(0x6u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaf3d7016974318986c15c86f73c8d0221"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf3d7016974318986c15c86f73c8d0221">More...</a><br /></td></tr>
<tr class="separator:gaf3d7016974318986c15c86f73c8d0221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d3a2f3d075688aae5d5a7627008199b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9d3a2f3d075688aae5d5a7627008199b">MATRIX_MCFG11_ULBT_128BEAT_BURST</a>&#160;&#160;&#160;(0x7u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga9d3a2f3d075688aae5d5a7627008199b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MCFG11) 128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9d3a2f3d075688aae5d5a7627008199b">More...</a><br /></td></tr>
<tr class="separator:ga9d3a2f3d075688aae5d5a7627008199b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8381ea5ca099fd27ca8fbfca54c4a8b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8381ea5ca099fd27ca8fbfca54c4a8b3">MATRIX_SCFG_SLOT_CYCLE_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga8381ea5ca099fd27ca8fbfca54c4a8b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ec2b1d65bfe56e014a9e9ea6bd81eb6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1ec2b1d65bfe56e014a9e9ea6bd81eb6">MATRIX_SCFG_SLOT_CYCLE_Msk</a>&#160;&#160;&#160;(0x1ffu &lt;&lt; MATRIX_SCFG_SLOT_CYCLE_Pos)</td></tr>
<tr class="memdesc:ga1ec2b1d65bfe56e014a9e9ea6bd81eb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) Maximum Bus Grant Duration for Masters  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1ec2b1d65bfe56e014a9e9ea6bd81eb6">More...</a><br /></td></tr>
<tr class="separator:ga1ec2b1d65bfe56e014a9e9ea6bd81eb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61b5ffaeb4d72e689d101d1df7138c32"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga61b5ffaeb4d72e689d101d1df7138c32">MATRIX_SCFG_SLOT_CYCLE</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga1ec2b1d65bfe56e014a9e9ea6bd81eb6">MATRIX_SCFG_SLOT_CYCLE_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga8381ea5ca099fd27ca8fbfca54c4a8b3">MATRIX_SCFG_SLOT_CYCLE_Pos</a>)))</td></tr>
<tr class="separator:ga61b5ffaeb4d72e689d101d1df7138c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga064f806803d17d584f751dfdfbff59be"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga064f806803d17d584f751dfdfbff59be">MATRIX_SCFG_DEFMSTR_TYPE_Pos</a>&#160;&#160;&#160;16</td></tr>
<tr class="separator:ga064f806803d17d584f751dfdfbff59be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae095872b0c604d21a97b49e765aa007a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae095872b0c604d21a97b49e765aa007a">MATRIX_SCFG_DEFMSTR_TYPE_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_SCFG_DEFMSTR_TYPE_Pos)</td></tr>
<tr class="memdesc:gae095872b0c604d21a97b49e765aa007a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) Default Master Type  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae095872b0c604d21a97b49e765aa007a">More...</a><br /></td></tr>
<tr class="separator:gae095872b0c604d21a97b49e765aa007a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga985c6bcc1fdaf9a7b2ac870130b36033"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga985c6bcc1fdaf9a7b2ac870130b36033">MATRIX_SCFG_DEFMSTR_TYPE</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gae095872b0c604d21a97b49e765aa007a">MATRIX_SCFG_DEFMSTR_TYPE_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga064f806803d17d584f751dfdfbff59be">MATRIX_SCFG_DEFMSTR_TYPE_Pos</a>)))</td></tr>
<tr class="separator:ga985c6bcc1fdaf9a7b2ac870130b36033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa6edc1efa8f3fc131a2c48d959df99e4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa6edc1efa8f3fc131a2c48d959df99e4">MATRIX_SCFG_DEFMSTR_TYPE_NONE</a>&#160;&#160;&#160;(0x0u &lt;&lt; 16)</td></tr>
<tr class="memdesc:gaa6edc1efa8f3fc131a2c48d959df99e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters.This results in a one clock cycle latency for the first access of a burst transfer or for a single access.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaa6edc1efa8f3fc131a2c48d959df99e4">More...</a><br /></td></tr>
<tr class="separator:gaa6edc1efa8f3fc131a2c48d959df99e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab6309467f784a362e9f4909995aa6c95"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab6309467f784a362e9f4909995aa6c95">MATRIX_SCFG_DEFMSTR_TYPE_LAST</a>&#160;&#160;&#160;(0x1u &lt;&lt; 16)</td></tr>
<tr class="memdesc:gab6309467f784a362e9f4909995aa6c95"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it.This results in not having one clock cycle latency when the last master tries to access the slave again.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab6309467f784a362e9f4909995aa6c95">More...</a><br /></td></tr>
<tr class="separator:gab6309467f784a362e9f4909995aa6c95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d89957356611bdf1a256db82a84c465"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8d89957356611bdf1a256db82a84c465">MATRIX_SCFG_DEFMSTR_TYPE_FIXED</a>&#160;&#160;&#160;(0x2u &lt;&lt; 16)</td></tr>
<tr class="memdesc:ga8d89957356611bdf1a256db82a84c465"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field.This results in not having one clock cycle latency when the fixed master tries to access the slave again.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8d89957356611bdf1a256db82a84c465">More...</a><br /></td></tr>
<tr class="separator:ga8d89957356611bdf1a256db82a84c465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7bf8c13ca20168061abe83d20ee4aaa4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7bf8c13ca20168061abe83d20ee4aaa4">MATRIX_SCFG_FIXED_DEFMSTR_Pos</a>&#160;&#160;&#160;18</td></tr>
<tr class="separator:ga7bf8c13ca20168061abe83d20ee4aaa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1a2cf87724c9cc01ba7745ced4d4a29"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf1a2cf87724c9cc01ba7745ced4d4a29">MATRIX_SCFG_FIXED_DEFMSTR_Msk</a>&#160;&#160;&#160;(0xfu &lt;&lt; MATRIX_SCFG_FIXED_DEFMSTR_Pos)</td></tr>
<tr class="memdesc:gaf1a2cf87724c9cc01ba7745ced4d4a29"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_SCFG[9]) Fixed Default Master  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf1a2cf87724c9cc01ba7745ced4d4a29">More...</a><br /></td></tr>
<tr class="separator:gaf1a2cf87724c9cc01ba7745ced4d4a29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f96e7339f9cb48e52291ef59a619ad1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga5f96e7339f9cb48e52291ef59a619ad1">MATRIX_SCFG_FIXED_DEFMSTR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gaf1a2cf87724c9cc01ba7745ced4d4a29">MATRIX_SCFG_FIXED_DEFMSTR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga7bf8c13ca20168061abe83d20ee4aaa4">MATRIX_SCFG_FIXED_DEFMSTR_Pos</a>)))</td></tr>
<tr class="separator:ga5f96e7339f9cb48e52291ef59a619ad1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4eb749b4f287949fd3478c4eb762318"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf4eb749b4f287949fd3478c4eb762318">MATRIX_PRAS_M0PR_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaf4eb749b4f287949fd3478c4eb762318"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga285356be010d13e1940cab92b02e11cf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga285356be010d13e1940cab92b02e11cf">MATRIX_PRAS_M0PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M0PR_Pos)</td></tr>
<tr class="memdesc:ga285356be010d13e1940cab92b02e11cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 0 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga285356be010d13e1940cab92b02e11cf">More...</a><br /></td></tr>
<tr class="separator:ga285356be010d13e1940cab92b02e11cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f8f42f8941c9c78ce966000ebd8cc7e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9f8f42f8941c9c78ce966000ebd8cc7e">MATRIX_PRAS_M0PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga285356be010d13e1940cab92b02e11cf">MATRIX_PRAS_M0PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gaf4eb749b4f287949fd3478c4eb762318">MATRIX_PRAS_M0PR_Pos</a>)))</td></tr>
<tr class="separator:ga9f8f42f8941c9c78ce966000ebd8cc7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga490a5931afb7851c9b16d4825d115643"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga490a5931afb7851c9b16d4825d115643">MATRIX_PRAS_M1PR_Pos</a>&#160;&#160;&#160;4</td></tr>
<tr class="separator:ga490a5931afb7851c9b16d4825d115643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba2c91e0b6fc34b390c4995b0846a0b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaba2c91e0b6fc34b390c4995b0846a0b3">MATRIX_PRAS_M1PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M1PR_Pos)</td></tr>
<tr class="memdesc:gaba2c91e0b6fc34b390c4995b0846a0b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 1 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaba2c91e0b6fc34b390c4995b0846a0b3">More...</a><br /></td></tr>
<tr class="separator:gaba2c91e0b6fc34b390c4995b0846a0b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a0e68ab8cdd66a20dc1cf4ec8f8ec28"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7a0e68ab8cdd66a20dc1cf4ec8f8ec28">MATRIX_PRAS_M1PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gaba2c91e0b6fc34b390c4995b0846a0b3">MATRIX_PRAS_M1PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga490a5931afb7851c9b16d4825d115643">MATRIX_PRAS_M1PR_Pos</a>)))</td></tr>
<tr class="separator:ga7a0e68ab8cdd66a20dc1cf4ec8f8ec28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0f6e6cd96aa8fcdd8a4e75974ac11c3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gab0f6e6cd96aa8fcdd8a4e75974ac11c3">MATRIX_PRAS_M2PR_Pos</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:gab0f6e6cd96aa8fcdd8a4e75974ac11c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e94d0d5abd69bebd8f252db2fd52002"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7e94d0d5abd69bebd8f252db2fd52002">MATRIX_PRAS_M2PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M2PR_Pos)</td></tr>
<tr class="memdesc:ga7e94d0d5abd69bebd8f252db2fd52002"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 2 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7e94d0d5abd69bebd8f252db2fd52002">More...</a><br /></td></tr>
<tr class="separator:ga7e94d0d5abd69bebd8f252db2fd52002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0316f5f271bb71ed5f33a8b6d5a10d53"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga0316f5f271bb71ed5f33a8b6d5a10d53">MATRIX_PRAS_M2PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga7e94d0d5abd69bebd8f252db2fd52002">MATRIX_PRAS_M2PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gab0f6e6cd96aa8fcdd8a4e75974ac11c3">MATRIX_PRAS_M2PR_Pos</a>)))</td></tr>
<tr class="separator:ga0316f5f271bb71ed5f33a8b6d5a10d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49e17d6fdb19258bd5060cf4462c5703"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga49e17d6fdb19258bd5060cf4462c5703">MATRIX_PRAS_M3PR_Pos</a>&#160;&#160;&#160;12</td></tr>
<tr class="separator:ga49e17d6fdb19258bd5060cf4462c5703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac31d93fd163aa199195298367ab12cb5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac31d93fd163aa199195298367ab12cb5">MATRIX_PRAS_M3PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M3PR_Pos)</td></tr>
<tr class="memdesc:gac31d93fd163aa199195298367ab12cb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 3 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac31d93fd163aa199195298367ab12cb5">More...</a><br /></td></tr>
<tr class="separator:gac31d93fd163aa199195298367ab12cb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga050aafa7c9a2a39a939ebd44805a8edb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga050aafa7c9a2a39a939ebd44805a8edb">MATRIX_PRAS_M3PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gac31d93fd163aa199195298367ab12cb5">MATRIX_PRAS_M3PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga49e17d6fdb19258bd5060cf4462c5703">MATRIX_PRAS_M3PR_Pos</a>)))</td></tr>
<tr class="separator:ga050aafa7c9a2a39a939ebd44805a8edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17add0e51b13849f0f270c9179a4589e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga17add0e51b13849f0f270c9179a4589e">MATRIX_PRAS_M4PR_Pos</a>&#160;&#160;&#160;16</td></tr>
<tr class="separator:ga17add0e51b13849f0f270c9179a4589e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga747f029f3cd898f1c3f8817ac9b0e6f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga747f029f3cd898f1c3f8817ac9b0e6f5">MATRIX_PRAS_M4PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M4PR_Pos)</td></tr>
<tr class="memdesc:ga747f029f3cd898f1c3f8817ac9b0e6f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 4 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga747f029f3cd898f1c3f8817ac9b0e6f5">More...</a><br /></td></tr>
<tr class="separator:ga747f029f3cd898f1c3f8817ac9b0e6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga267df1fda4dfa2b6f984306349e129a9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga267df1fda4dfa2b6f984306349e129a9">MATRIX_PRAS_M4PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga747f029f3cd898f1c3f8817ac9b0e6f5">MATRIX_PRAS_M4PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga17add0e51b13849f0f270c9179a4589e">MATRIX_PRAS_M4PR_Pos</a>)))</td></tr>
<tr class="separator:ga267df1fda4dfa2b6f984306349e129a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2288b9b84fbefecfd583e82bcc349c3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae2288b9b84fbefecfd583e82bcc349c3">MATRIX_PRAS_M5PR_Pos</a>&#160;&#160;&#160;20</td></tr>
<tr class="separator:gae2288b9b84fbefecfd583e82bcc349c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga142e1d0ad3139cedadf31034f2b8b99d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga142e1d0ad3139cedadf31034f2b8b99d">MATRIX_PRAS_M5PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M5PR_Pos)</td></tr>
<tr class="memdesc:ga142e1d0ad3139cedadf31034f2b8b99d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 5 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga142e1d0ad3139cedadf31034f2b8b99d">More...</a><br /></td></tr>
<tr class="separator:ga142e1d0ad3139cedadf31034f2b8b99d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc9e9242aadb8d310bb9ff03b140c1b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gacc9e9242aadb8d310bb9ff03b140c1b3">MATRIX_PRAS_M5PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga142e1d0ad3139cedadf31034f2b8b99d">MATRIX_PRAS_M5PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gae2288b9b84fbefecfd583e82bcc349c3">MATRIX_PRAS_M5PR_Pos</a>)))</td></tr>
<tr class="separator:gacc9e9242aadb8d310bb9ff03b140c1b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef8a8da1a89e10ea940ac6022f891400"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaef8a8da1a89e10ea940ac6022f891400">MATRIX_PRAS_M6PR_Pos</a>&#160;&#160;&#160;24</td></tr>
<tr class="separator:gaef8a8da1a89e10ea940ac6022f891400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ab3cbb6215fd33158551d57fc283854"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6ab3cbb6215fd33158551d57fc283854">MATRIX_PRAS_M6PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRAS_M6PR_Pos)</td></tr>
<tr class="memdesc:ga6ab3cbb6215fd33158551d57fc283854"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRAS) Master 6 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6ab3cbb6215fd33158551d57fc283854">More...</a><br /></td></tr>
<tr class="separator:ga6ab3cbb6215fd33158551d57fc283854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c7884ca43c402cb8f3fdad4334a1a4d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6c7884ca43c402cb8f3fdad4334a1a4d">MATRIX_PRAS_M6PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga6ab3cbb6215fd33158551d57fc283854">MATRIX_PRAS_M6PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gaef8a8da1a89e10ea940ac6022f891400">MATRIX_PRAS_M6PR_Pos</a>)))</td></tr>
<tr class="separator:ga6c7884ca43c402cb8f3fdad4334a1a4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a57983ee2218fa51ebcf896e837be7b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9a57983ee2218fa51ebcf896e837be7b">MATRIX_PRBS_M8PR_Pos</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga9a57983ee2218fa51ebcf896e837be7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga155d7c6ae831c93b0df00878ad8fde05"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga155d7c6ae831c93b0df00878ad8fde05">MATRIX_PRBS_M8PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRBS_M8PR_Pos)</td></tr>
<tr class="memdesc:ga155d7c6ae831c93b0df00878ad8fde05"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRBS) Master 8 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga155d7c6ae831c93b0df00878ad8fde05">More...</a><br /></td></tr>
<tr class="separator:ga155d7c6ae831c93b0df00878ad8fde05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92ad184d4f00a91139f41fee4f9d393a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga92ad184d4f00a91139f41fee4f9d393a">MATRIX_PRBS_M8PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga155d7c6ae831c93b0df00878ad8fde05">MATRIX_PRBS_M8PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga9a57983ee2218fa51ebcf896e837be7b">MATRIX_PRBS_M8PR_Pos</a>)))</td></tr>
<tr class="separator:ga92ad184d4f00a91139f41fee4f9d393a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac3c310698096a95ddc8c0eeaf02b087e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac3c310698096a95ddc8c0eeaf02b087e">MATRIX_PRBS_M9PR_Pos</a>&#160;&#160;&#160;4</td></tr>
<tr class="separator:gac3c310698096a95ddc8c0eeaf02b087e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2f0da111e0aab457d5b2743709c2891"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad2f0da111e0aab457d5b2743709c2891">MATRIX_PRBS_M9PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRBS_M9PR_Pos)</td></tr>
<tr class="memdesc:gad2f0da111e0aab457d5b2743709c2891"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRBS) Master 9 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad2f0da111e0aab457d5b2743709c2891">More...</a><br /></td></tr>
<tr class="separator:gad2f0da111e0aab457d5b2743709c2891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadad5eb3c338a8d44307f16c9788b9f61"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadad5eb3c338a8d44307f16c9788b9f61">MATRIX_PRBS_M9PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gad2f0da111e0aab457d5b2743709c2891">MATRIX_PRBS_M9PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gac3c310698096a95ddc8c0eeaf02b087e">MATRIX_PRBS_M9PR_Pos</a>)))</td></tr>
<tr class="separator:gadad5eb3c338a8d44307f16c9788b9f61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac51c40fa36b4fb60962345917f8e5728"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac51c40fa36b4fb60962345917f8e5728">MATRIX_PRBS_M10PR_Pos</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:gac51c40fa36b4fb60962345917f8e5728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9067448dbc1668599d2cc8c14de5106"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac9067448dbc1668599d2cc8c14de5106">MATRIX_PRBS_M10PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRBS_M10PR_Pos)</td></tr>
<tr class="memdesc:gac9067448dbc1668599d2cc8c14de5106"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRBS) Master 10 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac9067448dbc1668599d2cc8c14de5106">More...</a><br /></td></tr>
<tr class="separator:gac9067448dbc1668599d2cc8c14de5106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8e82b62e43052caf9068c1e759574d2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac8e82b62e43052caf9068c1e759574d2">MATRIX_PRBS_M10PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gac9067448dbc1668599d2cc8c14de5106">MATRIX_PRBS_M10PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gac51c40fa36b4fb60962345917f8e5728">MATRIX_PRBS_M10PR_Pos</a>)))</td></tr>
<tr class="separator:gac8e82b62e43052caf9068c1e759574d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae58a1aea89d3fe0192277c7dbc9a6ca4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gae58a1aea89d3fe0192277c7dbc9a6ca4">MATRIX_PRBS_M11PR_Pos</a>&#160;&#160;&#160;12</td></tr>
<tr class="separator:gae58a1aea89d3fe0192277c7dbc9a6ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53459fc0a02424d721f8b674ab6a7429"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga53459fc0a02424d721f8b674ab6a7429">MATRIX_PRBS_M11PR_Msk</a>&#160;&#160;&#160;(0x3u &lt;&lt; MATRIX_PRBS_M11PR_Pos)</td></tr>
<tr class="memdesc:ga53459fc0a02424d721f8b674ab6a7429"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_PRBS) Master 11 Priority  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga53459fc0a02424d721f8b674ab6a7429">More...</a><br /></td></tr>
<tr class="separator:ga53459fc0a02424d721f8b674ab6a7429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49f65a399ebf2b2f95832ad7d14da98b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga49f65a399ebf2b2f95832ad7d14da98b">MATRIX_PRBS_M11PR</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga53459fc0a02424d721f8b674ab6a7429">MATRIX_PRBS_M11PR_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gae58a1aea89d3fe0192277c7dbc9a6ca4">MATRIX_PRBS_M11PR_Pos</a>)))</td></tr>
<tr class="separator:ga49f65a399ebf2b2f95832ad7d14da98b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae81f6942c9b24e74a314efd1d72386a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae81f6942c9b24e74a314efd1d72386a">MATRIX_MRCR_RCB0</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gaae81f6942c9b24e74a314efd1d72386a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 0  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae81f6942c9b24e74a314efd1d72386a">More...</a><br /></td></tr>
<tr class="separator:gaae81f6942c9b24e74a314efd1d72386a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf5fdb3d9fe11b424ab3a64e91cf6a3e7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf5fdb3d9fe11b424ab3a64e91cf6a3e7">MATRIX_MRCR_RCB1</a>&#160;&#160;&#160;(0x1u &lt;&lt; 1)</td></tr>
<tr class="memdesc:gaf5fdb3d9fe11b424ab3a64e91cf6a3e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 1  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf5fdb3d9fe11b424ab3a64e91cf6a3e7">More...</a><br /></td></tr>
<tr class="separator:gaf5fdb3d9fe11b424ab3a64e91cf6a3e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00351ef18a7ac1c085b9c6ff34c407b6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga00351ef18a7ac1c085b9c6ff34c407b6">MATRIX_MRCR_RCB2</a>&#160;&#160;&#160;(0x1u &lt;&lt; 2)</td></tr>
<tr class="memdesc:ga00351ef18a7ac1c085b9c6ff34c407b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 2  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga00351ef18a7ac1c085b9c6ff34c407b6">More...</a><br /></td></tr>
<tr class="separator:ga00351ef18a7ac1c085b9c6ff34c407b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02bc99e043ebde6c98ac53065fcdf586"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga02bc99e043ebde6c98ac53065fcdf586">MATRIX_MRCR_RCB3</a>&#160;&#160;&#160;(0x1u &lt;&lt; 3)</td></tr>
<tr class="memdesc:ga02bc99e043ebde6c98ac53065fcdf586"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 3  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga02bc99e043ebde6c98ac53065fcdf586">More...</a><br /></td></tr>
<tr class="separator:ga02bc99e043ebde6c98ac53065fcdf586"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae904ef00f24da71b8b6805e78ab22e9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae904ef00f24da71b8b6805e78ab22e9">MATRIX_MRCR_RCB4</a>&#160;&#160;&#160;(0x1u &lt;&lt; 4)</td></tr>
<tr class="memdesc:gaae904ef00f24da71b8b6805e78ab22e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 4  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaae904ef00f24da71b8b6805e78ab22e9">More...</a><br /></td></tr>
<tr class="separator:gaae904ef00f24da71b8b6805e78ab22e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6cd4d938e52347adefdb0a875206d229"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6cd4d938e52347adefdb0a875206d229">MATRIX_MRCR_RCB5</a>&#160;&#160;&#160;(0x1u &lt;&lt; 5)</td></tr>
<tr class="memdesc:ga6cd4d938e52347adefdb0a875206d229"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 5  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6cd4d938e52347adefdb0a875206d229">More...</a><br /></td></tr>
<tr class="separator:ga6cd4d938e52347adefdb0a875206d229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fd30af2c60b0722e6448e99b793d0d6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8fd30af2c60b0722e6448e99b793d0d6">MATRIX_MRCR_RCB6</a>&#160;&#160;&#160;(0x1u &lt;&lt; 6)</td></tr>
<tr class="memdesc:ga8fd30af2c60b0722e6448e99b793d0d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 6  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga8fd30af2c60b0722e6448e99b793d0d6">More...</a><br /></td></tr>
<tr class="separator:ga8fd30af2c60b0722e6448e99b793d0d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0bf8066b69cd6cd777ff6b5117ef108"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad0bf8066b69cd6cd777ff6b5117ef108">MATRIX_MRCR_RCB8</a>&#160;&#160;&#160;(0x1u &lt;&lt; 8)</td></tr>
<tr class="memdesc:gad0bf8066b69cd6cd777ff6b5117ef108"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 8  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad0bf8066b69cd6cd777ff6b5117ef108">More...</a><br /></td></tr>
<tr class="separator:gad0bf8066b69cd6cd777ff6b5117ef108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafecaedb9f83bf43cadbcd24baa58ff43"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gafecaedb9f83bf43cadbcd24baa58ff43">MATRIX_MRCR_RCB9</a>&#160;&#160;&#160;(0x1u &lt;&lt; 9)</td></tr>
<tr class="memdesc:gafecaedb9f83bf43cadbcd24baa58ff43"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 9  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gafecaedb9f83bf43cadbcd24baa58ff43">More...</a><br /></td></tr>
<tr class="separator:gafecaedb9f83bf43cadbcd24baa58ff43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad782e22030a3133cb0d6a3030664bf0f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad782e22030a3133cb0d6a3030664bf0f">MATRIX_MRCR_RCB10</a>&#160;&#160;&#160;(0x1u &lt;&lt; 10)</td></tr>
<tr class="memdesc:gad782e22030a3133cb0d6a3030664bf0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 10  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad782e22030a3133cb0d6a3030664bf0f">More...</a><br /></td></tr>
<tr class="separator:gad782e22030a3133cb0d6a3030664bf0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cbcbb862ecff9a039a885ad9a80b732"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1cbcbb862ecff9a039a885ad9a80b732">MATRIX_MRCR_RCB11</a>&#160;&#160;&#160;(0x1u &lt;&lt; 11)</td></tr>
<tr class="memdesc:ga1cbcbb862ecff9a039a885ad9a80b732"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_MRCR) Remap Command Bit for Master 11  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1cbcbb862ecff9a039a885ad9a80b732">More...</a><br /></td></tr>
<tr class="separator:ga1cbcbb862ecff9a039a885ad9a80b732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga018f0f05779779fcfdaf7a7dc0c6b67c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga018f0f05779779fcfdaf7a7dc0c6b67c">CCFG_CAN0_CAN0DMABA_Pos</a>&#160;&#160;&#160;16</td></tr>
<tr class="separator:ga018f0f05779779fcfdaf7a7dc0c6b67c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16ce309f038c92ae22b3b9ec99610d7c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga16ce309f038c92ae22b3b9ec99610d7c">CCFG_CAN0_CAN0DMABA_Msk</a>&#160;&#160;&#160;(0xffffu &lt;&lt; CCFG_CAN0_CAN0DMABA_Pos)</td></tr>
<tr class="memdesc:ga16ce309f038c92ae22b3b9ec99610d7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_CAN0) CAN0 DMA Base Address  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga16ce309f038c92ae22b3b9ec99610d7c">More...</a><br /></td></tr>
<tr class="separator:ga16ce309f038c92ae22b3b9ec99610d7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga89c5d24cdba3123084ec2c465a9fdc07"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga89c5d24cdba3123084ec2c465a9fdc07">CCFG_CAN0_CAN0DMABA</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga16ce309f038c92ae22b3b9ec99610d7c">CCFG_CAN0_CAN0DMABA_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga018f0f05779779fcfdaf7a7dc0c6b67c">CCFG_CAN0_CAN0DMABA_Pos</a>)))</td></tr>
<tr class="separator:ga89c5d24cdba3123084ec2c465a9fdc07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59a09a374bab5cbed270d5aace8082bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga59a09a374bab5cbed270d5aace8082bc">CCFG_SYSIO_SYSIO4</a>&#160;&#160;&#160;(0x1u &lt;&lt; 4)</td></tr>
<tr class="memdesc:ga59a09a374bab5cbed270d5aace8082bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) PB4 or TDI Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga59a09a374bab5cbed270d5aace8082bc">More...</a><br /></td></tr>
<tr class="separator:ga59a09a374bab5cbed270d5aace8082bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7700a8793de58ee46189b3af593300ca"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7700a8793de58ee46189b3af593300ca">CCFG_SYSIO_SYSIO5</a>&#160;&#160;&#160;(0x1u &lt;&lt; 5)</td></tr>
<tr class="memdesc:ga7700a8793de58ee46189b3af593300ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) PB5 or TDO/TRACESWO Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga7700a8793de58ee46189b3af593300ca">More...</a><br /></td></tr>
<tr class="separator:ga7700a8793de58ee46189b3af593300ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ed6a8e8801f4a9f5751e5cdaa6a7615"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2ed6a8e8801f4a9f5751e5cdaa6a7615">CCFG_SYSIO_SYSIO6</a>&#160;&#160;&#160;(0x1u &lt;&lt; 6)</td></tr>
<tr class="memdesc:ga2ed6a8e8801f4a9f5751e5cdaa6a7615"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) PB6 or TMS/SWDIO Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2ed6a8e8801f4a9f5751e5cdaa6a7615">More...</a><br /></td></tr>
<tr class="separator:ga2ed6a8e8801f4a9f5751e5cdaa6a7615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28b95aaca8e016fcacd6042b589a1084"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga28b95aaca8e016fcacd6042b589a1084">CCFG_SYSIO_SYSIO7</a>&#160;&#160;&#160;(0x1u &lt;&lt; 7)</td></tr>
<tr class="memdesc:ga28b95aaca8e016fcacd6042b589a1084"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) PB7 or TCK/SWCLK Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga28b95aaca8e016fcacd6042b589a1084">More...</a><br /></td></tr>
<tr class="separator:ga28b95aaca8e016fcacd6042b589a1084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e6590c0ddc9425df1a4eefaf2b041e4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9e6590c0ddc9425df1a4eefaf2b041e4">CCFG_SYSIO_SYSIO12</a>&#160;&#160;&#160;(0x1u &lt;&lt; 12)</td></tr>
<tr class="memdesc:ga9e6590c0ddc9425df1a4eefaf2b041e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) PB12 or ERASE Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga9e6590c0ddc9425df1a4eefaf2b041e4">More...</a><br /></td></tr>
<tr class="separator:ga9e6590c0ddc9425df1a4eefaf2b041e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3180860a8702ffd3cab1734847d0c051"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3180860a8702ffd3cab1734847d0c051">CCFG_SYSIO_CAN1DMABA_Pos</a>&#160;&#160;&#160;16</td></tr>
<tr class="separator:ga3180860a8702ffd3cab1734847d0c051"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c89fbda7d21b335d5be42d5dd6c6ce7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2c89fbda7d21b335d5be42d5dd6c6ce7">CCFG_SYSIO_CAN1DMABA_Msk</a>&#160;&#160;&#160;(0xffffu &lt;&lt; CCFG_SYSIO_CAN1DMABA_Pos)</td></tr>
<tr class="memdesc:ga2c89fbda7d21b335d5be42d5dd6c6ce7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SYSIO) CAN1 DMA Base Address  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga2c89fbda7d21b335d5be42d5dd6c6ce7">More...</a><br /></td></tr>
<tr class="separator:ga2c89fbda7d21b335d5be42d5dd6c6ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0671a98f0a3f129dca2131fa12a4da3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gad0671a98f0a3f129dca2131fa12a4da3">CCFG_SYSIO_CAN1DMABA</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga2c89fbda7d21b335d5be42d5dd6c6ce7">CCFG_SYSIO_CAN1DMABA_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga3180860a8702ffd3cab1734847d0c051">CCFG_SYSIO_CAN1DMABA_Pos</a>)))</td></tr>
<tr class="separator:gad0671a98f0a3f129dca2131fa12a4da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd95ec8866de0fb2ae4d7c7bccfa0f01"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gabd95ec8866de0fb2ae4d7c7bccfa0f01">CCFG_SMCNFCS_SMC_NFCS0</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:gabd95ec8866de0fb2ae4d7c7bccfa0f01"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SMCNFCS) SMC NAND Flash Chip Select 0 Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gabd95ec8866de0fb2ae4d7c7bccfa0f01">More...</a><br /></td></tr>
<tr class="separator:gabd95ec8866de0fb2ae4d7c7bccfa0f01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc59188f4e84386939f05c38eef900b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadc59188f4e84386939f05c38eef900b1">CCFG_SMCNFCS_SMC_NFCS1</a>&#160;&#160;&#160;(0x1u &lt;&lt; 1)</td></tr>
<tr class="memdesc:gadc59188f4e84386939f05c38eef900b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SMCNFCS) SMC NAND Flash Chip Select 1 Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gadc59188f4e84386939f05c38eef900b1">More...</a><br /></td></tr>
<tr class="separator:gadc59188f4e84386939f05c38eef900b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cd07efe97528a43e07007a05c44fe7a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1cd07efe97528a43e07007a05c44fe7a">CCFG_SMCNFCS_SMC_NFCS2</a>&#160;&#160;&#160;(0x1u &lt;&lt; 2)</td></tr>
<tr class="memdesc:ga1cd07efe97528a43e07007a05c44fe7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SMCNFCS) SMC NAND Flash Chip Select 2 Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga1cd07efe97528a43e07007a05c44fe7a">More...</a><br /></td></tr>
<tr class="separator:ga1cd07efe97528a43e07007a05c44fe7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga09bdc6a5dde71677033a4644f0746969"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga09bdc6a5dde71677033a4644f0746969">CCFG_SMCNFCS_SMC_NFCS3</a>&#160;&#160;&#160;(0x1u &lt;&lt; 3)</td></tr>
<tr class="memdesc:ga09bdc6a5dde71677033a4644f0746969"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SMCNFCS) SMC NAND Flash Chip Select 3 Assignment  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga09bdc6a5dde71677033a4644f0746969">More...</a><br /></td></tr>
<tr class="separator:ga09bdc6a5dde71677033a4644f0746969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6ad5dc553fea2b2524e9d2d16ee3d9dc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6ad5dc553fea2b2524e9d2d16ee3d9dc">CCFG_SMCNFCS_SDRAMEN</a>&#160;&#160;&#160;(0x1u &lt;&lt; 4)</td></tr>
<tr class="memdesc:ga6ad5dc553fea2b2524e9d2d16ee3d9dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">(CCFG_SMCNFCS) SDRAM Enable  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga6ad5dc553fea2b2524e9d2d16ee3d9dc">More...</a><br /></td></tr>
<tr class="separator:ga6ad5dc553fea2b2524e9d2d16ee3d9dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b3a00ffe1bc6b9a1a1ea9cbe2a7be56"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3b3a00ffe1bc6b9a1a1ea9cbe2a7be56">MATRIX_WPMR_WPEN</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga3b3a00ffe1bc6b9a1a1ea9cbe2a7be56"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_WPMR) Write Protection Enable  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga3b3a00ffe1bc6b9a1a1ea9cbe2a7be56">More...</a><br /></td></tr>
<tr class="separator:ga3b3a00ffe1bc6b9a1a1ea9cbe2a7be56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87d71881b54dd5a5a53c9f3c982c2c43"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga87d71881b54dd5a5a53c9f3c982c2c43">MATRIX_WPMR_WPKEY_Pos</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:ga87d71881b54dd5a5a53c9f3c982c2c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf666194f435ad53147255ed669f1db23"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf666194f435ad53147255ed669f1db23">MATRIX_WPMR_WPKEY_Msk</a>&#160;&#160;&#160;(0xffffffu &lt;&lt; MATRIX_WPMR_WPKEY_Pos)</td></tr>
<tr class="memdesc:gaf666194f435ad53147255ed669f1db23"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_WPMR) Write Protection Key  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaf666194f435ad53147255ed669f1db23">More...</a><br /></td></tr>
<tr class="separator:gaf666194f435ad53147255ed669f1db23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga022c6d30bbe13b05c39bf8d67a25097e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga022c6d30bbe13b05c39bf8d67a25097e">MATRIX_WPMR_WPKEY</a>(value)&#160;&#160;&#160;((<a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#gaf666194f435ad53147255ed669f1db23">MATRIX_WPMR_WPKEY_Msk</a> &amp; ((value) &lt;&lt; <a class="el" href="group___s_a_m_v71___m_a_t_r_i_x.xhtml#ga87d71881b54dd5a5a53c9f3c982c2c43">MATRIX_WPMR_WPKEY_Pos</a>)))</td></tr>
<tr class="separator:ga022c6d30bbe13b05c39bf8d67a25097e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0f5c40f5ac50e2dc706131b48fd35b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac0f5c40f5ac50e2dc706131b48fd35b7">MATRIX_WPMR_WPKEY_PASSWD</a>&#160;&#160;&#160;(0x4D4154u &lt;&lt; 8)</td></tr>
<tr class="memdesc:gac0f5c40f5ac50e2dc706131b48fd35b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_WPMR) Writing any other value in this field aborts the write operation of the WPEN bit.Always reads as 0.  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gac0f5c40f5ac50e2dc706131b48fd35b7">More...</a><br /></td></tr>
<tr class="separator:gac0f5c40f5ac50e2dc706131b48fd35b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19270466607c89e151520034e1af4174"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga19270466607c89e151520034e1af4174">MATRIX_WPSR_WPVS</a>&#160;&#160;&#160;(0x1u &lt;&lt; 0)</td></tr>
<tr class="memdesc:ga19270466607c89e151520034e1af4174"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_WPSR) Write Protection Violation Status  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga19270466607c89e151520034e1af4174">More...</a><br /></td></tr>
<tr class="separator:ga19270466607c89e151520034e1af4174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4328f9354287b8c9c376fa7cec6134d7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#ga4328f9354287b8c9c376fa7cec6134d7">MATRIX_WPSR_WPVSRC_Pos</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:ga4328f9354287b8c9c376fa7cec6134d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea8d53a013b472fdfeda880b11af1d0f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaea8d53a013b472fdfeda880b11af1d0f">MATRIX_WPSR_WPVSRC_Msk</a>&#160;&#160;&#160;(0xffffu &lt;&lt; MATRIX_WPSR_WPVSRC_Pos)</td></tr>
<tr class="memdesc:gaea8d53a013b472fdfeda880b11af1d0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(MATRIX_WPSR) Write Protection Violation Source  <a href="group___s_a_m_e70___m_a_t_r_i_x.xhtml#gaea8d53a013b472fdfeda880b11af1d0f">More...</a><br /></td></tr>
<tr class="separator:gaea8d53a013b472fdfeda880b11af1d0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
