<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: USB host Controller (UHC)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">USB host Controller (UHC)<div class="ingroups"><a class="el" href="group__usb__host__group.xhtml">USB Stack Host</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The UHC provides a high-level abstraction of the usb host.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for USB host Controller (UHC):</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group.svg" width="551" height="235"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group___u_s_b_h__group__interne"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group__interne.xhtml">Implementation of UHC</a></td></tr>
<tr class="memdesc:group___u_s_b_h__group__interne"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group___u_s_b_h__basic__use__case__setup__prereq"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__basic__use__case__setup__prereq.xhtml">USB Host Controller (UHC) - Prerequisites</a></td></tr>
<tr class="memdesc:group___u_s_b_h__basic__use__case__setup__prereq"><td class="mdescLeft">&#160;</td><td class="mdescRight">Common prerequisites for all USB hosts. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group___u_s_b_h__basic__use__case__setup__code"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__basic__use__case__setup__code.xhtml">USB Host Controller (UHC) - Example code</a></td></tr>
<tr class="memdesc:group___u_s_b_h__basic__use__case__setup__code"><td class="mdescLeft">&#160;</td><td class="mdescRight">Common example code for all USB hosts. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group___u_s_b_h__basic__use__case__setup__flow"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__basic__use__case__setup__flow.xhtml">USB Device Controller (UHC) - Workflow</a></td></tr>
<tr class="memdesc:group___u_s_b_h__basic__use__case__setup__flow"><td class="mdescLeft">&#160;</td><td class="mdescRight">Common workflow for all USB devices. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure to store device information.  <a href="struct_u_s_b_h__device__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga35c7d0dab86e25988537d85d77c072b8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga35c7d0dab86e25988537d85d77c072b8">UHC_DATA</a>(x)&#160;&#160;&#160;<a class="el" href="xtio__serial__com_8c.xhtml#a745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a>(x)</td></tr>
<tr class="separator:ga35c7d0dab86e25988537d85d77c072b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0bb1471560ae7a953919a26dc5a8b8e6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga0bb1471560ae7a953919a26dc5a8b8e6">UHC_BSS</a>(x)&#160;&#160;&#160;<a class="el" href="xtio__serial__com_8c.xhtml#a745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a>(x)</td></tr>
<tr class="separator:ga0bb1471560ae7a953919a26dc5a8b8e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga5ffc2545b188214eb285cd413c1b01f9"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga5ffc2545b188214eb285cd413c1b01f9">USBH_enum_status_t</a> { <br />
&#160;&#160;<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9a6bcae9c42fc953892a005ac39e631cdd">UHC_ENUM_SUCCESS</a> = 0, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9acf87fc296b7e28dca8b0ade163feef6d">UHC_ENUM_UNSUPPORTED</a>, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9ac8342afa18c42e3082c15020b6c31633">UHC_ENUM_OVERCURRENT</a>, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9a2c58329c3f9731b3737ab1e22157aee7">UHC_ENUM_FAIL</a>, 
<br />
&#160;&#160;<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9aaff0e82cff71f8fefc7d9b3e09cd97fd">UHC_ENUM_HARDWARE_LIMIT</a>, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9a8d36a9130341a1b2cbec24f820ad1766">UHC_ENUM_SOFTWARE_LIMIT</a>, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9a10599b3b16da0134115f5a74e36819ba">UHC_ENUM_MEMORY_LIMIT</a>, 
<a class="el" href="group___u_s_b_h__group.xhtml#gga5ffc2545b188214eb285cd413c1b01f9a8e7ca1915a3d2d199c3830ee63f83f7b">UHC_ENUM_DISCONNECT</a>
<br />
 }<tr class="memdesc:ga5ffc2545b188214eb285cd413c1b01f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enumeration status Used in <a class="el" href="_u_s_b_h_8c.xhtml#a1706d96710219e9257619c6bcafef03a">UHC_ENUM_EVENT()</a> callback when a USB device enumeration is completed.  <a href="group___u_s_b_h__group.xhtml#ga5ffc2545b188214eb285cd413c1b01f9">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga5ffc2545b188214eb285cd413c1b01f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Functions to control the USB host stack</h2></td></tr>
<tr class="memitem:gaab14b5e42335b6361fa392ce889ffdc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gaab14b5e42335b6361fa392ce889ffdc2">USBH_start</a> (void)</td></tr>
<tr class="memdesc:gaab14b5e42335b6361fa392ce889ffdc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the host mode.  <a href="#gaab14b5e42335b6361fa392ce889ffdc2">More...</a><br /></td></tr>
<tr class="separator:gaab14b5e42335b6361fa392ce889ffdc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga819c9e725c718cff7dba36e636066ece"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga819c9e725c718cff7dba36e636066ece">USBH_stop</a> (bool b_id_stop)</td></tr>
<tr class="memdesc:ga819c9e725c718cff7dba36e636066ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the host mode.  <a href="#ga819c9e725c718cff7dba36e636066ece">More...</a><br /></td></tr>
<tr class="separator:ga819c9e725c718cff7dba36e636066ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8954a787d685fc5e64a46fe2bd23631"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gaa8954a787d685fc5e64a46fe2bd23631">USBH_suspend</a> (bool b_remotewakeup)</td></tr>
<tr class="memdesc:gaa8954a787d685fc5e64a46fe2bd23631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Suspends a USB line.  <a href="#gaa8954a787d685fc5e64a46fe2bd23631">More...</a><br /></td></tr>
<tr class="separator:gaa8954a787d685fc5e64a46fe2bd23631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf21300f0ddce0d9e8e0aa1c9d707773"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gadf21300f0ddce0d9e8e0aa1c9d707773">USBH_is_suspend</a> (void)</td></tr>
<tr class="memdesc:gadf21300f0ddce0d9e8e0aa1c9d707773"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if the suspend state is enabled on the USB line.  <a href="#gadf21300f0ddce0d9e8e0aa1c9d707773">More...</a><br /></td></tr>
<tr class="separator:gadf21300f0ddce0d9e8e0aa1c9d707773"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga58e3025a05b7b32bdf57c184490b058e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga58e3025a05b7b32bdf57c184490b058e">USBH_resume</a> (void)</td></tr>
<tr class="memdesc:ga58e3025a05b7b32bdf57c184490b058e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resumes the USB line.  <a href="#ga58e3025a05b7b32bdf57c184490b058e">More...</a><br /></td></tr>
<tr class="separator:ga58e3025a05b7b32bdf57c184490b058e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
User functions to manage a device</h2></td></tr>
<tr class="memitem:ga9de21eb1a14ba953609039d834ba0fb2"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga9de21eb1a14ba953609039d834ba0fb2">USBH_get_device_number</a> (void)</td></tr>
<tr class="memdesc:ga9de21eb1a14ba953609039d834ba0fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of connected devices.  <a href="#ga9de21eb1a14ba953609039d834ba0fb2">More...</a><br /></td></tr>
<tr class="separator:ga9de21eb1a14ba953609039d834ba0fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6816405ed8d888b761c711dfb13ccf89"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga6816405ed8d888b761c711dfb13ccf89">USBH_dev_get_string_manufacturer</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:ga6816405ed8d888b761c711dfb13ccf89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the USB string manufacturer from a USB device.  <a href="#ga6816405ed8d888b761c711dfb13ccf89">More...</a><br /></td></tr>
<tr class="separator:ga6816405ed8d888b761c711dfb13ccf89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7db12c142853d4dc27bfc38845617b74"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga7db12c142853d4dc27bfc38845617b74">USBH_dev_get_string_product</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:ga7db12c142853d4dc27bfc38845617b74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the USB string product from a USB device.  <a href="#ga7db12c142853d4dc27bfc38845617b74">More...</a><br /></td></tr>
<tr class="separator:ga7db12c142853d4dc27bfc38845617b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga26f644d2fffebc9f6b8d84f9af9c9fe8"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga26f644d2fffebc9f6b8d84f9af9c9fe8">USBH_dev_get_string_serial</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:ga26f644d2fffebc9f6b8d84f9af9c9fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the USB string serial from a USB device.  <a href="#ga26f644d2fffebc9f6b8d84f9af9c9fe8">More...</a><br /></td></tr>
<tr class="separator:ga26f644d2fffebc9f6b8d84f9af9c9fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0c84025bd918d3312e746c8e9c3c7f2"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gad0c84025bd918d3312e746c8e9c3c7f2">USBH_dev_get_string</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev, uint8_t str_id)</td></tr>
<tr class="memdesc:gad0c84025bd918d3312e746c8e9c3c7f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a USB string from a USB device.  <a href="#gad0c84025bd918d3312e746c8e9c3c7f2">More...</a><br /></td></tr>
<tr class="separator:gad0c84025bd918d3312e746c8e9c3c7f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab63d225a9c98dd14d9ce870a5a944c4a"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gab63d225a9c98dd14d9ce870a5a944c4a">USBH_dev_get_power</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:gab63d225a9c98dd14d9ce870a5a944c4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the maximum consumption of a device (mA)  <a href="#gab63d225a9c98dd14d9ce870a5a944c4a">More...</a><br /></td></tr>
<tr class="separator:gab63d225a9c98dd14d9ce870a5a944c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae969a0cacecc6309a1ffaa5aafc1a1aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#gae969a0cacecc6309a1ffaa5aafc1a1aa">USBH_dev_get_speed</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:gae969a0cacecc6309a1ffaa5aafc1a1aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current device speed.  <a href="#gae969a0cacecc6309a1ffaa5aafc1a1aa">More...</a><br /></td></tr>
<tr class="separator:gae969a0cacecc6309a1ffaa5aafc1a1aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga616e65ce94318050363cf1c955d556f8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___u_s_b_h__group.xhtml#ga616e65ce94318050363cf1c955d556f8">USBH_dev_is_high_speed_support</a> (<a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *dev)</td></tr>
<tr class="memdesc:ga616e65ce94318050363cf1c955d556f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests if the device supports the USB high speed This function can wait the end of a setup request and the timing can be long (1ms to 5s).  <a href="#ga616e65ce94318050363cf1c955d556f8">More...</a><br /></td></tr>
<tr class="separator:ga616e65ce94318050363cf1c955d556f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The UHC provides a high-level abstraction of the usb host. </p>
<p>You can use these functions to control the main host state (start/suspend/resume/...).</p>
<h1><a class="anchor" id="USB_HOST_CONF"></a>
USB host user configuration</h1>
<p>The following USB host configuration must be included in the conf_usb_host.h file of the application.</p>
<p>USB_HOST_UHI (List of UHI APIs)<br />
 Define the list of UHI supported by USB host. (Ex.: UHI_MSC,UHI_HID_MOUSE).</p>
<p>USB_HOST_POWER_MAX (mA)<br />
 Maximum current allowed on Vbus.</p>
<p>USB_HOST_HS_SUPPORT (Only defined)<br />
 Authorize the USB host to run in High Speed.</p>
<p>USB_HOST_HUB_SUPPORT (Only defined)<br />
 Authorize the USB HUB support.</p>
<h1><a class="anchor" id="USB_HOST_CALLBACK"></a>
USB host user callback</h1>
<p>The following optional USB host callback can be defined in the conf_usb_host.h file of the application.</p>
<p>void <a class="el" href="_u_s_b_h___h_a_l_8c.xhtml#a8e699ebd3b786c3e6a8876621edf4683">UHC_MODE_CHANGE(bool b_host_mode)</a><br />
 To notify that the USB mode are switched automatically. This is possible only when ID pin is available.</p>
<p>void <a class="el" href="_u_s_b_h___h_a_l_8c.xhtml#a652fb5585745ed34b8cd2e54ec43e151">UHC_VBUS_CHANGE(bool b_present)</a><br />
 To notify that the Vbus level has changed (Available only in USB hardware with Vbus monitoring).</p>
<p>void <a class="el" href="_u_s_b_h___h_a_l_8c.xhtml#accc6b596d4d8ea92f371cca9ee1017e7">UHC_VBUS_ERROR(void)</a><br />
 To notify that a Vbus error has occurred (Available only in USB hardware with Vbus monitoring).</p>
<p>void <a class="el" href="_u_s_b_h_8c.xhtml#adbee2550dad3e48cb35428ed27515f2f">UHC_CONNECTION_EVENT(USBH_device_t* dev,bool b_present)</a><br />
 To notify that a device has been connected or disconnected.</p>
<p>void <a class="el" href="_u_s_b_h_8c.xhtml#a5bb7b20d4feb113a9f997737a969c9ca">UHC_WAKEUP_EVENT(void)</a><br />
 Called when a USB device or the host have wake up the USB line.</p>
<p>void <a class="el" href="_u_s_b_h___h_a_l_8c.xhtml#a33781b2a6eba13d5e8961aa786d91019">UHC_SOF_EVENT(void)</a><br />
 Called for each received SOF each 1 ms. Available in High and Full speed mode.</p>
<p>uint8_t <a class="el" href="_u_s_b_h_8c.xhtml#aaf7645e96aa0a4b7a47521884a384673">UHC_DEVICE_CONF(USBH_device_t* dev)</a><br />
 Called when a USB device configuration must be chosen. Thus, the application can choose either a configuration number for this device or a configuration number 0 to reject it. If callback not defined the configuration 1 is chosen.</p>
<p>void <a class="el" href="_u_s_b_h_8c.xhtml#a1706d96710219e9257619c6bcafef03a">UHC_ENUM_EVENT(USBH_device_t* dev, uint8_t b_status)</a><br />
 Called when a USB device enumeration is completed or fail. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga0bb1471560ae7a953919a26dc5a8b8e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0bb1471560ae7a953919a26dc5a8b8e6">&sect;&nbsp;</a></span>UHC_BSS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHC_BSS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="xtio__serial__com_8c.xhtml#a745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga35c7d0dab86e25988537d85d77c072b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35c7d0dab86e25988537d85d77c072b8">&sect;&nbsp;</a></span>UHC_DATA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHC_DATA</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="xtio__serial__com_8c.xhtml#a745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga5ffc2545b188214eb285cd413c1b01f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ffc2545b188214eb285cd413c1b01f9">&sect;&nbsp;</a></span>USBH_enum_status_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group___u_s_b_h__group.xhtml#ga5ffc2545b188214eb285cd413c1b01f9">USBH_enum_status_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enumeration status Used in <a class="el" href="_u_s_b_h_8c.xhtml#a1706d96710219e9257619c6bcafef03a">UHC_ENUM_EVENT()</a> callback when a USB device enumeration is completed. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9a6bcae9c42fc953892a005ac39e631cdd"></a>UHC_ENUM_SUCCESS&#160;</td><td class="fielddoc"><p>Device is enumerated. </p>
<p>The supported USB device interfaces has been enabled. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9acf87fc296b7e28dca8b0ade163feef6d"></a>UHC_ENUM_UNSUPPORTED&#160;</td><td class="fielddoc"><p>None of the interfaces are supported by the UHIs. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9ac8342afa18c42e3082c15020b6c31633"></a>UHC_ENUM_OVERCURRENT&#160;</td><td class="fielddoc"><p>Device power is not supported. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9a2c58329c3f9731b3737ab1e22157aee7"></a>UHC_ENUM_FAIL&#160;</td><td class="fielddoc"><p>A problem occurred during USB enumeration. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9aaff0e82cff71f8fefc7d9b3e09cd97fd"></a>UHC_ENUM_HARDWARE_LIMIT&#160;</td><td class="fielddoc"><p>USB hardware can not support it. Not enough free pipes. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9a8d36a9130341a1b2cbec24f820ad1766"></a>UHC_ENUM_SOFTWARE_LIMIT&#160;</td><td class="fielddoc"><p>USB software can not support it. Implementation limit. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9a10599b3b16da0134115f5a74e36819ba"></a>UHC_ENUM_MEMORY_LIMIT&#160;</td><td class="fielddoc"><p>USB software can not support it. Not enough memory. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ffc2545b188214eb285cd413c1b01f9a8e7ca1915a3d2d199c3830ee63f83f7b"></a>UHC_ENUM_DISCONNECT&#160;</td><td class="fielddoc"><p>The device has been disconnected during USB enumeration. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gab63d225a9c98dd14d9ce870a5a944c4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab63d225a9c98dd14d9ce870a5a944c4a">&sect;&nbsp;</a></span>USBH_dev_get_power()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t USBH_dev_get_power </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the maximum consumption of a device (mA) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Maximum consumption of the device (mA) </dd></dl>

</div>
</div>
<a id="gae969a0cacecc6309a1ffaa5aafc1a1aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae969a0cacecc6309a1ffaa5aafc1a1aa">&sect;&nbsp;</a></span>USBH_dev_get_speed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a> USBH_dev_get_speed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current device speed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Device speed </dd></dl>

</div>
</div>
<a id="gad0c84025bd918d3312e746c8e9c3c7f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad0c84025bd918d3312e746c8e9c3c7f2">&sect;&nbsp;</a></span>USBH_dev_get_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* USBH_dev_get_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>str_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a USB string from a USB device. </p>
<p>This function waits the end of setup requests and the timing can be long (3ms to 15s). Thus, do not call it in an interrupt routine. This function allocates a buffer which must be free by user application.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request </td></tr>
    <tr><td class="paramname">str_id</td><td>String ID requested</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer on unicode string, or NULL if function fails. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_gad0c84025bd918d3312e746c8e9c3c7f2_cgraph.svg" width="382" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_gad0c84025bd918d3312e746c8e9c3c7f2_icgraph.svg" width="382" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6816405ed8d888b761c711dfb13ccf89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6816405ed8d888b761c711dfb13ccf89">&sect;&nbsp;</a></span>USBH_dev_get_string_manufacturer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* USBH_dev_get_string_manufacturer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the USB string manufacturer from a USB device. </p>
<p>This function waits the end of setup requests and the timing can be long (3ms to 15s). Thus, do not call it in an interrupt routine. This function allocates a buffer which must be free by user application.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer on unicode string, or NULL if function fails. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_ga6816405ed8d888b761c711dfb13ccf89_cgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga7db12c142853d4dc27bfc38845617b74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7db12c142853d4dc27bfc38845617b74">&sect;&nbsp;</a></span>USBH_dev_get_string_product()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* USBH_dev_get_string_product </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the USB string product from a USB device. </p>
<p>This function waits the end of setup requests and the timing can be long (3ms to 15s). Thus, do not call it in an interrupt routine. This function allocates a buffer which must be free by user application.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer on unicode string, or NULL if function fails. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_ga7db12c142853d4dc27bfc38845617b74_cgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga26f644d2fffebc9f6b8d84f9af9c9fe8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga26f644d2fffebc9f6b8d84f9af9c9fe8">&sect;&nbsp;</a></span>USBH_dev_get_string_serial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* USBH_dev_get_string_serial </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the USB string serial from a USB device. </p>
<p>This function waits the end of setup requests and the timing can be long (3ms to 15s). Thus, do not call it in an interrupt routine. This function allocates a buffer which must be free by user application.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer on unicode string, or NULL if function fails. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_ga26f644d2fffebc9f6b8d84f9af9c9fe8_cgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga616e65ce94318050363cf1c955d556f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga616e65ce94318050363cf1c955d556f8">&sect;&nbsp;</a></span>USBH_dev_is_high_speed_support()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_dev_is_high_speed_support </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_h__device__t.xhtml">USBH_device_t</a> *&#160;</td>
          <td class="paramname"><em>dev</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tests if the device supports the USB high speed This function can wait the end of a setup request and the timing can be long (1ms to 5s). </p>
<p>Thus, do not call it in an interrupt routine.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dev</td><td>Device to request</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True, if high speed is supported </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_ga616e65ce94318050363cf1c955d556f8_cgraph.svg" width="407" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9de21eb1a14ba953609039d834ba0fb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9de21eb1a14ba953609039d834ba0fb2">&sect;&nbsp;</a></span>USBH_get_device_number()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USBH_get_device_number </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of connected devices. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of device connected on USB tree </dd></dl>

</div>
</div>
<a id="gadf21300f0ddce0d9e8e0aa1c9d707773"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf21300f0ddce0d9e8e0aa1c9d707773">&sect;&nbsp;</a></span>USBH_is_suspend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_is_suspend </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Test if the suspend state is enabled on the USB line. </p>
<dl class="section return"><dt>Returns</dt><dd>USB line in SUSPEND state or device not connected, if true </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_gadf21300f0ddce0d9e8e0aa1c9d707773_cgraph.svg" width="380" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_gadf21300f0ddce0d9e8e0aa1c9d707773_icgraph.svg" width="314" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga58e3025a05b7b32bdf57c184490b058e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga58e3025a05b7b32bdf57c184490b058e">&sect;&nbsp;</a></span>USBH_resume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_resume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resumes the USB line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_ga58e3025a05b7b32bdf57c184490b058e_cgraph.svg" width="326" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaab14b5e42335b6361fa392ce889ffdc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab14b5e42335b6361fa392ce889ffdc2">&sect;&nbsp;</a></span>USBH_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_start </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the host mode. </p>

</div>
</div>
<a id="ga819c9e725c718cff7dba36e636066ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga819c9e725c718cff7dba36e636066ece">&sect;&nbsp;</a></span>USBH_stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_stop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_id_stop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stops the host mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_id_stop</td><td>Stop USB ID pin management, if true. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaa8954a787d685fc5e64a46fe2bd23631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa8954a787d685fc5e64a46fe2bd23631">&sect;&nbsp;</a></span>USBH_suspend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_suspend </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_remotewakeup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Suspends a USB line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_remotewakeup</td><td>Authorize the remote wakeup features, if true </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group___u_s_b_h__group_gaa8954a787d685fc5e64a46fe2bd23631_cgraph.svg" width="343" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
