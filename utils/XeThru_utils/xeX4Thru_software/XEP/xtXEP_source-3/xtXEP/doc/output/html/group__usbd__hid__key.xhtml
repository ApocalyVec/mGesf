<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: Usbd_hid_key</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Usbd_hid_key</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implement HID Keyboard Function For USB Device.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for Usbd_hid_key:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key.svg" width="330" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__usbd__hid__kbd__desc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__kbd__desc.xhtml">HIDD Keyboard Driver Definitions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___k_b_d_input_report.xhtml">_KBDInputReport</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended struct for an HID Keyboard Input report, for transfer driver to send reports.  <a href="struct___k_b_d_input_report.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___k_b_d_output_report.xhtml">_KBDOutputReport</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended struct for an HID Keyboard Output report, for transfer driver to polling reports.  <a href="struct___k_b_d_output_report.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___h_i_d_d_keyboard.xhtml">_HIDDKeyboard</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Driver structure for an HID device implementing keyboard functionalities.  <a href="struct___h_i_d_d_keyboard.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___h_i_d_d_keyboard_output_report.xhtml">_HIDDKeyboardOutputReport</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___h_i_d_d_keyboard_input_report.xhtml">_HIDDKeyboardInputReport</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___h_i_d_d_keyboard_driver_configuration_descriptors.xhtml">_HIDDKeyboardDriverConfigurationDescriptors</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga9c3a654caf23c4205eef0a385d4fc381"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___k_b_d_input_report.xhtml">_KBDInputReport</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga9c3a654caf23c4205eef0a385d4fc381">KBDInputReport</a></td></tr>
<tr class="memdesc:ga9c3a654caf23c4205eef0a385d4fc381"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended struct for an HID Keyboard Input report, for transfer driver to send reports.  <a href="#ga9c3a654caf23c4205eef0a385d4fc381">More...</a><br /></td></tr>
<tr class="separator:ga9c3a654caf23c4205eef0a385d4fc381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedfea9454ac790e30ea66ba223c3a6ff"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___k_b_d_output_report.xhtml">_KBDOutputReport</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gaedfea9454ac790e30ea66ba223c3a6ff">KBDOutputReport</a></td></tr>
<tr class="memdesc:gaedfea9454ac790e30ea66ba223c3a6ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended struct for an HID Keyboard Output report, for transfer driver to polling reports.  <a href="#gaedfea9454ac790e30ea66ba223c3a6ff">More...</a><br /></td></tr>
<tr class="separator:gaedfea9454ac790e30ea66ba223c3a6ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75bdfdfcc15a013330e8e412ae2af4b1"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___h_i_d_d_keyboard.xhtml">_HIDDKeyboard</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga75bdfdfcc15a013330e8e412ae2af4b1">HIDDKeyboard</a></td></tr>
<tr class="memdesc:ga75bdfdfcc15a013330e8e412ae2af4b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Driver structure for an HID device implementing keyboard functionalities.  <a href="#ga75bdfdfcc15a013330e8e412ae2af4b1">More...</a><br /></td></tr>
<tr class="separator:ga75bdfdfcc15a013330e8e412ae2af4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e549ca0aa01b8bc9acea071a8956f97"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___h_i_d_d_keyboard_output_report.xhtml">_HIDDKeyboardOutputReport</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a></td></tr>
<tr class="memdesc:ga2e549ca0aa01b8bc9acea071a8956f97"><td class="mdescLeft">&#160;</td><td class="mdescRight">HID output report structure used by the host to control the state of the keyboard LEDs.  <a href="#ga2e549ca0aa01b8bc9acea071a8956f97">More...</a><br /></td></tr>
<tr class="separator:ga2e549ca0aa01b8bc9acea071a8956f97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fc180b2b34d59158e24e31936214d9b"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___h_i_d_d_keyboard_input_report.xhtml">_HIDDKeyboardInputReport</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a></td></tr>
<tr class="memdesc:ga9fc180b2b34d59158e24e31936214d9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">HID input report structure used by the keyboard driver to notify the host of pressed keys.  <a href="#ga9fc180b2b34d59158e24e31936214d9b">More...</a><br /></td></tr>
<tr class="separator:ga9fc180b2b34d59158e24e31936214d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga903068d90048756effee278e72c42424"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___h_i_d_d_keyboard_driver_configuration_descriptors.xhtml">_HIDDKeyboardDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga903068d90048756effee278e72c42424">HIDDKeyboardDriverConfigurationDescriptors</a></td></tr>
<tr class="memdesc:ga903068d90048756effee278e72c42424"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of descriptors that make up the configuration descriptors of a device using the HID keyboard driver.  <a href="#ga903068d90048756effee278e72c42424">More...</a><br /></td></tr>
<tr class="separator:ga903068d90048756effee278e72c42424"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a> (32)</td></tr>
<tr class="memdesc:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="mdescLeft">&#160;</td><td class="mdescRight">HIDD Keyboard Input Report Instance.  <a href="#ga745dbddddd85ddbe2c71a9df4c3e38af">More...</a><br /></td></tr>
<tr class="separator:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga203326cffce4599e0e03c21769a996d7"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga203326cffce4599e0e03c21769a996d7">HIDDKeyboard_ReportReceived</a> (void)</td></tr>
<tr class="memdesc:ga203326cffce4599e0e03c21769a996d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback invoked when an output report has been received from the host.  <a href="#ga203326cffce4599e0e03c21769a996d7">More...</a><br /></td></tr>
<tr class="separator:ga203326cffce4599e0e03c21769a996d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56ad6774014b879f9a4828e528508cbf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga56ad6774014b879f9a4828e528508cbf">HIDDKeyboard_Initialize</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, uint8_t bInterfaceNb)</td></tr>
<tr class="memdesc:ga56ad6774014b879f9a4828e528508cbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the HID keyboard device driver SW.  <a href="#ga56ad6774014b879f9a4828e528508cbf">More...</a><br /></td></tr>
<tr class="separator:ga56ad6774014b879f9a4828e528508cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8756ebb1a6a51b48a6e331ea28808e4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga8756ebb1a6a51b48a6e331ea28808e4b">HIDDKeyboard_ConfigureFunction</a> (<a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint16_t wLength)</td></tr>
<tr class="memdesc:ga8756ebb1a6a51b48a6e331ea28808e4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure function with expected descriptors and start functionality.  <a href="#ga8756ebb1a6a51b48a6e331ea28808e4b">More...</a><br /></td></tr>
<tr class="separator:ga8756ebb1a6a51b48a6e331ea28808e4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae283b3485bee22fa5b4baeea5209b570"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gae283b3485bee22fa5b4baeea5209b570">HIDDKeyboard_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gae283b3485bee22fa5b4baeea5209b570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles HID-specific SETUP request sent by the host.  <a href="#gae283b3485bee22fa5b4baeea5209b570">More...</a><br /></td></tr>
<tr class="separator:gae283b3485bee22fa5b4baeea5209b570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec6511e36f4ccb41c6dc7dff87e18ffa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gaec6511e36f4ccb41c6dc7dff87e18ffa">HIDDKeyboard_ChangeKeys</a> (uint8_t *pressedKeys, uint8_t pressedKeysSize, uint8_t *releasedKeys, uint8_t releasedKeysSize)</td></tr>
<tr class="memdesc:gaec6511e36f4ccb41c6dc7dff87e18ffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a change in which keys are currently pressed or release to the host.  <a href="#gaec6511e36f4ccb41c6dc7dff87e18ffa">More...</a><br /></td></tr>
<tr class="separator:gaec6511e36f4ccb41c6dc7dff87e18ffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c4a5834758595c2295efd954ad1bb87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga3c4a5834758595c2295efd954ad1bb87">HIDDKeyboard_RemoteWakeUp</a> (void)</td></tr>
<tr class="memdesc:ga3c4a5834758595c2295efd954ad1bb87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a remote wake-up sequence if the host has explicitely enabled it by sending the appropriate SET_FEATURE request.  <a href="#ga3c4a5834758595c2295efd954ad1bb87">More...</a><br /></td></tr>
<tr class="separator:ga3c4a5834758595c2295efd954ad1bb87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb4d818fad3af9e0d775cb89236720be"><td class="memItemLeft" align="right" valign="top">WEAK void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gabb4d818fad3af9e0d775cb89236720be">HIDDKeyboardCallbacks_LedsChanged</a> (uint8_t numLockStatus, uint8_t capsLockStatus, uint8_t scrollLockStatus)</td></tr>
<tr class="memdesc:gabb4d818fad3af9e0d775cb89236720be"><td class="mdescLeft">&#160;</td><td class="mdescRight">For HID Keyboard Function.  <a href="#gabb4d818fad3af9e0d775cb89236720be">More...</a><br /></td></tr>
<tr class="separator:gabb4d818fad3af9e0d775cb89236720be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f58303d60b968bd70c374dfa106df45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga1f58303d60b968bd70c374dfa106df45">HIDDKeyboardDriver_Initialize</a> (const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors)</td></tr>
<tr class="memdesc:ga1f58303d60b968bd70c374dfa106df45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the HID keyboard device driver.  <a href="#ga1f58303d60b968bd70c374dfa106df45">More...</a><br /></td></tr>
<tr class="separator:ga1f58303d60b968bd70c374dfa106df45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7147c21b165fd52ac5769ac948cf659a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga7147c21b165fd52ac5769ac948cf659a">HIDDKeyboardDriver_ConfigurationChangedHandler</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga7147c21b165fd52ac5769ac948cf659a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles configureation changed event.  <a href="#ga7147c21b165fd52ac5769ac948cf659a">More...</a><br /></td></tr>
<tr class="separator:ga7147c21b165fd52ac5769ac948cf659a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44a7b99e3c208588defa87389560cc82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga44a7b99e3c208588defa87389560cc82">HIDDKeyboardDriver_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:ga44a7b99e3c208588defa87389560cc82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles HID-specific SETUP request sent by the host.  <a href="#ga44a7b99e3c208588defa87389560cc82">More...</a><br /></td></tr>
<tr class="separator:ga44a7b99e3c208588defa87389560cc82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae65907a76c250a05ce9caac614d554fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gae65907a76c250a05ce9caac614d554fe">HIDDKeyboardInputReport_Initialize</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *report)</td></tr>
<tr class="memdesc:gae65907a76c250a05ce9caac614d554fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a keyboard input report instance.  <a href="#gae65907a76c250a05ce9caac614d554fe">More...</a><br /></td></tr>
<tr class="separator:gae65907a76c250a05ce9caac614d554fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac74e464bd0bc09d3a1460392375ee226"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gac74e464bd0bc09d3a1460392375ee226">HIDDKeyboardInputReport_PressStandardKey</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *report, uint8_t key)</td></tr>
<tr class="memdesc:gac74e464bd0bc09d3a1460392375ee226"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a standard key as being pressed.  <a href="#gac74e464bd0bc09d3a1460392375ee226">More...</a><br /></td></tr>
<tr class="separator:gac74e464bd0bc09d3a1460392375ee226"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga77fcdc852cfd620eeaf4875959be25c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga77fcdc852cfd620eeaf4875959be25c9">HIDDKeyboardInputReport_ReleaseStandardKey</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *report, uint8_t key)</td></tr>
<tr class="memdesc:ga77fcdc852cfd620eeaf4875959be25c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a standard key as not being pressed anymore.  <a href="#ga77fcdc852cfd620eeaf4875959be25c9">More...</a><br /></td></tr>
<tr class="separator:ga77fcdc852cfd620eeaf4875959be25c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae82cf683fe4b64d19e8c86a9324ac598"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gae82cf683fe4b64d19e8c86a9324ac598">HIDDKeyboardInputReport_PressModifierKey</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *report, uint8_t key)</td></tr>
<tr class="memdesc:gae82cf683fe4b64d19e8c86a9324ac598"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a modifier key as being currently pressed.  <a href="#gae82cf683fe4b64d19e8c86a9324ac598">More...</a><br /></td></tr>
<tr class="separator:gae82cf683fe4b64d19e8c86a9324ac598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga71f246158a4030a0ec810ad578ae72d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga71f246158a4030a0ec810ad578ae72d7">HIDDKeyboardInputReport_ReleaseModifierKey</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *report, uint8_t key)</td></tr>
<tr class="memdesc:ga71f246158a4030a0ec810ad578ae72d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a modifier key as not being pressed anymore.  <a href="#ga71f246158a4030a0ec810ad578ae72d7">More...</a><br /></td></tr>
<tr class="separator:ga71f246158a4030a0ec810ad578ae72d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaaa9f5ae875f0f34fcf2b31e154f1533"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gaaaa9f5ae875f0f34fcf2b31e154f1533">HIDDKeyboardOutputReport_Initialize</a> (<a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *report)</td></tr>
<tr class="memdesc:gaaaa9f5ae875f0f34fcf2b31e154f1533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a keyboard output report.  <a href="#gaaaa9f5ae875f0f34fcf2b31e154f1533">More...</a><br /></td></tr>
<tr class="separator:gaaaa9f5ae875f0f34fcf2b31e154f1533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02c799a96aced2887c1935b34037b98a"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga02c799a96aced2887c1935b34037b98a">HIDDKeyboardOutputReport_GetNumLockStatus</a> (const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *report)</td></tr>
<tr class="memdesc:ga02c799a96aced2887c1935b34037b98a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the current status of the num.  <a href="#ga02c799a96aced2887c1935b34037b98a">More...</a><br /></td></tr>
<tr class="separator:ga02c799a96aced2887c1935b34037b98a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4748bbabc1f9d48558e0c8ac12552b78"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga4748bbabc1f9d48558e0c8ac12552b78">HIDDKeyboardOutputReport_GetCapsLockStatus</a> (const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *report)</td></tr>
<tr class="memdesc:ga4748bbabc1f9d48558e0c8ac12552b78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the current status of the caps lock LED according to the given report.  <a href="#ga4748bbabc1f9d48558e0c8ac12552b78">More...</a><br /></td></tr>
<tr class="separator:ga4748bbabc1f9d48558e0c8ac12552b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5a5c9bfdd1eb0a6fb55543a136a0048"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gab5a5c9bfdd1eb0a6fb55543a136a0048">HIDDKeyboardOutputReport_GetScrollLockStatus</a> (const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *report)</td></tr>
<tr class="memdesc:gab5a5c9bfdd1eb0a6fb55543a136a0048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates the current status of the scroll lock LED according to the given report.  <a href="#gab5a5c9bfdd1eb0a6fb55543a136a0048">More...</a><br /></td></tr>
<tr class="separator:gab5a5c9bfdd1eb0a6fb55543a136a0048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6daec06ac1a1a9081831fd8592b78fdb"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#ga6daec06ac1a1a9081831fd8592b78fdb">HIDDKeyboardDriver_ChangeKeys</a> (uint8_t *pressedKeys, uint8_t pressedKeysSize, uint8_t *releasedKeys, uint8_t releasedKeysSize)</td></tr>
<tr class="memdesc:ga6daec06ac1a1a9081831fd8592b78fdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports a change in which keys are currently pressed or release to the host.  <a href="#ga6daec06ac1a1a9081831fd8592b78fdb">More...</a><br /></td></tr>
<tr class="separator:ga6daec06ac1a1a9081831fd8592b78fdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafaf17e45360604dc376b2c8a390bced0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__hid__key.xhtml#gafaf17e45360604dc376b2c8a390bced0">HIDDKeyboardDriver_RemoteWakeUp</a> (void)</td></tr>
<tr class="memdesc:gafaf17e45360604dc376b2c8a390bced0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a remote wake-up sequence if the host has explicitly enabled it by sending the appropriate SET_FEATURE request.  <a href="#gafaf17e45360604dc376b2c8a390bced0">More...</a><br /></td></tr>
<tr class="separator:gafaf17e45360604dc376b2c8a390bced0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Implement HID Keyboard Function For USB Device. </p>
<p>Implement a USB device that only have HID Keyboard Function.</p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga75bdfdfcc15a013330e8e412ae2af4b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75bdfdfcc15a013330e8e412ae2af4b1">&sect;&nbsp;</a></span>HIDDKeyboard</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___h_i_d_d_keyboard.xhtml">_HIDDKeyboard</a>  <a class="el" href="group__usbd__hid__key.xhtml#ga75bdfdfcc15a013330e8e412ae2af4b1">HIDDKeyboard</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Driver structure for an HID device implementing keyboard functionalities. </p>

</div>
</div>
<a id="ga903068d90048756effee278e72c42424"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga903068d90048756effee278e72c42424">&sect;&nbsp;</a></span>HIDDKeyboardDriverConfigurationDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__hid__key.xhtml#ga903068d90048756effee278e72c42424">HIDDKeyboardDriverConfigurationDescriptors</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List of descriptors that make up the configuration descriptors of a device using the HID keyboard driver. </p>

</div>
</div>
<a id="ga9fc180b2b34d59158e24e31936214d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fc180b2b34d59158e24e31936214d9b">&sect;&nbsp;</a></span>HIDDKeyboardInputReport</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>HID input report structure used by the keyboard driver to notify the host of pressed keys. </p>
<p>The first byte is used to report the state of modifier keys. The other three contains the keycodes of the currently pressed keys. </p>

</div>
</div>
<a id="ga2e549ca0aa01b8bc9acea071a8956f97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e549ca0aa01b8bc9acea071a8956f97">&sect;&nbsp;</a></span>HIDDKeyboardOutputReport</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>HID output report structure used by the host to control the state of the keyboard LEDs. </p>
<p>Only the first three bits are relevant, the other 5 are used as padding bits. </p>

</div>
</div>
<a id="ga9c3a654caf23c4205eef0a385d4fc381"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9c3a654caf23c4205eef0a385d4fc381">&sect;&nbsp;</a></span>KBDInputReport</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___k_b_d_input_report.xhtml">_KBDInputReport</a>  <a class="el" href="group__usbd__hid__key.xhtml#ga9c3a654caf23c4205eef0a385d4fc381">KBDInputReport</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extended struct for an HID Keyboard Input report, for transfer driver to send reports. </p>

</div>
</div>
<a id="gaedfea9454ac790e30ea66ba223c3a6ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaedfea9454ac790e30ea66ba223c3a6ff">&sect;&nbsp;</a></span>KBDOutputReport</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___k_b_d_output_report.xhtml">_KBDOutputReport</a>  <a class="el" href="group__usbd__hid__key.xhtml#gaedfea9454ac790e30ea66ba223c3a6ff">KBDOutputReport</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extended struct for an HID Keyboard Output report, for transfer driver to polling reports. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga745dbddddd85ddbe2c71a9df4c3e38af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga745dbddddd85ddbe2c71a9df4c3e38af">&sect;&nbsp;</a></span>COMPILER_ALIGNED()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COMPILER_ALIGNED </td>
          <td>(</td>
          <td class="paramtype">32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>HIDD Keyboard Input Report Instance. </p>
<p>Report descriptor used by the driver. </p>

</div>
</div>
<a id="gaec6511e36f4ccb41c6dc7dff87e18ffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaec6511e36f4ccb41c6dc7dff87e18ffa">&sect;&nbsp;</a></span>HIDDKeyboard_ChangeKeys()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t HIDDKeyboard_ChangeKeys </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pressedKeys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pressedKeysSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>releasedKeys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>releasedKeysSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports a change in which keys are currently pressed or release to the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pressedKeys</td><td>Pointer to an array of key codes indicating keys that have been pressed since the last call to <a class="el" href="group__usbd__hid__key.xhtml#ga6daec06ac1a1a9081831fd8592b78fdb" title="Reports a change in which keys are currently pressed or release to the host. ">HIDDKeyboardDriver_ChangeKeys()</a>. </td></tr>
    <tr><td class="paramname">pressedKeysSize</td><td>Number of key codes in the pressedKeys array. </td></tr>
    <tr><td class="paramname">releasedKeys</td><td>Pointer to an array of key codes indicates keys that have been released since the last call to <a class="el" href="group__usbd__hid__key.xhtml#ga6daec06ac1a1a9081831fd8592b78fdb" title="Reports a change in which keys are currently pressed or release to the host. ">HIDDKeyboardDriver_ChangeKeys()</a>. </td></tr>
    <tr><td class="paramname">releasedKeysSize</td><td>Number of key codes in the releasedKeys array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the report has been sent to the host; otherwise an error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gaec6511e36f4ccb41c6dc7dff87e18ffa_cgraph.svg" width="444" height="351"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gaec6511e36f4ccb41c6dc7dff87e18ffa_icgraph.svg" width="410" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga8756ebb1a6a51b48a6e331ea28808e4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8756ebb1a6a51b48a6e331ea28808e4b">&sect;&nbsp;</a></span>HIDDKeyboard_ConfigureFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboard_ConfigureFunction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure function with expected descriptors and start functionality. </p>
<p>Usually invoked when device is configured.  Pointer to the descriptors for function configure.  Length of descriptors in number of bytes. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga8756ebb1a6a51b48a6e331ea28808e4b_cgraph.svg" width="500" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga8756ebb1a6a51b48a6e331ea28808e4b_icgraph.svg" width="515" height="248"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga56ad6774014b879f9a4828e528508cbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga56ad6774014b879f9a4828e528508cbf">&sect;&nbsp;</a></span>HIDDKeyboard_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboard_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bInterfaceNb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the HID keyboard device driver SW. </p>
<p>(Init USBDDriver .., Init function driver .., Init USBD ...) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">bInterfaceNb</td><td>Interface number for the function. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga56ad6774014b879f9a4828e528508cbf_cgraph.svg" width="450" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga56ad6774014b879f9a4828e528508cbf_icgraph.svg" width="411" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga3c4a5834758595c2295efd954ad1bb87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3c4a5834758595c2295efd954ad1bb87">&sect;&nbsp;</a></span>HIDDKeyboard_RemoteWakeUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboard_RemoteWakeUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts a remote wake-up sequence if the host has explicitely enabled it by sending the appropriate SET_FEATURE request. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga3c4a5834758595c2295efd954ad1bb87_cgraph.svg" width="495" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga3c4a5834758595c2295efd954ad1bb87_icgraph.svg" width="432" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga203326cffce4599e0e03c21769a996d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga203326cffce4599e0e03c21769a996d7">&sect;&nbsp;</a></span>HIDDKeyboard_ReportReceived()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void HIDDKeyboard_ReportReceived </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback invoked when an output report has been received from the host. </p>
<p>Forward the new status of the LEDs to the user program via the HIDDKeyboardCallbacks_LedsChanged callback. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga203326cffce4599e0e03c21769a996d7_cgraph.svg" width="452" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga203326cffce4599e0e03c21769a996d7_icgraph.svg" width="450" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae283b3485bee22fa5b4baeea5209b570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae283b3485bee22fa5b4baeea5209b570">&sect;&nbsp;</a></span>HIDDKeyboard_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t HIDDKeyboard_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles HID-specific SETUP request sent by the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBRC_SUCCESS if request is handled. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gae283b3485bee22fa5b4baeea5209b570_cgraph.svg" width="498" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gae283b3485bee22fa5b4baeea5209b570_icgraph.svg" width="512" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gabb4d818fad3af9e0d775cb89236720be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabb4d818fad3af9e0d775cb89236720be">&sect;&nbsp;</a></span>HIDDKeyboardCallbacks_LedsChanged()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardCallbacks_LedsChanged </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numLockStatus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>capsLockStatus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>scrollLockStatus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>For HID Keyboard Function. </p>
<p>Indicates that the status of one or more LEDs has been changed by the host. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">numLockStatus</td><td>Indicates the current status of the num. lock key. </td></tr>
    <tr><td class="paramname">capsLockStatus</td><td>Indicates the current status of the caps lock key. </td></tr>
    <tr><td class="paramname">scrollLockStatus</td><td>Indicates the current status of the scroll lock key. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gabb4d818fad3af9e0d775cb89236720be_icgraph.svg" width="452" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6daec06ac1a1a9081831fd8592b78fdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6daec06ac1a1a9081831fd8592b78fdb">&sect;&nbsp;</a></span>HIDDKeyboardDriver_ChangeKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t HIDDKeyboardDriver_ChangeKeys </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pressedKeys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pressedKeysSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>releasedKeys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>releasedKeysSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reports a change in which keys are currently pressed or release to the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pressedKeys</td><td>Pointer to an array of key codes indicating keys that have been pressed since the last call to <a class="el" href="group__usbd__hid__key.xhtml#ga6daec06ac1a1a9081831fd8592b78fdb" title="Reports a change in which keys are currently pressed or release to the host. ">HIDDKeyboardDriver_ChangeKeys()</a>. </td></tr>
    <tr><td class="paramname">pressedKeysSize</td><td>Number of key codes in the pressedKeys array. </td></tr>
    <tr><td class="paramname">releasedKeys</td><td>Pointer to an array of key codes indicates keys that have been released since the last call to <a class="el" href="group__usbd__hid__key.xhtml#ga6daec06ac1a1a9081831fd8592b78fdb" title="Reports a change in which keys are currently pressed or release to the host. ">HIDDKeyboardDriver_ChangeKeys()</a>. </td></tr>
    <tr><td class="paramname">releasedKeysSize</td><td>Number of key codes in the releasedKeys array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the report has been sent to the host; otherwise an error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga6daec06ac1a1a9081831fd8592b78fdb_cgraph.svg" width="410" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga7147c21b165fd52ac5769ac948cf659a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7147c21b165fd52ac5769ac948cf659a">&sect;&nbsp;</a></span>HIDDKeyboardDriver_ConfigurationChangedHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardDriver_ConfigurationChangedHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles configureation changed event. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfgnum</td><td>New configuration number </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga7147c21b165fd52ac5769ac948cf659a_cgraph.svg" width="515" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1f58303d60b968bd70c374dfa106df45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1f58303d60b968bd70c374dfa106df45">&sect;&nbsp;</a></span>HIDDKeyboardDriver_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the HID keyboard device driver. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga1f58303d60b968bd70c374dfa106df45_cgraph.svg" width="383" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafaf17e45360604dc376b2c8a390bced0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafaf17e45360604dc376b2c8a390bced0">&sect;&nbsp;</a></span>HIDDKeyboardDriver_RemoteWakeUp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void HIDDKeyboardDriver_RemoteWakeUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Starts a remote wake-up sequence if the host has explicitly enabled it by sending the appropriate SET_FEATURE request. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gafaf17e45360604dc376b2c8a390bced0_cgraph.svg" width="432" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga44a7b99e3c208588defa87389560cc82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga44a7b99e3c208588defa87389560cc82">&sect;&nbsp;</a></span>HIDDKeyboardDriver_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardDriver_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles HID-specific SETUP request sent by the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga44a7b99e3c208588defa87389560cc82_cgraph.svg" width="434" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae65907a76c250a05ce9caac614d554fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae65907a76c250a05ce9caac614d554fe">&sect;&nbsp;</a></span>HIDDKeyboardInputReport_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardInputReport_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a keyboard input report instance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardInputReport instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gae82cf683fe4b64d19e8c86a9324ac598"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae82cf683fe4b64d19e8c86a9324ac598">&sect;&nbsp;</a></span>HIDDKeyboardInputReport_PressModifierKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardInputReport_PressModifierKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports a modifier key as being currently pressed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardInputReport instance. </td></tr>
    <tr><td class="paramname">key</td><td>Key code of the modifier key. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gae82cf683fe4b64d19e8c86a9324ac598_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac74e464bd0bc09d3a1460392375ee226"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac74e464bd0bc09d3a1460392375ee226">&sect;&nbsp;</a></span>HIDDKeyboardInputReport_PressStandardKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardInputReport_PressStandardKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports a standard key as being pressed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardInputReport instance. </td></tr>
    <tr><td class="paramname">key</td><td>Key code of the standard key. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_gac74e464bd0bc09d3a1460392375ee226_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga71f246158a4030a0ec810ad578ae72d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga71f246158a4030a0ec810ad578ae72d7">&sect;&nbsp;</a></span>HIDDKeyboardInputReport_ReleaseModifierKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardInputReport_ReleaseModifierKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports a modifier key as not being pressed anymore. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardInputReport instance. </td></tr>
    <tr><td class="paramname">key</td><td>Key code of the modifier key. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga71f246158a4030a0ec810ad578ae72d7_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga77fcdc852cfd620eeaf4875959be25c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga77fcdc852cfd620eeaf4875959be25c9">&sect;&nbsp;</a></span>HIDDKeyboardInputReport_ReleaseStandardKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardInputReport_ReleaseStandardKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga9fc180b2b34d59158e24e31936214d9b">HIDDKeyboardInputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reports a standard key as not being pressed anymore. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardInputReport instance. </td></tr>
    <tr><td class="paramname">key</td><td>Key code of the standard key </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__hid__key_ga77fcdc852cfd620eeaf4875959be25c9_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga4748bbabc1f9d48558e0c8ac12552b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4748bbabc1f9d48558e0c8ac12552b78">&sect;&nbsp;</a></span>HIDDKeyboardOutputReport_GetCapsLockStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t HIDDKeyboardOutputReport_GetCapsLockStatus </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates the current status of the caps lock LED according to the given report. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardOutputReport instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the caps lock LED is light on; otherwise 0. </dd></dl>

</div>
</div>
<a id="ga02c799a96aced2887c1935b34037b98a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga02c799a96aced2887c1935b34037b98a">&sect;&nbsp;</a></span>HIDDKeyboardOutputReport_GetNumLockStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t HIDDKeyboardOutputReport_GetNumLockStatus </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates the current status of the num. </p>
<p>lock LED according to the given report. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardOutputReport instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the num. lock LED is light on; otherwise 0. </dd></dl>

</div>
</div>
<a id="gab5a5c9bfdd1eb0a6fb55543a136a0048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab5a5c9bfdd1eb0a6fb55543a136a0048">&sect;&nbsp;</a></span>HIDDKeyboardOutputReport_GetScrollLockStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t HIDDKeyboardOutputReport_GetScrollLockStatus </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates the current status of the scroll lock LED according to the given report. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardOutputReport instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the scroll lock LED is light on; otherwise 0. </dd></dl>

</div>
</div>
<a id="gaaaa9f5ae875f0f34fcf2b31e154f1533"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaaa9f5ae875f0f34fcf2b31e154f1533">&sect;&nbsp;</a></span>HIDDKeyboardOutputReport_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void HIDDKeyboardOutputReport_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__hid__key.xhtml#ga2e549ca0aa01b8bc9acea071a8956f97">HIDDKeyboardOutputReport</a> *&#160;</td>
          <td class="paramname"><em>report</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a keyboard output report. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">report</td><td>Pointer to a HIDDKeyboardOutputReport instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
