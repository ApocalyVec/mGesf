<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: Usbd_msd</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Usbd_msd</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implement a single interface device with single MS function in.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for Usbd_msd:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd.svg" width="352" height="982"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__usbd__general__config"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__general__config.xhtml">USBD General Configure</a></td></tr>
<tr class="memdesc:group__usbd__general__config"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists general configurations for all USB device drivers. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msdd__config"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msdd__config.xhtml">USB MassStorage Configure</a></td></tr>
<tr class="memdesc:group__usbd__msdd__config"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the defines used by the Mass Storage driver. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__device__descriptor__ids"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__device__descriptor__ids.xhtml">MSD Device Descriptor IDs</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__subclass"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__subclass.xhtml">MSD Subclass Codes</a></td></tr>
<tr class="memdesc:group__usbd__msd__subclass"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the Subclass Codes for bInterfaceSubClass field. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__protocol__codes"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__protocol__codes.xhtml">MSD Protocol Codes</a></td></tr>
<tr class="memdesc:group__usbd__msd__protocol__codes"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the Transport Protocol codes for MSD. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__cbw__def"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__cbw__def.xhtml">MSD CBW Definitions</a></td></tr>
<tr class="memdesc:group__usbd__msd__cbw__def"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the Command Block Wrapper (CBW) definitions. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__csw__def"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__csw__def.xhtml">MSD CSW Definitions</a></td></tr>
<tr class="memdesc:group__usbd__msd__csw__def"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the Command Status Wrapper (CSW) definitions. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__driver__possible__states"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__driver__possible__states.xhtml">MSD Driver Possible states</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__driver__result__codes"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__driver__result__codes.xhtml">MSD Driver Result Codes</a></td></tr>
<tr class="memdesc:group__usbd__msd__driver__result__codes"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists result codes for MSD functions. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__driver__action__cases"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__driver__action__cases.xhtml">MSD Driver Action Cases</a></td></tr>
<tr class="memdesc:group__usbd__msd__driver__action__cases"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists actions to perform during the post-processing phase of a command. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__driver__xfr__directions"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__driver__xfr__directions.xhtml">MSD Driver Xfr Directions</a></td></tr>
<tr class="memdesc:group__usbd__msd__driver__xfr__directions"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists possible direction values for a data transfer. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__operation__codes"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__operation__codes.xhtml">SBC Operation Codes</a></td></tr>
<tr class="memdesc:group__usbd__sbc__operation__codes"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists operation codes of commands described in the SBC-3 standard. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__periph__quali"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__periph__quali.xhtml">SBC Periph. Qualifiers</a></td></tr>
<tr class="memdesc:group__usbd__sbc__periph__quali"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the peripheral qualifier values specified in the INQUIRY data. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__periph__types"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__periph__types.xhtml">SBC Periph. Types</a></td></tr>
<tr class="memdesc:group__usbd__sbc__periph__types"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists peripheral device types specified in the INQUIRY data. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__secse__codes"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__secse__codes.xhtml">SBC Sense Response Codes</a></td></tr>
<tr class="memdesc:group__usbd__sbc__secse__codes"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists sense data response codes returned in REQUEST SENSE data. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__sense__keys"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__sense__keys.xhtml">SBC Sense Keys</a></td></tr>
<tr class="memdesc:group__usbd__sbc__sense__keys"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists sense key values returned in the REQUEST SENSE data. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__sense__additionals"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__sense__additionals.xhtml">SBC Sense Additional</a></td></tr>
<tr class="memdesc:group__usbd__sbc__sense__additionals"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists additional sense code values returned in REQUEST SENSE data. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__msd__endian__macros"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd__endian__macros.xhtml">MSD Endian Macros</a></td></tr>
<tr class="memdesc:group__usbd__msd__endian__macros"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the macros for endianness conversion. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__sbc__command__state"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__sbc__command__state.xhtml">SBC Command States</a></td></tr>
<tr class="memdesc:group__usbd__sbc__command__state"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the possible states of a SBC command. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_parse_data.xhtml">_MSDParseData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse data extension.  <a href="struct___m_s_d_parse_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_m_s_cbw.xhtml">MSCbw</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_m_s_csw.xhtml">MSCsw</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_configuration_descriptors.xhtml">_MSDConfigurationDescriptors</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_configuration_descriptors_o_t_g.xhtml">_MSDConfigurationDescriptorsOTG</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_transfer.xhtml">_MSDTransfer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_command_state.xhtml">_MSDCommandState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_driver.xhtml">_MSDDriver</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___m_s_d_i_o_fifo.xhtml">_MSDIOFifo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">FIFO buffer for READ/WRITE (disk) operation of a mass storage device.  <a href="struct___m_s_d_i_o_fifo.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">LUN structure.  <a href="struct_m_s_d_lun.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_inquiry.xhtml">_SBCInquiry</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_inquiry_data.xhtml">_SBCInquiryData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_read10.xhtml">_SBCRead10</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_read_capacity10.xhtml">_SBCReadCapacity10</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_s_b_c_read_capacity10_data.xhtml">SBCReadCapacity10Data</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_s_b_c_request_sense.xhtml">SBCRequestSense</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_s_b_c_request_sense_data.xhtml">SBCRequestSenseData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_test_unit_ready.xhtml">_SBCTestUnitReady</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">SBCTestUnitReady Data structure for the TEST UNIT READY command.  <a href="struct___s_b_c_test_unit_ready.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_write10.xhtml">_SBCWrite10</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_medium_removal.xhtml">_SBCMediumRemoval</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_mode_sense6.xhtml">_SBCModeSense6</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_mode_parameter_header6.xhtml">_SBCModeParameterHeader6</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_informational_exceptions_control.xhtml">_SBCInformationalExceptionsControl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___s_b_c_read_write_error_recovery.xhtml">_SBCReadWriteErrorRecovery</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union___s_b_c_command.xhtml">_SBCCommand</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3acffbd305ee72dcd4593c0d8af64a4f">MIN</a>(a,  b)&#160;&#160;&#160;((a &lt; b) ? a : b)</td></tr>
<tr class="memdesc:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum between two values.  <a href="#ga3acffbd305ee72dcd4593c0d8af64a4f">More...</a><br /></td></tr>
<tr class="separator:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88ad7c3615be60b0de0bd9b868eabf0d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga88ad7c3615be60b0de0bd9b868eabf0d">DEFAULT_LUN_BLOCK_SIZE</a>&#160;&#160;&#160;512</td></tr>
<tr class="memdesc:ga88ad7c3615be60b0de0bd9b868eabf0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default LUN block size in bytes.  <a href="#ga88ad7c3615be60b0de0bd9b868eabf0d">More...</a><br /></td></tr>
<tr class="separator:ga88ad7c3615be60b0de0bd9b868eabf0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga73efc8e5f6c52233931de0f792e4d44f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga73efc8e5f6c52233931de0f792e4d44f">MSD_BULK_ONLY_RESET</a>&#160;&#160;&#160;0xFF</td></tr>
<tr class="memdesc:ga73efc8e5f6c52233931de0f792e4d44f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the mass storage device and its associated interface.  <a href="#ga73efc8e5f6c52233931de0f792e4d44f">More...</a><br /></td></tr>
<tr class="separator:ga73efc8e5f6c52233931de0f792e4d44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga058396b6f11778e38488216afe4535f9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga058396b6f11778e38488216afe4535f9">MSD_GET_MAX_LUN</a>&#160;&#160;&#160;0xFE</td></tr>
<tr class="memdesc:ga058396b6f11778e38488216afe4535f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the maximum LUN number supported by the device.  <a href="#ga058396b6f11778e38488216afe4535f9">More...</a><br /></td></tr>
<tr class="separator:ga058396b6f11778e38488216afe4535f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc9e375ccb765294f0c34c1e491ea235"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gabc9e375ccb765294f0c34c1e491ea235">MSDIO_IDLE</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:gabc9e375ccb765294f0c34c1e491ea235"><td class="mdescLeft">&#160;</td><td class="mdescRight">Idle state, do nothing.  <a href="#gabc9e375ccb765294f0c34c1e491ea235">More...</a><br /></td></tr>
<tr class="separator:gabc9e375ccb765294f0c34c1e491ea235"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b3ebac54e5cd2ebe56df2425973cef1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3b3ebac54e5cd2ebe56df2425973cef1">MSDIO_START</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:ga3b3ebac54e5cd2ebe56df2425973cef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start, to start IO operation.  <a href="#ga3b3ebac54e5cd2ebe56df2425973cef1">More...</a><br /></td></tr>
<tr class="separator:ga3b3ebac54e5cd2ebe56df2425973cef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3f195df999f46ee03bd946c87667be3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa3f195df999f46ee03bd946c87667be3">MSDIO_WAIT</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:gaa3f195df999f46ee03bd946c87667be3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait, waiting for IO operation done.  <a href="#gaa3f195df999f46ee03bd946c87667be3">More...</a><br /></td></tr>
<tr class="separator:gaa3f195df999f46ee03bd946c87667be3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga850f49aa6ca2cfc21f18197d5ad415ac"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga850f49aa6ca2cfc21f18197d5ad415ac">MSDIO_NEXT</a>&#160;&#160;&#160;3</td></tr>
<tr class="memdesc:ga850f49aa6ca2cfc21f18197d5ad415ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Next, to check if the next block can be performed.  <a href="#ga850f49aa6ca2cfc21f18197d5ad415ac">More...</a><br /></td></tr>
<tr class="separator:ga850f49aa6ca2cfc21f18197d5ad415ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf32a4212021960c2617812d21eee7f94"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaf32a4212021960c2617812d21eee7f94">MSDIO_PAUSE</a>&#160;&#160;&#160;4</td></tr>
<tr class="memdesc:gaf32a4212021960c2617812d21eee7f94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause, to pause the process for buffer full or null.  <a href="#gaf32a4212021960c2617812d21eee7f94">More...</a><br /></td></tr>
<tr class="separator:gaf32a4212021960c2617812d21eee7f94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75b6f30b2ccbe61e959a2493236c6bb6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga75b6f30b2ccbe61e959a2493236c6bb6">MSDIO_ABORT</a>&#160;&#160;&#160;5</td></tr>
<tr class="memdesc:ga75b6f30b2ccbe61e959a2493236c6bb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abort, to abort the process.  <a href="#ga75b6f30b2ccbe61e959a2493236c6bb6">More...</a><br /></td></tr>
<tr class="separator:ga75b6f30b2ccbe61e959a2493236c6bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9793bbace74601c1f3d366d00b965ecd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga9793bbace74601c1f3d366d00b965ecd">MSDIO_DONE</a>&#160;&#160;&#160;6</td></tr>
<tr class="memdesc:ga9793bbace74601c1f3d366d00b965ecd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Done, finish without error.  <a href="#ga9793bbace74601c1f3d366d00b965ecd">More...</a><br /></td></tr>
<tr class="separator:ga9793bbace74601c1f3d366d00b965ecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b352a9201c842f2f5c4617869ea28a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2b352a9201c842f2f5c4617869ea28a4">MSDIO_ERROR</a>&#160;&#160;&#160;7</td></tr>
<tr class="memdesc:ga2b352a9201c842f2f5c4617869ea28a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error, any error happens.  <a href="#ga2b352a9201c842f2f5c4617869ea28a4">More...</a><br /></td></tr>
<tr class="separator:ga2b352a9201c842f2f5c4617869ea28a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae6aab0e7b6b4ed7a5cb7ff4736c01450"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae6aab0e7b6b4ed7a5cb7ff4736c01450">MSDIO_READ10_CHUNK_SIZE</a>&#160;&#160;&#160;(128 * 512)</td></tr>
<tr class="memdesc:gae6aab0e7b6b4ed7a5cb7ff4736c01450"><td class="mdescLeft">&#160;</td><td class="mdescRight">FIFO offset before USB transmit start.  <a href="#gae6aab0e7b6b4ed7a5cb7ff4736c01450">More...</a><br /></td></tr>
<tr class="separator:gae6aab0e7b6b4ed7a5cb7ff4736c01450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga151785544a5aadbb2547384e3db8a6a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga151785544a5aadbb2547384e3db8a6a1">MSDIO_WRITE10_CHUNK_SIZE</a>&#160;&#160;&#160;(128 * 512)</td></tr>
<tr class="separator:ga151785544a5aadbb2547384e3db8a6a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab6f2982e14b67f3e8297a0db911e2df6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gab6f2982e14b67f3e8297a0db911e2df6">MSDIOFifo_IncNdx</a>(ndx,  sectSize,  bufSize)</td></tr>
<tr class="separator:gab6f2982e14b67f3e8297a0db911e2df6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bee784885eede5311a9aeb574bdc25a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2bee784885eede5311a9aeb574bdc25a">MED_STATUS_SUCCESS</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="separator:ga2bee784885eede5311a9aeb574bdc25a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14b96d34d6d4467303b8df8c2bb0b846"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga14b96d34d6d4467303b8df8c2bb0b846">MED_STATE_READY</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="separator:ga14b96d34d6d4467303b8df8c2bb0b846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ebdf6c1c924798bf4e0fbe4c7ba9973"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1ebdf6c1c924798bf4e0fbe4c7ba9973">MED_STATE_BUSY</a>&#160;&#160;&#160;0x01</td></tr>
<tr class="separator:ga1ebdf6c1c924798bf4e0fbe4c7ba9973"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2e3beccadbf24e3dace7e6ce87d6833"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa2e3beccadbf24e3dace7e6ce87d6833">LUN_STATUS_SUCCESS</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="memdesc:gaa2e3beccadbf24e3dace7e6ce87d6833"><td class="mdescLeft">&#160;</td><td class="mdescRight">LUN RC: success.  <a href="#gaa2e3beccadbf24e3dace7e6ce87d6833">More...</a><br /></td></tr>
<tr class="separator:gaa2e3beccadbf24e3dace7e6ce87d6833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae7de66649877359f888c22120cef02e6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae7de66649877359f888c22120cef02e6">LUN_STATUS_ERROR</a>&#160;&#160;&#160;0x02</td></tr>
<tr class="memdesc:gae7de66649877359f888c22120cef02e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">LUN RC: error.  <a href="#gae7de66649877359f888c22120cef02e6">More...</a><br /></td></tr>
<tr class="separator:gae7de66649877359f888c22120cef02e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c00e4aa0ca9ddf02eed964985d20d17"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga8c00e4aa0ca9ddf02eed964985d20d17">LUN_NOT_PRESENT</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="memdesc:ga8c00e4aa0ca9ddf02eed964985d20d17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Media of LUN is removed.  <a href="#ga8c00e4aa0ca9ddf02eed964985d20d17">More...</a><br /></td></tr>
<tr class="separator:ga8c00e4aa0ca9ddf02eed964985d20d17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga813d6be81e1a7efa0d874376f5be6960"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga813d6be81e1a7efa0d874376f5be6960">LUN_EJECTED</a>&#160;&#160;&#160;0x01</td></tr>
<tr class="memdesc:ga813d6be81e1a7efa0d874376f5be6960"><td class="mdescLeft">&#160;</td><td class="mdescRight">LUN is ejected by host.  <a href="#ga813d6be81e1a7efa0d874376f5be6960">More...</a><br /></td></tr>
<tr class="separator:ga813d6be81e1a7efa0d874376f5be6960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62ae52efc0c28233c82120a00ff0929e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga62ae52efc0c28233c82120a00ff0929e">LUN_CHANGED</a>&#160;&#160;&#160;0x10</td></tr>
<tr class="memdesc:ga62ae52efc0c28233c82120a00ff0929e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Media of LUN is changed.  <a href="#ga62ae52efc0c28233c82120a00ff0929e">More...</a><br /></td></tr>
<tr class="separator:ga62ae52efc0c28233c82120a00ff0929e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f505dc4dc815d9c00f4bf45215a5bff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga7f505dc4dc815d9c00f4bf45215a5bff">LUN_TRANS_READY</a>&#160;&#160;&#160;<a class="el" href="group__usbd__msd.xhtml#ga62ae52efc0c28233c82120a00ff0929e">LUN_CHANGED</a></td></tr>
<tr class="memdesc:ga7f505dc4dc815d9c00f4bf45215a5bff"><td class="mdescLeft">&#160;</td><td class="mdescRight">LUN Not Ready to Ready transition.  <a href="#ga7f505dc4dc815d9c00f4bf45215a5bff">More...</a><br /></td></tr>
<tr class="separator:ga7f505dc4dc815d9c00f4bf45215a5bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e4c7bd61d8f3a7f8f7a95d0927ebdad"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga8e4c7bd61d8f3a7f8f7a95d0927ebdad">LUN_READY</a>&#160;&#160;&#160;0x11</td></tr>
<tr class="memdesc:ga8e4c7bd61d8f3a7f8f7a95d0927ebdad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Media of LUN is ready.  <a href="#ga8e4c7bd61d8f3a7f8f7a95d0927ebdad">More...</a><br /></td></tr>
<tr class="separator:ga8e4c7bd61d8f3a7f8f7a95d0927ebdad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59a72faa2e6668562b83b4a3671c4544"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga59a72faa2e6668562b83b4a3671c4544">SBC_SPC_VERSION_4</a>&#160;&#160;&#160;0x06</td></tr>
<tr class="memdesc:ga59a72faa2e6668562b83b4a3671c4544"><td class="mdescLeft">&#160;</td><td class="mdescRight">Version value for the SBC-3 specification.  <a href="#ga59a72faa2e6668562b83b4a3671c4544">More...</a><br /></td></tr>
<tr class="separator:ga59a72faa2e6668562b83b4a3671c4544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3bb206d0754049b55a619551bebc291a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3bb206d0754049b55a619551bebc291a">SBC_TPGS_NONE</a>&#160;&#160;&#160;0x0</td></tr>
<tr class="memdesc:ga3bb206d0754049b55a619551bebc291a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Values for the TPGS field returned in INQUIRY data.  <a href="#ga3bb206d0754049b55a619551bebc291a">More...</a><br /></td></tr>
<tr class="separator:ga3bb206d0754049b55a619551bebc291a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga432939e03f94f45838e6f1c7655f0ed0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga432939e03f94f45838e6f1c7655f0ed0">SBC_TPGS_ASYMMETRIC</a>&#160;&#160;&#160;0x1</td></tr>
<tr class="separator:ga432939e03f94f45838e6f1c7655f0ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1f5df8119e93b86779ce9e2b7eace88"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaf1f5df8119e93b86779ce9e2b7eace88">SBC_TPGS_SYMMETRIC</a>&#160;&#160;&#160;0x2</td></tr>
<tr class="separator:gaf1f5df8119e93b86779ce9e2b7eace88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a2060f6bc7d9eb4b29f9414b1ad8e85"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2a2060f6bc7d9eb4b29f9414b1ad8e85">SBC_TPGS_BOTH</a>&#160;&#160;&#160;0x3</td></tr>
<tr class="separator:ga2a2060f6bc7d9eb4b29f9414b1ad8e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab903bf701bddd0f88bbbe6e5863956d2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gab903bf701bddd0f88bbbe6e5863956d2">SBC_VERSION_DESCRIPTOR_SBC_3</a>&#160;&#160;&#160;0x04C0</td></tr>
<tr class="memdesc:gab903bf701bddd0f88bbbe6e5863956d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Version descriptor value for the SBC-3 specification.  <a href="#gab903bf701bddd0f88bbbe6e5863956d2">More...</a><br /></td></tr>
<tr class="separator:gab903bf701bddd0f88bbbe6e5863956d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28c01bfb597324856a95fcc752984c8f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga28c01bfb597324856a95fcc752984c8f">SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="memdesc:ga28c01bfb597324856a95fcc752984c8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">MEDIUM TYPE field value for direct-access block devices.  <a href="#ga28c01bfb597324856a95fcc752984c8f">More...</a><br /></td></tr>
<tr class="separator:ga28c01bfb597324856a95fcc752984c8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f558f8a8933fdb43888fcfd5eaf071d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga5f558f8a8933fdb43888fcfd5eaf071d">SBC_MRIE_NO_REPORTING</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="memdesc:ga5f558f8a8933fdb43888fcfd5eaf071d"><td class="mdescLeft">&#160;</td><td class="mdescRight">MRIE field values.  <a href="#ga5f558f8a8933fdb43888fcfd5eaf071d">More...</a><br /></td></tr>
<tr class="separator:ga5f558f8a8933fdb43888fcfd5eaf071d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9abc7547eee7b3a8f8f37a8c61a98409"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga9abc7547eee7b3a8f8f37a8c61a98409">SBC_MRIE_ASYNCHRONOUS</a>&#160;&#160;&#160;0x01</td></tr>
<tr class="separator:ga9abc7547eee7b3a8f8f37a8c61a98409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4cf09874feda25fad44312c7b8514665"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga4cf09874feda25fad44312c7b8514665">SBC_MRIE_GENERATE_UNIT_ATTENTION</a>&#160;&#160;&#160;0x02</td></tr>
<tr class="separator:ga4cf09874feda25fad44312c7b8514665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab62dfdfd1f3b3e05324c7425be4f0a78"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gab62dfdfd1f3b3e05324c7425be4f0a78">SBC_MRIE_COND_GENERATE_RECOVERED_ERROR</a>&#160;&#160;&#160;0x03</td></tr>
<tr class="separator:gab62dfdfd1f3b3e05324c7425be4f0a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6a721470fd2ce7d9a1428840d7f516b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga6a721470fd2ce7d9a1428840d7f516b7">SBC_MRIE_UNCOND_GENERATE_RECOVERED_ERROR</a>&#160;&#160;&#160;0x04</td></tr>
<tr class="separator:ga6a721470fd2ce7d9a1428840d7f516b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa88a4a4c1bf1f19f969a8fdb9fb9a59f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa88a4a4c1bf1f19f969a8fdb9fb9a59f">SBC_MRIE_GENERATE_NO_SENSE</a>&#160;&#160;&#160;0x05</td></tr>
<tr class="separator:gaa88a4a4c1bf1f19f969a8fdb9fb9a59f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad14b256b75c667069a5ff24bdab2a514"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gad14b256b75c667069a5ff24bdab2a514">SBC_MRIE_ON_REQUEST</a>&#160;&#160;&#160;0x06</td></tr>
<tr class="separator:gad14b256b75c667069a5ff24bdab2a514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62a502a991d32f35c3093faf1e2c4630"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga62a502a991d32f35c3093faf1e2c4630">SBC_PAGE_READ_WRITE_ERROR_RECOVERY</a>&#160;&#160;&#160;0x01</td></tr>
<tr class="memdesc:ga62a502a991d32f35c3093faf1e2c4630"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supported mode pages.  <a href="#ga62a502a991d32f35c3093faf1e2c4630">More...</a><br /></td></tr>
<tr class="separator:ga62a502a991d32f35c3093faf1e2c4630"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac50958810a8d30038f835e141187211c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gac50958810a8d30038f835e141187211c">SBC_PAGE_INFORMATIONAL_EXCEPTIONS_CONTROL</a>&#160;&#160;&#160;0x1C</td></tr>
<tr class="separator:gac50958810a8d30038f835e141187211c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga201fe8b5a07cb6ee0cc48ec2a199d4f7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga201fe8b5a07cb6ee0cc48ec2a199d4f7">SBC_PAGE_RETURN_ALL</a>&#160;&#160;&#160;0x3F</td></tr>
<tr class="separator:ga201fe8b5a07cb6ee0cc48ec2a199d4f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8b67e8e6acb10013c6babac7a7ca19c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gad8b67e8e6acb10013c6babac7a7ca19c">SBC_PAGE_VENDOR_SPECIFIC</a>&#160;&#160;&#160;0x00</td></tr>
<tr class="separator:gad8b67e8e6acb10013c6babac7a7ca19c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gad8a41fa077818a00e0010cecc2bca844"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_parse_data.xhtml">_MSDParseData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gad8a41fa077818a00e0010cecc2bca844">MSDParseData</a></td></tr>
<tr class="memdesc:gad8a41fa077818a00e0010cecc2bca844"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse data extension.  <a href="#gad8a41fa077818a00e0010cecc2bca844">More...</a><br /></td></tr>
<tr class="separator:gad8a41fa077818a00e0010cecc2bca844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0171bc05a355956dbd8ac5ff27d9a8c8"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_configuration_descriptors.xhtml">_MSDConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a></td></tr>
<tr class="memdesc:ga0171bc05a355956dbd8ac5ff27d9a8c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of configuration descriptors used by a Mass Storage device driver.  <a href="#ga0171bc05a355956dbd8ac5ff27d9a8c8">More...</a><br /></td></tr>
<tr class="separator:ga0171bc05a355956dbd8ac5ff27d9a8c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga647aebe157ea809e2cab6d5bb2c60742"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_configuration_descriptors_o_t_g.xhtml">_MSDConfigurationDescriptorsOTG</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga647aebe157ea809e2cab6d5bb2c60742">MSDConfigurationDescriptorsOTG</a></td></tr>
<tr class="memdesc:ga647aebe157ea809e2cab6d5bb2c60742"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of configuration descriptors used by a Mass Storage device driver, with OTG support.  <a href="#ga647aebe157ea809e2cab6d5bb2c60742">More...</a><br /></td></tr>
<tr class="separator:ga647aebe157ea809e2cab6d5bb2c60742"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga95052e184a89fdee9b1ad8071fbad1a6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_transfer.xhtml">_MSDTransfer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga95052e184a89fdee9b1ad8071fbad1a6">MSDTransfer</a></td></tr>
<tr class="memdesc:ga95052e184a89fdee9b1ad8071fbad1a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for holding the result of a USB transfer.  <a href="#ga95052e184a89fdee9b1ad8071fbad1a6">More...</a><br /></td></tr>
<tr class="separator:ga95052e184a89fdee9b1ad8071fbad1a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd51988f2319832141acab2ad3380417"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_command_state.xhtml">_MSDCommandState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a></td></tr>
<tr class="memdesc:gabd51988f2319832141acab2ad3380417"><td class="mdescLeft">&#160;</td><td class="mdescRight">Status of an executing command.  <a href="#gabd51988f2319832141acab2ad3380417">More...</a><br /></td></tr>
<tr class="separator:gabd51988f2319832141acab2ad3380417"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga525fbf27f2d97cbe201c2bfef003376e"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_driver.xhtml">_MSDDriver</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a></td></tr>
<tr class="memdesc:ga525fbf27f2d97cbe201c2bfef003376e"><td class="mdescLeft">&#160;</td><td class="mdescRight">MSD driver state variables.  <a href="#ga525fbf27f2d97cbe201c2bfef003376e">More...</a><br /></td></tr>
<tr class="separator:ga525fbf27f2d97cbe201c2bfef003376e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga799d48ff36bcf55e03c810b503dc3f9c"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_i_o_fifo.xhtml">_MSDIOFifo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga799d48ff36bcf55e03c810b503dc3f9c">MSDIOFifo</a></td></tr>
<tr class="memdesc:ga799d48ff36bcf55e03c810b503dc3f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">FIFO buffer for READ/WRITE (disk) operation of a mass storage device.  <a href="#ga799d48ff36bcf55e03c810b503dc3f9c">More...</a><br /></td></tr>
<tr class="separator:ga799d48ff36bcf55e03c810b503dc3f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad38c8e20a03713adc742ae2f13435ea"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___m_s_d_i_o_fifo.xhtml">_MSDIOFifo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaad38c8e20a03713adc742ae2f13435ea">PMSDIOFifo</a></td></tr>
<tr class="separator:gaad38c8e20a03713adc742ae2f13435ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae95c60e9147b517aa03473391d1f3754"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae95c60e9147b517aa03473391d1f3754">fMEDCallback</a>) (void *pArg, uint8_t bStatus, uint32_t dwTransferred, uint32_t dwRemaining)</td></tr>
<tr class="separator:gae95c60e9147b517aa03473391d1f3754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd8166360b93b7b4f500cb027aee4882"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafd8166360b93b7b4f500cb027aee4882">MSDLunDataMonitorFunction</a>) (uint8_t flowDirection, uint32_t dataLength, uint32_t fifoNullCount, uint32_t fifoFullCount)</td></tr>
<tr class="memdesc:gafd8166360b93b7b4f500cb027aee4882"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mass storage device data flow monitor function type.  <a href="#gafd8166360b93b7b4f500cb027aee4882">More...</a><br /></td></tr>
<tr class="separator:gafd8166360b93b7b4f500cb027aee4882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacedaebdfa8621aa6b54fded26c498be3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_inquiry.xhtml">_SBCInquiry</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gacedaebdfa8621aa6b54fded26c498be3">SBCInquiry</a></td></tr>
<tr class="memdesc:gacedaebdfa8621aa6b54fded26c498be3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for the INQUIRY command.  <a href="#gacedaebdfa8621aa6b54fded26c498be3">More...</a><br /></td></tr>
<tr class="separator:gacedaebdfa8621aa6b54fded26c498be3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga920fd6cca4a9cfc02c44fb7c79e4847b"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_inquiry_data.xhtml">_SBCInquiryData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga920fd6cca4a9cfc02c44fb7c79e4847b">SBCInquiryData</a></td></tr>
<tr class="memdesc:ga920fd6cca4a9cfc02c44fb7c79e4847b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard INQUIRY data format returned by the device.  <a href="#ga920fd6cca4a9cfc02c44fb7c79e4847b">More...</a><br /></td></tr>
<tr class="separator:ga920fd6cca4a9cfc02c44fb7c79e4847b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ad0cd49952a9240a482163342cd0934"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_read10.xhtml">_SBCRead10</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3ad0cd49952a9240a482163342cd0934">SBCRead10</a></td></tr>
<tr class="memdesc:ga3ad0cd49952a9240a482163342cd0934"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data structure for the READ (10) command.  <a href="#ga3ad0cd49952a9240a482163342cd0934">More...</a><br /></td></tr>
<tr class="separator:ga3ad0cd49952a9240a482163342cd0934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f1114fa108022c065f43c164b69518c"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_read_capacity10.xhtml">_SBCReadCapacity10</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga9f1114fa108022c065f43c164b69518c">SBCReadCapacity10</a></td></tr>
<tr class="memdesc:ga9f1114fa108022c065f43c164b69518c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for the READ CAPACITY (10) command.  <a href="#ga9f1114fa108022c065f43c164b69518c">More...</a><br /></td></tr>
<tr class="separator:ga9f1114fa108022c065f43c164b69518c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a9f03542de1bc245b372e27d2f07234"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_test_unit_ready.xhtml">_SBCTestUnitReady</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2a9f03542de1bc245b372e27d2f07234">SBCTestUnitReady</a></td></tr>
<tr class="memdesc:ga2a9f03542de1bc245b372e27d2f07234"><td class="mdescLeft">&#160;</td><td class="mdescRight">SBCTestUnitReady Data structure for the TEST UNIT READY command.  <a href="#ga2a9f03542de1bc245b372e27d2f07234">More...</a><br /></td></tr>
<tr class="separator:ga2a9f03542de1bc245b372e27d2f07234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae94d5531ee67bdfb0633f2d3708b7116"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_write10.xhtml">_SBCWrite10</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae94d5531ee67bdfb0633f2d3708b7116">SBCWrite10</a></td></tr>
<tr class="memdesc:gae94d5531ee67bdfb0633f2d3708b7116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for the WRITE (10) command.  <a href="#gae94d5531ee67bdfb0633f2d3708b7116">More...</a><br /></td></tr>
<tr class="separator:gae94d5531ee67bdfb0633f2d3708b7116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab64333c3dc55088fd774f0d4c6cf9d2"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_medium_removal.xhtml">_SBCMediumRemoval</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaab64333c3dc55088fd774f0d4c6cf9d2">SBCMediumRemoval</a></td></tr>
<tr class="memdesc:gaab64333c3dc55088fd774f0d4c6cf9d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for the PREVENT/ALLOW MEDIUM REMOVAL command.  <a href="#gaab64333c3dc55088fd774f0d4c6cf9d2">More...</a><br /></td></tr>
<tr class="separator:gaab64333c3dc55088fd774f0d4c6cf9d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe7c4d8264a53ea48d66df04f72ad677"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_mode_sense6.xhtml">_SBCModeSense6</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafe7c4d8264a53ea48d66df04f72ad677">SBCModeSense6</a></td></tr>
<tr class="memdesc:gafe7c4d8264a53ea48d66df04f72ad677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure for the MODE SENSE (6) command.  <a href="#gafe7c4d8264a53ea48d66df04f72ad677">More...</a><br /></td></tr>
<tr class="separator:gafe7c4d8264a53ea48d66df04f72ad677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d68739013bfe7dce642d98264d3bd63"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_mode_parameter_header6.xhtml">_SBCModeParameterHeader6</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a></td></tr>
<tr class="memdesc:ga1d68739013bfe7dce642d98264d3bd63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Header for the data returned after a MODE SENSE (6) command.  <a href="#ga1d68739013bfe7dce642d98264d3bd63">More...</a><br /></td></tr>
<tr class="separator:ga1d68739013bfe7dce642d98264d3bd63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6899aad509d201b8af39324e219269ff"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_informational_exceptions_control.xhtml">_SBCInformationalExceptionsControl</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga6899aad509d201b8af39324e219269ff">SBCInformationalExceptionsControl</a></td></tr>
<tr class="memdesc:ga6899aad509d201b8af39324e219269ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Informational exceptions control mode page.  <a href="#ga6899aad509d201b8af39324e219269ff">More...</a><br /></td></tr>
<tr class="separator:ga6899aad509d201b8af39324e219269ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5998fec6a0f414396c363ab49aa9b5d6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___s_b_c_read_write_error_recovery.xhtml">_SBCReadWriteErrorRecovery</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga5998fec6a0f414396c363ab49aa9b5d6">SBCReadWriteErrorRecovery</a></td></tr>
<tr class="memdesc:ga5998fec6a0f414396c363ab49aa9b5d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read/write error recovery mode page.  <a href="#ga5998fec6a0f414396c363ab49aa9b5d6">More...</a><br /></td></tr>
<tr class="separator:ga5998fec6a0f414396c363ab49aa9b5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga365f4de3dd00eea65dd57eda0d9268af"><td class="memItemLeft" align="right" valign="top">typedef union <a class="el" href="union___s_b_c_command.xhtml">_SBCCommand</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga365f4de3dd00eea65dd57eda0d9268af">SBCCommand</a></td></tr>
<tr class="memdesc:ga365f4de3dd00eea65dd57eda0d9268af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic structure for holding information about SBC commands.  <a href="#ga365f4de3dd00eea65dd57eda0d9268af">More...</a><br /></td></tr>
<tr class="separator:ga365f4de3dd00eea65dd57eda0d9268af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga77b4a730be820934b4e637afa14e6fef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga77b4a730be820934b4e637afa14e6fef">MSDDriver_Initialize</a> (const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors, <a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *pLuns, unsigned char numLuns)</td></tr>
<tr class="memdesc:ga77b4a730be820934b4e637afa14e6fef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the MSD driver and the associated USB driver.  <a href="#ga77b4a730be820934b4e637afa14e6fef">More...</a><br /></td></tr>
<tr class="separator:ga77b4a730be820934b4e637afa14e6fef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabfb0d71b88e4e5606d3de432127e9d01"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gabfb0d71b88e4e5606d3de432127e9d01">MSDDriver_ConfigurationChangeHandler</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:gabfb0d71b88e4e5606d3de432127e9d01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the configuration of the device changes.  <a href="#gabfb0d71b88e4e5606d3de432127e9d01">More...</a><br /></td></tr>
<tr class="separator:gabfb0d71b88e4e5606d3de432127e9d01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fc749f879c284f631bce181e7cfe0eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3fc749f879c284f631bce181e7cfe0eb">MSDDriver_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:ga3fc749f879c284f631bce181e7cfe0eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handler for incoming SETUP requests on default Control endpoint 0.  <a href="#ga3fc749f879c284f631bce181e7cfe0eb">More...</a><br /></td></tr>
<tr class="separator:ga3fc749f879c284f631bce181e7cfe0eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65e2aa51e755428df116ecc89b7aa996"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga65e2aa51e755428df116ecc89b7aa996">MSDDriver_Callback</a> (<a class="el" href="group__usbd__msd.xhtml#ga95052e184a89fdee9b1ad8071fbad1a6">MSDTransfer</a> *transfer, uint8_t status, uint32_t transferred, uint32_t remaining)</td></tr>
<tr class="memdesc:ga65e2aa51e755428df116ecc89b7aa996"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is to be used as a callback for USB or LUN transfers.  <a href="#ga65e2aa51e755428df116ecc89b7aa996">More...</a><br /></td></tr>
<tr class="separator:ga65e2aa51e755428df116ecc89b7aa996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d0b6dc8262b619aa9c0f6a4c47c15bf"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1d0b6dc8262b619aa9c0f6a4c47c15bf">MSDD_GetCommandInformation</a> (<a class="el" href="struct_m_s_cbw.xhtml">MSCbw</a> *cbw, unsigned int *<a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, unsigned char *type)</td></tr>
<tr class="memdesc:ga1d0b6dc8262b619aa9c0f6a4c47c15bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the expected transfer length and direction (IN, OUT or don't care) from the host point-of-view.  <a href="#ga1d0b6dc8262b619aa9c0f6a4c47c15bf">More...</a><br /></td></tr>
<tr class="separator:ga1d0b6dc8262b619aa9c0f6a4c47c15bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1fed7a9b3c1308ca161df14f9740718"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae1fed7a9b3c1308ca161df14f9740718">MSDD_PreProcessCommand</a> (<a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *pMsdDriver)</td></tr>
<tr class="memdesc:gae1fed7a9b3c1308ca161df14f9740718"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-processes a command by checking the differences between the host and device expectations in term of transfer type and length.  <a href="#gae1fed7a9b3c1308ca161df14f9740718">More...</a><br /></td></tr>
<tr class="separator:gae1fed7a9b3c1308ca161df14f9740718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ef15a39c9d18bb5b326548c04711108"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1ef15a39c9d18bb5b326548c04711108">MSDD_PostProcessCommand</a> (<a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *pMsdDriver)</td></tr>
<tr class="memdesc:ga1ef15a39c9d18bb5b326548c04711108"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post-processes a command given the case identified during the pre-processing step.  <a href="#ga1ef15a39c9d18bb5b326548c04711108">More...</a><br /></td></tr>
<tr class="separator:ga1ef15a39c9d18bb5b326548c04711108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga205b122769aa196e2bfe7eadf30b2519"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga205b122769aa196e2bfe7eadf30b2519">MSDD_ProcessCommand</a> (<a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *pMsdDriver)</td></tr>
<tr class="memdesc:ga205b122769aa196e2bfe7eadf30b2519"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes the latest command received by the device.  <a href="#ga205b122769aa196e2bfe7eadf30b2519">More...</a><br /></td></tr>
<tr class="separator:ga205b122769aa196e2bfe7eadf30b2519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac202c092099685d21ac19320311b1d0f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gac202c092099685d21ac19320311b1d0f">MSDD_StateMachine</a> (<a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *pMsdDriver)</td></tr>
<tr class="memdesc:gac202c092099685d21ac19320311b1d0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">State machine for the MSD device driver.  <a href="#gac202c092099685d21ac19320311b1d0f">More...</a><br /></td></tr>
<tr class="separator:gac202c092099685d21ac19320311b1d0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga745dbddddd85ddbe2c71a9df4c3e38af">COMPILER_ALIGNED</a> (32)</td></tr>
<tr class="memdesc:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="mdescLeft">&#160;</td><td class="mdescRight">MSD Driver instance for device function.  <a href="#ga745dbddddd85ddbe2c71a9df4c3e38af">More...</a><br /></td></tr>
<tr class="separator:ga745dbddddd85ddbe2c71a9df4c3e38af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga63d1031361c1e8a4db44d5bb9e0c309c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga63d1031361c1e8a4db44d5bb9e0c309c">MSDFunction_Reset</a> (void)</td></tr>
<tr class="memdesc:ga63d1031361c1e8a4db44d5bb9e0c309c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the state of the MSD driver.  <a href="#ga63d1031361c1e8a4db44d5bb9e0c309c">More...</a><br /></td></tr>
<tr class="separator:ga63d1031361c1e8a4db44d5bb9e0c309c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga462b4263f13e5235a2bedceeaece01cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga462b4263f13e5235a2bedceeaece01cb">MSDFunction_Initialize</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, uint8_t bInterfaceNb, <a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *pLuns, uint8_t numLuns)</td></tr>
<tr class="memdesc:ga462b4263f13e5235a2bedceeaece01cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the MSD driver and the associated USB driver.  <a href="#ga462b4263f13e5235a2bedceeaece01cb">More...</a><br /></td></tr>
<tr class="separator:ga462b4263f13e5235a2bedceeaece01cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb1268e0849907894c708ccc4ab46fee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafb1268e0849907894c708ccc4ab46fee">MSDFunction_Configure</a> (<a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint16_t wLength)</td></tr>
<tr class="memdesc:gafb1268e0849907894c708ccc4ab46fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the configuration of the device changes.  <a href="#gafb1268e0849907894c708ccc4ab46fee">More...</a><br /></td></tr>
<tr class="separator:gafb1268e0849907894c708ccc4ab46fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa87efba32c907fa095c6f8797d2580db"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa87efba32c907fa095c6f8797d2580db">MSDFunction_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gaa87efba32c907fa095c6f8797d2580db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handler for incoming SETUP requests on default Control endpoint 0.  <a href="#gaa87efba32c907fa095c6f8797d2580db">More...</a><br /></td></tr>
<tr class="separator:gaa87efba32c907fa095c6f8797d2580db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga33a2494c76dcc7335a458c79e46975d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga33a2494c76dcc7335a458c79e46975d9">MSDFunction_StateMachine</a> (void)</td></tr>
<tr class="memdesc:ga33a2494c76dcc7335a458c79e46975d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">State machine for the MSD driver.  <a href="#ga33a2494c76dcc7335a458c79e46975d9">More...</a><br /></td></tr>
<tr class="separator:ga33a2494c76dcc7335a458c79e46975d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1481efe325e7d17ab334bd283fd24aa6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1481efe325e7d17ab334bd283fd24aa6">MSDIOFifo_Init</a> (<a class="el" href="group__usbd__msd.xhtml#ga799d48ff36bcf55e03c810b503dc3f9c">MSDIOFifo</a> *pFifo, void *pBuffer, unsigned int bufferSize)</td></tr>
<tr class="memdesc:ga1481efe325e7d17ab334bd283fd24aa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a MSDIOFifo instance.  <a href="#ga1481efe325e7d17ab334bd283fd24aa6">More...</a><br /></td></tr>
<tr class="separator:ga1481efe325e7d17ab334bd283fd24aa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7fa65f732a998087ab8efeb882cbe89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gac7fa65f732a998087ab8efeb882cbe89">LUN_Init</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, void *media, uint8_t *ioBuffer, uint32_t ioBufferSize, uint32_t baseAddress, uint32_t size, uint16_t blockSize, uint8_t protected, void(*dataMonitor)(uint8_t flowDirection, uint32_t dataLength, uint32_t fifoNullCount, uint32_t fifoFullCount))</td></tr>
<tr class="memdesc:gac7fa65f732a998087ab8efeb882cbe89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a LUN instance.  <a href="#gac7fa65f732a998087ab8efeb882cbe89">More...</a><br /></td></tr>
<tr class="separator:gac7fa65f732a998087ab8efeb882cbe89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1de5a07c184adfb07755a5db1eca7d2e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1de5a07c184adfb07755a5db1eca7d2e">LUN_Eject</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun)</td></tr>
<tr class="memdesc:ga1de5a07c184adfb07755a5db1eca7d2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eject the media from a LUN.  <a href="#ga1de5a07c184adfb07755a5db1eca7d2e">More...</a><br /></td></tr>
<tr class="separator:ga1de5a07c184adfb07755a5db1eca7d2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc350a85607c66c7e8ceb616ef18c6fa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafc350a85607c66c7e8ceb616ef18c6fa">LUN_Write</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, uint32_t blockAddress, void *data, uint32_t <a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:gafc350a85607c66c7e8ceb616ef18c6fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes data on the a LUN starting at the specified block address.  <a href="#gafc350a85607c66c7e8ceb616ef18c6fa">More...</a><br /></td></tr>
<tr class="separator:gafc350a85607c66c7e8ceb616ef18c6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e7757d9187b0f6cc8ea8d503928b909"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1e7757d9187b0f6cc8ea8d503928b909">LUN_Read</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, uint32_t blockAddress, void *data, uint32_t <a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga1e7757d9187b0f6cc8ea8d503928b909"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads data from a LUN, starting at the specified block address.  <a href="#ga1e7757d9187b0f6cc8ea8d503928b909">More...</a><br /></td></tr>
<tr class="separator:ga1e7757d9187b0f6cc8ea8d503928b909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f8ad39249cd0f7dc9992a7ff44ba164"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga6f8ad39249cd0f7dc9992a7ff44ba164">SBCLunIsReady</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun)</td></tr>
<tr class="memdesc:ga6f8ad39249cd0f7dc9992a7ff44ba164"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the LUN is ready.  <a href="#ga6f8ad39249cd0f7dc9992a7ff44ba164">More...</a><br /></td></tr>
<tr class="separator:ga6f8ad39249cd0f7dc9992a7ff44ba164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaedd02c4c2e4224d76f3b5dc363abd546"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaedd02c4c2e4224d76f3b5dc363abd546">SBCLunCanBeWritten</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun)</td></tr>
<tr class="memdesc:gaedd02c4c2e4224d76f3b5dc363abd546"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the LUN can write.  <a href="#gaedd02c4c2e4224d76f3b5dc363abd546">More...</a><br /></td></tr>
<tr class="separator:gaedd02c4c2e4224d76f3b5dc363abd546"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7e5d6c7f2b4cece7084910e9567508a3"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga7e5d6c7f2b4cece7084910e9567508a3">SBC_Write10</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:ga7e5d6c7f2b4cece7084910e9567508a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a WRITE (10) command on the specified LUN.  <a href="#ga7e5d6c7f2b4cece7084910e9567508a3">More...</a><br /></td></tr>
<tr class="separator:ga7e5d6c7f2b4cece7084910e9567508a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabc88802a5167eed1f5955df898b6c6bb"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gabc88802a5167eed1f5955df898b6c6bb">SBC_Read10</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:gabc88802a5167eed1f5955df898b6c6bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a READ (10) command on specified LUN.  <a href="#gabc88802a5167eed1f5955df898b6c6bb">More...</a><br /></td></tr>
<tr class="separator:gabc88802a5167eed1f5955df898b6c6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a83a973dc2e5ef692d4ad611e133d9b"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga3a83a973dc2e5ef692d4ad611e133d9b">SBC_ReadCapacity10</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:ga3a83a973dc2e5ef692d4ad611e133d9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a READ CAPACITY (10) command.  <a href="#ga3a83a973dc2e5ef692d4ad611e133d9b">More...</a><br /></td></tr>
<tr class="separator:ga3a83a973dc2e5ef692d4ad611e133d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga534e8d604ba59b34433ff12882051b5b"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga534e8d604ba59b34433ff12882051b5b">SBC_Inquiry</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:ga534e8d604ba59b34433ff12882051b5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles an INQUIRY command.  <a href="#ga534e8d604ba59b34433ff12882051b5b">More...</a><br /></td></tr>
<tr class="separator:ga534e8d604ba59b34433ff12882051b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae808f0750c1ee2fb84d96304b19a3a3a"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae808f0750c1ee2fb84d96304b19a3a3a">SBC_RequestSense</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:gae808f0750c1ee2fb84d96304b19a3a3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a REQUEST SENSE command.  <a href="#gae808f0750c1ee2fb84d96304b19a3a3a">More...</a><br /></td></tr>
<tr class="separator:gae808f0750c1ee2fb84d96304b19a3a3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga114a8851b201e26f5cda18ee7077d6ef"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga114a8851b201e26f5cda18ee7077d6ef">SBC_ModeSense6</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:ga114a8851b201e26f5cda18ee7077d6ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a MODE SENSE (6) command.  <a href="#ga114a8851b201e26f5cda18ee7077d6ef">More...</a><br /></td></tr>
<tr class="separator:ga114a8851b201e26f5cda18ee7077d6ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10405eee28a632003271be1e399d4150"><td class="memItemLeft" align="right" valign="top">static unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga10405eee28a632003271be1e399d4150">SBC_TestUnitReady</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun)</td></tr>
<tr class="memdesc:ga10405eee28a632003271be1e399d4150"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs a TEST UNIT READY COMMAND command.  <a href="#ga10405eee28a632003271be1e399d4150">More...</a><br /></td></tr>
<tr class="separator:ga10405eee28a632003271be1e399d4150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6259d674a30286b49d79ffa89b44e809"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga6259d674a30286b49d79ffa89b44e809">SBC_UpdateSenseData</a> (<a class="el" href="struct_s_b_c_request_sense_data.xhtml">SBCRequestSenseData</a> *requestSenseData, unsigned char senseKey, unsigned char additionalSenseCode, unsigned char additionalSenseCodeQualifier)</td></tr>
<tr class="memdesc:ga6259d674a30286b49d79ffa89b44e809"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the sense data of a LUN with the given key and codes.  <a href="#ga6259d674a30286b49d79ffa89b44e809">More...</a><br /></td></tr>
<tr class="separator:ga6259d674a30286b49d79ffa89b44e809"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a08f011fbfff2f3a419b28bb6d14b16"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2a08f011fbfff2f3a419b28bb6d14b16">SBC_GetCommandInformation</a> (void *command, unsigned int *<a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, unsigned char *type, <a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun)</td></tr>
<tr class="memdesc:ga2a08f011fbfff2f3a419b28bb6d14b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return information about the transfer length and direction expected by the device for a particular command.  <a href="#ga2a08f011fbfff2f3a419b28bb6d14b16">More...</a><br /></td></tr>
<tr class="separator:ga2a08f011fbfff2f3a419b28bb6d14b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga64df1e5184c755694de288f6c5dc0dc0"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga64df1e5184c755694de288f6c5dc0dc0">SBC_ProcessCommand</a> (<a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *lun, <a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *commandState)</td></tr>
<tr class="memdesc:ga64df1e5184c755694de288f6c5dc0dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes a SBC command by dispatching it to a subfunction.  <a href="#ga64df1e5184c755694de288f6c5dc0dc0">More...</a><br /></td></tr>
<tr class="separator:ga64df1e5184c755694de288f6c5dc0dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5ed4de61630e1143e85a4c352ab467d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa5ed4de61630e1143e85a4c352ab467d">MSDDriver_Initialize</a> (const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors, <a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *luns, uint8_t numLuns)</td></tr>
<tr class="separator:gaa5ed4de61630e1143e85a4c352ab467d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga91359cbb4f930c74513a69d55fd172ff"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga91359cbb4f930c74513a69d55fd172ff">MSDDriver_StateMachine</a> (void)</td></tr>
<tr class="memdesc:ga91359cbb4f930c74513a69d55fd172ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">State machine for the MSD driver.  <a href="#ga91359cbb4f930c74513a69d55fd172ff">More...</a><br /></td></tr>
<tr class="separator:ga91359cbb4f930c74513a69d55fd172ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad18555120a738777ca87a6c6a45fc43b"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gad18555120a738777ca87a6c6a45fc43b">MED_IsMappedRDSupported</a> (void *pMed)</td></tr>
<tr class="separator:gad18555120a738777ca87a6c6a45fc43b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae549ae32f073c7a21e57599edd3abc37"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae549ae32f073c7a21e57599edd3abc37">MED_IsMappedWRSupported</a> (void *pMed)</td></tr>
<tr class="separator:gae549ae32f073c7a21e57599edd3abc37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafeb7ba2e26fafad5775d2016bb16859b"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafeb7ba2e26fafad5775d2016bb16859b">MED_GetMappedAddress</a> (void *pMed, uint32_t dwBlk)</td></tr>
<tr class="separator:gafeb7ba2e26fafad5775d2016bb16859b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga867474ae7cc0e0cda18beb42ccbf894a"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga867474ae7cc0e0cda18beb42ccbf894a">MED_IsBusy</a> (void *pMed)</td></tr>
<tr class="separator:ga867474ae7cc0e0cda18beb42ccbf894a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga761b94f274dc5a85acd20c0b33089d17"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga761b94f274dc5a85acd20c0b33089d17">MED_IsProtected</a> (void *pMed)</td></tr>
<tr class="separator:ga761b94f274dc5a85acd20c0b33089d17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade89a430e561d4e82d34aabe4f51b248"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gade89a430e561d4e82d34aabe4f51b248">MED_GetState</a> (void *pMed)</td></tr>
<tr class="separator:gade89a430e561d4e82d34aabe4f51b248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5944997ebb6926907d5c9d86e63b9fcf"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga5944997ebb6926907d5c9d86e63b9fcf">MED_GetBlockSize</a> (void *pMed)</td></tr>
<tr class="separator:ga5944997ebb6926907d5c9d86e63b9fcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48387b2d0f9f8c461b9ba339639ac406"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga48387b2d0f9f8c461b9ba339639ac406">MED_GetSize</a> (void *pMed)</td></tr>
<tr class="separator:ga48387b2d0f9f8c461b9ba339639ac406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e0f572223cf7f7147d5618dab7b0d9e"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga1e0f572223cf7f7147d5618dab7b0d9e">MED_Write</a> (void *pMed, uint32_t dwAddr, void *pData, uint32_t dwLen, <a class="el" href="group__usbd__msd.xhtml#gae95c60e9147b517aa03473391d1f3754">fMEDCallback</a> fCallback, void *pArg)</td></tr>
<tr class="separator:ga1e0f572223cf7f7147d5618dab7b0d9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb7485df0b9484b2e9dd4fb0988a2d48"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gafb7485df0b9484b2e9dd4fb0988a2d48">MED_Read</a> (void *pMed, uint32_t dwAddr, void *pData, uint32_t dwLen, <a class="el" href="group__usbd__msd.xhtml#gae95c60e9147b517aa03473391d1f3754">fMEDCallback</a> fCallback, void *pArg)</td></tr>
<tr class="separator:gafb7485df0b9484b2e9dd4fb0988a2d48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae372dfa8bac0695097922c875723b861"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gae372dfa8bac0695097922c875723b861">MED_Flush</a> (void *pMed)</td></tr>
<tr class="separator:gae372dfa8bac0695097922c875723b861"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga384638d07384b7d12bfd2ba2f830dff8"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a></td></tr>
<tr class="memdesc:ga384638d07384b7d12bfd2ba2f830dff8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mass storage driver device descriptor.  <a href="#ga384638d07384b7d12bfd2ba2f830dff8">More...</a><br /></td></tr>
<tr class="separator:ga384638d07384b7d12bfd2ba2f830dff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7740842e49c598f4c0876e84ced67a1c"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a></td></tr>
<tr class="memdesc:ga7740842e49c598f4c0876e84ced67a1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Device qualifier descriptor (Necessary to pass USB test).  <a href="#ga7740842e49c598f4c0876e84ced67a1c">More...</a><br /></td></tr>
<tr class="separator:ga7740842e49c598f4c0876e84ced67a1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga775b8e40d576694278054e10c4bdef89"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga775b8e40d576694278054e10c4bdef89">configurationDescriptorsFS</a></td></tr>
<tr class="memdesc:ga775b8e40d576694278054e10c4bdef89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Full-speed configuration descriptor.  <a href="#ga775b8e40d576694278054e10c4bdef89">More...</a><br /></td></tr>
<tr class="separator:ga775b8e40d576694278054e10c4bdef89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38878f7aa90d279c13162205f150c4d5"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga38878f7aa90d279c13162205f150c4d5">otherSpeedDescriptorsFS</a></td></tr>
<tr class="memdesc:ga38878f7aa90d279c13162205f150c4d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Full-speed other speed configuration descriptor.  <a href="#ga38878f7aa90d279c13162205f150c4d5">More...</a><br /></td></tr>
<tr class="separator:ga38878f7aa90d279c13162205f150c4d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab759a4f5d46372184123e1d046a0824e"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gab759a4f5d46372184123e1d046a0824e">configurationDescriptorsHS</a></td></tr>
<tr class="memdesc:gab759a4f5d46372184123e1d046a0824e"><td class="mdescLeft">&#160;</td><td class="mdescRight">High-speed configuration descriptor.  <a href="#gab759a4f5d46372184123e1d046a0824e">More...</a><br /></td></tr>
<tr class="separator:gab759a4f5d46372184123e1d046a0824e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad17cbfce6da64ea29afa63e11a7e02cd"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gad17cbfce6da64ea29afa63e11a7e02cd">otherSpeedDescriptorsHS</a></td></tr>
<tr class="memdesc:gad17cbfce6da64ea29afa63e11a7e02cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">High-speed other speed configuration descriptor.  <a href="#gad17cbfce6da64ea29afa63e11a7e02cd">More...</a><br /></td></tr>
<tr class="separator:gad17cbfce6da64ea29afa63e11a7e02cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac58469be2fa2542b3c9e5160846177e4"><td class="memItemLeft" align="right" valign="top">static const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gac58469be2fa2542b3c9e5160846177e4">languageIdDescriptor</a> []</td></tr>
<tr class="memdesc:gac58469be2fa2542b3c9e5160846177e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Language ID string descriptor.  <a href="#gac58469be2fa2542b3c9e5160846177e4">More...</a><br /></td></tr>
<tr class="separator:gac58469be2fa2542b3c9e5160846177e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2af674d5c88b85ff120d12c8c0ab6748"><td class="memItemLeft" align="right" valign="top">static const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga2af674d5c88b85ff120d12c8c0ab6748">manufacturerDescriptor</a> []</td></tr>
<tr class="memdesc:ga2af674d5c88b85ff120d12c8c0ab6748"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manufacturer string descriptor.  <a href="#ga2af674d5c88b85ff120d12c8c0ab6748">More...</a><br /></td></tr>
<tr class="separator:ga2af674d5c88b85ff120d12c8c0ab6748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b20dfbb20cddcd882cb807a6dd8319f"><td class="memItemLeft" align="right" valign="top">static const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga4b20dfbb20cddcd882cb807a6dd8319f">productDescriptor</a> []</td></tr>
<tr class="memdesc:ga4b20dfbb20cddcd882cb807a6dd8319f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Product string descriptor.  <a href="#ga4b20dfbb20cddcd882cb807a6dd8319f">More...</a><br /></td></tr>
<tr class="separator:ga4b20dfbb20cddcd882cb807a6dd8319f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53eb66114aeac0731761be191d586fca"><td class="memItemLeft" align="right" valign="top">static const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga53eb66114aeac0731761be191d586fca">serialNumberDescriptor</a> []</td></tr>
<tr class="memdesc:ga53eb66114aeac0731761be191d586fca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serial number string descriptor.  <a href="#ga53eb66114aeac0731761be191d586fca">More...</a><br /></td></tr>
<tr class="separator:ga53eb66114aeac0731761be191d586fca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="memItemLeft" align="right" valign="top">static const unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a> []</td></tr>
<tr class="memdesc:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of all string descriptors used.  <a href="#ga5af83d39e0236d7188ba8e18b3c9a7c6">More...</a><br /></td></tr>
<tr class="separator:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82b351721c0ee88c194279f372c96b19"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga82b351721c0ee88c194279f372c96b19">msdDriverDescriptors</a></td></tr>
<tr class="memdesc:ga82b351721c0ee88c194279f372c96b19"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of the standard descriptors used by the Mass Storage driver.  <a href="#ga82b351721c0ee88c194279f372c96b19">More...</a><br /></td></tr>
<tr class="separator:ga82b351721c0ee88c194279f372c96b19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29799f0e9facdf240e5f86f685633780"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usbd__msd.xhtml#ga920fd6cca4a9cfc02c44fb7c79e4847b">SBCInquiryData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#ga29799f0e9facdf240e5f86f685633780">inquiryData</a></td></tr>
<tr class="memdesc:ga29799f0e9facdf240e5f86f685633780"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inquiry data to return to the host for the Lun.  <a href="#ga29799f0e9facdf240e5f86f685633780">More...</a><br /></td></tr>
<tr class="separator:ga29799f0e9facdf240e5f86f685633780"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1088ff492957dc716d70e2f10ab6f1d"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__msd.xhtml#gaa1088ff492957dc716d70e2f10ab6f1d">modeParameterHeader6</a></td></tr>
<tr class="memdesc:gaa1088ff492957dc716d70e2f10ab6f1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Header for the mode pages data.  <a href="#gaa1088ff492957dc716d70e2f10ab6f1d">More...</a><br /></td></tr>
<tr class="separator:gaa1088ff492957dc716d70e2f10ab6f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Implement a single interface device with single MS function in. </p>
<p>Implements Massstorage Function for USB device.</p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga88ad7c3615be60b0de0bd9b868eabf0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga88ad7c3615be60b0de0bd9b868eabf0d">&sect;&nbsp;</a></span>DEFAULT_LUN_BLOCK_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_LUN_BLOCK_SIZE&#160;&#160;&#160;512</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default LUN block size in bytes. </p>

</div>
</div>
<a id="ga62ae52efc0c28233c82120a00ff0929e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga62ae52efc0c28233c82120a00ff0929e">&sect;&nbsp;</a></span>LUN_CHANGED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_CHANGED&#160;&#160;&#160;0x10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Media of LUN is changed. </p>

</div>
</div>
<a id="ga813d6be81e1a7efa0d874376f5be6960"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga813d6be81e1a7efa0d874376f5be6960">&sect;&nbsp;</a></span>LUN_EJECTED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_EJECTED&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>LUN is ejected by host. </p>

</div>
</div>
<a id="ga8c00e4aa0ca9ddf02eed964985d20d17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8c00e4aa0ca9ddf02eed964985d20d17">&sect;&nbsp;</a></span>LUN_NOT_PRESENT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_NOT_PRESENT&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Media of LUN is removed. </p>

</div>
</div>
<a id="ga8e4c7bd61d8f3a7f8f7a95d0927ebdad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e4c7bd61d8f3a7f8f7a95d0927ebdad">&sect;&nbsp;</a></span>LUN_READY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_READY&#160;&#160;&#160;0x11</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Media of LUN is ready. </p>

</div>
</div>
<a id="gae7de66649877359f888c22120cef02e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae7de66649877359f888c22120cef02e6">&sect;&nbsp;</a></span>LUN_STATUS_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_STATUS_ERROR&#160;&#160;&#160;0x02</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>LUN RC: error. </p>

</div>
</div>
<a id="gaa2e3beccadbf24e3dace7e6ce87d6833"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2e3beccadbf24e3dace7e6ce87d6833">&sect;&nbsp;</a></span>LUN_STATUS_SUCCESS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_STATUS_SUCCESS&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>LUN RC: success. </p>

</div>
</div>
<a id="ga7f505dc4dc815d9c00f4bf45215a5bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f505dc4dc815d9c00f4bf45215a5bff">&sect;&nbsp;</a></span>LUN_TRANS_READY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LUN_TRANS_READY&#160;&#160;&#160;<a class="el" href="group__usbd__msd.xhtml#ga62ae52efc0c28233c82120a00ff0929e">LUN_CHANGED</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>LUN Not Ready to Ready transition. </p>

</div>
</div>
<a id="ga1ebdf6c1c924798bf4e0fbe4c7ba9973"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ebdf6c1c924798bf4e0fbe4c7ba9973">&sect;&nbsp;</a></span>MED_STATE_BUSY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MED_STATE_BUSY&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga14b96d34d6d4467303b8df8c2bb0b846"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga14b96d34d6d4467303b8df8c2bb0b846">&sect;&nbsp;</a></span>MED_STATE_READY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MED_STATE_READY&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2bee784885eede5311a9aeb574bdc25a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2bee784885eede5311a9aeb574bdc25a">&sect;&nbsp;</a></span>MED_STATUS_SUCCESS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MED_STATUS_SUCCESS&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3acffbd305ee72dcd4593c0d8af64a4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3acffbd305ee72dcd4593c0d8af64a4f">&sect;&nbsp;</a></span>MIN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((a &lt; b) ? a : b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the minimum between two values. </p>

</div>
</div>
<a id="ga73efc8e5f6c52233931de0f792e4d44f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga73efc8e5f6c52233931de0f792e4d44f">&sect;&nbsp;</a></span>MSD_BULK_ONLY_RESET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSD_BULK_ONLY_RESET&#160;&#160;&#160;0xFF</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the mass storage device and its associated interface. </p>

</div>
</div>
<a id="ga058396b6f11778e38488216afe4535f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga058396b6f11778e38488216afe4535f9">&sect;&nbsp;</a></span>MSD_GET_MAX_LUN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSD_GET_MAX_LUN&#160;&#160;&#160;0xFE</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the maximum LUN number supported by the device. </p>

</div>
</div>
<a id="ga75b6f30b2ccbe61e959a2493236c6bb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75b6f30b2ccbe61e959a2493236c6bb6">&sect;&nbsp;</a></span>MSDIO_ABORT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_ABORT&#160;&#160;&#160;5</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Abort, to abort the process. </p>

</div>
</div>
<a id="ga9793bbace74601c1f3d366d00b965ecd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9793bbace74601c1f3d366d00b965ecd">&sect;&nbsp;</a></span>MSDIO_DONE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_DONE&#160;&#160;&#160;6</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Done, finish without error. </p>

</div>
</div>
<a id="ga2b352a9201c842f2f5c4617869ea28a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b352a9201c842f2f5c4617869ea28a4">&sect;&nbsp;</a></span>MSDIO_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_ERROR&#160;&#160;&#160;7</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error, any error happens. </p>

</div>
</div>
<a id="gabc9e375ccb765294f0c34c1e491ea235"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabc9e375ccb765294f0c34c1e491ea235">&sect;&nbsp;</a></span>MSDIO_IDLE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_IDLE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Idle state, do nothing. </p>

</div>
</div>
<a id="ga850f49aa6ca2cfc21f18197d5ad415ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga850f49aa6ca2cfc21f18197d5ad415ac">&sect;&nbsp;</a></span>MSDIO_NEXT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_NEXT&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Next, to check if the next block can be performed. </p>

</div>
</div>
<a id="gaf32a4212021960c2617812d21eee7f94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf32a4212021960c2617812d21eee7f94">&sect;&nbsp;</a></span>MSDIO_PAUSE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_PAUSE&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pause, to pause the process for buffer full or null. </p>

</div>
</div>
<a id="gae6aab0e7b6b4ed7a5cb7ff4736c01450"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae6aab0e7b6b4ed7a5cb7ff4736c01450">&sect;&nbsp;</a></span>MSDIO_READ10_CHUNK_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_READ10_CHUNK_SIZE&#160;&#160;&#160;(128 * 512)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>FIFO offset before USB transmit start. </p>
<p>FIFO trunk size (in each transfer, large amount of data) </p>

</div>
</div>
<a id="ga3b3ebac54e5cd2ebe56df2425973cef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3b3ebac54e5cd2ebe56df2425973cef1">&sect;&nbsp;</a></span>MSDIO_START</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_START&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start, to start IO operation. </p>

</div>
</div>
<a id="gaa3f195df999f46ee03bd946c87667be3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa3f195df999f46ee03bd946c87667be3">&sect;&nbsp;</a></span>MSDIO_WAIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_WAIT&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait, waiting for IO operation done. </p>

</div>
</div>
<a id="ga151785544a5aadbb2547384e3db8a6a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga151785544a5aadbb2547384e3db8a6a1">&sect;&nbsp;</a></span>MSDIO_WRITE10_CHUNK_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIO_WRITE10_CHUNK_SIZE&#160;&#160;&#160;(128 * 512)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab6f2982e14b67f3e8297a0db911e2df6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab6f2982e14b67f3e8297a0db911e2df6">&sect;&nbsp;</a></span>MSDIOFifo_IncNdx</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSDIOFifo_IncNdx</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">ndx, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">sectSize, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">bufSize&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">if</span> ((ndx) &gt;= (bufSize) - (sectSize)) (ndx) = 0; \</div><div class="line">    else (ndx) += (sectSize)</div></div><!-- fragment -->
</div>
</div>
<a id="ga28c01bfb597324856a95fcc752984c8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga28c01bfb597324856a95fcc752984c8f">&sect;&nbsp;</a></span>SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MEDIUM TYPE field value for direct-access block devices. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r06.pdf - Section 6.3.1 </dd></dl>

</div>
</div>
<a id="ga9abc7547eee7b3a8f8f37a8c61a98409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9abc7547eee7b3a8f8f37a8c61a98409">&sect;&nbsp;</a></span>SBC_MRIE_ASYNCHRONOUS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_ASYNCHRONOUS&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab62dfdfd1f3b3e05324c7425be4f0a78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab62dfdfd1f3b3e05324c7425be4f0a78">&sect;&nbsp;</a></span>SBC_MRIE_COND_GENERATE_RECOVERED_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_COND_GENERATE_RECOVERED_ERROR&#160;&#160;&#160;0x03</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa88a4a4c1bf1f19f969a8fdb9fb9a59f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa88a4a4c1bf1f19f969a8fdb9fb9a59f">&sect;&nbsp;</a></span>SBC_MRIE_GENERATE_NO_SENSE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_GENERATE_NO_SENSE&#160;&#160;&#160;0x05</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga4cf09874feda25fad44312c7b8514665"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4cf09874feda25fad44312c7b8514665">&sect;&nbsp;</a></span>SBC_MRIE_GENERATE_UNIT_ATTENTION</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_GENERATE_UNIT_ATTENTION&#160;&#160;&#160;0x02</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga5f558f8a8933fdb43888fcfd5eaf071d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5f558f8a8933fdb43888fcfd5eaf071d">&sect;&nbsp;</a></span>SBC_MRIE_NO_REPORTING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_NO_REPORTING&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MRIE field values. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r06.pdf - Section 7.4.11 - Table 286 </dd></dl>

</div>
</div>
<a id="gad14b256b75c667069a5ff24bdab2a514"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad14b256b75c667069a5ff24bdab2a514">&sect;&nbsp;</a></span>SBC_MRIE_ON_REQUEST</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_ON_REQUEST&#160;&#160;&#160;0x06</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga6a721470fd2ce7d9a1428840d7f516b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6a721470fd2ce7d9a1428840d7f516b7">&sect;&nbsp;</a></span>SBC_MRIE_UNCOND_GENERATE_RECOVERED_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_MRIE_UNCOND_GENERATE_RECOVERED_ERROR&#160;&#160;&#160;0x04</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac50958810a8d30038f835e141187211c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac50958810a8d30038f835e141187211c">&sect;&nbsp;</a></span>SBC_PAGE_INFORMATIONAL_EXCEPTIONS_CONTROL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_PAGE_INFORMATIONAL_EXCEPTIONS_CONTROL&#160;&#160;&#160;0x1C</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga62a502a991d32f35c3093faf1e2c4630"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga62a502a991d32f35c3093faf1e2c4630">&sect;&nbsp;</a></span>SBC_PAGE_READ_WRITE_ERROR_RECOVERY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_PAGE_READ_WRITE_ERROR_RECOVERY&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Supported mode pages. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r06.pdf - Section 6.3.1 - Table 115 </dd></dl>

</div>
</div>
<a id="ga201fe8b5a07cb6ee0cc48ec2a199d4f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga201fe8b5a07cb6ee0cc48ec2a199d4f7">&sect;&nbsp;</a></span>SBC_PAGE_RETURN_ALL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_PAGE_RETURN_ALL&#160;&#160;&#160;0x3F</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gad8b67e8e6acb10013c6babac7a7ca19c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8b67e8e6acb10013c6babac7a7ca19c">&sect;&nbsp;</a></span>SBC_PAGE_VENDOR_SPECIFIC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_PAGE_VENDOR_SPECIFIC&#160;&#160;&#160;0x00</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga59a72faa2e6668562b83b4a3671c4544"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59a72faa2e6668562b83b4a3671c4544">&sect;&nbsp;</a></span>SBC_SPC_VERSION_4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_SPC_VERSION_4&#160;&#160;&#160;0x06</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Version value for the SBC-3 specification. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.4.2 - Table 85 </dd></dl>

</div>
</div>
<a id="ga432939e03f94f45838e6f1c7655f0ed0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga432939e03f94f45838e6f1c7655f0ed0">&sect;&nbsp;</a></span>SBC_TPGS_ASYMMETRIC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_TPGS_ASYMMETRIC&#160;&#160;&#160;0x1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2a2060f6bc7d9eb4b29f9414b1ad8e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2a2060f6bc7d9eb4b29f9414b1ad8e85">&sect;&nbsp;</a></span>SBC_TPGS_BOTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_TPGS_BOTH&#160;&#160;&#160;0x3</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3bb206d0754049b55a619551bebc291a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3bb206d0754049b55a619551bebc291a">&sect;&nbsp;</a></span>SBC_TPGS_NONE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_TPGS_NONE&#160;&#160;&#160;0x0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Values for the TPGS field returned in INQUIRY data. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.4.2 - Table 86 </dd></dl>

</div>
</div>
<a id="gaf1f5df8119e93b86779ce9e2b7eace88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf1f5df8119e93b86779ce9e2b7eace88">&sect;&nbsp;</a></span>SBC_TPGS_SYMMETRIC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_TPGS_SYMMETRIC&#160;&#160;&#160;0x2</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab903bf701bddd0f88bbbe6e5863956d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab903bf701bddd0f88bbbe6e5863956d2">&sect;&nbsp;</a></span>SBC_VERSION_DESCRIPTOR_SBC_3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SBC_VERSION_DESCRIPTOR_SBC_3&#160;&#160;&#160;0x04C0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Version descriptor value for the SBC-3 specification. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.4.2 - Table 87 </dd></dl>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gae95c60e9147b517aa03473391d1f3754"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae95c60e9147b517aa03473391d1f3754">&sect;&nbsp;</a></span>fMEDCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* fMEDCallback) (void *pArg, uint8_t bStatus, uint32_t dwTransferred, uint32_t dwRemaining)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabd51988f2319832141acab2ad3380417"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabd51988f2319832141acab2ad3380417">&sect;&nbsp;</a></span>MSDCommandState</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Status of an executing command. </p>
<dl class="section see"><dt>See also</dt><dd>MSDCbw </dd>
<dd>
MSDCsw <h2><a class="el" href="group__usbd__msd.xhtml#ga95052e184a89fdee9b1ad8071fbad1a6" title="Structure for holding the result of a USB transfer. ">MSDTransfer</a> </h2>
</dd></dl>

</div>
</div>
<a id="ga0171bc05a355956dbd8ac5ff27d9a8c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0171bc05a355956dbd8ac5ff27d9a8c8">&sect;&nbsp;</a></span>MSDConfigurationDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List of configuration descriptors used by a Mass Storage device driver. </p>

</div>
</div>
<a id="ga647aebe157ea809e2cab6d5bb2c60742"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga647aebe157ea809e2cab6d5bb2c60742">&sect;&nbsp;</a></span>MSDConfigurationDescriptorsOTG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga647aebe157ea809e2cab6d5bb2c60742">MSDConfigurationDescriptorsOTG</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List of configuration descriptors used by a Mass Storage device driver, with OTG support. </p>

</div>
</div>
<a id="ga525fbf27f2d97cbe201c2bfef003376e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga525fbf27f2d97cbe201c2bfef003376e">&sect;&nbsp;</a></span>MSDDriver</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MSD driver state variables. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd>
<dd>
<a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>

</div>
</div>
<a id="ga799d48ff36bcf55e03c810b503dc3f9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga799d48ff36bcf55e03c810b503dc3f9c">&sect;&nbsp;</a></span>MSDIOFifo</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___m_s_d_i_o_fifo.xhtml">_MSDIOFifo</a>  <a class="el" href="group__usbd__msd.xhtml#ga799d48ff36bcf55e03c810b503dc3f9c">MSDIOFifo</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>FIFO buffer for READ/WRITE (disk) operation of a mass storage device. </p>

</div>
</div>
<a id="gafd8166360b93b7b4f500cb027aee4882"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd8166360b93b7b4f500cb027aee4882">&sect;&nbsp;</a></span>MSDLunDataMonitorFunction</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* MSDLunDataMonitorFunction) (uint8_t flowDirection, uint32_t dataLength, uint32_t fifoNullCount, uint32_t fifoFullCount)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mass storage device data flow monitor function type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">flowDirection</td><td>1 - device to host (READ10) 0 - host to device (WRITE10) </td></tr>
    <tr><td class="paramname">dataLength</td><td>Length of data transferred in bytes. </td></tr>
    <tr><td class="paramname">fifoNullCount</td><td>Times that FIFO is NULL to wait </td></tr>
    <tr><td class="paramname">fifoFullCount</td><td>Times that FIFO is filled to wait </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gad8a41fa077818a00e0010cecc2bca844"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8a41fa077818a00e0010cecc2bca844">&sect;&nbsp;</a></span>MSDParseData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___m_s_d_parse_data.xhtml">_MSDParseData</a>  <a class="el" href="group__usbd__msd.xhtml#gad8a41fa077818a00e0010cecc2bca844">MSDParseData</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse data extension. </p>

</div>
</div>
<a id="ga95052e184a89fdee9b1ad8071fbad1a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga95052e184a89fdee9b1ad8071fbad1a6">&sect;&nbsp;</a></span>MSDTransfer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga95052e184a89fdee9b1ad8071fbad1a6">MSDTransfer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for holding the result of a USB transfer. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="_s_b_c_methods_8c.xhtml#ga65e2aa51e755428df116ecc89b7aa996" title="This function is to be used as a callback for USB or LUN transfers. ">MSDDriver_Callback</a> </dd></dl>

</div>
</div>
<a id="gaad38c8e20a03713adc742ae2f13435ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaad38c8e20a03713adc742ae2f13435ea">&sect;&nbsp;</a></span>PMSDIOFifo</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___m_s_d_i_o_fifo.xhtml">_MSDIOFifo</a> * <a class="el" href="group__usbd__msd.xhtml#gaad38c8e20a03713adc742ae2f13435ea">PMSDIOFifo</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga365f4de3dd00eea65dd57eda0d9268af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga365f4de3dd00eea65dd57eda0d9268af">&sect;&nbsp;</a></span>SBCCommand</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga365f4de3dd00eea65dd57eda0d9268af">SBCCommand</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generic structure for holding information about SBC commands. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__usbd__msd.xhtml#gacedaebdfa8621aa6b54fded26c498be3" title="Structure for the INQUIRY command. ">SBCInquiry</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#ga3ad0cd49952a9240a482163342cd0934" title="Data structure for the READ (10) command. ">SBCRead10</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#ga9f1114fa108022c065f43c164b69518c" title="Structure for the READ CAPACITY (10) command. ">SBCReadCapacity10</a> </dd>
<dd>
<a class="el" href="struct_s_b_c_request_sense.xhtml">SBCRequestSense</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#ga2a9f03542de1bc245b372e27d2f07234" title="SBCTestUnitReady Data structure for the TEST UNIT READY command. ">SBCTestUnitReady</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gae94d5531ee67bdfb0633f2d3708b7116" title="Structure for the WRITE (10) command. ">SBCWrite10</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gaab64333c3dc55088fd774f0d4c6cf9d2" title="Structure for the PREVENT/ALLOW MEDIUM REMOVAL command. ">SBCMediumRemoval</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gafe7c4d8264a53ea48d66df04f72ad677" title="Structure for the MODE SENSE (6) command. ">SBCModeSense6</a> </dd></dl>

</div>
</div>
<a id="ga6899aad509d201b8af39324e219269ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6899aad509d201b8af39324e219269ff">&sect;&nbsp;</a></span>SBCInformationalExceptionsControl</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga6899aad509d201b8af39324e219269ff">SBCInformationalExceptionsControl</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Informational exceptions control mode page. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 7.4.11 - Table 285 </dd></dl>

</div>
</div>
<a id="gacedaebdfa8621aa6b54fded26c498be3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacedaebdfa8621aa6b54fded26c498be3">&sect;&nbsp;</a></span>SBCInquiry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#gacedaebdfa8621aa6b54fded26c498be3">SBCInquiry</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for the INQUIRY command. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.4.1 - Table 81 </dd></dl>

</div>
</div>
<a id="ga920fd6cca4a9cfc02c44fb7c79e4847b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga920fd6cca4a9cfc02c44fb7c79e4847b">&sect;&nbsp;</a></span>SBCInquiryData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga920fd6cca4a9cfc02c44fb7c79e4847b">SBCInquiryData</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard INQUIRY data format returned by the device. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.4.2 - Table 82 </dd></dl>

</div>
</div>
<a id="gaab64333c3dc55088fd774f0d4c6cf9d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab64333c3dc55088fd774f0d4c6cf9d2">&sect;&nbsp;</a></span>SBCMediumRemoval</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#gaab64333c3dc55088fd774f0d4c6cf9d2">SBCMediumRemoval</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for the PREVENT/ALLOW MEDIUM REMOVAL command. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r07.pdf - Section 5.5 - Table 30 </dd></dl>

</div>
</div>
<a id="ga1d68739013bfe7dce642d98264d3bd63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d68739013bfe7dce642d98264d3bd63">&sect;&nbsp;</a></span>SBCModeParameterHeader6</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Header for the data returned after a MODE SENSE (6) command. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 7.4.3 - Table 268 </dd></dl>

</div>
</div>
<a id="gafe7c4d8264a53ea48d66df04f72ad677"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe7c4d8264a53ea48d66df04f72ad677">&sect;&nbsp;</a></span>SBCModeSense6</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#gafe7c4d8264a53ea48d66df04f72ad677">SBCModeSense6</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for the MODE SENSE (6) command. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06 - Section 6.9.1 - Table 98 </dd></dl>

</div>
</div>
<a id="ga3ad0cd49952a9240a482163342cd0934"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3ad0cd49952a9240a482163342cd0934">&sect;&nbsp;</a></span>SBCRead10</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga3ad0cd49952a9240a482163342cd0934">SBCRead10</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Data structure for the READ (10) command. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r07.pdf - Section 5.7 - Table 34 </dd></dl>

</div>
</div>
<a id="ga9f1114fa108022c065f43c164b69518c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f1114fa108022c065f43c164b69518c">&sect;&nbsp;</a></span>SBCReadCapacity10</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga9f1114fa108022c065f43c164b69518c">SBCReadCapacity10</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for the READ CAPACITY (10) command. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r07.pdf - Section 5.11.1 - Table 40 </dd></dl>

</div>
</div>
<a id="ga5998fec6a0f414396c363ab49aa9b5d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5998fec6a0f414396c363ab49aa9b5d6">&sect;&nbsp;</a></span>SBCReadWriteErrorRecovery</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga5998fec6a0f414396c363ab49aa9b5d6">SBCReadWriteErrorRecovery</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read/write error recovery mode page. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r07.pdf - Section 6.3.5 - Table 122 </dd></dl>

</div>
</div>
<a id="ga2a9f03542de1bc245b372e27d2f07234"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2a9f03542de1bc245b372e27d2f07234">&sect;&nbsp;</a></span>SBCTestUnitReady</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___s_b_c_test_unit_ready.xhtml">_SBCTestUnitReady</a>   <a class="el" href="group__usbd__msd.xhtml#ga2a9f03542de1bc245b372e27d2f07234">SBCTestUnitReady</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SBCTestUnitReady Data structure for the TEST UNIT READY command. </p>
<dl class="section see"><dt>See also</dt><dd>spc4r06.pdf - Section 6.34 - Table 192 </dd></dl>

</div>
</div>
<a id="gae94d5531ee67bdfb0633f2d3708b7116"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae94d5531ee67bdfb0633f2d3708b7116">&sect;&nbsp;</a></span>SBCWrite10</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#gae94d5531ee67bdfb0633f2d3708b7116">SBCWrite10</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure for the WRITE (10) command. </p>
<dl class="section see"><dt>See also</dt><dd>sbc3r07.pdf - Section 5.26 - Table 70 </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga745dbddddd85ddbe2c71a9df4c3e38af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga745dbddddd85ddbe2c71a9df4c3e38af">&sect;&nbsp;</a></span>COMPILER_ALIGNED()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COMPILER_ALIGNED </td>
          <td>(</td>
          <td class="paramtype">32&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>MSD Driver instance for device function. </p>

</div>
</div>
<a id="ga1de5a07c184adfb07755a5db1eca7d2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1de5a07c184adfb07755a5db1eca7d2e">&sect;&nbsp;</a></span>LUN_Eject()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t LUN_Eject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Eject the media from a LUN. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the <a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> instance to initialize </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1de5a07c184adfb07755a5db1eca7d2e_cgraph.svg" width="244" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac7fa65f732a998087ab8efeb882cbe89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac7fa65f732a998087ab8efeb882cbe89">&sect;&nbsp;</a></span>LUN_Init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void LUN_Init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>media</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ioBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ioBufferSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>baseAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>protected</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(uint8_t flowDirection, uint32_t dataLength, uint32_t fifoNullCount, uint32_t fifoFullCount)&#160;</td>
          <td class="paramname"><em>dataMonitor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a LUN instance. </p>
<p>Must be invoked at least once even no Media is linked. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the <a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> instance to initialize </td></tr>
    <tr><td class="paramname">media</td><td>Media on which the LUN is constructed, set to 0 to disconnect the Media or initialize an ejected LUN. </td></tr>
    <tr><td class="paramname">ioBuffer</td><td>Pointer to a buffer used for read/write operation and which must be blockSize bytes long. </td></tr>
    <tr><td class="paramname">ioBufferSize</td><td>Size of the allocated IO buffer. </td></tr>
    <tr><td class="paramname">baseAddress</td><td>Base address of the LUN in number of media blocks </td></tr>
    <tr><td class="paramname">size</td><td>Total size of the LUN in number of media blocks </td></tr>
    <tr><td class="paramname">blockSize</td><td>One block of the LUN in number of media blocks </td></tr>
    <tr><td class="paramname">protected</td><td>The LUN area is forced to readonly even the media is writable </td></tr>
    <tr><td class="paramname">dataMonitor</td><td>Pointer to a Monitor Function to analyze the flow of this LUN. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gac7fa65f732a998087ab8efeb882cbe89_cgraph.svg" width="276" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1e7757d9187b0f6cc8ea8d503928b909"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1e7757d9187b0f6cc8ea8d503928b909">&sect;&nbsp;</a></span>LUN_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t LUN_Read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads data from a LUN, starting at the specified block address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to a <a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> instance </td></tr>
    <tr><td class="paramname">blockAddress</td><td>First block address to read </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to a data buffer in which to store the data </td></tr>
    <tr><td class="paramname">length</td><td>Number of blocks to read </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback to invoke when the read finishes </td></tr>
    <tr><td class="paramname">argument</td><td>Optional callback argument. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1e7757d9187b0f6cc8ea8d503928b909_cgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1e7757d9187b0f6cc8ea8d503928b909_icgraph.svg" width="248" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafc350a85607c66c7e8ceb616ef18c6fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafc350a85607c66c7e8ceb616ef18c6fa">&sect;&nbsp;</a></span>LUN_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t LUN_Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes data on the a LUN starting at the specified block address. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to a <a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> instance </td></tr>
    <tr><td class="paramname">blockAddress</td><td>First block address to write </td></tr>
    <tr><td class="paramname">data</td><td>Pointer to the data to write </td></tr>
    <tr><td class="paramname">length</td><td>Number of blocks to write </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback to invoke when the write finishes </td></tr>
    <tr><td class="paramname">argument</td><td>Optional callback argument. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafc350a85607c66c7e8ceb616ef18c6fa_cgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafc350a85607c66c7e8ceb616ef18c6fa_icgraph.svg" width="248" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae372dfa8bac0695097922c875723b861"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae372dfa8bac0695097922c875723b861">&sect;&nbsp;</a></span>MED_Flush()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_Flush </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae372dfa8bac0695097922c875723b861_icgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga5944997ebb6926907d5c9d86e63b9fcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5944997ebb6926907d5c9d86e63b9fcf">&sect;&nbsp;</a></span>MED_GetBlockSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t MED_GetBlockSize </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga5944997ebb6926907d5c9d86e63b9fcf_icgraph.svg" width="420" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafeb7ba2e26fafad5775d2016bb16859b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafeb7ba2e26fafad5775d2016bb16859b">&sect;&nbsp;</a></span>MED_GetMappedAddress()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t MED_GetMappedAddress </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwBlk</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafeb7ba2e26fafad5775d2016bb16859b_icgraph.svg" width="346" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga48387b2d0f9f8c461b9ba339639ac406"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga48387b2d0f9f8c461b9ba339639ac406">&sect;&nbsp;</a></span>MED_GetSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t MED_GetSize </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga48387b2d0f9f8c461b9ba339639ac406_icgraph.svg" width="242" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gade89a430e561d4e82d34aabe4f51b248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gade89a430e561d4e82d34aabe4f51b248">&sect;&nbsp;</a></span>MED_GetState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_GetState </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gade89a430e561d4e82d34aabe4f51b248_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga867474ae7cc0e0cda18beb42ccbf894a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga867474ae7cc0e0cda18beb42ccbf894a">&sect;&nbsp;</a></span>MED_IsBusy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_IsBusy </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga867474ae7cc0e0cda18beb42ccbf894a_icgraph.svg" width="244" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gad18555120a738777ca87a6c6a45fc43b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad18555120a738777ca87a6c6a45fc43b">&sect;&nbsp;</a></span>MED_IsMappedRDSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_IsMappedRDSupported </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gad18555120a738777ca87a6c6a45fc43b_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae549ae32f073c7a21e57599edd3abc37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae549ae32f073c7a21e57599edd3abc37">&sect;&nbsp;</a></span>MED_IsMappedWRSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_IsMappedWRSupported </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae549ae32f073c7a21e57599edd3abc37_icgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga761b94f274dc5a85acd20c0b33089d17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga761b94f274dc5a85acd20c0b33089d17">&sect;&nbsp;</a></span>MED_IsProtected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_IsProtected </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga761b94f274dc5a85acd20c0b33089d17_icgraph.svg" width="264" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafb7485df0b9484b2e9dd4fb0988a2d48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb7485df0b9484b2e9dd4fb0988a2d48">&sect;&nbsp;</a></span>MED_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gae95c60e9147b517aa03473391d1f3754">fMEDCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafb7485df0b9484b2e9dd4fb0988a2d48_icgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1e0f572223cf7f7147d5618dab7b0d9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1e0f572223cf7f7147d5618dab7b0d9e">&sect;&nbsp;</a></span>MED_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t MED_Write </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pMed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwAddr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gae95c60e9147b517aa03473391d1f3754">fMEDCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1e0f572223cf7f7147d5618dab7b0d9e_icgraph.svg" width="235" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1d0b6dc8262b619aa9c0f6a4c47c15bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d0b6dc8262b619aa9c0f6a4c47c15bf">&sect;&nbsp;</a></span>MSDD_GetCommandInformation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void MSDD_GetCommandInformation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_cbw.xhtml">MSCbw</a> *&#160;</td>
          <td class="paramname"><em>cbw</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the expected transfer length and direction (IN, OUT or don't care) from the host point-of-view. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cbw</td><td>Pointer to the CBW to examinate </td></tr>
    <tr><td class="paramname">pLength</td><td>Expected length of command </td></tr>
    <tr><td class="paramname">pType</td><td>Expected direction of command </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1d0b6dc8262b619aa9c0f6a4c47c15bf_icgraph.svg" width="498" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1ef15a39c9d18bb5b326548c04711108"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ef15a39c9d18bb5b326548c04711108">&sect;&nbsp;</a></span>MSDD_PostProcessCommand()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char MSDD_PostProcessCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *&#160;</td>
          <td class="paramname"><em>pMsdDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Post-processes a command given the case identified during the pre-processing step. </p>
<p>Depending on the case, one of the following actions can be done:</p><ul>
<li>Bulk IN endpoint is stalled</li>
<li>Bulk OUT endpoint is stalled</li>
<li>CSW status set to phase error <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to a MSDDriver instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If the device is halted </dd></dl>
</li>
</ul>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1ef15a39c9d18bb5b326548c04711108_cgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1ef15a39c9d18bb5b326548c04711108_icgraph.svg" width="431" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae1fed7a9b3c1308ca161df14f9740718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae1fed7a9b3c1308ca161df14f9740718">&sect;&nbsp;</a></span>MSDD_PreProcessCommand()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char MSDD_PreProcessCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *&#160;</td>
          <td class="paramname"><em>pMsdDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pre-processes a command by checking the differences between the host and device expectations in term of transfer type and length. </p>
<p>Once one of the thirteen cases is identified, the actions to do during the post-processing phase are stored in the dCase variable of the command state. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to a MSDDriver instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the command is supported, false otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae1fed7a9b3c1308ca161df14f9740718_cgraph.svg" width="498" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae1fed7a9b3c1308ca161df14f9740718_icgraph.svg" width="423" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga205b122769aa196e2bfe7eadf30b2519"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga205b122769aa196e2bfe7eadf30b2519">&sect;&nbsp;</a></span>MSDD_ProcessCommand()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char MSDD_ProcessCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *&#160;</td>
          <td class="paramname"><em>pMsdDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Processes the latest command received by the device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to a MSDDriver instance </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the command has been completed, false otherwise. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga205b122769aa196e2bfe7eadf30b2519_cgraph.svg" width="420" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga205b122769aa196e2bfe7eadf30b2519_icgraph.svg" width="403" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac202c092099685d21ac19320311b1d0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac202c092099685d21ac19320311b1d0f">&sect;&nbsp;</a></span>MSDD_StateMachine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDD_StateMachine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga525fbf27f2d97cbe201c2bfef003376e">MSDDriver</a> *&#160;</td>
          <td class="paramname"><em>pMsdDriver</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>State machine for the MSD device driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to a MSDDriver instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gac202c092099685d21ac19320311b1d0f_cgraph.svg" width="431" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gac202c092099685d21ac19320311b1d0f_icgraph.svg" width="416" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga65e2aa51e755428df116ecc89b7aa996"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65e2aa51e755428df116ecc89b7aa996">&sect;&nbsp;</a></span>MSDDriver_Callback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void MSDDriver_Callback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga95052e184a89fdee9b1ad8071fbad1a6">MSDTransfer</a> *&#160;</td>
          <td class="paramname"><em>transfer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>transferred</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>remaining</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is to be used as a callback for USB or LUN transfers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">transfer</td><td>Pointer to the transfer structure to update </td></tr>
    <tr><td class="paramname">status</td><td>Operation result code </td></tr>
    <tr><td class="paramname">transferred</td><td>Number of bytes transferred by the command </td></tr>
    <tr><td class="paramname">remaining</td><td>Number of bytes not transferred </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga65e2aa51e755428df116ecc89b7aa996_icgraph.svg" width="367" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gabfb0d71b88e4e5606d3de432127e9d01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabfb0d71b88e4e5606d3de432127e9d01">&sect;&nbsp;</a></span>MSDDriver_ConfigurationChangeHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDDriver_ConfigurationChangeHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the configuration of the device changes. </p>
<p>Resets the mass storage driver. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to MSDDriver instance. </td></tr>
    <tr><td class="paramname">cfgnum</td><td>New configuration number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gabfb0d71b88e4e5606d3de432127e9d01_cgraph.svg" width="512" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga77b4a730be820934b4e637afa14e6fef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga77b4a730be820934b4e637afa14e6fef">&sect;&nbsp;</a></span>MSDDriver_Initialize() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>pLuns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>numLuns</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the MSD driver and the associated USB driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDescriptors</td><td>Pointer to Descriptors list for MSD Device. </td></tr>
    <tr><td class="paramname">pLuns</td><td>Pointer to a list of LUNs </td></tr>
    <tr><td class="paramname">numLuns</td><td>Number of LUN in list </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga77b4a730be820934b4e637afa14e6fef_cgraph.svg" width="370" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa5ed4de61630e1143e85a4c352ab467d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa5ed4de61630e1143e85a4c352ab467d">&sect;&nbsp;</a></span>MSDDriver_Initialize() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>luns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numLuns</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3fc749f879c284f631bce181e7cfe0eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3fc749f879c284f631bce181e7cfe0eb">&sect;&nbsp;</a></span>MSDDriver_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDDriver_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handler for incoming SETUP requests on default Control endpoint 0. </p>
<p>Standard requests are forwarded to the USBDDriver_RequestHandler method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to MSDDriver instance. </td></tr>
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga3fc749f879c284f631bce181e7cfe0eb_cgraph.svg" width="726" height="100"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga91359cbb4f930c74513a69d55fd172ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga91359cbb4f930c74513a69d55fd172ff">&sect;&nbsp;</a></span>MSDDriver_StateMachine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void MSDDriver_StateMachine </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>State machine for the MSD driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to MSDDriver instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga91359cbb4f930c74513a69d55fd172ff_cgraph.svg" width="444" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafb1268e0849907894c708ccc4ab46fee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb1268e0849907894c708ccc4ab46fee">&sect;&nbsp;</a></span>MSDFunction_Configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDFunction_Configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the configuration of the device changes. </p>
<p>Pass endpoints and resets the mass storage function.  Pointer to the descriptors for function configure.  Length of descriptors in number of bytes. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafb1268e0849907894c708ccc4ab46fee_cgraph.svg" width="398" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gafb1268e0849907894c708ccc4ab46fee_icgraph.svg" width="463" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga462b4263f13e5235a2bedceeaece01cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga462b4263f13e5235a2bedceeaece01cb">&sect;&nbsp;</a></span>MSDFunction_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDFunction_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bInterfaceNb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>pLuns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numLuns</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the MSD driver and the associated USB driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">bInterfaceNb</td><td>Interface number for the function. </td></tr>
    <tr><td class="paramname">pLuns</td><td>Pointer to a list of LUNs </td></tr>
    <tr><td class="paramname">numLuns</td><td>Number of LUN in list </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga462b4263f13e5235a2bedceeaece01cb_cgraph.svg" width="368" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga462b4263f13e5235a2bedceeaece01cb_icgraph.svg" width="398" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa87efba32c907fa095c6f8797d2580db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa87efba32c907fa095c6f8797d2580db">&sect;&nbsp;</a></span>MSDFunction_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t MSDFunction_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handler for incoming SETUP requests on default Control endpoint 0. </p>
<p>Standard requests are forwarded to the USBDDriver_RequestHandler method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pMsdDriver</td><td>Pointer to MSDDriver instance. </td></tr>
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gaa87efba32c907fa095c6f8797d2580db_cgraph.svg" width="759" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gaa87efba32c907fa095c6f8797d2580db_icgraph.svg" width="499" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga63d1031361c1e8a4db44d5bb9e0c309c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga63d1031361c1e8a4db44d5bb9e0c309c">&sect;&nbsp;</a></span>MSDFunction_Reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void MSDFunction_Reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets the state of the MSD driver. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga63d1031361c1e8a4db44d5bb9e0c309c_icgraph.svg" width="419" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga33a2494c76dcc7335a458c79e46975d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga33a2494c76dcc7335a458c79e46975d9">&sect;&nbsp;</a></span>MSDFunction_StateMachine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDFunction_StateMachine </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>State machine for the MSD driver. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga33a2494c76dcc7335a458c79e46975d9_cgraph.svg" width="416" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga33a2494c76dcc7335a458c79e46975d9_icgraph.svg" width="444" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1481efe325e7d17ab334bd283fd24aa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1481efe325e7d17ab334bd283fd24aa6">&sect;&nbsp;</a></span>MSDIOFifo_Init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MSDIOFifo_Init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#ga799d48ff36bcf55e03c810b503dc3f9c">MSDIOFifo</a> *&#160;</td>
          <td class="paramname"><em>pFifo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>bufferSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a MSDIOFifo instance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pFifo</td><td>Pointer to the MSDIOFifo instance to initialize </td></tr>
    <tr><td class="paramname">pBuffer</td><td>Pointer to a buffer used for read/write operation and which must be blockSize bytes aligned. </td></tr>
    <tr><td class="paramname">bufferSize</td><td>Total size of the buffer in bytes </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga1481efe325e7d17ab334bd283fd24aa6_icgraph.svg" width="246" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga2a08f011fbfff2f3a419b28bb6d14b16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2a08f011fbfff2f3a419b28bb6d14b16">&sect;&nbsp;</a></span>SBC_GetCommandInformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char SBC_GetCommandInformation </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return information about the transfer length and direction expected by the device for a particular command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">command</td><td>Pointer to a buffer holding the command to evaluate </td></tr>
    <tr><td class="paramname">length</td><td>Expected length of the data transfer </td></tr>
    <tr><td class="paramname">type</td><td>Expected direction of data transfer </td></tr>
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga2a08f011fbfff2f3a419b28bb6d14b16_cgraph.svg" width="420" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga2a08f011fbfff2f3a419b28bb6d14b16_icgraph.svg" width="484" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga534e8d604ba59b34433ff12882051b5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga534e8d604ba59b34433ff12882051b5b">&sect;&nbsp;</a></span>SBC_Inquiry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_Inquiry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Handles an INQUIRY command. </p>
<p>This function operates asynchronously and must be called multiple times to complete. A result code of MSDDriver_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga534e8d604ba59b34433ff12882051b5b_cgraph.svg" width="308" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga534e8d604ba59b34433ff12882051b5b_icgraph.svg" width="331" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga114a8851b201e26f5cda18ee7077d6ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga114a8851b201e26f5cda18ee7077d6ef">&sect;&nbsp;</a></span>SBC_ModeSense6()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_ModeSense6 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a MODE SENSE (6) command. </p>
<p>This function operates asynchronously and must be called multiple times to complete. A result code of MSDDriver_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga114a8851b201e26f5cda18ee7077d6ef_cgraph.svg" width="348" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga114a8851b201e26f5cda18ee7077d6ef_icgraph.svg" width="371" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga64df1e5184c755694de288f6c5dc0dc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga64df1e5184c755694de288f6c5dc0dc0">&sect;&nbsp;</a></span>SBC_ProcessCommand()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char SBC_ProcessCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processes a SBC command by dispatching it to a subfunction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the affected LUN </td></tr>
    <tr><td class="paramname">commandState</td><td>Pointer to the current command state </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga64df1e5184c755694de288f6c5dc0dc0_cgraph.svg" width="391" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga64df1e5184c755694de288f6c5dc0dc0_icgraph.svg" width="419" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gabc88802a5167eed1f5955df898b6c6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabc88802a5167eed1f5955df898b6c6bb">&sect;&nbsp;</a></span>SBC_Read10()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_Read10 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a READ (10) command on specified LUN. </p>
<p>The data is first read from the media and then sent to the USB host. This function operates asynchronously and must be called multiple times to complete. A result code of MSDDriver_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gabc88802a5167eed1f5955df898b6c6bb_cgraph.svg" width="588" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gabc88802a5167eed1f5955df898b6c6bb_icgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga3a83a973dc2e5ef692d4ad611e133d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3a83a973dc2e5ef692d4ad611e133d9b">&sect;&nbsp;</a></span>SBC_ReadCapacity10()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_ReadCapacity10 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a READ CAPACITY (10) command. </p>
<p>This function operates asynchronously and must be called multiple times to complete. A result code of MSDD_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga3a83a973dc2e5ef692d4ad611e133d9b_cgraph.svg" width="368" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga3a83a973dc2e5ef692d4ad611e133d9b_icgraph.svg" width="391" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae808f0750c1ee2fb84d96304b19a3a3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae808f0750c1ee2fb84d96304b19a3a3a">&sect;&nbsp;</a></span>SBC_RequestSense()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_RequestSense </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a REQUEST SENSE command. </p>
<p>This function operates asynchronously and must be called multiple times to complete. A result code of MSDDriver_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae808f0750c1ee2fb84d96304b19a3a3a_cgraph.svg" width="356" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gae808f0750c1ee2fb84d96304b19a3a3a_icgraph.svg" width="379" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga10405eee28a632003271be1e399d4150"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga10405eee28a632003271be1e399d4150">&sect;&nbsp;</a></span>SBC_TestUnitReady()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_TestUnitReady </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a TEST UNIT READY COMMAND command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga10405eee28a632003271be1e399d4150_cgraph.svg" width="379" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga10405eee28a632003271be1e399d4150_icgraph.svg" width="378" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6259d674a30286b49d79ffa89b44e809"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6259d674a30286b49d79ffa89b44e809">&sect;&nbsp;</a></span>SBC_UpdateSenseData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SBC_UpdateSenseData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_s_b_c_request_sense_data.xhtml">SBCRequestSenseData</a> *&#160;</td>
          <td class="paramname"><em>requestSenseData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>senseKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>additionalSenseCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>additionalSenseCodeQualifier</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates the sense data of a LUN with the given key and codes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">requestSenseData</td><td>Pointer to the sense data to update </td></tr>
    <tr><td class="paramname">senseKey</td><td>Sense key </td></tr>
    <tr><td class="paramname">additionalSenseCode</td><td>Additional sense code </td></tr>
    <tr><td class="paramname">additionalSenseCodeQualifier</td><td>Additional sense code qualifier </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga6259d674a30286b49d79ffa89b44e809_icgraph.svg" width="778" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga7e5d6c7f2b4cece7084910e9567508a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7e5d6c7f2b4cece7084910e9567508a3">&sect;&nbsp;</a></span>SBC_Write10()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBC_Write10 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417">MSDCommandState</a> *&#160;</td>
          <td class="paramname"><em>commandState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs a WRITE (10) command on the specified LUN. </p>
<p>The data to write is first received from the USB host and then actually written on the media. This function operates asynchronously and must be called multiple times to complete. A result code of MSDDriver_STATUS_INCOMPLETE indicates that at least another call of the method is necessary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
    <tr><td class="paramname">commandState</td><td>Current state of the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Operation result code (SUCCESS, ERROR, INCOMPLETE or PARAMETER) </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd>
<dd>
<a class="el" href="group__usbd__msd.xhtml#gabd51988f2319832141acab2ad3380417" title="Status of an executing command. ">MSDCommandState</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga7e5d6c7f2b4cece7084910e9567508a3_cgraph.svg" width="590" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga7e5d6c7f2b4cece7084910e9567508a3_icgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaedd02c4c2e4224d76f3b5dc363abd546"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaedd02c4c2e4224d76f3b5dc363abd546">&sect;&nbsp;</a></span>SBCLunCanBeWritten()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBCLunCanBeWritten </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the LUN can write. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the LUN is ready to be written </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gaedd02c4c2e4224d76f3b5dc363abd546_cgraph.svg" width="560" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_gaedd02c4c2e4224d76f3b5dc363abd546_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6f8ad39249cd0f7dc9992a7ff44ba164"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f8ad39249cd0f7dc9992a7ff44ba164">&sect;&nbsp;</a></span>SBCLunIsReady()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static unsigned char SBCLunIsReady </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_m_s_d_lun.xhtml">MSDLun</a> *&#160;</td>
          <td class="paramname"><em>lun</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the LUN is ready. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lun</td><td>Pointer to the LUN affected by the command </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the LUN is ready to be written </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="struct_m_s_d_lun.xhtml" title="LUN structure. ">MSDLun</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga6f8ad39249cd0f7dc9992a7ff44ba164_cgraph.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__msd_ga6f8ad39249cd0f7dc9992a7ff44ba164_icgraph.svg" width="338" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="ga775b8e40d576694278054e10c4bdef89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga775b8e40d576694278054e10c4bdef89">&sect;&nbsp;</a></span>configurationDescriptorsFS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a> configurationDescriptorsFS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Full-speed configuration descriptor. </p>

</div>
</div>
<a id="gab759a4f5d46372184123e1d046a0824e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab759a4f5d46372184123e1d046a0824e">&sect;&nbsp;</a></span>configurationDescriptorsHS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a> configurationDescriptorsHS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>High-speed configuration descriptor. </p>

</div>
</div>
<a id="ga384638d07384b7d12bfd2ba2f830dff8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga384638d07384b7d12bfd2ba2f830dff8">&sect;&nbsp;</a></span>deviceDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a> deviceDescriptor</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <span class="keyword">sizeof</span>(<a class="code" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a>),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#ga6363c61655b33b6312f0de0f317528e3">USBGenericDescriptor_DEVICE</a>,</div><div class="line">    <a class="code" href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#ga3c42c7e18f1325877f70933aac0f3139">MSDeviceDescriptor_CLASS</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#gaded09d1e1da92b623c322fb6bb375678">MSDeviceDescriptor_SUBCLASS</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#ga9ab87cd28acd2322d38cc9e95a1d0175">MSDeviceDescriptor_PROTOCOL</a>,</div><div class="line">    <a class="code" href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(0),</div><div class="line">    <a class="code" href="group__usbd__msd__device__descriptor__ids.xhtml#gad4a4a9898ee972ff23df9a812a78256c">MSDDriverDescriptors_VENDORID</a>,</div><div class="line">    <a class="code" href="group__usbd__msd__device__descriptor__ids.xhtml#ga295ef9090e3b726a3bf214fbe1048d39">MSDDriverDescriptors_PRODUCTID</a>,</div><div class="line">    <a class="code" href="group__usbd__msd__device__descriptor__ids.xhtml#ga8beb92a776b690b51f9955d2584202b9">MSDDriverDescriptors_RELEASE</a>,</div><div class="line">    1, </div><div class="line">    2, </div><div class="line">    3, </div><div class="line">    1  </div><div class="line">}</div><div class="ttc" id="group__usb__desc__type_xhtml_ga6363c61655b33b6312f0de0f317528e3"><div class="ttname"><a href="group__usb__desc__type.xhtml#ga6363c61655b33b6312f0de0f317528e3">USBGenericDescriptor_DEVICE</a></div><div class="ttdeci">#define USBGenericDescriptor_DEVICE</div><div class="ttdoc">Device descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:79</div></div>
<div class="ttc" id="group__usbd__msd__device__descriptor__ids_xhtml_ga295ef9090e3b726a3bf214fbe1048d39"><div class="ttname"><a href="group__usbd__msd__device__descriptor__ids.xhtml#ga295ef9090e3b726a3bf214fbe1048d39">MSDDriverDescriptors_PRODUCTID</a></div><div class="ttdeci">#define MSDDriverDescriptors_PRODUCTID</div><div class="ttdoc">Product ID for the Mass Storage device driver. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:82</div></div>
<div class="ttc" id="group__usbd__msd__device__descriptor__ids_xhtml_ga8beb92a776b690b51f9955d2584202b9"><div class="ttname"><a href="group__usbd__msd__device__descriptor__ids.xhtml#ga8beb92a776b690b51f9955d2584202b9">MSDDriverDescriptors_RELEASE</a></div><div class="ttdeci">#define MSDDriverDescriptors_RELEASE</div><div class="ttdoc">Device release number for the Mass Storage device driver. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:84</div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_gaded09d1e1da92b623c322fb6bb375678"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#gaded09d1e1da92b623c322fb6bb375678">MSDeviceDescriptor_SUBCLASS</a></div><div class="ttdeci">#define MSDeviceDescriptor_SUBCLASS</div><div class="ttdoc">Subclass code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:78</div></div>
<div class="ttc" id="usbhs_8h_xhtml_a5865e5e766958f78b10bee61f42abd44"><div class="ttname"><a href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a></div><div class="ttdeci">#define CHIP_USB_ENDPOINTS_MAXPACKETSIZE(ep)</div><div class="ttdoc">Endpoints max packet size. </div><div class="ttdef"><b>Definition:</b> usbhs.h:53</div></div>
<div class="ttc" id="group__usb__release__number_xhtml_ga69167f83b560d92391cf222d9d3690de"><div class="ttname"><a href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a></div><div class="ttdeci">#define USBDeviceDescriptor_USB2_00</div><div class="ttdoc">The device supports USB 2.00. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:220</div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_ga3c42c7e18f1325877f70933aac0f3139"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#ga3c42c7e18f1325877f70933aac0f3139">MSDeviceDescriptor_CLASS</a></div><div class="ttdeci">#define MSDeviceDescriptor_CLASS</div><div class="ttdoc">Class code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:75</div></div>
<div class="ttc" id="group__usb__descriptor_xhtml_ga31689ddfc9d000dc0ea039dbe58732ed"><div class="ttname"><a href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a></div><div class="ttdeci">struct _USBDeviceDescriptor USBDeviceDescriptor</div><div class="ttdoc">USB standard device descriptor structure. </div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_ga9ab87cd28acd2322d38cc9e95a1d0175"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#ga9ab87cd28acd2322d38cc9e95a1d0175">MSDeviceDescriptor_PROTOCOL</a></div><div class="ttdeci">#define MSDeviceDescriptor_PROTOCOL</div><div class="ttdoc">Protocol code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:81</div></div>
<div class="ttc" id="group__usbd__msd__device__descriptor__ids_xhtml_gad4a4a9898ee972ff23df9a812a78256c"><div class="ttname"><a href="group__usbd__msd__device__descriptor__ids.xhtml#gad4a4a9898ee972ff23df9a812a78256c">MSDDriverDescriptors_VENDORID</a></div><div class="ttdeci">#define MSDDriverDescriptors_VENDORID</div><div class="ttdoc">Vendor ID for the Mass Storage device driver. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:80</div></div>
</div><!-- fragment -->
<p>Mass storage driver device descriptor. </p>

</div>
</div>
<a id="ga29799f0e9facdf240e5f86f685633780"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga29799f0e9facdf240e5f86f685633780">&sect;&nbsp;</a></span>inquiryData</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__msd.xhtml#ga920fd6cca4a9cfc02c44fb7c79e4847b">SBCInquiryData</a> inquiryData</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inquiry data to return to the host for the Lun. </p>

</div>
</div>
<a id="gac58469be2fa2542b3c9e5160846177e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac58469be2fa2542b3c9e5160846177e4">&sect;&nbsp;</a></span>languageIdDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char languageIdDescriptor[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(1),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gac777104a81b956c4249ccd3b80a8305b">USBStringDescriptor_ENGLISH_US</a></div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gac777104a81b956c4249ccd3b80a8305b"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gac777104a81b956c4249ccd3b80a8305b">USBStringDescriptor_ENGLISH_US</a></div><div class="ttdeci">#define USBStringDescriptor_ENGLISH_US</div><div class="ttdoc">Language ID for US English. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:437</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Language ID string descriptor. </p>

</div>
</div>
<a id="ga2af674d5c88b85ff120d12c8c0ab6748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2af674d5c88b85ff120d12c8c0ab6748">&sect;&nbsp;</a></span>manufacturerDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char manufacturerDescriptor[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(5),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;A&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;T&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;M&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;E&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;L&#39;</span>)</div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_ga3946105b41f7a799367c0d35fea2048c"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a></div><div class="ttdeci">#define USBStringDescriptor_UNICODE(ascii)</div><div class="ttdoc">Converts an ascii character to its unicode representation. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:450</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Manufacturer string descriptor. </p>

</div>
</div>
<a id="gaa1088ff492957dc716d70e2f10ab6f1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1088ff492957dc716d70e2f10ab6f1d">&sect;&nbsp;</a></span>modeParameterHeader6</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a> modeParameterHeader6</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <span class="keyword">sizeof</span>(<a class="code" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a>) - 1,        </div><div class="line"></div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#ga28c01bfb597324856a95fcc752984c8f">SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE</a>, </div><div class="line"></div><div class="line">    0,                                          </div><div class="line"></div><div class="line">    0,                                          </div><div class="line"></div><div class="line">    0,                                          </div><div class="line"></div><div class="line">    0,                                          </div><div class="line"></div><div class="line">    0                                           </div><div class="line"></div><div class="line">}</div><div class="ttc" id="group__usbd__msd_xhtml_ga1d68739013bfe7dce642d98264d3bd63"><div class="ttname"><a href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63">SBCModeParameterHeader6</a></div><div class="ttdeci">struct _SBCModeParameterHeader6 SBCModeParameterHeader6</div><div class="ttdoc">Header for the data returned after a MODE SENSE (6) command. </div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga28c01bfb597324856a95fcc752984c8f"><div class="ttname"><a href="group__usbd__msd.xhtml#ga28c01bfb597324856a95fcc752984c8f">SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE</a></div><div class="ttdeci">#define SBC_MEDIUM_TYPE_DIRECT_ACCESS_BLOCK_DEVICE</div><div class="ttdoc">MEDIUM TYPE field value for direct-access block devices. </div><div class="ttdef"><b>Definition:</b> SBC.h:290</div></div>
</div><!-- fragment -->
<p>Header for the mode pages data. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__usbd__msd.xhtml#ga1d68739013bfe7dce642d98264d3bd63" title="Header for the data returned after a MODE SENSE (6) command. ">SBCModeParameterHeader6</a> </dd></dl>

</div>
</div>
<a id="ga82b351721c0ee88c194279f372c96b19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga82b351721c0ee88c194279f372c96b19">&sect;&nbsp;</a></span>msdDriverDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> msdDriverDescriptors</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    &amp;<a class="code" href="group__usbd__msd.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;<a class="code" href="group__usbd__msd.xhtml#ga775b8e40d576694278054e10c4bdef89">configurationDescriptorsFS</a>,</div><div class="line">    &amp;<a class="code" href="group__usbd__msd.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;<a class="code" href="group__usbd__msd.xhtml#ga38878f7aa90d279c13162205f150c4d5">otherSpeedDescriptorsFS</a>,</div><div class="line">    0, </div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;<a class="code" href="group__usbd__msd.xhtml#gab759a4f5d46372184123e1d046a0824e">configurationDescriptorsHS</a>,</div><div class="line">    &amp;<a class="code" href="group__usbd__msd.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;<a class="code" href="group__usbd__msd.xhtml#gad17cbfce6da64ea29afa63e11a7e02cd">otherSpeedDescriptorsHS</a>,</div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a>,</div><div class="line">    4 </div><div class="line"></div><div class="line">}</div><div class="ttc" id="group__usbd__msd_xhtml_ga38878f7aa90d279c13162205f150c4d5"><div class="ttname"><a href="group__usbd__msd.xhtml#ga38878f7aa90d279c13162205f150c4d5">otherSpeedDescriptorsFS</a></div><div class="ttdeci">static const MSDConfigurationDescriptors otherSpeedDescriptorsFS</div><div class="ttdoc">Full-speed other speed configuration descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:186</div></div>
<div class="ttc" id="struct___u_s_b_configuration_descriptor_xhtml"><div class="ttname"><a href="struct___u_s_b_configuration_descriptor.xhtml">_USBConfigurationDescriptor</a></div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:575</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga775b8e40d576694278054e10c4bdef89"><div class="ttname"><a href="group__usbd__msd.xhtml#ga775b8e40d576694278054e10c4bdef89">configurationDescriptorsFS</a></div><div class="ttdeci">static const MSDConfigurationDescriptors configurationDescriptorsFS</div><div class="ttdoc">Full-speed configuration descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:134</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_gab759a4f5d46372184123e1d046a0824e"><div class="ttname"><a href="group__usbd__msd.xhtml#gab759a4f5d46372184123e1d046a0824e">configurationDescriptorsHS</a></div><div class="ttdeci">static const MSDConfigurationDescriptors configurationDescriptorsHS</div><div class="ttdoc">High-speed configuration descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:238</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_gad17cbfce6da64ea29afa63e11a7e02cd"><div class="ttname"><a href="group__usbd__msd.xhtml#gad17cbfce6da64ea29afa63e11a7e02cd">otherSpeedDescriptorsHS</a></div><div class="ttdeci">static const MSDConfigurationDescriptors otherSpeedDescriptorsHS</div><div class="ttdoc">High-speed other speed configuration descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:290</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga7740842e49c598f4c0876e84ced67a1c"><div class="ttname"><a href="group__usbd__msd.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a></div><div class="ttdeci">static const USBDeviceQualifierDescriptor qualifierDescriptor</div><div class="ttdoc">Device qualifier descriptor (Necessary to pass USB test). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:120</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga5af83d39e0236d7188ba8e18b3c9a7c6"><div class="ttname"><a href="group__usbd__msd.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a></div><div class="ttdeci">static const unsigned char * stringDescriptors[]</div><div class="ttdoc">List of all string descriptors used. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:404</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga384638d07384b7d12bfd2ba2f830dff8"><div class="ttname"><a href="group__usbd__msd.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a></div><div class="ttdeci">static const USBDeviceDescriptor deviceDescriptor</div><div class="ttdoc">Mass storage driver device descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:101</div></div>
</div><!-- fragment -->
<p>List of the standard descriptors used by the Mass Storage driver. </p>

</div>
</div>
<a id="ga38878f7aa90d279c13162205f150c4d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga38878f7aa90d279c13162205f150c4d5">&sect;&nbsp;</a></span>otherSpeedDescriptorsFS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a> otherSpeedDescriptorsFS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Full-speed other speed configuration descriptor. </p>

</div>
</div>
<a id="gad17cbfce6da64ea29afa63e11a7e02cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad17cbfce6da64ea29afa63e11a7e02cd">&sect;&nbsp;</a></span>otherSpeedDescriptorsHS</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__msd.xhtml#ga0171bc05a355956dbd8ac5ff27d9a8c8">MSDConfigurationDescriptors</a> otherSpeedDescriptorsHS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>High-speed other speed configuration descriptor. </p>

</div>
</div>
<a id="ga4b20dfbb20cddcd882cb807a6dd8319f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b20dfbb20cddcd882cb807a6dd8319f">&sect;&nbsp;</a></span>productDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char productDescriptor[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(14),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;A&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;T&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;M&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;E&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;L&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39; &#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;A&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;T&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;9&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;1&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39; &#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;M&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;S&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;D&#39;</span>)</div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_ga3946105b41f7a799367c0d35fea2048c"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a></div><div class="ttdeci">#define USBStringDescriptor_UNICODE(ascii)</div><div class="ttdoc">Converts an ascii character to its unicode representation. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:450</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Product string descriptor. </p>

</div>
</div>
<a id="ga7740842e49c598f4c0876e84ced67a1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7740842e49c598f4c0876e84ced67a1c">&sect;&nbsp;</a></span>qualifierDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a> qualifierDescriptor</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <span class="keyword">sizeof</span>(<a class="code" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a>),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#ga180ff764ab5a66c3e02861e7c0ee516f">USBGenericDescriptor_DEVICEQUALIFIER</a>,</div><div class="line">    <a class="code" href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#ga3c42c7e18f1325877f70933aac0f3139">MSDeviceDescriptor_CLASS</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#gaded09d1e1da92b623c322fb6bb375678">MSDeviceDescriptor_SUBCLASS</a>,</div><div class="line">    <a class="code" href="group__usbd__ms__device__codes.xhtml#ga9ab87cd28acd2322d38cc9e95a1d0175">MSDeviceDescriptor_PROTOCOL</a>,</div><div class="line">    <a class="code" href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(0),</div><div class="line">    1, </div><div class="line">    0x00</div><div class="line">}</div><div class="ttc" id="group__usb__descriptor_xhtml_ga36d6934c0b8cca0609bd98de0037aecf"><div class="ttname"><a href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a></div><div class="ttdeci">struct _USBDeviceQualifierDescriptor USBDeviceQualifierDescriptor</div><div class="ttdoc">Alternate device descriptor indicating the capabilities of the device in full-speed, if currently in high-speed; or in high-speed, if it is currently in full-speed. </div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_ga180ff764ab5a66c3e02861e7c0ee516f"><div class="ttname"><a href="group__usb__desc__type.xhtml#ga180ff764ab5a66c3e02861e7c0ee516f">USBGenericDescriptor_DEVICEQUALIFIER</a></div><div class="ttdeci">#define USBGenericDescriptor_DEVICEQUALIFIER</div><div class="ttdoc">Device qualifier descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:89</div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_gaded09d1e1da92b623c322fb6bb375678"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#gaded09d1e1da92b623c322fb6bb375678">MSDeviceDescriptor_SUBCLASS</a></div><div class="ttdeci">#define MSDeviceDescriptor_SUBCLASS</div><div class="ttdoc">Subclass code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:78</div></div>
<div class="ttc" id="usbhs_8h_xhtml_a5865e5e766958f78b10bee61f42abd44"><div class="ttname"><a href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a></div><div class="ttdeci">#define CHIP_USB_ENDPOINTS_MAXPACKETSIZE(ep)</div><div class="ttdoc">Endpoints max packet size. </div><div class="ttdef"><b>Definition:</b> usbhs.h:53</div></div>
<div class="ttc" id="group__usb__release__number_xhtml_ga69167f83b560d92391cf222d9d3690de"><div class="ttname"><a href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a></div><div class="ttdeci">#define USBDeviceDescriptor_USB2_00</div><div class="ttdoc">The device supports USB 2.00. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:220</div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_ga3c42c7e18f1325877f70933aac0f3139"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#ga3c42c7e18f1325877f70933aac0f3139">MSDeviceDescriptor_CLASS</a></div><div class="ttdeci">#define MSDeviceDescriptor_CLASS</div><div class="ttdoc">Class code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:75</div></div>
<div class="ttc" id="group__usbd__ms__device__codes_xhtml_ga9ab87cd28acd2322d38cc9e95a1d0175"><div class="ttname"><a href="group__usbd__ms__device__codes.xhtml#ga9ab87cd28acd2322d38cc9e95a1d0175">MSDeviceDescriptor_PROTOCOL</a></div><div class="ttdeci">#define MSDeviceDescriptor_PROTOCOL</div><div class="ttdoc">Protocol code for a Mass Storage device. </div><div class="ttdef"><b>Definition:</b> MSDescriptors.h:81</div></div>
</div><!-- fragment -->
<p>Device qualifier descriptor (Necessary to pass USB test). </p>

</div>
</div>
<a id="ga53eb66114aeac0731761be191d586fca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga53eb66114aeac0731761be191d586fca">&sect;&nbsp;</a></span>serialNumberDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char serialNumberDescriptor[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(12),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;0&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;1&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;2&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;3&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;4&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;5&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;6&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;7&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;8&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;9&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;A&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;B&#39;</span>)</div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_ga3946105b41f7a799367c0d35fea2048c"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a></div><div class="ttdeci">#define USBStringDescriptor_UNICODE(ascii)</div><div class="ttdoc">Converts an ascii character to its unicode representation. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:450</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Serial number string descriptor. </p>
<p>The serial number must be at least 12 characters long and made up of only letters &amp; numbers to be compliant with the MSD specification. </p>

</div>
</div>
<a id="ga5af83d39e0236d7188ba8e18b3c9a7c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5af83d39e0236d7188ba8e18b3c9a7c6">&sect;&nbsp;</a></span>stringDescriptors</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char* stringDescriptors[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#gac58469be2fa2542b3c9e5160846177e4">languageIdDescriptor</a>,</div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#ga2af674d5c88b85ff120d12c8c0ab6748">manufacturerDescriptor</a>,</div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#ga4b20dfbb20cddcd882cb807a6dd8319f">productDescriptor</a>,</div><div class="line">    <a class="code" href="group__usbd__msd.xhtml#ga53eb66114aeac0731761be191d586fca">serialNumberDescriptor</a></div><div class="line">}</div><div class="ttc" id="group__usbd__msd_xhtml_ga4b20dfbb20cddcd882cb807a6dd8319f"><div class="ttname"><a href="group__usbd__msd.xhtml#ga4b20dfbb20cddcd882cb807a6dd8319f">productDescriptor</a></div><div class="ttdeci">static const unsigned char productDescriptor[]</div><div class="ttdoc">Product string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:362</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_gac58469be2fa2542b3c9e5160846177e4"><div class="ttname"><a href="group__usbd__msd.xhtml#gac58469be2fa2542b3c9e5160846177e4">languageIdDescriptor</a></div><div class="ttdeci">static const unsigned char languageIdDescriptor[]</div><div class="ttdoc">Language ID string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:342</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga53eb66114aeac0731761be191d586fca"><div class="ttname"><a href="group__usbd__msd.xhtml#ga53eb66114aeac0731761be191d586fca">serialNumberDescriptor</a></div><div class="ttdeci">static const unsigned char serialNumberDescriptor[]</div><div class="ttdoc">Serial number string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:385</div></div>
<div class="ttc" id="group__usbd__msd_xhtml_ga2af674d5c88b85ff120d12c8c0ab6748"><div class="ttname"><a href="group__usbd__msd.xhtml#ga2af674d5c88b85ff120d12c8c0ab6748">manufacturerDescriptor</a></div><div class="ttdeci">static const unsigned char manufacturerDescriptor[]</div><div class="ttdoc">Manufacturer string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:350</div></div>
</div><!-- fragment -->
<p>List of all string descriptors used. </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
