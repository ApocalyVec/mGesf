<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/usart.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">usart.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for usart.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h__incl.svg" width="234" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h__dep__incl.svg" width="406" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="usart_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:af27cef049eb87418f833f81193899d88"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#af27cef049eb87418f833f81193899d88">USART_MODE_ASYNCHRONOUS</a>&#160;&#160;&#160;(<a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga89f742aa35c144273e5dd30e957fd25e">US_MR_CHRL_8_BIT</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga46dab6c5f7c5e581d55ee038e2e9de7f">US_MR_PAR_NO</a>)</td></tr>
<tr class="memdesc:af27cef049eb87418f833f81193899d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic asynchronous mode, i.e.  <a href="#af27cef049eb87418f833f81193899d88">More...</a><br /></td></tr>
<tr class="separator:af27cef049eb87418f833f81193899d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee0e036ac8f3967121716761d60fcc25"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#aee0e036ac8f3967121716761d60fcc25">MAX_RX_TIMEOUT</a>&#160;&#160;&#160;131071</td></tr>
<tr class="separator:aee0e036ac8f3967121716761d60fcc25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3e7ce1ee302ade431ad5f8eb99685c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ae3e7ce1ee302ade431ad5f8eb99685c4">USART_MODE_IRDA</a>&#160;&#160;&#160;(<a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga31a11a75994d88501dc4130e7a86d731">US_MR_USART_MODE_IRDA</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga89f742aa35c144273e5dd30e957fd25e">US_MR_CHRL_8_BIT</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga46dab6c5f7c5e581d55ee038e2e9de7f">US_MR_PAR_NO</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga1b72ab69619b27bc382a63ef45b3ace9">US_MR_FILTER</a>)</td></tr>
<tr class="memdesc:ae3e7ce1ee302ade431ad5f8eb99685c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">IRDA mode.  <a href="#ae3e7ce1ee302ade431ad5f8eb99685c4">More...</a><br /></td></tr>
<tr class="separator:ae3e7ce1ee302ade431ad5f8eb99685c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f2d00c8dcd41ee61e0f9c8d46a63c5a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a6f2d00c8dcd41ee61e0f9c8d46a63c5a">AT91C_US_USMODE_SPIM</a>&#160;&#160;&#160;0xE</td></tr>
<tr class="memdesc:a6f2d00c8dcd41ee61e0f9c8d46a63c5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">SPI mode.  <a href="#a6f2d00c8dcd41ee61e0f9c8d46a63c5a">More...</a><br /></td></tr>
<tr class="separator:a6f2d00c8dcd41ee61e0f9c8d46a63c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa289ec1dd613719e77f6dab81e91a54e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">US_SPI_CPOL_0</a>&#160;&#160;&#160;(0x0&lt;&lt;16)</td></tr>
<tr class="separator:aa289ec1dd613719e77f6dab81e91a54e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff4744abca84dee2c6a20bcc7b545e6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">US_SPI_CPHA_0</a>&#160;&#160;&#160;(0x0&lt;&lt;8)</td></tr>
<tr class="separator:aeff4744abca84dee2c6a20bcc7b545e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12387e210db8d6c20b9d86851ee389cf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">US_SPI_CPOL_1</a>&#160;&#160;&#160;(0x1&lt;&lt;16)</td></tr>
<tr class="separator:a12387e210db8d6c20b9d86851ee389cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f27ad2f963ac5d3942c0b82a6bc75e6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">US_SPI_CPHA_1</a>&#160;&#160;&#160;(0x1&lt;&lt;8)</td></tr>
<tr class="separator:a1f27ad2f963ac5d3942c0b82a6bc75e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a479aadf555be76b3988d63c9cd59a0a0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a479aadf555be76b3988d63c9cd59a0a0">US_SPI_BPMODE_0</a>&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">US_SPI_CPOL_0</a>|<a class="el" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">US_SPI_CPHA_1</a>)</td></tr>
<tr class="separator:a479aadf555be76b3988d63c9cd59a0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07a5b9e05891a040155161cba3631655"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a07a5b9e05891a040155161cba3631655">US_SPI_BPMODE_1</a>&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">US_SPI_CPOL_0</a>|<a class="el" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">US_SPI_CPHA_0</a>)</td></tr>
<tr class="separator:a07a5b9e05891a040155161cba3631655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9a863a1f22fb913e6cb7f37b32ec3e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#adb9a863a1f22fb913e6cb7f37b32ec3e">US_SPI_BPMODE_2</a>&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">US_SPI_CPOL_1</a>|<a class="el" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">US_SPI_CPHA_1</a>)</td></tr>
<tr class="separator:adb9a863a1f22fb913e6cb7f37b32ec3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04d9779305fc19a048d03ca952a0364"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ad04d9779305fc19a048d03ca952a0364">US_SPI_BPMODE_3</a>&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">US_SPI_CPOL_1</a>|<a class="el" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">US_SPI_CPHA_0</a>)</td></tr>
<tr class="separator:ad04d9779305fc19a048d03ca952a0364"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6280c3578315c2a06e1857b7dca0c1be"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a6280c3578315c2a06e1857b7dca0c1be">USART_Configure</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart, uint32_t mode, uint32_t baudrate, uint32_t masterClock)</td></tr>
<tr class="memdesc:a6280c3578315c2a06e1857b7dca0c1be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures an USART peripheral with the specified parameters.  <a href="#a6280c3578315c2a06e1857b7dca0c1be">More...</a><br /></td></tr>
<tr class="separator:a6280c3578315c2a06e1857b7dca0c1be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c462751711f86351d7f6503ff6c2063"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a2c462751711f86351d7f6503ff6c2063">USART_SetBaudrate</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart, uint8_t OverSamp, uint32_t baudrate, uint32_t masterClock)</td></tr>
<tr class="memdesc:a2c462751711f86351d7f6503ff6c2063"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures an USART baudrate.  <a href="#a2c462751711f86351d7f6503ff6c2063">More...</a><br /></td></tr>
<tr class="separator:a2c462751711f86351d7f6503ff6c2063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02636838445be4a9a09aaa320567d666"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a02636838445be4a9a09aaa320567d666">USART_GetStatus</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart)</td></tr>
<tr class="memdesc:a02636838445be4a9a09aaa320567d666"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get present status.  <a href="#a02636838445be4a9a09aaa320567d666">More...</a><br /></td></tr>
<tr class="separator:a02636838445be4a9a09aaa320567d666"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2451d0cf9cc3558d7995d558f0527dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ae2451d0cf9cc3558d7995d558f0527dc">USART_ResetRx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:ae2451d0cf9cc3558d7995d558f0527dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets or disables the Receiver of an USART peripheral.  <a href="#ae2451d0cf9cc3558d7995d558f0527dc">More...</a><br /></td></tr>
<tr class="separator:ae2451d0cf9cc3558d7995d558f0527dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbe4736584da2a8fbe2cd1d66567aa21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#afbe4736584da2a8fbe2cd1d66567aa21">USART_ResetTx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:afbe4736584da2a8fbe2cd1d66567aa21"><td class="mdescLeft">&#160;</td><td class="mdescRight">resets and disables the transmitter of an USART peripheral.  <a href="#afbe4736584da2a8fbe2cd1d66567aa21">More...</a><br /></td></tr>
<tr class="separator:afbe4736584da2a8fbe2cd1d66567aa21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cefc761ba2532430bc1fdd734cae76e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a7cefc761ba2532430bc1fdd734cae76e">USART_EnableTx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:a7cefc761ba2532430bc1fdd734cae76e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the transmitter of an USART peripheral.  <a href="#a7cefc761ba2532430bc1fdd734cae76e">More...</a><br /></td></tr>
<tr class="separator:a7cefc761ba2532430bc1fdd734cae76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5e161fbea5927507473f4fc257b481d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#af5e161fbea5927507473f4fc257b481d">USART_EnableRx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:af5e161fbea5927507473f4fc257b481d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the Receiver of an USART peripheral.  <a href="#af5e161fbea5927507473f4fc257b481d">More...</a><br /></td></tr>
<tr class="separator:af5e161fbea5927507473f4fc257b481d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bab2f603811a65889918c56b6c8c4a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a1bab2f603811a65889918c56b6c8c4a2">USART_DisableRx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:a1bab2f603811a65889918c56b6c8c4a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the Receiver of an USART peripheral.  <a href="#a1bab2f603811a65889918c56b6c8c4a2">More...</a><br /></td></tr>
<tr class="separator:a1bab2f603811a65889918c56b6c8c4a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc481556ca791aac3310b5ffb31ec850"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#abc481556ca791aac3310b5ffb31ec850">USART_DisableTx</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:abc481556ca791aac3310b5ffb31ec850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the transmitter of an USART peripheral.  <a href="#abc481556ca791aac3310b5ffb31ec850">More...</a><br /></td></tr>
<tr class="separator:abc481556ca791aac3310b5ffb31ec850"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7360fa2d1dbee570c3adefe6efaf873"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#aa7360fa2d1dbee570c3adefe6efaf873">USART_EnableIt</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint32_t mode)</td></tr>
<tr class="memdesc:aa7360fa2d1dbee570c3adefe6efaf873"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable interrupt.  <a href="#aa7360fa2d1dbee570c3adefe6efaf873">More...</a><br /></td></tr>
<tr class="separator:aa7360fa2d1dbee570c3adefe6efaf873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff26bcf6b452fb6a979d47b4bbb0bd8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a8ff26bcf6b452fb6a979d47b4bbb0bd8">USART_DisableIt</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint32_t mode)</td></tr>
<tr class="memdesc:a8ff26bcf6b452fb6a979d47b4bbb0bd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable interrupt.  <a href="#a8ff26bcf6b452fb6a979d47b4bbb0bd8">More...</a><br /></td></tr>
<tr class="separator:a8ff26bcf6b452fb6a979d47b4bbb0bd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978ff27f5cc5f033dcd5bf7a9a71dbcd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a978ff27f5cc5f033dcd5bf7a9a71dbcd">USART_GetItMask</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart)</td></tr>
<tr class="memdesc:a978ff27f5cc5f033dcd5bf7a9a71dbcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return interrupt mask.  <a href="#a978ff27f5cc5f033dcd5bf7a9a71dbcd">More...</a><br /></td></tr>
<tr class="separator:a978ff27f5cc5f033dcd5bf7a9a71dbcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18a00bc79be656904ce8c7043f4c6d19"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a18a00bc79be656904ce8c7043f4c6d19">USART_SetTransmitterEnabled</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled)</td></tr>
<tr class="memdesc:a18a00bc79be656904ce8c7043f4c6d19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables the transmitter of an USART peripheral.  <a href="#a18a00bc79be656904ce8c7043f4c6d19">More...</a><br /></td></tr>
<tr class="separator:a18a00bc79be656904ce8c7043f4c6d19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246df8753ea10e0ac19913c1dac062fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a246df8753ea10e0ac19913c1dac062fb">USART_SetReceiverEnabled</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled)</td></tr>
<tr class="memdesc:a246df8753ea10e0ac19913c1dac062fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables the receiver of an USART peripheral.  <a href="#a246df8753ea10e0ac19913c1dac062fb">More...</a><br /></td></tr>
<tr class="separator:a246df8753ea10e0ac19913c1dac062fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9c6f1c6f5776df66022ede3667e908"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a1f9c6f1c6f5776df66022ede3667e908">USART_SetRTSEnabled</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint8_t enabled)</td></tr>
<tr class="memdesc:a1f9c6f1c6f5776df66022ede3667e908"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables the Request To Send (RTS) of an USART peripheral.  <a href="#a1f9c6f1c6f5776df66022ede3667e908">More...</a><br /></td></tr>
<tr class="separator:a1f9c6f1c6f5776df66022ede3667e908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a863e6a2ce2e4fc81dd3d008d231143e2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a863e6a2ce2e4fc81dd3d008d231143e2">USART_Write</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint16_t data, volatile uint32_t timeOut)</td></tr>
<tr class="memdesc:a863e6a2ce2e4fc81dd3d008d231143e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends one packet of data through the specified USART peripheral.  <a href="#a863e6a2ce2e4fc81dd3d008d231143e2">More...</a><br /></td></tr>
<tr class="separator:a863e6a2ce2e4fc81dd3d008d231143e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7360162f07a0b42c59bc94e0ce3e475"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ac7360162f07a0b42c59bc94e0ce3e475">USART_Read</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, volatile uint32_t timeOut)</td></tr>
<tr class="memdesc:ac7360162f07a0b42c59bc94e0ce3e475"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads and return a packet of data on the specified USART peripheral.  <a href="#ac7360162f07a0b42c59bc94e0ce3e475">More...</a><br /></td></tr>
<tr class="separator:ac7360162f07a0b42c59bc94e0ce3e475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d6f0dbab1e2c60024fdb58e71eb5ad2"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a5d6f0dbab1e2c60024fdb58e71eb5ad2">USART_IsDataAvailable</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart)</td></tr>
<tr class="memdesc:a5d6f0dbab1e2c60024fdb58e71eb5ad2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns 1 if some data has been received and can be read from an USART; otherwise returns 0.  <a href="#a5d6f0dbab1e2c60024fdb58e71eb5ad2">More...</a><br /></td></tr>
<tr class="separator:a5d6f0dbab1e2c60024fdb58e71eb5ad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa299c70c15f0a174e9666209ded82cbf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#aa299c70c15f0a174e9666209ded82cbf">USART_SetIrdaFilter</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart, uint8_t filter)</td></tr>
<tr class="separator:aa299c70c15f0a174e9666209ded82cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0567c51f89573846ed7571dd839ebcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ab0567c51f89573846ed7571dd839ebcc">USART_PutChar</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint8_t c)</td></tr>
<tr class="memdesc:ab0567c51f89573846ed7571dd839ebcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends one packet of data through the specified USART peripheral.  <a href="#ab0567c51f89573846ed7571dd839ebcc">More...</a><br /></td></tr>
<tr class="separator:ab0567c51f89573846ed7571dd839ebcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02f248788c426b70d089409c1c38548f"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a02f248788c426b70d089409c1c38548f">USART_IsRxReady</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart)</td></tr>
<tr class="memdesc:a02f248788c426b70d089409c1c38548f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return 1 if a character can be read in USART.  <a href="#a02f248788c426b70d089409c1c38548f">More...</a><br /></td></tr>
<tr class="separator:a02f248788c426b70d089409c1c38548f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80daa504b1ce9b4f31efa5258996d3fe"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a80daa504b1ce9b4f31efa5258996d3fe">USART_IsTxReady</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart)</td></tr>
<tr class="memdesc:a80daa504b1ce9b4f31efa5258996d3fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns 1 if the transmitter is ready; otherwise returns 0.  <a href="#a80daa504b1ce9b4f31efa5258996d3fe">More...</a><br /></td></tr>
<tr class="separator:a80daa504b1ce9b4f31efa5258996d3fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b87ef0f6c9f2dfdea2358a47363be67"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#a8b87ef0f6c9f2dfdea2358a47363be67">USART_GetChar</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart)</td></tr>
<tr class="memdesc:a8b87ef0f6c9f2dfdea2358a47363be67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads and returns a character from the USART.  <a href="#a8b87ef0f6c9f2dfdea2358a47363be67">More...</a><br /></td></tr>
<tr class="separator:a8b87ef0f6c9f2dfdea2358a47363be67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae70c9ce0e4cf3d14158f0faf36a357a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#ae70c9ce0e4cf3d14158f0faf36a357a2">USART_EnableRecvTimeOut</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint32_t timeout)</td></tr>
<tr class="memdesc:ae70c9ce0e4cf3d14158f0faf36a357a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Rx Timeout for USART.  <a href="#ae70c9ce0e4cf3d14158f0faf36a357a2">More...</a><br /></td></tr>
<tr class="separator:ae70c9ce0e4cf3d14158f0faf36a357a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf34e0625d9ca2055453bda426d6321c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#adf34e0625d9ca2055453bda426d6321c">USART_EnableTxTimeGaurd</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *pUsart, uint32_t TimeGaurd)</td></tr>
<tr class="memdesc:adf34e0625d9ca2055453bda426d6321c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Tx Timeout for USART.  <a href="#adf34e0625d9ca2055453bda426d6321c">More...</a><br /></td></tr>
<tr class="separator:adf34e0625d9ca2055453bda426d6321c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc98910e94b5806647b00a7edade64fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="usart_8h.xhtml#abc98910e94b5806647b00a7edade64fe">USART_AcknowledgeRxTimeOut</a> (<a class="el" href="struct_usart.xhtml">Usart</a> *usart, uint8_t Periodic)</td></tr>
<tr class="memdesc:abc98910e94b5806647b00a7edade64fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acknowledge Rx timeout and sets to Idle or periodic repetitive state.  <a href="#abc98910e94b5806647b00a7edade64fe">More...</a><br /></td></tr>
<tr class="separator:abc98910e94b5806647b00a7edade64fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section user"><dt>Purpose</dt><dd></dd></dl>
<p>This module provides several definitions and methods for using an USART peripheral.</p>
<dl class="section user"><dt>Usage</dt><dd></dd></dl>
<ol type="1">
<li>Enable the USART peripheral clock in the PMC.</li>
<li>Enable the required USART PIOs (see <a class="el" href="pio_8h.xhtml">pio.h</a>).</li>
<li>Configure the UART by calling USART_Configure.</li>
<li>Enable the transmitter and/or the receiver of the USART using USART_SetTransmitterEnabled and USART_SetReceiverEnabled.</li>
<li>Send data through the USART using the USART_Write methods.</li>
<li>Receive data from the USART using the USART_Read functions; the availability of data can be polled with USART_IsDataAvailable.</li>
<li>Disable the transmitter and/or the receiver of the USART with USART_SetTransmitterEnabled and USART_SetReceiverEnabled. </li>
</ol>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a6f2d00c8dcd41ee61e0f9c8d46a63c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f2d00c8dcd41ee61e0f9c8d46a63c5a">&sect;&nbsp;</a></span>AT91C_US_USMODE_SPIM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define AT91C_US_USMODE_SPIM&#160;&#160;&#160;0xE</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SPI mode. </p>

</div>
</div>
<a id="aee0e036ac8f3967121716761d60fcc25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee0e036ac8f3967121716761d60fcc25">&sect;&nbsp;</a></span>MAX_RX_TIMEOUT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_RX_TIMEOUT&#160;&#160;&#160;131071</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a479aadf555be76b3988d63c9cd59a0a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a479aadf555be76b3988d63c9cd59a0a0">&sect;&nbsp;</a></span>US_SPI_BPMODE_0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_BPMODE_0&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">US_SPI_CPOL_0</a>|<a class="el" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">US_SPI_CPHA_1</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a07a5b9e05891a040155161cba3631655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07a5b9e05891a040155161cba3631655">&sect;&nbsp;</a></span>US_SPI_BPMODE_1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_BPMODE_1&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#aa289ec1dd613719e77f6dab81e91a54e">US_SPI_CPOL_0</a>|<a class="el" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">US_SPI_CPHA_0</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adb9a863a1f22fb913e6cb7f37b32ec3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb9a863a1f22fb913e6cb7f37b32ec3e">&sect;&nbsp;</a></span>US_SPI_BPMODE_2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_BPMODE_2&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">US_SPI_CPOL_1</a>|<a class="el" href="usart_8h.xhtml#a1f27ad2f963ac5d3942c0b82a6bc75e6">US_SPI_CPHA_1</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad04d9779305fc19a048d03ca952a0364"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04d9779305fc19a048d03ca952a0364">&sect;&nbsp;</a></span>US_SPI_BPMODE_3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_BPMODE_3&#160;&#160;&#160;(<a class="el" href="usart_8h.xhtml#a12387e210db8d6c20b9d86851ee389cf">US_SPI_CPOL_1</a>|<a class="el" href="usart_8h.xhtml#aeff4744abca84dee2c6a20bcc7b545e6">US_SPI_CPHA_0</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeff4744abca84dee2c6a20bcc7b545e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeff4744abca84dee2c6a20bcc7b545e6">&sect;&nbsp;</a></span>US_SPI_CPHA_0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_CPHA_0&#160;&#160;&#160;(0x0&lt;&lt;8)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1f27ad2f963ac5d3942c0b82a6bc75e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f27ad2f963ac5d3942c0b82a6bc75e6">&sect;&nbsp;</a></span>US_SPI_CPHA_1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_CPHA_1&#160;&#160;&#160;(0x1&lt;&lt;8)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa289ec1dd613719e77f6dab81e91a54e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa289ec1dd613719e77f6dab81e91a54e">&sect;&nbsp;</a></span>US_SPI_CPOL_0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_CPOL_0&#160;&#160;&#160;(0x0&lt;&lt;16)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a12387e210db8d6c20b9d86851ee389cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12387e210db8d6c20b9d86851ee389cf">&sect;&nbsp;</a></span>US_SPI_CPOL_1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define US_SPI_CPOL_1&#160;&#160;&#160;(0x1&lt;&lt;16)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af27cef049eb87418f833f81193899d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af27cef049eb87418f833f81193899d88">&sect;&nbsp;</a></span>USART_MODE_ASYNCHRONOUS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USART_MODE_ASYNCHRONOUS&#160;&#160;&#160;(<a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga89f742aa35c144273e5dd30e957fd25e">US_MR_CHRL_8_BIT</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga46dab6c5f7c5e581d55ee038e2e9de7f">US_MR_PAR_NO</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Basic asynchronous mode, i.e. </p>
<h1><a class="anchor" id="USART_mode"></a>
USART modes</h1>
<p>This section lists several common operating modes for an USART peripheral.</p>
<p><b>Modes</b> </p><ul>
<li>USART_MODE_ASYNCHRONOUS</li>
<li>USART_MODE_IRDA 8 bits no parity. </li>
</ul>

</div>
</div>
<a id="ae3e7ce1ee302ade431ad5f8eb99685c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3e7ce1ee302ade431ad5f8eb99685c4">&sect;&nbsp;</a></span>USART_MODE_IRDA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USART_MODE_IRDA&#160;&#160;&#160;(<a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga31a11a75994d88501dc4130e7a86d731">US_MR_USART_MODE_IRDA</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga89f742aa35c144273e5dd30e957fd25e">US_MR_CHRL_8_BIT</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga46dab6c5f7c5e581d55ee038e2e9de7f">US_MR_PAR_NO</a> | <a class="el" href="group___s_a_m_v71___u_s_a_r_t.xhtml#ga1b72ab69619b27bc382a63ef45b3ace9">US_MR_FILTER</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>IRDA mode. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="abc98910e94b5806647b00a7edade64fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc98910e94b5806647b00a7edade64fe">&sect;&nbsp;</a></span>USART_AcknowledgeRxTimeOut()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_AcknowledgeRxTimeOut </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Periodic</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Acknowledge Rx timeout and sets to Idle or periodic repetitive state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">Periodic</td><td>If timeout is periodic or should wait for new char </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>None </dd></dl>

</div>
</div>
<a id="a6280c3578315c2a06e1857b7dca0c1be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6280c3578315c2a06e1857b7dca0c1be">&sect;&nbsp;</a></span>USART_Configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_Configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>baudrate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>masterClock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures an USART peripheral with the specified parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to the USART peripheral to configure. </td></tr>
    <tr><td class="paramname">mode</td><td>Desired value for the USART mode register (see the datasheet). </td></tr>
    <tr><td class="paramname">baudrate</td><td>Baudrate at which the USART should operate (in Hz). </td></tr>
    <tr><td class="paramname">masterClock</td><td>Frequency of the system master clock (in Hz). </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a6280c3578315c2a06e1857b7dca0c1be_cgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a6280c3578315c2a06e1857b7dca0c1be_icgraph.svg" width="334" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8ff26bcf6b452fb6a979d47b4bbb0bd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff26bcf6b452fb6a979d47b4bbb0bd8">&sect;&nbsp;</a></span>USART_DisableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_DisableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">mode</td><td>Interrupt mode. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a8ff26bcf6b452fb6a979d47b4bbb0bd8_icgraph.svg" width="330" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1bab2f603811a65889918c56b6c8c4a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bab2f603811a65889918c56b6c8c4a2">&sect;&nbsp;</a></span>USART_DisableRx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_DisableRx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables the Receiver of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abc481556ca791aac3310b5ffb31ec850"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc481556ca791aac3310b5ffb31ec850">&sect;&nbsp;</a></span>USART_DisableTx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_DisableTx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables the transmitter of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa7360fa2d1dbee570c3adefe6efaf873"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7360fa2d1dbee570c3adefe6efaf873">&sect;&nbsp;</a></span>USART_EnableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_EnableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">mode</td><td>Interrupt mode. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_aa7360fa2d1dbee570c3adefe6efaf873_icgraph.svg" width="282" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae70c9ce0e4cf3d14158f0faf36a357a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae70c9ce0e4cf3d14158f0faf36a357a2">&sect;&nbsp;</a></span>USART_EnableRecvTimeOut()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_EnableRecvTimeOut </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>Timeout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Rx Timeout for USART. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">Timeout</td><td>Timeout value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>None </dd></dl>

</div>
</div>
<a id="af5e161fbea5927507473f4fc257b481d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5e161fbea5927507473f4fc257b481d">&sect;&nbsp;</a></span>USART_EnableRx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_EnableRx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the Receiver of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7cefc761ba2532430bc1fdd734cae76e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cefc761ba2532430bc1fdd734cae76e">&sect;&nbsp;</a></span>USART_EnableTx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_EnableTx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the transmitter of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adf34e0625d9ca2055453bda426d6321c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf34e0625d9ca2055453bda426d6321c">&sect;&nbsp;</a></span>USART_EnableTxTimeGaurd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_EnableTxTimeGaurd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>TimeGaurd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Tx Timeout for USART. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">TimeGaurd</td><td>TimeGaurd value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>None </dd></dl>

</div>
</div>
<a id="a8b87ef0f6c9f2dfdea2358a47363be67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b87ef0f6c9f2dfdea2358a47363be67">&sect;&nbsp;</a></span>USART_GetChar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USART_GetChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads and returns a character from the USART. </p>
<dl class="section note"><dt>Note</dt><dd>This function is synchronous (i.e. uses polling). </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Character received. </dd></dl>

</div>
</div>
<a id="a978ff27f5cc5f033dcd5bf7a9a71dbcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a978ff27f5cc5f033dcd5bf7a9a71dbcd">&sect;&nbsp;</a></span>USART_GetItMask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t USART_GetItMask </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return interrupt mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a978ff27f5cc5f033dcd5bf7a9a71dbcd_icgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a02636838445be4a9a09aaa320567d666"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02636838445be4a9a09aaa320567d666">&sect;&nbsp;</a></span>USART_GetStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t USART_GetStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get present status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5d6f0dbab1e2c60024fdb58e71eb5ad2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d6f0dbab1e2c60024fdb58e71eb5ad2">&sect;&nbsp;</a></span>USART_IsDataAvailable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t USART_IsDataAvailable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns 1 if some data has been received and can be read from an USART; otherwise returns 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a02f248788c426b70d089409c1c38548f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02f248788c426b70d089409c1c38548f">&sect;&nbsp;</a></span>USART_IsRxReady()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t USART_IsRxReady </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return 1 if a character can be read in USART. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a80daa504b1ce9b4f31efa5258996d3fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80daa504b1ce9b4f31efa5258996d3fe">&sect;&nbsp;</a></span>USART_IsTxReady()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t USART_IsTxReady </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns 1 if the transmitter is ready; otherwise returns 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab0567c51f89573846ed7571dd839ebcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0567c51f89573846ed7571dd839ebcc">&sect;&nbsp;</a></span>USART_PutChar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_PutChar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends one packet of data through the specified USART peripheral. </p>
<p>This function operates synchronously, so it only returns when the data has been actually sent.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">c</td><td>Character to send </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac7360162f07a0b42c59bc94e0ce3e475"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7360162f07a0b42c59bc94e0ce3e475">&sect;&nbsp;</a></span>USART_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t USART_Read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">volatile uint32_t&#160;</td>
          <td class="paramname"><em>timeOut</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads and return a packet of data on the specified USART peripheral. </p>
<p>This function operates asynchronously, so it waits until some data has been received.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">timeOut</td><td>Time out value (0 -&gt; no timeout). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae2451d0cf9cc3558d7995d558f0527dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2451d0cf9cc3558d7995d558f0527dc">&sect;&nbsp;</a></span>USART_ResetRx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_ResetRx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets or disables the Receiver of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afbe4736584da2a8fbe2cd1d66567aa21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbe4736584da2a8fbe2cd1d66567aa21">&sect;&nbsp;</a></span>USART_ResetTx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_ResetTx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>resets and disables the transmitter of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2c462751711f86351d7f6503ff6c2063"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c462751711f86351d7f6503ff6c2063">&sect;&nbsp;</a></span>USART_SetBaudrate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_SetBaudrate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>OverSamp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>baudrate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>masterClock</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures an USART baudrate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to the USART peripheral to configure. </td></tr>
    <tr><td class="paramname">baudrate</td><td>Baudrate at which the USART should operate (in Hz). </td></tr>
    <tr><td class="paramname">masterClock</td><td>Frequency of the system master clock (in Hz). </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a2c462751711f86351d7f6503ff6c2063_icgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa299c70c15f0a174e9666209ded82cbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa299c70c15f0a174e9666209ded82cbf">&sect;&nbsp;</a></span>USART_SetIrdaFilter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_SetIrdaFilter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>filter</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a246df8753ea10e0ac19913c1dac062fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a246df8753ea10e0ac19913c1dac062fb">&sect;&nbsp;</a></span>USART_SetReceiverEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_SetReceiverEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables the receiver of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
    <tr><td class="paramname">enabled</td><td>If true, the receiver is enabled; otherwise it is disabled. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a246df8753ea10e0ac19913c1dac062fb_icgraph.svg" width="455" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1f9c6f1c6f5776df66022ede3667e908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f9c6f1c6f5776df66022ede3667e908">&sect;&nbsp;</a></span>USART_SetRTSEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_SetRTSEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables the Request To Send (RTS) of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
    <tr><td class="paramname">enabled</td><td>If true, the RTS is enabled (0); otherwise it is disabled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a18a00bc79be656904ce8c7043f4c6d19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18a00bc79be656904ce8c7043f4c6d19">&sect;&nbsp;</a></span>USART_SetTransmitterEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_SetTransmitterEnabled </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables the transmitter of an USART peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral </td></tr>
    <tr><td class="paramname">enabled</td><td>If true, the transmitter is enabled; otherwise it is disabled. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="usart_8h_a18a00bc79be656904ce8c7043f4c6d19_icgraph.svg" width="472" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a863e6a2ce2e4fc81dd3d008d231143e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a863e6a2ce2e4fc81dd3d008d231143e2">&sect;&nbsp;</a></span>USART_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USART_Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_usart.xhtml">Usart</a> *&#160;</td>
          <td class="paramname"><em>pUsart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">volatile uint32_t&#160;</td>
          <td class="paramname"><em>timeOut</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends one packet of data through the specified USART peripheral. </p>
<p>This function operates synchronously, so it only returns when the data has been actually sent.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsart</td><td>Pointer to an USART peripheral. </td></tr>
    <tr><td class="paramname">data</td><td>Data to send including 9nth bit and sync field if necessary (in the same format as the US_THR register in the datasheet). </td></tr>
    <tr><td class="paramname">timeOut</td><td>Time out value (0 = no timeout). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
