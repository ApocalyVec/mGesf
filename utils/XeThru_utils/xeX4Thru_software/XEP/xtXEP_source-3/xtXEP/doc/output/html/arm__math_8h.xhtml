<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/cmsis/CMSIS/Include/arm_math.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_74e208acb2b5db593baf5455224ab674.xhtml">cmsis</a></li><li class="navelem"><a class="el" href="dir_fd2588db4c2c5affdf1bbcee370aa10f.xhtml">CMSIS</a></li><li class="navelem"><a class="el" href="dir_b736d58476c43830a264712b5920737c.xhtml">Include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_math.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;string.h&quot;</code><br />
<code>#include &quot;<a class="el" href="math_8h_source.xhtml">math.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for arm_math.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h__incl.svg" width="212" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h__dep__incl.svg" width="707" height="275"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="arm__math_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q7 FIR filter.  <a href="structarm__fir__instance__q7.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 FIR filter.  <a href="structarm__fir__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 FIR filter.  <a href="structarm__fir__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point FIR filter.  <a href="structarm__fir__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 Biquad cascade filter.  <a href="structarm__biquad__casd__df1__inst__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 Biquad cascade filter.  <a href="structarm__biquad__casd__df1__inst__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point Biquad cascade filter.  <a href="structarm__biquad__casd__df1__inst__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point matrix structure.  <a href="structarm__matrix__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point matrix structure.  <a href="structarm__matrix__instance__f64.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 matrix structure.  <a href="structarm__matrix__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 matrix structure.  <a href="structarm__matrix__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 PID Control.  <a href="structarm__pid__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 PID Control.  <a href="structarm__pid__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point PID Control.  <a href="structarm__pid__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__linear__interp__instance__f32.xhtml">arm_linear_interp_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point Linear Interpolate function.  <a href="structarm__linear__interp__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__bilinear__interp__instance__f32.xhtml">arm_bilinear_interp_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point bilinear interpolation function.  <a href="structarm__bilinear__interp__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__bilinear__interp__instance__q31.xhtml">arm_bilinear_interp_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 bilinear interpolation function.  <a href="structarm__bilinear__interp__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__bilinear__interp__instance__q15.xhtml">arm_bilinear_interp_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 bilinear interpolation function.  <a href="structarm__bilinear__interp__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__bilinear__interp__instance__q7.xhtml">arm_bilinear_interp_instance_q7</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 bilinear interpolation function.  <a href="structarm__bilinear__interp__instance__q7.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 CFFT/CIFFT function.  <a href="structarm__cfft__radix2__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 CFFT/CIFFT function.  <a href="structarm__cfft__radix4__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Radix-2 Q31 CFFT/CIFFT function.  <a href="structarm__cfft__radix2__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 CFFT/CIFFT function.  <a href="structarm__cfft__radix4__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point CFFT/CIFFT function.  <a href="structarm__cfft__radix2__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point CFFT/CIFFT function.  <a href="structarm__cfft__radix4__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the fixed-point CFFT/CIFFT function.  <a href="structarm__cfft__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the fixed-point CFFT/CIFFT function.  <a href="structarm__cfft__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point CFFT/CIFFT function.  <a href="structarm__cfft__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 RFFT/RIFFT function.  <a href="structarm__rfft__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 RFFT/RIFFT function.  <a href="structarm__rfft__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point RFFT/RIFFT function.  <a href="structarm__rfft__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point RFFT/RIFFT function.  <a href="structarm__rfft__fast__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point DCT4/IDCT4 function.  <a href="structarm__dct4__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 DCT4/IDCT4 function.  <a href="structarm__dct4__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 DCT4/IDCT4 function.  <a href="structarm__dct4__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 FIR decimator.  <a href="structarm__fir__decimate__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 FIR decimator.  <a href="structarm__fir__decimate__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point FIR decimator.  <a href="structarm__fir__decimate__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 FIR interpolator.  <a href="structarm__fir__interpolate__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 FIR interpolator.  <a href="structarm__fir__interpolate__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point FIR interpolator.  <a href="structarm__fir__interpolate__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the high precision Q31 Biquad cascade filter.  <a href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point transposed direct form II Biquad cascade filter.  <a href="structarm__biquad__cascade__df2_t__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point transposed direct form II Biquad cascade filter.  <a href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point transposed direct form II Biquad cascade filter.  <a href="structarm__biquad__cascade__df2_t__instance__f64.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 FIR lattice filter.  <a href="structarm__fir__lattice__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 FIR lattice filter.  <a href="structarm__fir__lattice__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point FIR lattice filter.  <a href="structarm__fir__lattice__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 IIR lattice filter.  <a href="structarm__iir__lattice__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 IIR lattice filter.  <a href="structarm__iir__lattice__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point IIR lattice filter.  <a href="structarm__iir__lattice__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point LMS filter.  <a href="structarm__lms__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 LMS filter.  <a href="structarm__lms__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 LMS filter.  <a href="structarm__lms__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point normalized LMS filter.  <a href="structarm__lms__norm__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 normalized LMS filter.  <a href="structarm__lms__norm__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 normalized LMS filter.  <a href="structarm__lms__norm__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the floating-point sparse FIR filter.  <a href="structarm__fir__sparse__instance__f32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q31 sparse FIR filter.  <a href="structarm__fir__sparse__instance__q31.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q15 sparse FIR filter.  <a href="structarm__fir__sparse__instance__q15.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instance structure for the Q7 sparse FIR filter.  <a href="structarm__fir__sparse__instance__q7.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a87c3b351c33a90de11a2f23e67867a8a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a87c3b351c33a90de11a2f23e67867a8a">__CMSIS_GENERIC</a>&#160;&#160;&#160;/* disable <a class="el" href="group___c_m_s_i_s__core__base.xhtml#gac8e97e8ce56ae9f57da1363a937f8a17">NVIC</a> and Systick functions */</td></tr>
<tr class="separator:a87c3b351c33a90de11a2f23e67867a8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad77ae594e95c5af6ae4129bd6a483c2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aad77ae594e95c5af6ae4129bd6a483c2">DELTA_Q31</a>&#160;&#160;&#160;(0x100)</td></tr>
<tr class="memdesc:aad77ae594e95c5af6ae4129bd6a483c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macros required for reciprocal calculation in Normalized LMS.  <a href="#aad77ae594e95c5af6ae4129bd6a483c2">More...</a><br /></td></tr>
<tr class="separator:aad77ae594e95c5af6ae4129bd6a483c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a663277ff19ad0b409fb98b64b2c2750b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a663277ff19ad0b409fb98b64b2c2750b">DELTA_Q15</a>&#160;&#160;&#160;0x5</td></tr>
<tr class="separator:a663277ff19ad0b409fb98b64b2c2750b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29f839928f4752b73c8858d6dbb55294"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a29f839928f4752b73c8858d6dbb55294">INDEX_MASK</a>&#160;&#160;&#160;0x0000003F</td></tr>
<tr class="separator:a29f839928f4752b73c8858d6dbb55294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a598a3330b3c21701223ee0ca14316eca"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a598a3330b3c21701223ee0ca14316eca">PI</a>&#160;&#160;&#160;3.14159265358979f</td></tr>
<tr class="separator:a598a3330b3c21701223ee0ca14316eca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcb9147c96853bea484cfc2dde07463d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afcb9147c96853bea484cfc2dde07463d">FAST_MATH_TABLE_SIZE</a>&#160;&#160;&#160;512</td></tr>
<tr class="memdesc:afcb9147c96853bea484cfc2dde07463d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macros required for SINE and COSINE Fast math approximations.  <a href="#afcb9147c96853bea484cfc2dde07463d">More...</a><br /></td></tr>
<tr class="separator:afcb9147c96853bea484cfc2dde07463d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4268f77b1811a0c7fc2532a0bf6108b0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4268f77b1811a0c7fc2532a0bf6108b0">FAST_MATH_Q31_SHIFT</a>&#160;&#160;&#160;(32 - 10)</td></tr>
<tr class="separator:a4268f77b1811a0c7fc2532a0bf6108b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34716b73c631e65e8dd855e08384ecb2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a34716b73c631e65e8dd855e08384ecb2">FAST_MATH_Q15_SHIFT</a>&#160;&#160;&#160;(16 - 10)</td></tr>
<tr class="separator:a34716b73c631e65e8dd855e08384ecb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff6d2358c4ada8de838a279254ab550"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aaff6d2358c4ada8de838a279254ab550">CONTROLLER_Q31_SHIFT</a>&#160;&#160;&#160;(32 - 9)</td></tr>
<tr class="separator:aaff6d2358c4ada8de838a279254ab550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a032503e76d6f69bc67e99e909c8125da"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a032503e76d6f69bc67e99e909c8125da">TABLE_SIZE</a>&#160;&#160;&#160;256</td></tr>
<tr class="separator:a032503e76d6f69bc67e99e909c8125da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8407c9e1347d10e3bcf0a7014f1fb2ff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8407c9e1347d10e3bcf0a7014f1fb2ff">TABLE_SPACING_Q31</a>&#160;&#160;&#160;0x400000</td></tr>
<tr class="separator:a8407c9e1347d10e3bcf0a7014f1fb2ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b0142af7be007902142add27919b82"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a60b0142af7be007902142add27919b82">TABLE_SPACING_Q15</a>&#160;&#160;&#160;0x80</td></tr>
<tr class="separator:a60b0142af7be007902142add27919b82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1339e9abc11a3870e0c04f822a62166a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1339e9abc11a3870e0c04f822a62166a">INPUT_SPACING</a>&#160;&#160;&#160;0xB60B61</td></tr>
<tr class="memdesc:a1339e9abc11a3870e0c04f822a62166a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macros required for SINE and COSINE Controller functions.  <a href="#a1339e9abc11a3870e0c04f822a62166a">More...</a><br /></td></tr>
<tr class="separator:a1339e9abc11a3870e0c04f822a62166a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a280a402ab28c399fcc4168f2ed631acb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a280a402ab28c399fcc4168f2ed631acb">ALIGN4</a></td></tr>
<tr class="memdesc:a280a402ab28c399fcc4168f2ed631acb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro for Unaligned Support.  <a href="#a280a402ab28c399fcc4168f2ed631acb">More...</a><br /></td></tr>
<tr class="separator:a280a402ab28c399fcc4168f2ed631acb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9de2e0a5785be82866bcb96012282248"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9de2e0a5785be82866bcb96012282248">__SIMD32</a>(addr)&#160;&#160;&#160;(*(__SIMD32_TYPE **) &amp; (addr))</td></tr>
<tr class="memdesc:a9de2e0a5785be82866bcb96012282248"><td class="mdescLeft">&#160;</td><td class="mdescRight">definition to read/write two 16 bit values.  <a href="#a9de2e0a5785be82866bcb96012282248">More...</a><br /></td></tr>
<tr class="separator:a9de2e0a5785be82866bcb96012282248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1185d670d798aaf52eec13f0403f3407"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1185d670d798aaf52eec13f0403f3407">__SIMD32_CONST</a>(addr)&#160;&#160;&#160;((__SIMD32_TYPE *)(addr))</td></tr>
<tr class="separator:a1185d670d798aaf52eec13f0403f3407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0d54ec57b936994a34f073d0049ea3f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af0d54ec57b936994a34f073d0049ea3f">_SIMD32_OFFSET</a>(addr)&#160;&#160;&#160;(*(__SIMD32_TYPE *)  (addr))</td></tr>
<tr class="separator:af0d54ec57b936994a34f073d0049ea3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b053da364f9fd82ca1a381df7590b6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad1b053da364f9fd82ca1a381df7590b6">__SIMD64</a>(addr)&#160;&#160;&#160;(*(int64_t **) &amp; (addr))</td></tr>
<tr class="separator:ad1b053da364f9fd82ca1a381df7590b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ebff224ad44c217fde9f530342e2960"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3ebff224ad44c217fde9f530342e2960">__PACKq7</a>(v0,  v1,  v2,  v3)</td></tr>
<tr class="memdesc:a3ebff224ad44c217fde9f530342e2960"><td class="mdescLeft">&#160;</td><td class="mdescRight">definition to pack four 8 bit values.  <a href="#a3ebff224ad44c217fde9f530342e2960">More...</a><br /></td></tr>
<tr class="separator:a3ebff224ad44c217fde9f530342e2960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba3e538352fc7f9d6d15f9a18d469399"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aba3e538352fc7f9d6d15f9a18d469399">multAcc_32x32_keep32_R</a>(a,  x,  y)&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) a) &lt;&lt; 32) + ((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) + 0x80000000LL ) &gt;&gt; 32)</td></tr>
<tr class="memdesc:aba3e538352fc7f9d6d15f9a18d469399"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of BilinearInterpolate group  <a href="#aba3e538352fc7f9d6d15f9a18d469399">More...</a><br /></td></tr>
<tr class="separator:aba3e538352fc7f9d6d15f9a18d469399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668fbf1cd1c3bc8faf1b1c83964ade23"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a668fbf1cd1c3bc8faf1b1c83964ade23">multSub_32x32_keep32_R</a>(a,  x,  y)&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) a) &lt;&lt; 32) - ((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) + 0x80000000LL ) &gt;&gt; 32)</td></tr>
<tr class="separator:a668fbf1cd1c3bc8faf1b1c83964ade23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a960f210642058d2b3d5368729a6e8375"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a960f210642058d2b3d5368729a6e8375">mult_32x32_keep32_R</a>(a,  x,  y)&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y + 0x80000000LL ) &gt;&gt; 32)</td></tr>
<tr class="separator:a960f210642058d2b3d5368729a6e8375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58454519e12e8157f0a1c36071333655"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a58454519e12e8157f0a1c36071333655">multAcc_32x32_keep32</a>(a,  x,  y)&#160;&#160;&#160;a += (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) &gt;&gt; 32)</td></tr>
<tr class="separator:a58454519e12e8157f0a1c36071333655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec66f3082a4c65c78075638255f42ab"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9ec66f3082a4c65c78075638255f42ab">multSub_32x32_keep32</a>(a,  x,  y)&#160;&#160;&#160;a -= (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) &gt;&gt; 32)</td></tr>
<tr class="separator:a9ec66f3082a4c65c78075638255f42ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4baa0192bbb6fabc9251af4b4cb322"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abb4baa0192bbb6fabc9251af4b4cb322">mult_32x32_keep32</a>(a,  x,  y)&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y ) &gt;&gt; 32)</td></tr>
<tr class="separator:abb4baa0192bbb6fabc9251af4b4cb322"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae541b6f232c305361e9b416fc9eed263"><td class="memItemLeft" align="right" valign="top">typedef int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a></td></tr>
<tr class="memdesc:ae541b6f232c305361e9b416fc9eed263"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-bit fractional data type in 1.7 format.  <a href="#ae541b6f232c305361e9b416fc9eed263">More...</a><br /></td></tr>
<tr class="separator:ae541b6f232c305361e9b416fc9eed263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5a8fb21a5b3b983d5f54f31614052ea"><td class="memItemLeft" align="right" valign="top">typedef int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a></td></tr>
<tr class="memdesc:ab5a8fb21a5b3b983d5f54f31614052ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">16-bit fractional data type in 1.15 format.  <a href="#ab5a8fb21a5b3b983d5f54f31614052ea">More...</a><br /></td></tr>
<tr class="separator:ab5a8fb21a5b3b983d5f54f31614052ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc89a3547f5324b7b3b95adec3806bc0"><td class="memItemLeft" align="right" valign="top">typedef int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a></td></tr>
<tr class="memdesc:adc89a3547f5324b7b3b95adec3806bc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit fractional data type in 1.31 format.  <a href="#adc89a3547f5324b7b3b95adec3806bc0">More...</a><br /></td></tr>
<tr class="separator:adc89a3547f5324b7b3b95adec3806bc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aea1cb12fc02d9d44c8abf217eaa5c6"><td class="memItemLeft" align="right" valign="top">typedef int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a></td></tr>
<tr class="memdesc:a5aea1cb12fc02d9d44c8abf217eaa5c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit fractional data type in 1.63 format.  <a href="#a5aea1cb12fc02d9d44c8abf217eaa5c6">More...</a><br /></td></tr>
<tr class="separator:a5aea1cb12fc02d9d44c8abf217eaa5c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4611b605e45ab401f02cab15c5e38715"><td class="memItemLeft" align="right" valign="top">typedef float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td></tr>
<tr class="memdesc:a4611b605e45ab401f02cab15c5e38715"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit floating-point type definition.  <a href="#a4611b605e45ab401f02cab15c5e38715">More...</a><br /></td></tr>
<tr class="separator:a4611b605e45ab401f02cab15c5e38715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac55f3ae81b5bc9053760baacf57e47f4"><td class="memItemLeft" align="right" valign="top">typedef double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a></td></tr>
<tr class="memdesc:ac55f3ae81b5bc9053760baacf57e47f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit floating-point type definition.  <a href="#ac55f3ae81b5bc9053760baacf57e47f4">More...</a><br /></td></tr>
<tr class="separator:ac55f3ae81b5bc9053760baacf57e47f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a5e459c6409dfcd2927bb8a57491d7cf6"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> { <br />
&#160;&#160;<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0">ARM_MATH_SUCCESS</a> = 0, 
<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35">ARM_MATH_ARGUMENT_ERROR</a> = -1, 
<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1">ARM_MATH_LENGTH_ERROR</a> = -2, 
<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b">ARM_MATH_SIZE_MISMATCH</a> = -3, 
<br />
&#160;&#160;<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc">ARM_MATH_NANINF</a> = -4, 
<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc">ARM_MATH_SINGULAR</a> = -5, 
<a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376">ARM_MATH_TEST_FAILURE</a> = -6
<br />
 }<tr class="memdesc:a5e459c6409dfcd2927bb8a57491d7cf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error status returned by some functions in the library.  <a href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a5e459c6409dfcd2927bb8a57491d7cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ad7373e53d3c2e1adfeafc8c2e9720b5c"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad7373e53d3c2e1adfeafc8c2e9720b5c">clip_q63_to_q31</a> (<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> x)</td></tr>
<tr class="memdesc:ad7373e53d3c2e1adfeafc8c2e9720b5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clips Q63 to Q31 values.  <a href="#ad7373e53d3c2e1adfeafc8c2e9720b5c">More...</a><br /></td></tr>
<tr class="separator:ad7373e53d3c2e1adfeafc8c2e9720b5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f1e5d0d276f42217e75f071ca84a2e"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aa6f1e5d0d276f42217e75f071ca84a2e">clip_q63_to_q15</a> (<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> x)</td></tr>
<tr class="memdesc:aa6f1e5d0d276f42217e75f071ca84a2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clips Q63 to Q15 values.  <a href="#aa6f1e5d0d276f42217e75f071ca84a2e">More...</a><br /></td></tr>
<tr class="separator:aa6f1e5d0d276f42217e75f071ca84a2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9918ce19228b0d4f072fb84776eabc1"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aa9918ce19228b0d4f072fb84776eabc1">clip_q31_to_q7</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x)</td></tr>
<tr class="memdesc:aa9918ce19228b0d4f072fb84776eabc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clips Q31 to Q7 values.  <a href="#aa9918ce19228b0d4f072fb84776eabc1">More...</a><br /></td></tr>
<tr class="separator:aa9918ce19228b0d4f072fb84776eabc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af3ca330e14587289518e6565fd04bd"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4af3ca330e14587289518e6565fd04bd">clip_q31_to_q15</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x)</td></tr>
<tr class="memdesc:a4af3ca330e14587289518e6565fd04bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clips Q31 to Q15 values.  <a href="#a4af3ca330e14587289518e6565fd04bd">More...</a><br /></td></tr>
<tr class="separator:a4af3ca330e14587289518e6565fd04bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a642a29d71f7951a7f6c0b797c300b711"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a642a29d71f7951a7f6c0b797c300b711">mult32x64</a> (<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> x, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> y)</td></tr>
<tr class="memdesc:a642a29d71f7951a7f6c0b797c300b711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies 32 X 64 and returns 32 bit result in 2.30 format.  <a href="#a642a29d71f7951a7f6c0b797c300b711">More...</a><br /></td></tr>
<tr class="separator:a642a29d71f7951a7f6c0b797c300b711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43140f04ca94c2a7394e7a222e2d8fb4"><td class="memItemLeft" align="right" valign="top">static __INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a43140f04ca94c2a7394e7a222e2d8fb4">arm_recip_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> in, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *dst, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pRecipTable)</td></tr>
<tr class="memdesc:a43140f04ca94c2a7394e7a222e2d8fb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to Calculates 1/in (reciprocal) value of Q31 Data type.  <a href="#a43140f04ca94c2a7394e7a222e2d8fb4">More...</a><br /></td></tr>
<tr class="separator:a43140f04ca94c2a7394e7a222e2d8fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c66e370a6ae91aaafbaec5e979198d7"><td class="memItemLeft" align="right" valign="top">static __INLINE uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1c66e370a6ae91aaafbaec5e979198d7">arm_recip_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> in, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *dst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pRecipTable)</td></tr>
<tr class="memdesc:a1c66e370a6ae91aaafbaec5e979198d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to Calculates 1/in (reciprocal) value of Q15 Data type.  <a href="#a1c66e370a6ae91aaafbaec5e979198d7">More...</a><br /></td></tr>
<tr class="separator:a1c66e370a6ae91aaafbaec5e979198d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31c91a0bf0962327ef8f626fae68ea32"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a31c91a0bf0962327ef8f626fae68ea32">arm_fir_q7</a> (const <a class="el" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> *S, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a31c91a0bf0962327ef8f626fae68ea32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q7 FIR filter.  <a href="#a31c91a0bf0962327ef8f626fae68ea32">More...</a><br /></td></tr>
<tr class="separator:a31c91a0bf0962327ef8f626fae68ea32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e48688224d42dc173dbcec702f0c1d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a88e48688224d42dc173dbcec702f0c1d">arm_fir_init_q7</a> (<a class="el" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a88e48688224d42dc173dbcec702f0c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q7 FIR filter.  <a href="#a88e48688224d42dc173dbcec702f0c1d">More...</a><br /></td></tr>
<tr class="separator:a88e48688224d42dc173dbcec702f0c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a262d173058d6f80fdf60404ba262a8f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a262d173058d6f80fdf60404ba262a8f5">arm_fir_q15</a> (const <a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a262d173058d6f80fdf60404ba262a8f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 FIR filter.  <a href="#a262d173058d6f80fdf60404ba262a8f5">More...</a><br /></td></tr>
<tr class="separator:a262d173058d6f80fdf60404ba262a8f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7d35e9472e49ccd88800f37f3476bd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac7d35e9472e49ccd88800f37f3476bd3">arm_fir_fast_q15</a> (const <a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ac7d35e9472e49ccd88800f37f3476bd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.  <a href="#ac7d35e9472e49ccd88800f37f3476bd3">More...</a><br /></td></tr>
<tr class="separator:ac7d35e9472e49ccd88800f37f3476bd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2a50f692f41ba57e44ed0719b1368bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae2a50f692f41ba57e44ed0719b1368bd">arm_fir_init_q15</a> (<a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae2a50f692f41ba57e44ed0719b1368bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 FIR filter.  <a href="#ae2a50f692f41ba57e44ed0719b1368bd">More...</a><br /></td></tr>
<tr class="separator:ae2a50f692f41ba57e44ed0719b1368bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd938c68ab08967cbb5fc696f384bb5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aadd938c68ab08967cbb5fc696f384bb5">arm_fir_q31</a> (const <a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aadd938c68ab08967cbb5fc696f384bb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 FIR filter.  <a href="#aadd938c68ab08967cbb5fc696f384bb5">More...</a><br /></td></tr>
<tr class="separator:aadd938c68ab08967cbb5fc696f384bb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55aa292e057b43c376428ea1d9a938cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a55aa292e057b43c376428ea1d9a938cc">arm_fir_fast_q31</a> (const <a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a55aa292e057b43c376428ea1d9a938cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.  <a href="#a55aa292e057b43c376428ea1d9a938cc">More...</a><br /></td></tr>
<tr class="separator:a55aa292e057b43c376428ea1d9a938cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac00d53af87684cbbe135767b55e748a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac00d53af87684cbbe135767b55e748a5">arm_fir_init_q31</a> (<a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:ac00d53af87684cbbe135767b55e748a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 FIR filter.  <a href="#ac00d53af87684cbbe135767b55e748a5">More...</a><br /></td></tr>
<tr class="separator:ac00d53af87684cbbe135767b55e748a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8fb334ea67eb6ecbd31824ddc14cd6a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae8fb334ea67eb6ecbd31824ddc14cd6a">arm_fir_f32</a> (const <a class="el" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae8fb334ea67eb6ecbd31824ddc14cd6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point FIR filter.  <a href="#ae8fb334ea67eb6ecbd31824ddc14cd6a">More...</a><br /></td></tr>
<tr class="separator:ae8fb334ea67eb6ecbd31824ddc14cd6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d13def6427e29522829f945d0967db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a98d13def6427e29522829f945d0967db">arm_fir_init_f32</a> (<a class="el" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> *S, uint16_t numTaps, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a98d13def6427e29522829f945d0967db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point FIR filter.  <a href="#a98d13def6427e29522829f945d0967db">More...</a><br /></td></tr>
<tr class="separator:a98d13def6427e29522829f945d0967db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add66a0aefdc645031d607b0a5b37a942"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#add66a0aefdc645031d607b0a5b37a942">arm_biquad_cascade_df1_q15</a> (const <a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:add66a0aefdc645031d607b0a5b37a942"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 Biquad cascade filter.  <a href="#add66a0aefdc645031d607b0a5b37a942">More...</a><br /></td></tr>
<tr class="separator:add66a0aefdc645031d607b0a5b37a942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad54c724132f6d742a444eb6df0e9c731"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad54c724132f6d742a444eb6df0e9c731">arm_biquad_cascade_df1_init_q15</a> (<a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *S, uint8_t numStages, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, int8_t postShift)</td></tr>
<tr class="memdesc:ad54c724132f6d742a444eb6df0e9c731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 Biquad cascade filter.  <a href="#ad54c724132f6d742a444eb6df0e9c731">More...</a><br /></td></tr>
<tr class="separator:ad54c724132f6d742a444eb6df0e9c731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affb9792c0220882efd4c58f3c6a05fd7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#affb9792c0220882efd4c58f3c6a05fd7">arm_biquad_cascade_df1_fast_q15</a> (const <a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:affb9792c0220882efd4c58f3c6a05fd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-M3 and Cortex-M4.  <a href="#affb9792c0220882efd4c58f3c6a05fd7">More...</a><br /></td></tr>
<tr class="separator:affb9792c0220882efd4c58f3c6a05fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27b0c54da702713976e5202d20b4473f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a27b0c54da702713976e5202d20b4473f">arm_biquad_cascade_df1_q31</a> (const <a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a27b0c54da702713976e5202d20b4473f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 Biquad cascade filter.  <a href="#a27b0c54da702713976e5202d20b4473f">More...</a><br /></td></tr>
<tr class="separator:a27b0c54da702713976e5202d20b4473f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a456390f5e448afad3a38bed7d6e380e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a456390f5e448afad3a38bed7d6e380e3">arm_biquad_cascade_df1_fast_q31</a> (const <a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a456390f5e448afad3a38bed7d6e380e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-M3 and Cortex-M4.  <a href="#a456390f5e448afad3a38bed7d6e380e3">More...</a><br /></td></tr>
<tr class="separator:a456390f5e448afad3a38bed7d6e380e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42a44f9b16d61e636418c83eefe577b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af42a44f9b16d61e636418c83eefe577b">arm_biquad_cascade_df1_init_q31</a> (<a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *S, uint8_t numStages, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, int8_t postShift)</td></tr>
<tr class="memdesc:af42a44f9b16d61e636418c83eefe577b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 Biquad cascade filter.  <a href="#af42a44f9b16d61e636418c83eefe577b">More...</a><br /></td></tr>
<tr class="separator:af42a44f9b16d61e636418c83eefe577b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0dbe330d763e3c1d8030b3ef12d5bdc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aa0dbe330d763e3c1d8030b3ef12d5bdc">arm_biquad_cascade_df1_f32</a> (const <a class="el" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aa0dbe330d763e3c1d8030b3ef12d5bdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point Biquad cascade filter.  <a href="#aa0dbe330d763e3c1d8030b3ef12d5bdc">More...</a><br /></td></tr>
<tr class="separator:aa0dbe330d763e3c1d8030b3ef12d5bdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e73b69a788e681a61bccc8959d823c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8e73b69a788e681a61bccc8959d823c5">arm_biquad_cascade_df1_init_f32</a> (<a class="el" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> *S, uint8_t numStages, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState)</td></tr>
<tr class="memdesc:a8e73b69a788e681a61bccc8959d823c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point Biquad cascade filter.  <a href="#a8e73b69a788e681a61bccc8959d823c5">More...</a><br /></td></tr>
<tr class="separator:a8e73b69a788e681a61bccc8959d823c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04bbf64a5f9c9e57dd1efb26a768aba1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a04bbf64a5f9c9e57dd1efb26a768aba1">arm_mat_add_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcB, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:a04bbf64a5f9c9e57dd1efb26a768aba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix addition.  <a href="#a04bbf64a5f9c9e57dd1efb26a768aba1">More...</a><br /></td></tr>
<tr class="separator:a04bbf64a5f9c9e57dd1efb26a768aba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a147e90b7c12a162735ab8824127a33ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a147e90b7c12a162735ab8824127a33ee">arm_mat_add_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst)</td></tr>
<tr class="memdesc:a147e90b7c12a162735ab8824127a33ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix addition.  <a href="#a147e90b7c12a162735ab8824127a33ee">More...</a><br /></td></tr>
<tr class="separator:a147e90b7c12a162735ab8824127a33ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9d7d81a0832a17b831aad1e4a5dc16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7d9d7d81a0832a17b831aad1e4a5dc16">arm_mat_add_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a7d9d7d81a0832a17b831aad1e4a5dc16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix addition.  <a href="#a7d9d7d81a0832a17b831aad1e4a5dc16">More...</a><br /></td></tr>
<tr class="separator:a7d9d7d81a0832a17b831aad1e4a5dc16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1adb839ac84445b8c2f04efa43faef35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1adb839ac84445b8c2f04efa43faef35">arm_mat_cmplx_mult_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcB, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:a1adb839ac84445b8c2f04efa43faef35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point, complex, matrix multiplication.  <a href="#a1adb839ac84445b8c2f04efa43faef35">More...</a><br /></td></tr>
<tr class="separator:a1adb839ac84445b8c2f04efa43faef35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63066615e7d6f6a44f4358725092419e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a63066615e7d6f6a44f4358725092419e">arm_mat_cmplx_mult_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch)</td></tr>
<tr class="memdesc:a63066615e7d6f6a44f4358725092419e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15, complex, matrix multiplication.  <a href="#a63066615e7d6f6a44f4358725092419e">More...</a><br /></td></tr>
<tr class="separator:a63066615e7d6f6a44f4358725092419e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3c0b171ca8412c77bab9fa90804737"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aaf3c0b171ca8412c77bab9fa90804737">arm_mat_cmplx_mult_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:aaf3c0b171ca8412c77bab9fa90804737"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31, complex, matrix multiplication.  <a href="#aaf3c0b171ca8412c77bab9fa90804737">More...</a><br /></td></tr>
<tr class="separator:aaf3c0b171ca8412c77bab9fa90804737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7dd9f108429da13d3864696ceeec789"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad7dd9f108429da13d3864696ceeec789">arm_mat_trans_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrc, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:ad7dd9f108429da13d3864696ceeec789"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix transpose.  <a href="#ad7dd9f108429da13d3864696ceeec789">More...</a><br /></td></tr>
<tr class="separator:ad7dd9f108429da13d3864696ceeec789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f4f821cc695fd0ef9061d702e08050a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4f4f821cc695fd0ef9061d702e08050a">arm_mat_trans_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrc, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst)</td></tr>
<tr class="memdesc:a4f4f821cc695fd0ef9061d702e08050a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix transpose.  <a href="#a4f4f821cc695fd0ef9061d702e08050a">More...</a><br /></td></tr>
<tr class="separator:a4f4f821cc695fd0ef9061d702e08050a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30a4d49489ac67ff98a46b9f58f73bf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a30a4d49489ac67ff98a46b9f58f73bf1">arm_mat_trans_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrc, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a30a4d49489ac67ff98a46b9f58f73bf1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix transpose.  <a href="#a30a4d49489ac67ff98a46b9f58f73bf1">More...</a><br /></td></tr>
<tr class="separator:a30a4d49489ac67ff98a46b9f58f73bf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917bf0270310c1d3f0eda1fc7c0026a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a917bf0270310c1d3f0eda1fc7c0026a0">arm_mat_mult_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcB, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:a917bf0270310c1d3f0eda1fc7c0026a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix multiplication.  <a href="#a917bf0270310c1d3f0eda1fc7c0026a0">More...</a><br /></td></tr>
<tr class="separator:a917bf0270310c1d3f0eda1fc7c0026a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7521d59196189bb6dde26e8cdfb66e21"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7521d59196189bb6dde26e8cdfb66e21">arm_mat_mult_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState)</td></tr>
<tr class="memdesc:a7521d59196189bb6dde26e8cdfb66e21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix multiplication.  <a href="#a7521d59196189bb6dde26e8cdfb66e21">More...</a><br /></td></tr>
<tr class="separator:a7521d59196189bb6dde26e8cdfb66e21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f37d93a5bfef0c5000dc5e0a411f93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a08f37d93a5bfef0c5000dc5e0a411f93">arm_mat_mult_fast_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState)</td></tr>
<tr class="memdesc:a08f37d93a5bfef0c5000dc5e0a411f93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4.  <a href="#a08f37d93a5bfef0c5000dc5e0a411f93">More...</a><br /></td></tr>
<tr class="separator:a08f37d93a5bfef0c5000dc5e0a411f93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ec612a8c2c4916477fb9bc1ab548a6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2ec612a8c2c4916477fb9bc1ab548a6e">arm_mat_mult_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a2ec612a8c2c4916477fb9bc1ab548a6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix multiplication.  <a href="#a2ec612a8c2c4916477fb9bc1ab548a6e">More...</a><br /></td></tr>
<tr class="separator:a2ec612a8c2c4916477fb9bc1ab548a6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2785e8c1b785348b0c439b56aaf585a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2785e8c1b785348b0c439b56aaf585a3">arm_mat_mult_fast_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a2785e8c1b785348b0c439b56aaf585a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4.  <a href="#a2785e8c1b785348b0c439b56aaf585a3">More...</a><br /></td></tr>
<tr class="separator:a2785e8c1b785348b0c439b56aaf585a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8b72fb70246ccfee3b372002345732c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac8b72fb70246ccfee3b372002345732c">arm_mat_sub_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrcB, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:ac8b72fb70246ccfee3b372002345732c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix subtraction.  <a href="#ac8b72fb70246ccfee3b372002345732c">More...</a><br /></td></tr>
<tr class="separator:ac8b72fb70246ccfee3b372002345732c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af647776a425b7f9dd0aca3e11d81f02f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af647776a425b7f9dd0aca3e11d81f02f">arm_mat_sub_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst)</td></tr>
<tr class="memdesc:af647776a425b7f9dd0aca3e11d81f02f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix subtraction.  <a href="#af647776a425b7f9dd0aca3e11d81f02f">More...</a><br /></td></tr>
<tr class="separator:af647776a425b7f9dd0aca3e11d81f02f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f42e0e3b7f115fbb909d6ff4e1329d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a39f42e0e3b7f115fbb909d6ff4e1329d">arm_mat_sub_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcA, const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrcB, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a39f42e0e3b7f115fbb909d6ff4e1329d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix subtraction.  <a href="#a39f42e0e3b7f115fbb909d6ff4e1329d">More...</a><br /></td></tr>
<tr class="separator:a39f42e0e3b7f115fbb909d6ff4e1329d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cb4e385b18c9a0b9cbc940c1067ca12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9cb4e385b18c9a0b9cbc940c1067ca12">arm_mat_scale_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> scale, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *pDst)</td></tr>
<tr class="memdesc:a9cb4e385b18c9a0b9cbc940c1067ca12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix scaling.  <a href="#a9cb4e385b18c9a0b9cbc940c1067ca12">More...</a><br /></td></tr>
<tr class="separator:a9cb4e385b18c9a0b9cbc940c1067ca12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7521769e2cf1c3d9c4656138cd2ae2ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7521769e2cf1c3d9c4656138cd2ae2ca">arm_mat_scale_q15</a> (const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> scaleFract, int32_t shift, <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *pDst)</td></tr>
<tr class="memdesc:a7521769e2cf1c3d9c4656138cd2ae2ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix scaling.  <a href="#a7521769e2cf1c3d9c4656138cd2ae2ca">More...</a><br /></td></tr>
<tr class="separator:a7521769e2cf1c3d9c4656138cd2ae2ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a609743821ee81fa8c34c4bcdc1ed9744"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a609743821ee81fa8c34c4bcdc1ed9744">arm_mat_scale_q31</a> (const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> scaleFract, int32_t shift, <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *pDst)</td></tr>
<tr class="memdesc:a609743821ee81fa8c34c4bcdc1ed9744"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix scaling.  <a href="#a609743821ee81fa8c34c4bcdc1ed9744">More...</a><br /></td></tr>
<tr class="separator:a609743821ee81fa8c34c4bcdc1ed9744"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a5e5d37e1f062cc57fcfaf683343cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a48a5e5d37e1f062cc57fcfaf683343cc">arm_mat_init_q31</a> (<a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *S, uint16_t nRows, uint16_t nColumns, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pData)</td></tr>
<tr class="memdesc:a48a5e5d37e1f062cc57fcfaf683343cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 matrix initialization.  <a href="#a48a5e5d37e1f062cc57fcfaf683343cc">More...</a><br /></td></tr>
<tr class="separator:a48a5e5d37e1f062cc57fcfaf683343cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31a7c2b991803d49719393eb2d53dc26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a31a7c2b991803d49719393eb2d53dc26">arm_mat_init_q15</a> (<a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *S, uint16_t nRows, uint16_t nColumns, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pData)</td></tr>
<tr class="memdesc:a31a7c2b991803d49719393eb2d53dc26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 matrix initialization.  <a href="#a31a7c2b991803d49719393eb2d53dc26">More...</a><br /></td></tr>
<tr class="separator:a31a7c2b991803d49719393eb2d53dc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11e3dc41592a6401c13182fef9416a27"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a11e3dc41592a6401c13182fef9416a27">arm_mat_init_f32</a> (<a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *S, uint16_t nRows, uint16_t nColumns, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pData)</td></tr>
<tr class="memdesc:a11e3dc41592a6401c13182fef9416a27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix initialization.  <a href="#a11e3dc41592a6401c13182fef9416a27">More...</a><br /></td></tr>
<tr class="separator:a11e3dc41592a6401c13182fef9416a27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae31536b19b82b93ed184fb1ab73cfcb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae31536b19b82b93ed184fb1ab73cfcb3">arm_pid_init_f32</a> (<a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> *S, int32_t resetStateFlag)</td></tr>
<tr class="memdesc:ae31536b19b82b93ed184fb1ab73cfcb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point PID Control.  <a href="#ae31536b19b82b93ed184fb1ab73cfcb3">More...</a><br /></td></tr>
<tr class="separator:ae31536b19b82b93ed184fb1ab73cfcb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec860bcb6f8ca31205bf0f1b51ab723"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9ec860bcb6f8ca31205bf0f1b51ab723">arm_pid_reset_f32</a> (<a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> *S)</td></tr>
<tr class="memdesc:a9ec860bcb6f8ca31205bf0f1b51ab723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset function for the floating-point PID Control.  <a href="#a9ec860bcb6f8ca31205bf0f1b51ab723">More...</a><br /></td></tr>
<tr class="separator:a9ec860bcb6f8ca31205bf0f1b51ab723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d88485234fa9460b1ce9e64989ac86"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad9d88485234fa9460b1ce9e64989ac86">arm_pid_init_q31</a> (<a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> *S, int32_t resetStateFlag)</td></tr>
<tr class="memdesc:ad9d88485234fa9460b1ce9e64989ac86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 PID Control.  <a href="#ad9d88485234fa9460b1ce9e64989ac86">More...</a><br /></td></tr>
<tr class="separator:ad9d88485234fa9460b1ce9e64989ac86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecbacd3fb37c608ec25474d3a0dffa9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aeecbacd3fb37c608ec25474d3a0dffa9">arm_pid_reset_q31</a> (<a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> *S)</td></tr>
<tr class="memdesc:aeecbacd3fb37c608ec25474d3a0dffa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset function for the Q31 PID Control.  <a href="#aeecbacd3fb37c608ec25474d3a0dffa9">More...</a><br /></td></tr>
<tr class="separator:aeecbacd3fb37c608ec25474d3a0dffa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb1e3d3ebb167348fdabec74653d5c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2cb1e3d3ebb167348fdabec74653d5c3">arm_pid_init_q15</a> (<a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> *S, int32_t resetStateFlag)</td></tr>
<tr class="memdesc:a2cb1e3d3ebb167348fdabec74653d5c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 PID Control.  <a href="#a2cb1e3d3ebb167348fdabec74653d5c3">More...</a><br /></td></tr>
<tr class="separator:a2cb1e3d3ebb167348fdabec74653d5c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408566dacb4fa6e0458b2c75672e525f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a408566dacb4fa6e0458b2c75672e525f">arm_pid_reset_q15</a> (<a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> *S)</td></tr>
<tr class="memdesc:a408566dacb4fa6e0458b2c75672e525f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset function for the Q15 PID Control.  <a href="#a408566dacb4fa6e0458b2c75672e525f">More...</a><br /></td></tr>
<tr class="separator:a408566dacb4fa6e0458b2c75672e525f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16677275ed83ff0878da531e875c27ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a16677275ed83ff0878da531e875c27ef">arm_mult_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a16677275ed83ff0878da531e875c27ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 vector multiplication.  <a href="#a16677275ed83ff0878da531e875c27ef">More...</a><br /></td></tr>
<tr class="separator:a16677275ed83ff0878da531e875c27ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb0778d27ed98a2a6f2ecb7d48cc8c75"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afb0778d27ed98a2a6f2ecb7d48cc8c75">arm_mult_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:afb0778d27ed98a2a6f2ecb7d48cc8c75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 vector multiplication.  <a href="#afb0778d27ed98a2a6f2ecb7d48cc8c75">More...</a><br /></td></tr>
<tr class="separator:afb0778d27ed98a2a6f2ecb7d48cc8c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3528c0f54a0607acc603f0490d3ca6c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3528c0f54a0607acc603f0490d3ca6c6">arm_mult_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a3528c0f54a0607acc603f0490d3ca6c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 vector multiplication.  <a href="#a3528c0f54a0607acc603f0490d3ca6c6">More...</a><br /></td></tr>
<tr class="separator:a3528c0f54a0607acc603f0490d3ca6c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca3f0b8227da431ab29225b88888aa32"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aca3f0b8227da431ab29225b88888aa32">arm_mult_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aca3f0b8227da431ab29225b88888aa32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point vector multiplication.  <a href="#aca3f0b8227da431ab29225b88888aa32">More...</a><br /></td></tr>
<tr class="separator:aca3f0b8227da431ab29225b88888aa32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c5b2127b3c4ea2d03692127f8543858"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5c5b2127b3c4ea2d03692127f8543858">arm_cfft_radix2_init_q15</a> (<a class="el" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:a5c5b2127b3c4ea2d03692127f8543858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b424341dc3efd3fa0bcaaff4bdbf40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a55b424341dc3efd3fa0bcaaff4bdbf40">arm_cfft_radix2_q15</a> (const <a class="el" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc)</td></tr>
<tr class="separator:a55b424341dc3efd3fa0bcaaff4bdbf40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c2acfda3126c452e75b81669e8ad9ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0c2acfda3126c452e75b81669e8ad9ef">arm_cfft_radix4_init_q15</a> (<a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:a0c2acfda3126c452e75b81669e8ad9ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d66cdac41b8bf6cefdb895456eee84a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8d66cdac41b8bf6cefdb895456eee84a">arm_cfft_radix4_q15</a> (const <a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc)</td></tr>
<tr class="separator:a8d66cdac41b8bf6cefdb895456eee84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abec9611e77382f31e152668bf6b4b638"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abec9611e77382f31e152668bf6b4b638">arm_cfft_radix2_init_q31</a> (<a class="el" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:abec9611e77382f31e152668bf6b4b638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6321f703ec87a274aedaab33d3e766b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a6321f703ec87a274aedaab33d3e766b4">arm_cfft_radix2_q31</a> (const <a class="el" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc)</td></tr>
<tr class="separator:a6321f703ec87a274aedaab33d3e766b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afde3ee1f58cf393b45a9073174fff548"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afde3ee1f58cf393b45a9073174fff548">arm_cfft_radix4_q31</a> (const <a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc)</td></tr>
<tr class="separator:afde3ee1f58cf393b45a9073174fff548"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5caaafeec900c8ff72321c01bbd462c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad5caaafeec900c8ff72321c01bbd462c">arm_cfft_radix4_init_q31</a> (<a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:ad5caaafeec900c8ff72321c01bbd462c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9565e6bc7229577ecf5e090313cafd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac9565e6bc7229577ecf5e090313cafd7">arm_cfft_radix2_init_f32</a> (<a class="el" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:ac9565e6bc7229577ecf5e090313cafd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fadd650b802f612ae558ddaab789a6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9fadd650b802f612ae558ddaab789a6d">arm_cfft_radix2_f32</a> (const <a class="el" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc)</td></tr>
<tr class="separator:a9fadd650b802f612ae558ddaab789a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af336459f684f0b17bfae539ef1b1b78a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af336459f684f0b17bfae539ef1b1b78a">arm_cfft_radix4_init_f32</a> (<a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:af336459f684f0b17bfae539ef1b1b78a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521f670cd9c571bc61aff9bec89f4c26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a521f670cd9c571bc61aff9bec89f4c26">arm_cfft_radix4_f32</a> (const <a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc)</td></tr>
<tr class="separator:a521f670cd9c571bc61aff9bec89f4c26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68cdacd2267a2967955e40e6b7ec1229"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a68cdacd2267a2967955e40e6b7ec1229">arm_cfft_q15</a> (const <a class="el" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:a68cdacd2267a2967955e40e6b7ec1229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a0008bd997ab6e2e299ef2fb272fb4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5a0008bd997ab6e2e299ef2fb272fb4b">arm_cfft_q31</a> (const <a class="el" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:a5a0008bd997ab6e2e299ef2fb272fb4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade0f9c4ff157b6b9c72a1eafd86ebf80"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ade0f9c4ff157b6b9c72a1eafd86ebf80">arm_cfft_f32</a> (const <a class="el" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)</td></tr>
<tr class="separator:ade0f9c4ff157b6b9c72a1eafd86ebf80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053450cc600a55410ba5b5605e96245d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a053450cc600a55410ba5b5605e96245d">arm_rfft_init_q15</a> (<a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</td></tr>
<tr class="separator:a053450cc600a55410ba5b5605e96245d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00e615f5db21736ad5b27fb6146f3fc5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a00e615f5db21736ad5b27fb6146f3fc5">arm_rfft_q15</a> (const <a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst)</td></tr>
<tr class="separator:a00e615f5db21736ad5b27fb6146f3fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5abde938abbe72e95c5bab080eb33c45"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5abde938abbe72e95c5bab080eb33c45">arm_rfft_init_q31</a> (<a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *S, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</td></tr>
<tr class="separator:a5abde938abbe72e95c5bab080eb33c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaeab5646aeea9844e6d42ca8c73fe3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abaeab5646aeea9844e6d42ca8c73fe3a">arm_rfft_q31</a> (const <a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst)</td></tr>
<tr class="separator:abaeab5646aeea9844e6d42ca8c73fe3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10717ee326bf50832ef1c25b85a23068"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a10717ee326bf50832ef1c25b85a23068">arm_rfft_init_f32</a> (<a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *S, <a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *S_CFFT, uint32_t fftLenReal, uint32_t ifftFlagR, uint32_t bitReverseFlag)</td></tr>
<tr class="separator:a10717ee326bf50832ef1c25b85a23068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df1766d230532bc068fc4ed69d0fcdc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3df1766d230532bc068fc4ed69d0fcdc">arm_rfft_f32</a> (const <a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst)</td></tr>
<tr class="separator:a3df1766d230532bc068fc4ed69d0fcdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5fceb172551e7c11eb4d0e17ef15aa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac5fceb172551e7c11eb4d0e17ef15aa3">arm_rfft_fast_init_f32</a> (<a class="el" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> *S, uint16_t fftLen)</td></tr>
<tr class="separator:ac5fceb172551e7c11eb4d0e17ef15aa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a180d8b764d59cbb85d37a2d5f7cd9799"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a180d8b764d59cbb85d37a2d5f7cd9799">arm_rfft_fast_f32</a> (<a class="el" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *p, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pOut, uint8_t ifftFlag)</td></tr>
<tr class="separator:a180d8b764d59cbb85d37a2d5f7cd9799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab094ad3bc6fa1b84e8b12a24e1850a06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab094ad3bc6fa1b84e8b12a24e1850a06">arm_dct4_init_f32</a> (<a class="el" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> *S, <a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *S_RFFT, <a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *S_CFFT, uint16_t N, uint16_t Nby2, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> normalize)</td></tr>
<tr class="memdesc:ab094ad3bc6fa1b84e8b12a24e1850a06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point DCT4/IDCT4.  <a href="#ab094ad3bc6fa1b84e8b12a24e1850a06">More...</a><br /></td></tr>
<tr class="separator:ab094ad3bc6fa1b84e8b12a24e1850a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd538d68886848bc090ec2b0d364cc81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afd538d68886848bc090ec2b0d364cc81">arm_dct4_f32</a> (const <a class="el" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pInlineBuffer)</td></tr>
<tr class="memdesc:afd538d68886848bc090ec2b0d364cc81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point DCT4/IDCT4.  <a href="#afd538d68886848bc090ec2b0d364cc81">More...</a><br /></td></tr>
<tr class="separator:afd538d68886848bc090ec2b0d364cc81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631bb59c7c97c814ff7147ecba6a716a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a631bb59c7c97c814ff7147ecba6a716a">arm_dct4_init_q31</a> (<a class="el" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> *S, <a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *S_RFFT, <a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *S_CFFT, uint16_t N, uint16_t Nby2, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> normalize)</td></tr>
<tr class="memdesc:a631bb59c7c97c814ff7147ecba6a716a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 DCT4/IDCT4.  <a href="#a631bb59c7c97c814ff7147ecba6a716a">More...</a><br /></td></tr>
<tr class="separator:a631bb59c7c97c814ff7147ecba6a716a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04d0baab6ed081d8e8afe02538eb80b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad04d0baab6ed081d8e8afe02538eb80b">arm_dct4_q31</a> (const <a class="el" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pInlineBuffer)</td></tr>
<tr class="memdesc:ad04d0baab6ed081d8e8afe02538eb80b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 DCT4/IDCT4.  <a href="#ad04d0baab6ed081d8e8afe02538eb80b">More...</a><br /></td></tr>
<tr class="separator:ad04d0baab6ed081d8e8afe02538eb80b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a966fd1b66a80873964533703ab5dc054"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a966fd1b66a80873964533703ab5dc054">arm_dct4_init_q15</a> (<a class="el" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> *S, <a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *S_RFFT, <a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *S_CFFT, uint16_t N, uint16_t Nby2, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> normalize)</td></tr>
<tr class="memdesc:a966fd1b66a80873964533703ab5dc054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 DCT4/IDCT4.  <a href="#a966fd1b66a80873964533703ab5dc054">More...</a><br /></td></tr>
<tr class="separator:a966fd1b66a80873964533703ab5dc054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a114cb9635059f678df291fcc887aaf2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a114cb9635059f678df291fcc887aaf2b">arm_dct4_q15</a> (const <a class="el" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pInlineBuffer)</td></tr>
<tr class="memdesc:a114cb9635059f678df291fcc887aaf2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 DCT4/IDCT4.  <a href="#a114cb9635059f678df291fcc887aaf2b">More...</a><br /></td></tr>
<tr class="separator:a114cb9635059f678df291fcc887aaf2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a904a547413b10565dd1d251c6bafbd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a6a904a547413b10565dd1d251c6bafbd">arm_add_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a6a904a547413b10565dd1d251c6bafbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point vector addition.  <a href="#a6a904a547413b10565dd1d251c6bafbd">More...</a><br /></td></tr>
<tr class="separator:a6a904a547413b10565dd1d251c6bafbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed633f415a7840a66861debca2dfb96b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aed633f415a7840a66861debca2dfb96b">arm_add_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aed633f415a7840a66861debca2dfb96b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 vector addition.  <a href="#aed633f415a7840a66861debca2dfb96b">More...</a><br /></td></tr>
<tr class="separator:aed633f415a7840a66861debca2dfb96b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb51285a41f511670bbff62fc0e1bf62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abb51285a41f511670bbff62fc0e1bf62">arm_add_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:abb51285a41f511670bbff62fc0e1bf62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 vector addition.  <a href="#abb51285a41f511670bbff62fc0e1bf62">More...</a><br /></td></tr>
<tr class="separator:abb51285a41f511670bbff62fc0e1bf62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24d6c3f7f8b9fae4847c0c3f26a39a3b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a24d6c3f7f8b9fae4847c0c3f26a39a3b">arm_add_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a24d6c3f7f8b9fae4847c0c3f26a39a3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 vector addition.  <a href="#a24d6c3f7f8b9fae4847c0c3f26a39a3b">More...</a><br /></td></tr>
<tr class="separator:a24d6c3f7f8b9fae4847c0c3f26a39a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f975a472de286331134227c08aad826"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7f975a472de286331134227c08aad826">arm_sub_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a7f975a472de286331134227c08aad826"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point vector subtraction.  <a href="#a7f975a472de286331134227c08aad826">More...</a><br /></td></tr>
<tr class="separator:a7f975a472de286331134227c08aad826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab09941de7dfeb247e5c29b406a435fcc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab09941de7dfeb247e5c29b406a435fcc">arm_sub_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ab09941de7dfeb247e5c29b406a435fcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 vector subtraction.  <a href="#ab09941de7dfeb247e5c29b406a435fcc">More...</a><br /></td></tr>
<tr class="separator:ab09941de7dfeb247e5c29b406a435fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a997a8ee93088d15bda23c325d455b588"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a997a8ee93088d15bda23c325d455b588">arm_sub_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a997a8ee93088d15bda23c325d455b588"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 vector subtraction.  <a href="#a997a8ee93088d15bda23c325d455b588">More...</a><br /></td></tr>
<tr class="separator:a997a8ee93088d15bda23c325d455b588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28aa6908d092752144413e21933dc878"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a28aa6908d092752144413e21933dc878">arm_sub_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a28aa6908d092752144413e21933dc878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 vector subtraction.  <a href="#a28aa6908d092752144413e21933dc878">More...</a><br /></td></tr>
<tr class="separator:a28aa6908d092752144413e21933dc878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3487af88b112f682ee90589cd419e123"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3487af88b112f682ee90589cd419e123">arm_scale_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> scale, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a3487af88b112f682ee90589cd419e123"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies a floating-point vector by a scalar.  <a href="#a3487af88b112f682ee90589cd419e123">More...</a><br /></td></tr>
<tr class="separator:a3487af88b112f682ee90589cd419e123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc9fd3d37904c58df56492b351d21fb0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abc9fd3d37904c58df56492b351d21fb0">arm_scale_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> scaleFract, int8_t shift, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:abc9fd3d37904c58df56492b351d21fb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies a Q7 vector by a scalar.  <a href="#abc9fd3d37904c58df56492b351d21fb0">More...</a><br /></td></tr>
<tr class="separator:abc9fd3d37904c58df56492b351d21fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaac0e1927daffeb68a42719b53ea780"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afaac0e1927daffeb68a42719b53ea780">arm_scale_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> scaleFract, int8_t shift, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:afaac0e1927daffeb68a42719b53ea780"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies a Q15 vector by a scalar.  <a href="#afaac0e1927daffeb68a42719b53ea780">More...</a><br /></td></tr>
<tr class="separator:afaac0e1927daffeb68a42719b53ea780"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83e36cd82bf51ce35406a199e477d47c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a83e36cd82bf51ce35406a199e477d47c">arm_scale_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> scaleFract, int8_t shift, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a83e36cd82bf51ce35406a199e477d47c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies a Q31 vector by a scalar.  <a href="#a83e36cd82bf51ce35406a199e477d47c">More...</a><br /></td></tr>
<tr class="separator:a83e36cd82bf51ce35406a199e477d47c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc30985e33fbf96802a5a7954dece3b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#adc30985e33fbf96802a5a7954dece3b1">arm_abs_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:adc30985e33fbf96802a5a7954dece3b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 vector absolute value.  <a href="#adc30985e33fbf96802a5a7954dece3b1">More...</a><br /></td></tr>
<tr class="separator:adc30985e33fbf96802a5a7954dece3b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a421b6275f9d35f50286c0ff3beceff02"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a421b6275f9d35f50286c0ff3beceff02">arm_abs_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a421b6275f9d35f50286c0ff3beceff02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point vector absolute value.  <a href="#a421b6275f9d35f50286c0ff3beceff02">More...</a><br /></td></tr>
<tr class="separator:a421b6275f9d35f50286c0ff3beceff02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f92964c9b649ba252e26ebe7b95594"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a39f92964c9b649ba252e26ebe7b95594">arm_abs_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a39f92964c9b649ba252e26ebe7b95594"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 vector absolute value.  <a href="#a39f92964c9b649ba252e26ebe7b95594">More...</a><br /></td></tr>
<tr class="separator:a39f92964c9b649ba252e26ebe7b95594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59eafcdcdb52da60d37f20aec6ff4577"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a59eafcdcdb52da60d37f20aec6ff4577">arm_abs_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a59eafcdcdb52da60d37f20aec6ff4577"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 vector absolute value.  <a href="#a59eafcdcdb52da60d37f20aec6ff4577">More...</a><br /></td></tr>
<tr class="separator:a59eafcdcdb52da60d37f20aec6ff4577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55418d4362f6ba84c327f9b4f089a8c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a55418d4362f6ba84c327f9b4f089a8c3">arm_dot_prod_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *result)</td></tr>
<tr class="memdesc:a55418d4362f6ba84c327f9b4f089a8c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dot product of floating-point vectors.  <a href="#a55418d4362f6ba84c327f9b4f089a8c3">More...</a><br /></td></tr>
<tr class="separator:a55418d4362f6ba84c327f9b4f089a8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c3293a50ac7ec8ba928bf8e3aaea6c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9c3293a50ac7ec8ba928bf8e3aaea6c1">arm_dot_prod_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *result)</td></tr>
<tr class="memdesc:a9c3293a50ac7ec8ba928bf8e3aaea6c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dot product of Q7 vectors.  <a href="#a9c3293a50ac7ec8ba928bf8e3aaea6c1">More...</a><br /></td></tr>
<tr class="separator:a9c3293a50ac7ec8ba928bf8e3aaea6c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a436d5bed28a4b73b24acbde436a3044b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a436d5bed28a4b73b24acbde436a3044b">arm_dot_prod_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *result)</td></tr>
<tr class="memdesc:a436d5bed28a4b73b24acbde436a3044b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dot product of Q15 vectors.  <a href="#a436d5bed28a4b73b24acbde436a3044b">More...</a><br /></td></tr>
<tr class="separator:a436d5bed28a4b73b24acbde436a3044b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab15d8fa060fc85b4d948d091b7deaa11"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab15d8fa060fc85b4d948d091b7deaa11">arm_dot_prod_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *result)</td></tr>
<tr class="memdesc:ab15d8fa060fc85b4d948d091b7deaa11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dot product of Q31 vectors.  <a href="#ab15d8fa060fc85b4d948d091b7deaa11">More...</a><br /></td></tr>
<tr class="separator:ab15d8fa060fc85b4d948d091b7deaa11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47295d08a685f7de700a48dafb4db6fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a47295d08a685f7de700a48dafb4db6fb">arm_shift_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, int8_t shiftBits, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a47295d08a685f7de700a48dafb4db6fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shifts the elements of a Q7 vector a specified number of bits.  <a href="#a47295d08a685f7de700a48dafb4db6fb">More...</a><br /></td></tr>
<tr class="separator:a47295d08a685f7de700a48dafb4db6fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1757e53279780107acc92cf100adb61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aa1757e53279780107acc92cf100adb61">arm_shift_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, int8_t shiftBits, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aa1757e53279780107acc92cf100adb61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shifts the elements of a Q15 vector a specified number of bits.  <a href="#aa1757e53279780107acc92cf100adb61">More...</a><br /></td></tr>
<tr class="separator:aa1757e53279780107acc92cf100adb61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387dd8b7b87377378280978f16cdb13d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a387dd8b7b87377378280978f16cdb13d">arm_shift_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, int8_t shiftBits, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a387dd8b7b87377378280978f16cdb13d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shifts the elements of a Q31 vector a specified number of bits.  <a href="#a387dd8b7b87377378280978f16cdb13d">More...</a><br /></td></tr>
<tr class="separator:a387dd8b7b87377378280978f16cdb13d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a989dfae15235799d82f62ef9d356abb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a989dfae15235799d82f62ef9d356abb4">arm_offset_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> offset, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a989dfae15235799d82f62ef9d356abb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constant offset to a floating-point vector.  <a href="#a989dfae15235799d82f62ef9d356abb4">More...</a><br /></td></tr>
<tr class="separator:a989dfae15235799d82f62ef9d356abb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00bd9cc17c5bf905e76c91ad50886393"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a00bd9cc17c5bf905e76c91ad50886393">arm_offset_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> offset, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a00bd9cc17c5bf905e76c91ad50886393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constant offset to a Q7 vector.  <a href="#a00bd9cc17c5bf905e76c91ad50886393">More...</a><br /></td></tr>
<tr class="separator:a00bd9cc17c5bf905e76c91ad50886393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4c1d2391b599549e5a06fdfbc2747bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab4c1d2391b599549e5a06fdfbc2747bf">arm_offset_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> offset, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ab4c1d2391b599549e5a06fdfbc2747bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constant offset to a Q15 vector.  <a href="#ab4c1d2391b599549e5a06fdfbc2747bf">More...</a><br /></td></tr>
<tr class="separator:ab4c1d2391b599549e5a06fdfbc2747bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac84ec42cbbebc5c197a87d0221819acf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac84ec42cbbebc5c197a87d0221819acf">arm_offset_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> offset, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ac84ec42cbbebc5c197a87d0221819acf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constant offset to a Q31 vector.  <a href="#ac84ec42cbbebc5c197a87d0221819acf">More...</a><br /></td></tr>
<tr class="separator:ac84ec42cbbebc5c197a87d0221819acf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e169c4de6cc6e3ba4be9473531e6657"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2e169c4de6cc6e3ba4be9473531e6657">arm_negate_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2e169c4de6cc6e3ba4be9473531e6657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negates the elements of a floating-point vector.  <a href="#a2e169c4de6cc6e3ba4be9473531e6657">More...</a><br /></td></tr>
<tr class="separator:a2e169c4de6cc6e3ba4be9473531e6657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae78fc079a43bdaa3055f9b32e2a1f4c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aae78fc079a43bdaa3055f9b32e2a1f4c">arm_negate_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aae78fc079a43bdaa3055f9b32e2a1f4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negates the elements of a Q7 vector.  <a href="#aae78fc079a43bdaa3055f9b32e2a1f4c">More...</a><br /></td></tr>
<tr class="separator:aae78fc079a43bdaa3055f9b32e2a1f4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0239a833d72cf00290b9723c394e5042"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0239a833d72cf00290b9723c394e5042">arm_negate_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a0239a833d72cf00290b9723c394e5042"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negates the elements of a Q15 vector.  <a href="#a0239a833d72cf00290b9723c394e5042">More...</a><br /></td></tr>
<tr class="separator:a0239a833d72cf00290b9723c394e5042"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2784c6887686a73dc7c364e2e41c776c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2784c6887686a73dc7c364e2e41c776c">arm_negate_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2784c6887686a73dc7c364e2e41c776c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negates the elements of a Q31 vector.  <a href="#a2784c6887686a73dc7c364e2e41c776c">More...</a><br /></td></tr>
<tr class="separator:a2784c6887686a73dc7c364e2e41c776c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add1f737e677e0e6ca31767c7001417b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#add1f737e677e0e6ca31767c7001417b3">arm_copy_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:add1f737e677e0e6ca31767c7001417b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the elements of a floating-point vector.  <a href="#add1f737e677e0e6ca31767c7001417b3">More...</a><br /></td></tr>
<tr class="separator:add1f737e677e0e6ca31767c7001417b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a467579beda492aa92797529d794c88fb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a467579beda492aa92797529d794c88fb">arm_copy_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a467579beda492aa92797529d794c88fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the elements of a Q7 vector.  <a href="#a467579beda492aa92797529d794c88fb">More...</a><br /></td></tr>
<tr class="separator:a467579beda492aa92797529d794c88fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a872ca4cfc18c680b8991ccd569a5fda0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a872ca4cfc18c680b8991ccd569a5fda0">arm_copy_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a872ca4cfc18c680b8991ccd569a5fda0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the elements of a Q15 vector.  <a href="#a872ca4cfc18c680b8991ccd569a5fda0">More...</a><br /></td></tr>
<tr class="separator:a872ca4cfc18c680b8991ccd569a5fda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addf70be7e3f87e535c324862b501f3f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#addf70be7e3f87e535c324862b501f3f9">arm_copy_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:addf70be7e3f87e535c324862b501f3f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the elements of a Q31 vector.  <a href="#addf70be7e3f87e535c324862b501f3f9">More...</a><br /></td></tr>
<tr class="separator:addf70be7e3f87e535c324862b501f3f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2248e8d3901b4afb7827163132baad94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2248e8d3901b4afb7827163132baad94">arm_fill_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> value, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2248e8d3901b4afb7827163132baad94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills a constant value into a floating-point vector.  <a href="#a2248e8d3901b4afb7827163132baad94">More...</a><br /></td></tr>
<tr class="separator:a2248e8d3901b4afb7827163132baad94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0465cf326ada039ed792f94b033d9ec5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0465cf326ada039ed792f94b033d9ec5">arm_fill_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> value, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a0465cf326ada039ed792f94b033d9ec5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills a constant value into a Q7 vector.  <a href="#a0465cf326ada039ed792f94b033d9ec5">More...</a><br /></td></tr>
<tr class="separator:a0465cf326ada039ed792f94b033d9ec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b21c32a3783a2b3334d930a646e5d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a76b21c32a3783a2b3334d930a646e5d8">arm_fill_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> value, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a76b21c32a3783a2b3334d930a646e5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills a constant value into a Q15 vector.  <a href="#a76b21c32a3783a2b3334d930a646e5d8">More...</a><br /></td></tr>
<tr class="separator:a76b21c32a3783a2b3334d930a646e5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cc781cf337bd0a31bb85c772a35f7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a69cc781cf337bd0a31bb85c772a35f7f">arm_fill_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> value, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a69cc781cf337bd0a31bb85c772a35f7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills a constant value into a Q31 vector.  <a href="#a69cc781cf337bd0a31bb85c772a35f7f">More...</a><br /></td></tr>
<tr class="separator:a69cc781cf337bd0a31bb85c772a35f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f860dc98c6fc4cafc421e4a2aed3c89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3f860dc98c6fc4cafc421e4a2aed3c89">arm_conv_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst)</td></tr>
<tr class="memdesc:a3f860dc98c6fc4cafc421e4a2aed3c89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of floating-point sequences.  <a href="#a3f860dc98c6fc4cafc421e4a2aed3c89">More...</a><br /></td></tr>
<tr class="separator:a3f860dc98c6fc4cafc421e4a2aed3c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac77dbcaef5c754cac27eab96c4753a3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac77dbcaef5c754cac27eab96c4753a3c">arm_conv_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:ac77dbcaef5c754cac27eab96c4753a3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q15 sequences.  <a href="#ac77dbcaef5c754cac27eab96c4753a3c">More...</a><br /></td></tr>
<tr class="separator:ac77dbcaef5c754cac27eab96c4753a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accd6a89b0ff7a94df64610598e6e6893"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#accd6a89b0ff7a94df64610598e6e6893">arm_conv_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst)</td></tr>
<tr class="memdesc:accd6a89b0ff7a94df64610598e6e6893"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q15 sequences.  <a href="#accd6a89b0ff7a94df64610598e6e6893">More...</a><br /></td></tr>
<tr class="separator:accd6a89b0ff7a94df64610598e6e6893"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75ca978ce906e04abdf86a8d76306d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad75ca978ce906e04abdf86a8d76306d4">arm_conv_fast_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst)</td></tr>
<tr class="memdesc:ad75ca978ce906e04abdf86a8d76306d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#ad75ca978ce906e04abdf86a8d76306d4">More...</a><br /></td></tr>
<tr class="separator:ad75ca978ce906e04abdf86a8d76306d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af16f490d245391ec18a42adc73d6d749"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af16f490d245391ec18a42adc73d6d749">arm_conv_fast_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:af16f490d245391ec18a42adc73d6d749"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#af16f490d245391ec18a42adc73d6d749">More...</a><br /></td></tr>
<tr class="separator:af16f490d245391ec18a42adc73d6d749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946b58da734f1e4e78c91fcaab4b12b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a946b58da734f1e4e78c91fcaab4b12b6">arm_conv_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst)</td></tr>
<tr class="memdesc:a946b58da734f1e4e78c91fcaab4b12b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q31 sequences.  <a href="#a946b58da734f1e4e78c91fcaab4b12b6">More...</a><br /></td></tr>
<tr class="separator:a946b58da734f1e4e78c91fcaab4b12b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51112dcdf9b3624eb05182cdc4da9ec0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a51112dcdf9b3624eb05182cdc4da9ec0">arm_conv_fast_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst)</td></tr>
<tr class="memdesc:a51112dcdf9b3624eb05182cdc4da9ec0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#a51112dcdf9b3624eb05182cdc4da9ec0">More...</a><br /></td></tr>
<tr class="separator:a51112dcdf9b3624eb05182cdc4da9ec0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7cf073e89d6d57cc4e711f078c3f68"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4c7cf073e89d6d57cc4e711f078c3f68">arm_conv_opt_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:a4c7cf073e89d6d57cc4e711f078c3f68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q7 sequences.  <a href="#a4c7cf073e89d6d57cc4e711f078c3f68">More...</a><br /></td></tr>
<tr class="separator:a4c7cf073e89d6d57cc4e711f078c3f68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2070cb792a167e78dbad8d06b97cdab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae2070cb792a167e78dbad8d06b97cdab">arm_conv_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst)</td></tr>
<tr class="memdesc:ae2070cb792a167e78dbad8d06b97cdab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution of Q7 sequences.  <a href="#ae2070cb792a167e78dbad8d06b97cdab">More...</a><br /></td></tr>
<tr class="separator:ae2070cb792a167e78dbad8d06b97cdab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16d10f32072cd79fc5fb6e785df45f5e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a16d10f32072cd79fc5fb6e785df45f5e">arm_conv_partial_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a16d10f32072cd79fc5fb6e785df45f5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of floating-point sequences.  <a href="#a16d10f32072cd79fc5fb6e785df45f5e">More...</a><br /></td></tr>
<tr class="separator:a16d10f32072cd79fc5fb6e785df45f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a834b23b4ade8682beeb55778399101f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a834b23b4ade8682beeb55778399101f8">arm_conv_partial_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:a834b23b4ade8682beeb55778399101f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q15 sequences.  <a href="#a834b23b4ade8682beeb55778399101f8">More...</a><br /></td></tr>
<tr class="separator:a834b23b4ade8682beeb55778399101f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209a2a913a0c5e5679c5988da8f46b03"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a209a2a913a0c5e5679c5988da8f46b03">arm_conv_partial_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a209a2a913a0c5e5679c5988da8f46b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q15 sequences.  <a href="#a209a2a913a0c5e5679c5988da8f46b03">More...</a><br /></td></tr>
<tr class="separator:a209a2a913a0c5e5679c5988da8f46b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4d43385cb62262a78c6752fe1fafb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1e4d43385cb62262a78c6752fe1fafb2">arm_conv_partial_fast_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a1e4d43385cb62262a78c6752fe1fafb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#a1e4d43385cb62262a78c6752fe1fafb2">More...</a><br /></td></tr>
<tr class="separator:a1e4d43385cb62262a78c6752fe1fafb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3de9c4ddcc7886de25b70d875099a8d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3de9c4ddcc7886de25b70d875099a8d9">arm_conv_partial_fast_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:a3de9c4ddcc7886de25b70d875099a8d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#a3de9c4ddcc7886de25b70d875099a8d9">More...</a><br /></td></tr>
<tr class="separator:a3de9c4ddcc7886de25b70d875099a8d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78e73a5f02d103168a09821fb461e77a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a78e73a5f02d103168a09821fb461e77a">arm_conv_partial_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a78e73a5f02d103168a09821fb461e77a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q31 sequences.  <a href="#a78e73a5f02d103168a09821fb461e77a">More...</a><br /></td></tr>
<tr class="separator:a78e73a5f02d103168a09821fb461e77a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10c5294cda8c4985386f4e3944be7650"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a10c5294cda8c4985386f4e3944be7650">arm_conv_partial_fast_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a10c5294cda8c4985386f4e3944be7650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#a10c5294cda8c4985386f4e3944be7650">More...</a><br /></td></tr>
<tr class="separator:a10c5294cda8c4985386f4e3944be7650"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3707e16af1435b215840006a7ab0c98f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3707e16af1435b215840006a7ab0c98f">arm_conv_partial_opt_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:a3707e16af1435b215840006a7ab0c98f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q7 sequences.  <a href="#a3707e16af1435b215840006a7ab0c98f">More...</a><br /></td></tr>
<tr class="separator:a3707e16af1435b215840006a7ab0c98f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8567259fe18396dd972242c41741ebf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8567259fe18396dd972242c41741ebf4">arm_conv_partial_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t firstIndex, uint32_t numPoints)</td></tr>
<tr class="memdesc:a8567259fe18396dd972242c41741ebf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Partial convolution of Q7 sequences.  <a href="#a8567259fe18396dd972242c41741ebf4">More...</a><br /></td></tr>
<tr class="separator:a8567259fe18396dd972242c41741ebf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25aa3d58a90bf91b6a82272a0bc518f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a25aa3d58a90bf91b6a82272a0bc518f7">arm_fir_decimate_f32</a> (const <a class="el" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a25aa3d58a90bf91b6a82272a0bc518f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point FIR decimator.  <a href="#a25aa3d58a90bf91b6a82272a0bc518f7">More...</a><br /></td></tr>
<tr class="separator:a25aa3d58a90bf91b6a82272a0bc518f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa2524b08220fd6c3f753e692ffc7d3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aaa2524b08220fd6c3f753e692ffc7d3b">arm_fir_decimate_init_f32</a> (<a class="el" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> *S, uint16_t numTaps, uint8_t M, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:aaa2524b08220fd6c3f753e692ffc7d3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point FIR decimator.  <a href="#aaa2524b08220fd6c3f753e692ffc7d3b">More...</a><br /></td></tr>
<tr class="separator:aaa2524b08220fd6c3f753e692ffc7d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8bef6d0f6a26fdbfce9485727713ce5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab8bef6d0f6a26fdbfce9485727713ce5">arm_fir_decimate_q15</a> (const <a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ab8bef6d0f6a26fdbfce9485727713ce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 FIR decimator.  <a href="#ab8bef6d0f6a26fdbfce9485727713ce5">More...</a><br /></td></tr>
<tr class="separator:ab8bef6d0f6a26fdbfce9485727713ce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f434c9a5d3b4e68061feac0714ea2ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3f434c9a5d3b4e68061feac0714ea2ac">arm_fir_decimate_fast_q15</a> (const <a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a3f434c9a5d3b4e68061feac0714ea2ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4.  <a href="#a3f434c9a5d3b4e68061feac0714ea2ac">More...</a><br /></td></tr>
<tr class="separator:a3f434c9a5d3b4e68061feac0714ea2ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada660e54b93d5d32178c6f5e1c6f368d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ada660e54b93d5d32178c6f5e1c6f368d">arm_fir_decimate_init_q15</a> (<a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *S, uint16_t numTaps, uint8_t M, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:ada660e54b93d5d32178c6f5e1c6f368d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 FIR decimator.  <a href="#ada660e54b93d5d32178c6f5e1c6f368d">More...</a><br /></td></tr>
<tr class="separator:ada660e54b93d5d32178c6f5e1c6f368d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef8e86add28f15fdc5ecc484e9dd7a4e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aef8e86add28f15fdc5ecc484e9dd7a4e">arm_fir_decimate_q31</a> (const <a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aef8e86add28f15fdc5ecc484e9dd7a4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 FIR decimator.  <a href="#aef8e86add28f15fdc5ecc484e9dd7a4e">More...</a><br /></td></tr>
<tr class="separator:aef8e86add28f15fdc5ecc484e9dd7a4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c18cc3d0548a410c577f1bead9582b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3c18cc3d0548a410c577f1bead9582b7">arm_fir_decimate_fast_q31</a> (<a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a3c18cc3d0548a410c577f1bead9582b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4.  <a href="#a3c18cc3d0548a410c577f1bead9582b7">More...</a><br /></td></tr>
<tr class="separator:a3c18cc3d0548a410c577f1bead9582b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed47c4e0f58affa935d84e0508a7f39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9ed47c4e0f58affa935d84e0508a7f39">arm_fir_decimate_init_q31</a> (<a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *S, uint16_t numTaps, uint8_t M, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a9ed47c4e0f58affa935d84e0508a7f39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 FIR decimator.  <a href="#a9ed47c4e0f58affa935d84e0508a7f39">More...</a><br /></td></tr>
<tr class="separator:a9ed47c4e0f58affa935d84e0508a7f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7962b5f9636e54899f75d0c5936800b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7962b5f9636e54899f75d0c5936800b5">arm_fir_interpolate_q15</a> (const <a class="el" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a7962b5f9636e54899f75d0c5936800b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 FIR interpolator.  <a href="#a7962b5f9636e54899f75d0c5936800b5">More...</a><br /></td></tr>
<tr class="separator:a7962b5f9636e54899f75d0c5936800b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18e8c4a74ff1d0f88876cc63f675288f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a18e8c4a74ff1d0f88876cc63f675288f">arm_fir_interpolate_init_q15</a> (<a class="el" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> *S, uint8_t L, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a18e8c4a74ff1d0f88876cc63f675288f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 FIR interpolator.  <a href="#a18e8c4a74ff1d0f88876cc63f675288f">More...</a><br /></td></tr>
<tr class="separator:a18e8c4a74ff1d0f88876cc63f675288f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac9c0f01ed91c53f7083995d7411f5ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aac9c0f01ed91c53f7083995d7411f5ee">arm_fir_interpolate_q31</a> (const <a class="el" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aac9c0f01ed91c53f7083995d7411f5ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 FIR interpolator.  <a href="#aac9c0f01ed91c53f7083995d7411f5ee">More...</a><br /></td></tr>
<tr class="separator:aac9c0f01ed91c53f7083995d7411f5ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d0ba38ce9f12a850dd242731d307476"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9d0ba38ce9f12a850dd242731d307476">arm_fir_interpolate_init_q31</a> (<a class="el" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> *S, uint8_t L, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a9d0ba38ce9f12a850dd242731d307476"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 FIR interpolator.  <a href="#a9d0ba38ce9f12a850dd242731d307476">More...</a><br /></td></tr>
<tr class="separator:a9d0ba38ce9f12a850dd242731d307476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cae104c5cf60b4e7671c82264a8c12e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9cae104c5cf60b4e7671c82264a8c12e">arm_fir_interpolate_f32</a> (const <a class="el" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a9cae104c5cf60b4e7671c82264a8c12e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point FIR interpolator.  <a href="#a9cae104c5cf60b4e7671c82264a8c12e">More...</a><br /></td></tr>
<tr class="separator:a9cae104c5cf60b4e7671c82264a8c12e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f857457a815946f7e4dca989ebf6ff6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0f857457a815946f7e4dca989ebf6ff6">arm_fir_interpolate_init_f32</a> (<a class="el" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> *S, uint8_t L, uint16_t numTaps, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a0f857457a815946f7e4dca989ebf6ff6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point FIR interpolator.  <a href="#a0f857457a815946f7e4dca989ebf6ff6">More...</a><br /></td></tr>
<tr class="separator:a0f857457a815946f7e4dca989ebf6ff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a953a83e69685de6575cff37feb358a93"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a953a83e69685de6575cff37feb358a93">arm_biquad_cas_df1_32x64_q31</a> (const <a class="el" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="separator:a953a83e69685de6575cff37feb358a93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44900cecb8083afcaabf905ffcd656bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a44900cecb8083afcaabf905ffcd656bb">arm_biquad_cas_df1_32x64_init_q31</a> (<a class="el" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> *S, uint8_t numStages, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *pState, uint8_t postShift)</td></tr>
<tr class="separator:a44900cecb8083afcaabf905ffcd656bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646c25998bf35991c60299b1431460f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a646c25998bf35991c60299b1431460f7">arm_biquad_cascade_df2T_f32</a> (const <a class="el" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a646c25998bf35991c60299b1431460f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#a646c25998bf35991c60299b1431460f7">More...</a><br /></td></tr>
<tr class="separator:a646c25998bf35991c60299b1431460f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff8ab405c3db567ae26344ec7539911"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aeff8ab405c3db567ae26344ec7539911">arm_biquad_cascade_stereo_df2T_f32</a> (const <a class="el" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aeff8ab405c3db567ae26344ec7539911"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#aeff8ab405c3db567ae26344ec7539911">More...</a><br /></td></tr>
<tr class="separator:aeff8ab405c3db567ae26344ec7539911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad146359b7ab526d6ebc81d8aca530f78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad146359b7ab526d6ebc81d8aca530f78">arm_biquad_cascade_df2T_f64</a> (const <a class="el" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> *S, <a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ad146359b7ab526d6ebc81d8aca530f78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#ad146359b7ab526d6ebc81d8aca530f78">More...</a><br /></td></tr>
<tr class="separator:ad146359b7ab526d6ebc81d8aca530f78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70eaddf317a4a8bde6bd6a97df67fedd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a70eaddf317a4a8bde6bd6a97df67fedd">arm_biquad_cascade_df2T_init_f32</a> (<a class="el" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> *S, uint8_t numStages, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState)</td></tr>
<tr class="memdesc:a70eaddf317a4a8bde6bd6a97df67fedd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#a70eaddf317a4a8bde6bd6a97df67fedd">More...</a><br /></td></tr>
<tr class="separator:a70eaddf317a4a8bde6bd6a97df67fedd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a405197c89fe4d34003efd23786296425"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a405197c89fe4d34003efd23786296425">arm_biquad_cascade_stereo_df2T_init_f32</a> (<a class="el" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> *S, uint8_t numStages, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState)</td></tr>
<tr class="memdesc:a405197c89fe4d34003efd23786296425"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#a405197c89fe4d34003efd23786296425">More...</a><br /></td></tr>
<tr class="separator:a405197c89fe4d34003efd23786296425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12dc5d8e8892806ad70e79ca2ff9f86e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a12dc5d8e8892806ad70e79ca2ff9f86e">arm_biquad_cascade_df2T_init_f64</a> (<a class="el" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> *S, uint8_t numStages, <a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *pState)</td></tr>
<tr class="memdesc:a12dc5d8e8892806ad70e79ca2ff9f86e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point transposed direct form II Biquad cascade filter.  <a href="#a12dc5d8e8892806ad70e79ca2ff9f86e">More...</a><br /></td></tr>
<tr class="separator:a12dc5d8e8892806ad70e79ca2ff9f86e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b22f30ce1cc19bf5a5d7c9fca154d72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1b22f30ce1cc19bf5a5d7c9fca154d72">arm_fir_lattice_init_q15</a> (<a class="el" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> *S, uint16_t numStages, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState)</td></tr>
<tr class="memdesc:a1b22f30ce1cc19bf5a5d7c9fca154d72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 FIR lattice filter.  <a href="#a1b22f30ce1cc19bf5a5d7c9fca154d72">More...</a><br /></td></tr>
<tr class="separator:a1b22f30ce1cc19bf5a5d7c9fca154d72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0ab07fd313b4d863070c3ddca51542"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abb0ab07fd313b4d863070c3ddca51542">arm_fir_lattice_q15</a> (const <a class="el" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:abb0ab07fd313b4d863070c3ddca51542"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 FIR lattice filter.  <a href="#abb0ab07fd313b4d863070c3ddca51542">More...</a><br /></td></tr>
<tr class="separator:abb0ab07fd313b4d863070c3ddca51542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05a17a0188bb851b58d19e572870a54"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac05a17a0188bb851b58d19e572870a54">arm_fir_lattice_init_q31</a> (<a class="el" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> *S, uint16_t numStages, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState)</td></tr>
<tr class="memdesc:ac05a17a0188bb851b58d19e572870a54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 FIR lattice filter.  <a href="#ac05a17a0188bb851b58d19e572870a54">More...</a><br /></td></tr>
<tr class="separator:ac05a17a0188bb851b58d19e572870a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e36fd210e4a1a5dd333ce80dd6d9a88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2e36fd210e4a1a5dd333ce80dd6d9a88">arm_fir_lattice_q31</a> (const <a class="el" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2e36fd210e4a1a5dd333ce80dd6d9a88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 FIR lattice filter.  <a href="#a2e36fd210e4a1a5dd333ce80dd6d9a88">More...</a><br /></td></tr>
<tr class="separator:a2e36fd210e4a1a5dd333ce80dd6d9a88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86199a1590af2b8941c6532ee9d03229"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a86199a1590af2b8941c6532ee9d03229">arm_fir_lattice_init_f32</a> (<a class="el" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> *S, uint16_t numStages, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState)</td></tr>
<tr class="memdesc:a86199a1590af2b8941c6532ee9d03229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point FIR lattice filter.  <a href="#a86199a1590af2b8941c6532ee9d03229">More...</a><br /></td></tr>
<tr class="separator:a86199a1590af2b8941c6532ee9d03229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae63a45a63a11a65f2eae8b8b1fe370a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae63a45a63a11a65f2eae8b8b1fe370a8">arm_fir_lattice_f32</a> (const <a class="el" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae63a45a63a11a65f2eae8b8b1fe370a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point FIR lattice filter.  <a href="#ae63a45a63a11a65f2eae8b8b1fe370a8">More...</a><br /></td></tr>
<tr class="separator:ae63a45a63a11a65f2eae8b8b1fe370a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56164a0fe48619b8ceec160347bdd2ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a56164a0fe48619b8ceec160347bdd2ff">arm_iir_lattice_f32</a> (const <a class="el" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a56164a0fe48619b8ceec160347bdd2ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point IIR lattice filter.  <a href="#a56164a0fe48619b8ceec160347bdd2ff">More...</a><br /></td></tr>
<tr class="separator:a56164a0fe48619b8ceec160347bdd2ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed3b0230bb77439dc902daa625985e04"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aed3b0230bb77439dc902daa625985e04">arm_iir_lattice_init_f32</a> (<a class="el" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> *S, uint16_t numStages, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pkCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pvCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:aed3b0230bb77439dc902daa625985e04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point IIR lattice filter.  <a href="#aed3b0230bb77439dc902daa625985e04">More...</a><br /></td></tr>
<tr class="separator:aed3b0230bb77439dc902daa625985e04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123b26fa9156cd8d3622dd85931741ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a123b26fa9156cd8d3622dd85931741ed">arm_iir_lattice_q31</a> (const <a class="el" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a123b26fa9156cd8d3622dd85931741ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 IIR lattice filter.  <a href="#a123b26fa9156cd8d3622dd85931741ed">More...</a><br /></td></tr>
<tr class="separator:a123b26fa9156cd8d3622dd85931741ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab686c14175581797d9c3ad7bf1d5cc1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab686c14175581797d9c3ad7bf1d5cc1e">arm_iir_lattice_init_q31</a> (<a class="el" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> *S, uint16_t numStages, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pkCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pvCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:ab686c14175581797d9c3ad7bf1d5cc1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 IIR lattice filter.  <a href="#ab686c14175581797d9c3ad7bf1d5cc1e">More...</a><br /></td></tr>
<tr class="separator:ab686c14175581797d9c3ad7bf1d5cc1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9e9599a288832ed123183eaa8b294a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aeb9e9599a288832ed123183eaa8b294a">arm_iir_lattice_q15</a> (const <a class="el" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:aeb9e9599a288832ed123183eaa8b294a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 IIR lattice filter.  <a href="#aeb9e9599a288832ed123183eaa8b294a">More...</a><br /></td></tr>
<tr class="separator:aeb9e9599a288832ed123183eaa8b294a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f4bc2dd3d5641e96815d3a5aad58998"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1f4bc2dd3d5641e96815d3a5aad58998">arm_iir_lattice_init_q15</a> (<a class="el" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> *S, uint16_t numStages, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pkCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pvCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, uint32_t blockSize)</td></tr>
<tr class="memdesc:a1f4bc2dd3d5641e96815d3a5aad58998"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 IIR lattice filter.  <a href="#a1f4bc2dd3d5641e96815d3a5aad58998">More...</a><br /></td></tr>
<tr class="separator:a1f4bc2dd3d5641e96815d3a5aad58998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae266d009e682180421601627c79a3843"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae266d009e682180421601627c79a3843">arm_lms_f32</a> (const <a class="el" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pRef, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pOut, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae266d009e682180421601627c79a3843"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for floating-point LMS filter.  <a href="#ae266d009e682180421601627c79a3843">More...</a><br /></td></tr>
<tr class="separator:ae266d009e682180421601627c79a3843"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc7adca0966ff2cec1746fca8364cee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9fc7adca0966ff2cec1746fca8364cee">arm_lms_init_f32</a> (<a class="el" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> *S, uint16_t numTaps, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> mu, uint32_t blockSize)</td></tr>
<tr class="memdesc:a9fc7adca0966ff2cec1746fca8364cee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for floating-point LMS filter.  <a href="#a9fc7adca0966ff2cec1746fca8364cee">More...</a><br /></td></tr>
<tr class="separator:a9fc7adca0966ff2cec1746fca8364cee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9544cc26f18cd4465cfbed371be822b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9544cc26f18cd4465cfbed371be822b3">arm_lms_init_q15</a> (<a class="el" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> mu, uint32_t blockSize, uint32_t postShift)</td></tr>
<tr class="memdesc:a9544cc26f18cd4465cfbed371be822b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 LMS filter.  <a href="#a9544cc26f18cd4465cfbed371be822b3">More...</a><br /></td></tr>
<tr class="separator:a9544cc26f18cd4465cfbed371be822b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acde16c17eb75979f81b34e2e2a58c7ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#acde16c17eb75979f81b34e2e2a58c7ac">arm_lms_q15</a> (const <a class="el" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pRef, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pOut, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:acde16c17eb75979f81b34e2e2a58c7ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for Q15 LMS filter.  <a href="#acde16c17eb75979f81b34e2e2a58c7ac">More...</a><br /></td></tr>
<tr class="separator:acde16c17eb75979f81b34e2e2a58c7ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a0abfe6041253a6f91c63b383a64257"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a6a0abfe6041253a6f91c63b383a64257">arm_lms_q31</a> (const <a class="el" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pRef, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pOut, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:a6a0abfe6041253a6f91c63b383a64257"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for Q31 LMS filter.  <a href="#a6a0abfe6041253a6f91c63b383a64257">More...</a><br /></td></tr>
<tr class="separator:a6a0abfe6041253a6f91c63b383a64257"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d4bc251169f4b102355097a9f7530d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8d4bc251169f4b102355097a9f7530d6">arm_lms_init_q31</a> (<a class="el" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> mu, uint32_t blockSize, uint32_t postShift)</td></tr>
<tr class="memdesc:a8d4bc251169f4b102355097a9f7530d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for Q31 LMS filter.  <a href="#a8d4bc251169f4b102355097a9f7530d6">More...</a><br /></td></tr>
<tr class="separator:a8d4bc251169f4b102355097a9f7530d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2418c929087c6eba719758eaae3f3300"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2418c929087c6eba719758eaae3f3300">arm_lms_norm_f32</a> (<a class="el" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pRef, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pOut, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2418c929087c6eba719758eaae3f3300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for floating-point normalized LMS filter.  <a href="#a2418c929087c6eba719758eaae3f3300">More...</a><br /></td></tr>
<tr class="separator:a2418c929087c6eba719758eaae3f3300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ccbaea863882056eee815456464670"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac7ccbaea863882056eee815456464670">arm_lms_norm_init_f32</a> (<a class="el" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> *S, uint16_t numTaps, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> mu, uint32_t blockSize)</td></tr>
<tr class="memdesc:ac7ccbaea863882056eee815456464670"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for floating-point normalized LMS filter.  <a href="#ac7ccbaea863882056eee815456464670">More...</a><br /></td></tr>
<tr class="separator:ac7ccbaea863882056eee815456464670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7128775e99817c183a7d7ad34e8b6e05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7128775e99817c183a7d7ad34e8b6e05">arm_lms_norm_q31</a> (<a class="el" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pRef, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pOut, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:a7128775e99817c183a7d7ad34e8b6e05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for Q31 normalized LMS filter.  <a href="#a7128775e99817c183a7d7ad34e8b6e05">More...</a><br /></td></tr>
<tr class="separator:a7128775e99817c183a7d7ad34e8b6e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d9659dbbea4c89a7a9d14d5fc0dd490"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1d9659dbbea4c89a7a9d14d5fc0dd490">arm_lms_norm_init_q31</a> (<a class="el" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> mu, uint32_t blockSize, uint8_t postShift)</td></tr>
<tr class="memdesc:a1d9659dbbea4c89a7a9d14d5fc0dd490"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for Q31 normalized LMS filter.  <a href="#a1d9659dbbea4c89a7a9d14d5fc0dd490">More...</a><br /></td></tr>
<tr class="separator:a1d9659dbbea4c89a7a9d14d5fc0dd490"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad47486a399dedb0bc85a5990ec5cf981"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad47486a399dedb0bc85a5990ec5cf981">arm_lms_norm_q15</a> (<a class="el" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pRef, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pOut, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pErr, uint32_t blockSize)</td></tr>
<tr class="memdesc:ad47486a399dedb0bc85a5990ec5cf981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for Q15 normalized LMS filter.  <a href="#ad47486a399dedb0bc85a5990ec5cf981">More...</a><br /></td></tr>
<tr class="separator:ad47486a399dedb0bc85a5990ec5cf981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a213ab1ee2e154cc2fa30d667b1994b89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a213ab1ee2e154cc2fa30d667b1994b89">arm_lms_norm_init_q15</a> (<a class="el" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> mu, uint32_t blockSize, uint8_t postShift)</td></tr>
<tr class="memdesc:a213ab1ee2e154cc2fa30d667b1994b89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for Q15 normalized LMS filter.  <a href="#a213ab1ee2e154cc2fa30d667b1994b89">More...</a><br /></td></tr>
<tr class="separator:a213ab1ee2e154cc2fa30d667b1994b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22021e4222773f01e9960358a531cfb8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a22021e4222773f01e9960358a531cfb8">arm_correlate_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst)</td></tr>
<tr class="memdesc:a22021e4222773f01e9960358a531cfb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of floating-point sequences.  <a href="#a22021e4222773f01e9960358a531cfb8">More...</a><br /></td></tr>
<tr class="separator:a22021e4222773f01e9960358a531cfb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad71c0ec70ec69edbc48563d9a5f68451"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad71c0ec70ec69edbc48563d9a5f68451">arm_correlate_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch)</td></tr>
<tr class="memdesc:ad71c0ec70ec69edbc48563d9a5f68451"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q15 sequences.  <a href="#ad71c0ec70ec69edbc48563d9a5f68451">More...</a><br /></td></tr>
<tr class="separator:ad71c0ec70ec69edbc48563d9a5f68451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec96b8e420d68b0e626df0812274d46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5ec96b8e420d68b0e626df0812274d46">arm_correlate_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst)</td></tr>
<tr class="memdesc:a5ec96b8e420d68b0e626df0812274d46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q15 sequences.  <a href="#a5ec96b8e420d68b0e626df0812274d46">More...</a><br /></td></tr>
<tr class="separator:a5ec96b8e420d68b0e626df0812274d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8de3da44f58e86c2c86156276ca154f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac8de3da44f58e86c2c86156276ca154f">arm_correlate_fast_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst)</td></tr>
<tr class="memdesc:ac8de3da44f58e86c2c86156276ca154f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#ac8de3da44f58e86c2c86156276ca154f">More...</a><br /></td></tr>
<tr class="separator:ac8de3da44f58e86c2c86156276ca154f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40a0236b17220e8e22a22b5bc1c53c6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a40a0236b17220e8e22a22b5bc1c53c6b">arm_correlate_fast_opt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch)</td></tr>
<tr class="memdesc:a40a0236b17220e8e22a22b5bc1c53c6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#a40a0236b17220e8e22a22b5bc1c53c6b">More...</a><br /></td></tr>
<tr class="separator:a40a0236b17220e8e22a22b5bc1c53c6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1367dc6c80476406c951e68d7fac4e8c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1367dc6c80476406c951e68d7fac4e8c">arm_correlate_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst)</td></tr>
<tr class="memdesc:a1367dc6c80476406c951e68d7fac4e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q31 sequences.  <a href="#a1367dc6c80476406c951e68d7fac4e8c">More...</a><br /></td></tr>
<tr class="separator:a1367dc6c80476406c951e68d7fac4e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abecd3d7b077dbbef43f93e9e037815ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abecd3d7b077dbbef43f93e9e037815ed">arm_correlate_fast_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst)</td></tr>
<tr class="memdesc:abecd3d7b077dbbef43f93e9e037815ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4.  <a href="#abecd3d7b077dbbef43f93e9e037815ed">More...</a><br /></td></tr>
<tr class="separator:abecd3d7b077dbbef43f93e9e037815ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a746e8857cafe33ec5d6780729c18c311"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a746e8857cafe33ec5d6780729c18c311">arm_correlate_opt_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch1, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratch2)</td></tr>
<tr class="memdesc:a746e8857cafe33ec5d6780729c18c311"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q7 sequences.  <a href="#a746e8857cafe33ec5d6780729c18c311">More...</a><br /></td></tr>
<tr class="separator:a746e8857cafe33ec5d6780729c18c311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a284ddcc49e4ac532d52a70d0383c5992"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a284ddcc49e4ac532d52a70d0383c5992">arm_correlate_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcA, uint32_t srcALen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrcB, uint32_t srcBLen, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst)</td></tr>
<tr class="memdesc:a284ddcc49e4ac532d52a70d0383c5992"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correlation of Q7 sequences.  <a href="#a284ddcc49e4ac532d52a70d0383c5992">More...</a><br /></td></tr>
<tr class="separator:a284ddcc49e4ac532d52a70d0383c5992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a9284de5ee39406713b91d18ac8838"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a23a9284de5ee39406713b91d18ac8838">arm_fir_sparse_f32</a> (<a class="el" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pScratchIn, uint32_t blockSize)</td></tr>
<tr class="memdesc:a23a9284de5ee39406713b91d18ac8838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the floating-point sparse FIR filter.  <a href="#a23a9284de5ee39406713b91d18ac8838">More...</a><br /></td></tr>
<tr class="separator:a23a9284de5ee39406713b91d18ac8838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86378a08a9d9e1e0e5de77843b34d396"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a86378a08a9d9e1e0e5de77843b34d396">arm_fir_sparse_init_f32</a> (<a class="el" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> *S, uint16_t numTaps, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCoeffs, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</td></tr>
<tr class="memdesc:a86378a08a9d9e1e0e5de77843b34d396"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the floating-point sparse FIR filter.  <a href="#a86378a08a9d9e1e0e5de77843b34d396">More...</a><br /></td></tr>
<tr class="separator:a86378a08a9d9e1e0e5de77843b34d396"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e9c2f0f35ad67d20bac66be9f920ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a03e9c2f0f35ad67d20bac66be9f920ec">arm_fir_sparse_q31</a> (<a class="el" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pScratchIn, uint32_t blockSize)</td></tr>
<tr class="memdesc:a03e9c2f0f35ad67d20bac66be9f920ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q31 sparse FIR filter.  <a href="#a03e9c2f0f35ad67d20bac66be9f920ec">More...</a><br /></td></tr>
<tr class="separator:a03e9c2f0f35ad67d20bac66be9f920ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a0bb2134bc85d3e55c6be6d946ee634"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9a0bb2134bc85d3e55c6be6d946ee634">arm_fir_sparse_init_q31</a> (<a class="el" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</td></tr>
<tr class="memdesc:a9a0bb2134bc85d3e55c6be6d946ee634"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q31 sparse FIR filter.  <a href="#a9a0bb2134bc85d3e55c6be6d946ee634">More...</a><br /></td></tr>
<tr class="separator:a9a0bb2134bc85d3e55c6be6d946ee634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bffda2e156e72427e19276cd9c3d3cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2bffda2e156e72427e19276cd9c3d3cc">arm_fir_sparse_q15</a> (<a class="el" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pScratchIn, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pScratchOut, uint32_t blockSize)</td></tr>
<tr class="memdesc:a2bffda2e156e72427e19276cd9c3d3cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q15 sparse FIR filter.  <a href="#a2bffda2e156e72427e19276cd9c3d3cc">More...</a><br /></td></tr>
<tr class="separator:a2bffda2e156e72427e19276cd9c3d3cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eaa80bf72bcccef5a2c5fc6648d1baa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5eaa80bf72bcccef5a2c5fc6648d1baa">arm_fir_sparse_init_q15</a> (<a class="el" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</td></tr>
<tr class="memdesc:a5eaa80bf72bcccef5a2c5fc6648d1baa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q15 sparse FIR filter.  <a href="#a5eaa80bf72bcccef5a2c5fc6648d1baa">More...</a><br /></td></tr>
<tr class="separator:a5eaa80bf72bcccef5a2c5fc6648d1baa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae86c145efc2d9ec32dc6d8c1ad2ccb3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae86c145efc2d9ec32dc6d8c1ad2ccb3c">arm_fir_sparse_q7</a> (<a class="el" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> *S, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pScratchIn, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pScratchOut, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae86c145efc2d9ec32dc6d8c1ad2ccb3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing function for the Q7 sparse FIR filter.  <a href="#ae86c145efc2d9ec32dc6d8c1ad2ccb3c">More...</a><br /></td></tr>
<tr class="separator:ae86c145efc2d9ec32dc6d8c1ad2ccb3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98f5c1a097d4572ce4ff3b0c58ebcdbd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a98f5c1a097d4572ce4ff3b0c58ebcdbd">arm_fir_sparse_init_q7</a> (<a class="el" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> *S, uint16_t numTaps, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pCoeffs, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pState, int32_t *pTapDelay, uint16_t maxDelay, uint32_t blockSize)</td></tr>
<tr class="memdesc:a98f5c1a097d4572ce4ff3b0c58ebcdbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization function for the Q7 sparse FIR filter.  <a href="#a98f5c1a097d4572ce4ff3b0c58ebcdbd">More...</a><br /></td></tr>
<tr class="separator:a98f5c1a097d4572ce4ff3b0c58ebcdbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a087fa2be56e29d5ac7bb2afa590aee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1a087fa2be56e29d5ac7bb2afa590aee">arm_sin_cos_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> theta, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSinVal, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCcosVal)</td></tr>
<tr class="separator:a1a087fa2be56e29d5ac7bb2afa590aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9e4ddebff9d4eb5d0a093e28e0bc504"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae9e4ddebff9d4eb5d0a093e28e0bc504">arm_sin_cos_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> theta, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSinVal, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCosVal)</td></tr>
<tr class="separator:ae9e4ddebff9d4eb5d0a093e28e0bc504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a102aead6460ad9fcb0626f6b226ffb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3a102aead6460ad9fcb0626f6b226ffb">arm_cmplx_conj_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a3a102aead6460ad9fcb0626f6b226ffb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex conjugate.  <a href="#a3a102aead6460ad9fcb0626f6b226ffb">More...</a><br /></td></tr>
<tr class="separator:a3a102aead6460ad9fcb0626f6b226ffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afecc94879a383c5208ec3ef99485e4b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#afecc94879a383c5208ec3ef99485e4b5">arm_cmplx_conj_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:afecc94879a383c5208ec3ef99485e4b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex conjugate.  <a href="#afecc94879a383c5208ec3ef99485e4b5">More...</a><br /></td></tr>
<tr class="separator:afecc94879a383c5208ec3ef99485e4b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47689ae07962acaecb8ddde556df4a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af47689ae07962acaecb8ddde556df4a4">arm_cmplx_conj_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:af47689ae07962acaecb8ddde556df4a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex conjugate.  <a href="#af47689ae07962acaecb8ddde556df4a4">More...</a><br /></td></tr>
<tr class="separator:af47689ae07962acaecb8ddde556df4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7faccc0d96b061d8b7d0d7d82045074"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aa7faccc0d96b061d8b7d0d7d82045074">arm_cmplx_mag_squared_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:aa7faccc0d96b061d8b7d0d7d82045074"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex magnitude squared.  <a href="#aa7faccc0d96b061d8b7d0d7d82045074">More...</a><br /></td></tr>
<tr class="separator:aa7faccc0d96b061d8b7d0d7d82045074"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a384b0538101e8c03fa4fa14271e63b04"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a384b0538101e8c03fa4fa14271e63b04">arm_cmplx_mag_squared_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a384b0538101e8c03fa4fa14271e63b04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex magnitude squared.  <a href="#a384b0538101e8c03fa4fa14271e63b04">More...</a><br /></td></tr>
<tr class="separator:a384b0538101e8c03fa4fa14271e63b04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45537f576102d960d467eb722b8431f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a45537f576102d960d467eb722b8431f2">arm_cmplx_mag_squared_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a45537f576102d960d467eb722b8431f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex magnitude squared.  <a href="#a45537f576102d960d467eb722b8431f2">More...</a><br /></td></tr>
<tr class="separator:a45537f576102d960d467eb722b8431f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac5c79ed46abf2d72b8cf41fa6c708bda"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___p_i_d.xhtml#gac5c79ed46abf2d72b8cf41fa6c708bda">arm_pid_f32</a> (<a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> in)</td></tr>
<tr class="memdesc:gac5c79ed46abf2d72b8cf41fa6c708bda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the floating-point PID Control.  <a href="group___p_i_d.xhtml#gac5c79ed46abf2d72b8cf41fa6c708bda">More...</a><br /></td></tr>
<tr class="separator:gac5c79ed46abf2d72b8cf41fa6c708bda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f6f941e7ae981728dd3a662f8f4ecd7"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___p_i_d.xhtml#ga5f6f941e7ae981728dd3a662f8f4ecd7">arm_pid_q31</a> (<a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> in)</td></tr>
<tr class="memdesc:ga5f6f941e7ae981728dd3a662f8f4ecd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the Q31 PID Control.  <a href="group___p_i_d.xhtml#ga5f6f941e7ae981728dd3a662f8f4ecd7">More...</a><br /></td></tr>
<tr class="separator:ga5f6f941e7ae981728dd3a662f8f4ecd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga084f646bbb20d55f225c3efafcf7fc1f"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___p_i_d.xhtml#ga084f646bbb20d55f225c3efafcf7fc1f">arm_pid_q15</a> (<a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> in)</td></tr>
<tr class="memdesc:ga084f646bbb20d55f225c3efafcf7fc1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the Q15 PID Control.  <a href="group___p_i_d.xhtml#ga084f646bbb20d55f225c3efafcf7fc1f">More...</a><br /></td></tr>
<tr class="separator:ga084f646bbb20d55f225c3efafcf7fc1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1283b23c96da04362a0efcdc7f23901"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab1283b23c96da04362a0efcdc7f23901">arm_mat_inverse_f32</a> (const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *src, <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *dst)</td></tr>
<tr class="memdesc:ab1283b23c96da04362a0efcdc7f23901"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of PID group  <a href="#ab1283b23c96da04362a0efcdc7f23901">More...</a><br /></td></tr>
<tr class="separator:ab1283b23c96da04362a0efcdc7f23901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd167a2b71330f9f7b606374e9ec063"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3dd167a2b71330f9f7b606374e9ec063">arm_mat_inverse_f64</a> (const <a class="el" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> *src, <a class="el" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> *dst)</td></tr>
<tr class="memdesc:a3dd167a2b71330f9f7b606374e9ec063"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point matrix inverse.  <a href="#a3dd167a2b71330f9f7b606374e9ec063">More...</a><br /></td></tr>
<tr class="separator:a3dd167a2b71330f9f7b606374e9ec063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b4ebec76215e1277c970c269ffdbd76"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__clarke.xhtml#ga2b4ebec76215e1277c970c269ffdbd76">arm_clarke_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ia, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ib, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIalpha, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIbeta)</td></tr>
<tr class="memdesc:ga2b4ebec76215e1277c970c269ffdbd76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point Clarke transform.  <a href="group__clarke.xhtml#ga2b4ebec76215e1277c970c269ffdbd76">More...</a><br /></td></tr>
<tr class="separator:ga2b4ebec76215e1277c970c269ffdbd76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fd106ca8d346a2a472842e0656014c1"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__clarke.xhtml#ga7fd106ca8d346a2a472842e0656014c1">arm_clarke_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ia, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ib, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIalpha, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIbeta)</td></tr>
<tr class="memdesc:ga7fd106ca8d346a2a472842e0656014c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clarke transform for Q31 version.  <a href="group__clarke.xhtml#ga7fd106ca8d346a2a472842e0656014c1">More...</a><br /></td></tr>
<tr class="separator:ga7fd106ca8d346a2a472842e0656014c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8958cd3cb7f521466168b46a25b7908"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad8958cd3cb7f521466168b46a25b7908">arm_q7_to_q31</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:ad8958cd3cb7f521466168b46a25b7908"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of clarke group  <a href="#ad8958cd3cb7f521466168b46a25b7908">More...</a><br /></td></tr>
<tr class="separator:ad8958cd3cb7f521466168b46a25b7908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga137f0396d837477b899ecae89f075a50"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__inv__clarke.xhtml#ga137f0396d837477b899ecae89f075a50">arm_inv_clarke_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ialpha, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ibeta, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIa, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIb)</td></tr>
<tr class="memdesc:ga137f0396d837477b899ecae89f075a50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point Inverse Clarke transform.  <a href="group__inv__clarke.xhtml#ga137f0396d837477b899ecae89f075a50">More...</a><br /></td></tr>
<tr class="separator:ga137f0396d837477b899ecae89f075a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d0c60f114f095a2f27442d98781ba02"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__inv__clarke.xhtml#ga2d0c60f114f095a2f27442d98781ba02">arm_inv_clarke_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ialpha, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ibeta, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIa, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIb)</td></tr>
<tr class="memdesc:ga2d0c60f114f095a2f27442d98781ba02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inverse Clarke transform for Q31 version.  <a href="group__inv__clarke.xhtml#ga2d0c60f114f095a2f27442d98781ba02">More...</a><br /></td></tr>
<tr class="separator:ga2d0c60f114f095a2f27442d98781ba02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc02597fc3f01033daf43ec0547a2f78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#abc02597fc3f01033daf43ec0547a2f78">arm_q7_to_q15</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:abc02597fc3f01033daf43ec0547a2f78"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of inv_clarke group  <a href="#abc02597fc3f01033daf43ec0547a2f78">More...</a><br /></td></tr>
<tr class="separator:abc02597fc3f01033daf43ec0547a2f78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08b3a683197de7e143fb00497787683c"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__park.xhtml#ga08b3a683197de7e143fb00497787683c">arm_park_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ialpha, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Ibeta, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pId, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIq, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> sinVal, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> cosVal)</td></tr>
<tr class="memdesc:ga08b3a683197de7e143fb00497787683c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point Park transform.  <a href="group__park.xhtml#ga08b3a683197de7e143fb00497787683c">More...</a><br /></td></tr>
<tr class="separator:ga08b3a683197de7e143fb00497787683c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4cc6370c0cfc14ea66774ed3c5bb10f"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__park.xhtml#gaf4cc6370c0cfc14ea66774ed3c5bb10f">arm_park_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ialpha, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Ibeta, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pId, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIq, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> sinVal, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> cosVal)</td></tr>
<tr class="memdesc:gaf4cc6370c0cfc14ea66774ed3c5bb10f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Park transform for Q31 version.  <a href="group__park.xhtml#gaf4cc6370c0cfc14ea66774ed3c5bb10f">More...</a><br /></td></tr>
<tr class="separator:gaf4cc6370c0cfc14ea66774ed3c5bb10f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656620f957b65512ed83db03fd455ec5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a656620f957b65512ed83db03fd455ec5">arm_q7_to_float</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a656620f957b65512ed83db03fd455ec5"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of park group  <a href="#a656620f957b65512ed83db03fd455ec5">More...</a><br /></td></tr>
<tr class="separator:a656620f957b65512ed83db03fd455ec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaf6bef0de21946f774d49df050dd8b05"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__inv__park.xhtml#gaaf6bef0de21946f774d49df050dd8b05">arm_inv_park_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Id, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Iq, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIalpha, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pIbeta, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> sinVal, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> cosVal)</td></tr>
<tr class="memdesc:gaaf6bef0de21946f774d49df050dd8b05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point Inverse Park transform.  <a href="group__inv__park.xhtml#gaaf6bef0de21946f774d49df050dd8b05">More...</a><br /></td></tr>
<tr class="separator:gaaf6bef0de21946f774d49df050dd8b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b33822b988a15455773d28440c5579a"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__inv__park.xhtml#ga0b33822b988a15455773d28440c5579a">arm_inv_park_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Id, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Iq, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIalpha, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pIbeta, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> sinVal, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> cosVal)</td></tr>
<tr class="memdesc:ga0b33822b988a15455773d28440c5579a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inverse Park transform for Q31 version.  <a href="group__inv__park.xhtml#ga0b33822b988a15455773d28440c5579a">More...</a><br /></td></tr>
<tr class="separator:ga0b33822b988a15455773d28440c5579a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf407b007a37da18e99dabd9023c56b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#acf407b007a37da18e99dabd9023c56b4">arm_q31_to_float</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:acf407b007a37da18e99dabd9023c56b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of Inverse park group  <a href="#acf407b007a37da18e99dabd9023c56b4">More...</a><br /></td></tr>
<tr class="separator:acf407b007a37da18e99dabd9023c56b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2269263d810cafcd19681957b37d5cf6"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___linear_interpolate.xhtml#ga2269263d810cafcd19681957b37d5cf6">arm_linear_interp_f32</a> (<a class="el" href="structarm__linear__interp__instance__f32.xhtml">arm_linear_interp_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> x)</td></tr>
<tr class="memdesc:ga2269263d810cafcd19681957b37d5cf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the floating-point Linear Interpolation Function.  <a href="group___linear_interpolate.xhtml#ga2269263d810cafcd19681957b37d5cf6">More...</a><br /></td></tr>
<tr class="separator:ga2269263d810cafcd19681957b37d5cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga690e63e9a513ca0a741b1b174805d031"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___linear_interpolate.xhtml#ga690e63e9a513ca0a741b1b174805d031">arm_linear_interp_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pYData, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x, uint32_t nValues)</td></tr>
<tr class="memdesc:ga690e63e9a513ca0a741b1b174805d031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the Q31 Linear Interpolation Function.  <a href="group___linear_interpolate.xhtml#ga690e63e9a513ca0a741b1b174805d031">More...</a><br /></td></tr>
<tr class="separator:ga690e63e9a513ca0a741b1b174805d031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42c9206e5d2d22b8808716dc30622846"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___linear_interpolate.xhtml#ga42c9206e5d2d22b8808716dc30622846">arm_linear_interp_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pYData, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x, uint32_t nValues)</td></tr>
<tr class="memdesc:ga42c9206e5d2d22b8808716dc30622846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the Q15 Linear Interpolation Function.  <a href="group___linear_interpolate.xhtml#ga42c9206e5d2d22b8808716dc30622846">More...</a><br /></td></tr>
<tr class="separator:ga42c9206e5d2d22b8808716dc30622846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb0d44fe00aca0ba1d036d469a1763fc"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___linear_interpolate.xhtml#gacb0d44fe00aca0ba1d036d469a1763fc">arm_linear_interp_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pYData, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x, uint32_t nValues)</td></tr>
<tr class="memdesc:gacb0d44fe00aca0ba1d036d469a1763fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process function for the Q7 Linear Interpolation Function.  <a href="group___linear_interpolate.xhtml#gacb0d44fe00aca0ba1d036d469a1763fc">More...</a><br /></td></tr>
<tr class="separator:gacb0d44fe00aca0ba1d036d469a1763fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae164899c4a3fc0e946dc5d55555fe541"><td class="memItemLeft" align="right" valign="top"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae164899c4a3fc0e946dc5d55555fe541">arm_sin_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> x)</td></tr>
<tr class="memdesc:ae164899c4a3fc0e946dc5d55555fe541"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of LinearInterpolate group  <a href="#ae164899c4a3fc0e946dc5d55555fe541">More...</a><br /></td></tr>
<tr class="separator:ae164899c4a3fc0e946dc5d55555fe541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57aade7d8892585992cdc6375bd82f9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a57aade7d8892585992cdc6375bd82f9c">arm_sin_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x)</td></tr>
<tr class="memdesc:a57aade7d8892585992cdc6375bd82f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast approximation to the trigonometric sine function for Q31 data.  <a href="#a57aade7d8892585992cdc6375bd82f9c">More...</a><br /></td></tr>
<tr class="separator:a57aade7d8892585992cdc6375bd82f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fc6d6640be6cfa688a8bea0a48397ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1fc6d6640be6cfa688a8bea0a48397ee">arm_sin_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> x)</td></tr>
<tr class="memdesc:a1fc6d6640be6cfa688a8bea0a48397ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast approximation to the trigonometric sine function for Q15 data.  <a href="#a1fc6d6640be6cfa688a8bea0a48397ee">More...</a><br /></td></tr>
<tr class="separator:a1fc6d6640be6cfa688a8bea0a48397ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace15287f9c64b9b4084d1c797d4c49d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ace15287f9c64b9b4084d1c797d4c49d8">arm_cos_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> x)</td></tr>
<tr class="memdesc:ace15287f9c64b9b4084d1c797d4c49d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast approximation to the trigonometric cosine function for floating-point data.  <a href="#ace15287f9c64b9b4084d1c797d4c49d8">More...</a><br /></td></tr>
<tr class="separator:ace15287f9c64b9b4084d1c797d4c49d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad80f121949ef885a77d83ab36e002567"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad80f121949ef885a77d83ab36e002567">arm_cos_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> x)</td></tr>
<tr class="memdesc:ad80f121949ef885a77d83ab36e002567"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast approximation to the trigonometric cosine function for Q31 data.  <a href="#ad80f121949ef885a77d83ab36e002567">More...</a><br /></td></tr>
<tr class="separator:ad80f121949ef885a77d83ab36e002567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfd60c24def501638c0d5db20f4c869b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#adfd60c24def501638c0d5db20f4c869b">arm_cos_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> x)</td></tr>
<tr class="memdesc:adfd60c24def501638c0d5db20f4c869b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast approximation to the trigonometric cosine function for Q15 data.  <a href="#adfd60c24def501638c0d5db20f4c869b">More...</a><br /></td></tr>
<tr class="separator:adfd60c24def501638c0d5db20f4c869b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga56a40d1cf842b0b45267df6761975da0"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_q_r_t.xhtml#ga56a40d1cf842b0b45267df6761975da0">arm_sqrt_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> in, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pOut)</td></tr>
<tr class="memdesc:ga56a40d1cf842b0b45267df6761975da0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point square root function.  <a href="group___s_q_r_t.xhtml#ga56a40d1cf842b0b45267df6761975da0">More...</a><br /></td></tr>
<tr class="separator:ga56a40d1cf842b0b45267df6761975da0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga119e25831e141d734d7ef10636670058"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_q_r_t.xhtml#ga119e25831e141d734d7ef10636670058">arm_sqrt_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> in, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pOut)</td></tr>
<tr class="memdesc:ga119e25831e141d734d7ef10636670058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 square root function.  <a href="group___s_q_r_t.xhtml#ga119e25831e141d734d7ef10636670058">More...</a><br /></td></tr>
<tr class="separator:ga119e25831e141d734d7ef10636670058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5abe5ca724f3e15849662b03752c1238"><td class="memItemLeft" align="right" valign="top"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___s_q_r_t.xhtml#ga5abe5ca724f3e15849662b03752c1238">arm_sqrt_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> in, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pOut)</td></tr>
<tr class="memdesc:ga5abe5ca724f3e15849662b03752c1238"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 square root function.  <a href="group___s_q_r_t.xhtml#ga5abe5ca724f3e15849662b03752c1238">More...</a><br /></td></tr>
<tr class="separator:ga5abe5ca724f3e15849662b03752c1238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ff56c0896ce00712ba8f2fcf72cacd3"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a6ff56c0896ce00712ba8f2fcf72cacd3">arm_circularWrite_f32</a> (int32_t *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const int32_t *src, int32_t srcInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:a6ff56c0896ce00712ba8f2fcf72cacd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of SQRT group  <a href="#a6ff56c0896ce00712ba8f2fcf72cacd3">More...</a><br /></td></tr>
<tr class="separator:a6ff56c0896ce00712ba8f2fcf72cacd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae469fac5e1df35f8bcf1b3d7c3136484"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae469fac5e1df35f8bcf1b3d7c3136484">arm_circularRead_f32</a> (int32_t *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, int32_t *dst, int32_t *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:ae469fac5e1df35f8bcf1b3d7c3136484"><td class="mdescLeft">&#160;</td><td class="mdescRight">floating-point Circular Read function.  <a href="#ae469fac5e1df35f8bcf1b3d7c3136484">More...</a><br /></td></tr>
<tr class="separator:ae469fac5e1df35f8bcf1b3d7c3136484"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ba2d215477e692def7fda46dda883ed"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3ba2d215477e692def7fda46dda883ed">arm_circularWrite_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *src, int32_t srcInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:a3ba2d215477e692def7fda46dda883ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 Circular write function.  <a href="#a3ba2d215477e692def7fda46dda883ed">More...</a><br /></td></tr>
<tr class="separator:a3ba2d215477e692def7fda46dda883ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5fb134f83f2c802261f172e3dceb131"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad5fb134f83f2c802261f172e3dceb131">arm_circularRead_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *dst, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:ad5fb134f83f2c802261f172e3dceb131"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 Circular Read function.  <a href="#ad5fb134f83f2c802261f172e3dceb131">More...</a><br /></td></tr>
<tr class="separator:ad5fb134f83f2c802261f172e3dceb131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addba85b1f7fbd472fd00ddd9ce43aea8"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#addba85b1f7fbd472fd00ddd9ce43aea8">arm_circularWrite_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *circBuffer, int32_t L, uint16_t *writeOffset, int32_t bufferInc, const <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *src, int32_t srcInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:addba85b1f7fbd472fd00ddd9ce43aea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 Circular write function.  <a href="#addba85b1f7fbd472fd00ddd9ce43aea8">More...</a><br /></td></tr>
<tr class="separator:addba85b1f7fbd472fd00ddd9ce43aea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30aa80ea20abe71f3afa99f2f0391ed5"><td class="memItemLeft" align="right" valign="top">static __INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a30aa80ea20abe71f3afa99f2f0391ed5">arm_circularRead_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *circBuffer, int32_t L, int32_t *readOffset, int32_t bufferInc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *dst, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *dst_base, int32_t dst_length, int32_t dstInc, uint32_t blockSize)</td></tr>
<tr class="memdesc:a30aa80ea20abe71f3afa99f2f0391ed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 Circular Read function.  <a href="#a30aa80ea20abe71f3afa99f2f0391ed5">More...</a><br /></td></tr>
<tr class="separator:a30aa80ea20abe71f3afa99f2f0391ed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b93d31bb5b5ed214c2b94d8a7744cd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0b93d31bb5b5ed214c2b94d8a7744cd2">arm_power_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *pResult)</td></tr>
<tr class="memdesc:a0b93d31bb5b5ed214c2b94d8a7744cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sum of the squares of the elements of a Q31 vector.  <a href="#a0b93d31bb5b5ed214c2b94d8a7744cd2">More...</a><br /></td></tr>
<tr class="separator:a0b93d31bb5b5ed214c2b94d8a7744cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a993c00dd7f661d66bdb6e58426e893aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a993c00dd7f661d66bdb6e58426e893aa">arm_power_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult)</td></tr>
<tr class="memdesc:a993c00dd7f661d66bdb6e58426e893aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sum of the squares of the elements of a floating-point vector.  <a href="#a993c00dd7f661d66bdb6e58426e893aa">More...</a><br /></td></tr>
<tr class="separator:a993c00dd7f661d66bdb6e58426e893aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7050c04b7515e01a75c38f1abbaf71ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7050c04b7515e01a75c38f1abbaf71ba">arm_power_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *pResult)</td></tr>
<tr class="memdesc:a7050c04b7515e01a75c38f1abbaf71ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sum of the squares of the elements of a Q15 vector.  <a href="#a7050c04b7515e01a75c38f1abbaf71ba">More...</a><br /></td></tr>
<tr class="separator:a7050c04b7515e01a75c38f1abbaf71ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af969c85c5655e3d72d7b99ff188f92c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af969c85c5655e3d72d7b99ff188f92c9">arm_power_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult)</td></tr>
<tr class="memdesc:af969c85c5655e3d72d7b99ff188f92c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sum of the squares of the elements of a Q7 vector.  <a href="#af969c85c5655e3d72d7b99ff188f92c9">More...</a><br /></td></tr>
<tr class="separator:af969c85c5655e3d72d7b99ff188f92c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc707ee539020357c25da4c75b52eb7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aebc707ee539020357c25da4c75b52eb7">arm_mean_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pResult)</td></tr>
<tr class="memdesc:aebc707ee539020357c25da4c75b52eb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mean value of a Q7 vector.  <a href="#aebc707ee539020357c25da4c75b52eb7">More...</a><br /></td></tr>
<tr class="separator:aebc707ee539020357c25da4c75b52eb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac882495d5f098819fd3939c1ef7795b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac882495d5f098819fd3939c1ef7795b3">arm_mean_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult)</td></tr>
<tr class="memdesc:ac882495d5f098819fd3939c1ef7795b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mean value of a Q15 vector.  <a href="#ac882495d5f098819fd3939c1ef7795b3">More...</a><br /></td></tr>
<tr class="separator:ac882495d5f098819fd3939c1ef7795b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf2526d8c2d75e486e8f0b0e31877ad0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#acf2526d8c2d75e486e8f0b0e31877ad0">arm_mean_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult)</td></tr>
<tr class="memdesc:acf2526d8c2d75e486e8f0b0e31877ad0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mean value of a Q31 vector.  <a href="#acf2526d8c2d75e486e8f0b0e31877ad0">More...</a><br /></td></tr>
<tr class="separator:acf2526d8c2d75e486e8f0b0e31877ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ce08c49ab61e57bd50c3a0ca1fdb2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a74ce08c49ab61e57bd50c3a0ca1fdb2b">arm_mean_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult)</td></tr>
<tr class="memdesc:a74ce08c49ab61e57bd50c3a0ca1fdb2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mean value of a floating-point vector.  <a href="#a74ce08c49ab61e57bd50c3a0ca1fdb2b">More...</a><br /></td></tr>
<tr class="separator:a74ce08c49ab61e57bd50c3a0ca1fdb2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a393f26c5a3bfa05624fb8d32232a6d96"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a393f26c5a3bfa05624fb8d32232a6d96">arm_var_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult)</td></tr>
<tr class="memdesc:a393f26c5a3bfa05624fb8d32232a6d96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variance of the elements of a floating-point vector.  <a href="#a393f26c5a3bfa05624fb8d32232a6d96">More...</a><br /></td></tr>
<tr class="separator:a393f26c5a3bfa05624fb8d32232a6d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02873f1c2cc80adfd799305f0e6465d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac02873f1c2cc80adfd799305f0e6465d">arm_var_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult)</td></tr>
<tr class="memdesc:ac02873f1c2cc80adfd799305f0e6465d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variance of the elements of a Q31 vector.  <a href="#ac02873f1c2cc80adfd799305f0e6465d">More...</a><br /></td></tr>
<tr class="separator:ac02873f1c2cc80adfd799305f0e6465d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79dce009ed2de28a125aeb3f19631654"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a79dce009ed2de28a125aeb3f19631654">arm_var_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult)</td></tr>
<tr class="memdesc:a79dce009ed2de28a125aeb3f19631654"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variance of the elements of a Q15 vector.  <a href="#a79dce009ed2de28a125aeb3f19631654">More...</a><br /></td></tr>
<tr class="separator:a79dce009ed2de28a125aeb3f19631654"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e3ab1b57da32d45388d1fa90d7fd88c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0e3ab1b57da32d45388d1fa90d7fd88c">arm_rms_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult)</td></tr>
<tr class="memdesc:a0e3ab1b57da32d45388d1fa90d7fd88c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Root Mean Square of the elements of a floating-point vector.  <a href="#a0e3ab1b57da32d45388d1fa90d7fd88c">More...</a><br /></td></tr>
<tr class="separator:a0e3ab1b57da32d45388d1fa90d7fd88c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae33015fda23fc44e7ead5e5ed7e8d314"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae33015fda23fc44e7ead5e5ed7e8d314">arm_rms_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult)</td></tr>
<tr class="memdesc:ae33015fda23fc44e7ead5e5ed7e8d314"><td class="mdescLeft">&#160;</td><td class="mdescRight">Root Mean Square of the elements of a Q31 vector.  <a href="#ae33015fda23fc44e7ead5e5ed7e8d314">More...</a><br /></td></tr>
<tr class="separator:ae33015fda23fc44e7ead5e5ed7e8d314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b836b72dda9e5dfbbd17c7906fd13f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af5b836b72dda9e5dfbbd17c7906fd13f">arm_rms_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult)</td></tr>
<tr class="memdesc:af5b836b72dda9e5dfbbd17c7906fd13f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Root Mean Square of the elements of a Q15 vector.  <a href="#af5b836b72dda9e5dfbbd17c7906fd13f">More...</a><br /></td></tr>
<tr class="separator:af5b836b72dda9e5dfbbd17c7906fd13f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4969b5b5f3d001377bc401a3ee99dfc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a4969b5b5f3d001377bc401a3ee99dfc2">arm_std_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult)</td></tr>
<tr class="memdesc:a4969b5b5f3d001377bc401a3ee99dfc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard deviation of the elements of a floating-point vector.  <a href="#a4969b5b5f3d001377bc401a3ee99dfc2">More...</a><br /></td></tr>
<tr class="separator:a4969b5b5f3d001377bc401a3ee99dfc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39495e74f96116178be085c9dc7742f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a39495e74f96116178be085c9dc7742f5">arm_std_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult)</td></tr>
<tr class="memdesc:a39495e74f96116178be085c9dc7742f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard deviation of the elements of a Q31 vector.  <a href="#a39495e74f96116178be085c9dc7742f5">More...</a><br /></td></tr>
<tr class="separator:a39495e74f96116178be085c9dc7742f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9d27afa9928ff28a63cd98ea9218a72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af9d27afa9928ff28a63cd98ea9218a72">arm_std_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult)</td></tr>
<tr class="memdesc:af9d27afa9928ff28a63cd98ea9218a72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard deviation of the elements of a Q15 vector.  <a href="#af9d27afa9928ff28a63cd98ea9218a72">More...</a><br /></td></tr>
<tr class="separator:af9d27afa9928ff28a63cd98ea9218a72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae45024c497392cde2ae358a76d435213"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ae45024c497392cde2ae358a76d435213">arm_cmplx_mag_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:ae45024c497392cde2ae358a76d435213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex magnitude.  <a href="#ae45024c497392cde2ae358a76d435213">More...</a><br /></td></tr>
<tr class="separator:ae45024c497392cde2ae358a76d435213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14f82f9230e9d96d5b9774e2fefcb7be"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a14f82f9230e9d96d5b9774e2fefcb7be">arm_cmplx_mag_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a14f82f9230e9d96d5b9774e2fefcb7be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex magnitude.  <a href="#a14f82f9230e9d96d5b9774e2fefcb7be">More...</a><br /></td></tr>
<tr class="separator:a14f82f9230e9d96d5b9774e2fefcb7be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a4a8f77a6a51d9b3f3b9d729f85b7a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a0a4a8f77a6a51d9b3f3b9d729f85b7a4">arm_cmplx_mag_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a0a4a8f77a6a51d9b3f3b9d729f85b7a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex magnitude.  <a href="#a0a4a8f77a6a51d9b3f3b9d729f85b7a4">More...</a><br /></td></tr>
<tr class="separator:a0a4a8f77a6a51d9b3f3b9d729f85b7a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b08b5e8001d2c15204639d00893fc70"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a2b08b5e8001d2c15204639d00893fc70">arm_cmplx_dot_prod_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, uint32_t numSamples, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *realResult, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *imagResult)</td></tr>
<tr class="memdesc:a2b08b5e8001d2c15204639d00893fc70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex dot product.  <a href="#a2b08b5e8001d2c15204639d00893fc70">More...</a><br /></td></tr>
<tr class="separator:a2b08b5e8001d2c15204639d00893fc70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b731a59db062a9ad84562ef68a6c8af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5b731a59db062a9ad84562ef68a6c8af">arm_cmplx_dot_prod_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, uint32_t numSamples, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *realResult, <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *imagResult)</td></tr>
<tr class="memdesc:a5b731a59db062a9ad84562ef68a6c8af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex dot product.  <a href="#a5b731a59db062a9ad84562ef68a6c8af">More...</a><br /></td></tr>
<tr class="separator:a5b731a59db062a9ad84562ef68a6c8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcfaf567a25eb641da4043eafb9bb076"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#adcfaf567a25eb641da4043eafb9bb076">arm_cmplx_dot_prod_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, uint32_t numSamples, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *realResult, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *imagResult)</td></tr>
<tr class="memdesc:adcfaf567a25eb641da4043eafb9bb076"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex dot product.  <a href="#adcfaf567a25eb641da4043eafb9bb076">More...</a><br /></td></tr>
<tr class="separator:adcfaf567a25eb641da4043eafb9bb076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bd8889dcb45980e1d3e53344df54e85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a3bd8889dcb45980e1d3e53344df54e85">arm_cmplx_mult_real_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcCmplx, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcReal, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pCmplxDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a3bd8889dcb45980e1d3e53344df54e85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex-by-real multiplication.  <a href="#a3bd8889dcb45980e1d3e53344df54e85">More...</a><br /></td></tr>
<tr class="separator:a3bd8889dcb45980e1d3e53344df54e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a715e4bb8e945b8ca51ec5237611697ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a715e4bb8e945b8ca51ec5237611697ce">arm_cmplx_mult_real_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcCmplx, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcReal, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pCmplxDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a715e4bb8e945b8ca51ec5237611697ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex-by-real multiplication.  <a href="#a715e4bb8e945b8ca51ec5237611697ce">More...</a><br /></td></tr>
<tr class="separator:a715e4bb8e945b8ca51ec5237611697ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c18616f56cb4d3c0889ce0b339221ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a9c18616f56cb4d3c0889ce0b339221ca">arm_cmplx_mult_real_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcCmplx, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcReal, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pCmplxDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a9c18616f56cb4d3c0889ce0b339221ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex-by-real multiplication.  <a href="#a9c18616f56cb4d3c0889ce0b339221ca">More...</a><br /></td></tr>
<tr class="separator:a9c18616f56cb4d3c0889ce0b339221ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5f8212a4994882b647f0538a55856c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1f5f8212a4994882b647f0538a55856c">arm_min_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *result, uint32_t *index)</td></tr>
<tr class="memdesc:a1f5f8212a4994882b647f0538a55856c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimum value of a Q7 vector.  <a href="#a1f5f8212a4994882b647f0538a55856c">More...</a><br /></td></tr>
<tr class="separator:a1f5f8212a4994882b647f0538a55856c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad065e37535ebb726750ac1545cb3fa6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ad065e37535ebb726750ac1545cb3fa6f">arm_min_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:ad065e37535ebb726750ac1545cb3fa6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimum value of a Q15 vector.  <a href="#ad065e37535ebb726750ac1545cb3fa6f">More...</a><br /></td></tr>
<tr class="separator:ad065e37535ebb726750ac1545cb3fa6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab20faeceb5ff5d2d9dd628c2ecf41303"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ab20faeceb5ff5d2d9dd628c2ecf41303">arm_min_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:ab20faeceb5ff5d2d9dd628c2ecf41303"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimum value of a Q31 vector.  <a href="#ab20faeceb5ff5d2d9dd628c2ecf41303">More...</a><br /></td></tr>
<tr class="separator:ab20faeceb5ff5d2d9dd628c2ecf41303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af62b1673740fc516ea64daf777b7d74a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af62b1673740fc516ea64daf777b7d74a">arm_min_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:af62b1673740fc516ea64daf777b7d74a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minimum value of a floating-point vector.  <a href="#af62b1673740fc516ea64daf777b7d74a">More...</a><br /></td></tr>
<tr class="separator:af62b1673740fc516ea64daf777b7d74a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6afd64d381b5c232de59163ebfe71e35"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a6afd64d381b5c232de59163ebfe71e35">arm_max_q7</a> (<a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:a6afd64d381b5c232de59163ebfe71e35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum value of a Q7 vector.  <a href="#a6afd64d381b5c232de59163ebfe71e35">More...</a><br /></td></tr>
<tr class="separator:a6afd64d381b5c232de59163ebfe71e35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac132856c68f4bf2a056eaad5921c7880"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#ac132856c68f4bf2a056eaad5921c7880">arm_max_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:ac132856c68f4bf2a056eaad5921c7880"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum value of a Q15 vector.  <a href="#ac132856c68f4bf2a056eaad5921c7880">More...</a><br /></td></tr>
<tr class="separator:ac132856c68f4bf2a056eaad5921c7880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff7cbd4e955382def06724cc4cc85795"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#aff7cbd4e955382def06724cc4cc85795">arm_max_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, uint32_t blockSize, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:aff7cbd4e955382def06724cc4cc85795"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum value of a Q31 vector.  <a href="#aff7cbd4e955382def06724cc4cc85795">More...</a><br /></td></tr>
<tr class="separator:aff7cbd4e955382def06724cc4cc85795"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b89d1b04575aeec494f678695fb87d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a5b89d1b04575aeec494f678695fb87d8">arm_max_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, uint32_t blockSize, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pResult, uint32_t *pIndex)</td></tr>
<tr class="memdesc:a5b89d1b04575aeec494f678695fb87d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum value of a floating-point vector.  <a href="#a5b89d1b04575aeec494f678695fb87d8">More...</a><br /></td></tr>
<tr class="separator:a5b89d1b04575aeec494f678695fb87d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e96abfc9c3e30efb70a2ec9d0fe7e8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a67e96abfc9c3e30efb70a2ec9d0fe7e8">arm_cmplx_mult_cmplx_q15</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a67e96abfc9c3e30efb70a2ec9d0fe7e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 complex-by-complex multiplication.  <a href="#a67e96abfc9c3e30efb70a2ec9d0fe7e8">More...</a><br /></td></tr>
<tr class="separator:a67e96abfc9c3e30efb70a2ec9d0fe7e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1829e50993a90742de225a0ce4213838"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a1829e50993a90742de225a0ce4213838">arm_cmplx_mult_cmplx_q31</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcA, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrcB, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a1829e50993a90742de225a0ce4213838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 complex-by-complex multiplication.  <a href="#a1829e50993a90742de225a0ce4213838">More...</a><br /></td></tr>
<tr class="separator:a1829e50993a90742de225a0ce4213838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b47080054a1ba1250a86805be1ff6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a14b47080054a1ba1250a86805be1ff6b">arm_cmplx_mult_cmplx_f32</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcA, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrcB, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t numSamples)</td></tr>
<tr class="memdesc:a14b47080054a1ba1250a86805be1ff6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point complex-by-complex multiplication.  <a href="#a14b47080054a1ba1250a86805be1ff6b">More...</a><br /></td></tr>
<tr class="separator:a14b47080054a1ba1250a86805be1ff6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a177704107f94564e9abe4daaa36f4554"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a177704107f94564e9abe4daaa36f4554">arm_float_to_q31</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a177704107f94564e9abe4daaa36f4554"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the floating-point vector to Q31 vector.  <a href="#a177704107f94564e9abe4daaa36f4554">More...</a><br /></td></tr>
<tr class="separator:a177704107f94564e9abe4daaa36f4554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a215456e35a18db86882e1d3f0d24e1f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a215456e35a18db86882e1d3f0d24e1f2">arm_float_to_q15</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a215456e35a18db86882e1d3f0d24e1f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the floating-point vector to Q15 vector.  <a href="#a215456e35a18db86882e1d3f0d24e1f2">More...</a><br /></td></tr>
<tr class="separator:a215456e35a18db86882e1d3f0d24e1f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44a393818cdee8dce80f2d66add25411"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a44a393818cdee8dce80f2d66add25411">arm_float_to_q7</a> (<a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a44a393818cdee8dce80f2d66add25411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the floating-point vector to Q7 vector.  <a href="#a44a393818cdee8dce80f2d66add25411">More...</a><br /></td></tr>
<tr class="separator:a44a393818cdee8dce80f2d66add25411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a901dede4661365c9e7c630d3eb31c32c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a901dede4661365c9e7c630d3eb31c32c">arm_q31_to_q15</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a901dede4661365c9e7c630d3eb31c32c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the Q31 vector to Q15 vector.  <a href="#a901dede4661365c9e7c630d3eb31c32c">More...</a><br /></td></tr>
<tr class="separator:a901dede4661365c9e7c630d3eb31c32c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f297d1a7d776805395095fdb24a8071"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7f297d1a7d776805395095fdb24a8071">arm_q31_to_q7</a> (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a7f297d1a7d776805395095fdb24a8071"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the Q31 vector to Q7 vector.  <a href="#a7f297d1a7d776805395095fdb24a8071">More...</a><br /></td></tr>
<tr class="separator:a7f297d1a7d776805395095fdb24a8071"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8b0d2324de273fc430b0e61ad4e9eb2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#af8b0d2324de273fc430b0e61ad4e9eb2">arm_q15_to_float</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:af8b0d2324de273fc430b0e61ad4e9eb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the Q15 vector to floating-point vector.  <a href="#af8b0d2324de273fc430b0e61ad4e9eb2">More...</a><br /></td></tr>
<tr class="separator:af8b0d2324de273fc430b0e61ad4e9eb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ba2d87366990ad5380439e2b4a4c0a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a7ba2d87366990ad5380439e2b4a4c0a5">arm_q15_to_q31</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a7ba2d87366990ad5380439e2b4a4c0a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the Q15 vector to Q31 vector.  <a href="#a7ba2d87366990ad5380439e2b4a4c0a5">More...</a><br /></td></tr>
<tr class="separator:a7ba2d87366990ad5380439e2b4a4c0a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb31855ff8cce09c2ec9308f48ded69"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arm__math_8h.xhtml#a8fb31855ff8cce09c2ec9308f48ded69">arm_q15_to_q7</a> (<a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *pSrc, <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *pDst, uint32_t blockSize)</td></tr>
<tr class="memdesc:a8fb31855ff8cce09c2ec9308f48ded69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the elements of the Q15 vector to Q7 vector.  <a href="#a8fb31855ff8cce09c2ec9308f48ded69">More...</a><br /></td></tr>
<tr class="separator:a8fb31855ff8cce09c2ec9308f48ded69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab49a4c0f64854903d996d01ba38f711a"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___bilinear_interpolate.xhtml#gab49a4c0f64854903d996d01ba38f711a">arm_bilinear_interp_f32</a> (const <a class="el" href="structarm__bilinear__interp__instance__f32.xhtml">arm_bilinear_interp_instance_f32</a> *S, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> X, <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> Y)</td></tr>
<tr class="memdesc:gab49a4c0f64854903d996d01ba38f711a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Floating-point bilinear interpolation.  <a href="group___bilinear_interpolate.xhtml#gab49a4c0f64854903d996d01ba38f711a">More...</a><br /></td></tr>
<tr class="separator:gab49a4c0f64854903d996d01ba38f711a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga202a033c8a2ad3678b136f93153b6d13"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___bilinear_interpolate.xhtml#ga202a033c8a2ad3678b136f93153b6d13">arm_bilinear_interp_q31</a> (<a class="el" href="structarm__bilinear__interp__instance__q31.xhtml">arm_bilinear_interp_instance_q31</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> X, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Y)</td></tr>
<tr class="memdesc:ga202a033c8a2ad3678b136f93153b6d13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q31 bilinear interpolation.  <a href="group___bilinear_interpolate.xhtml#ga202a033c8a2ad3678b136f93153b6d13">More...</a><br /></td></tr>
<tr class="separator:ga202a033c8a2ad3678b136f93153b6d13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8dffbc2a01bb7accf231384498ec85e"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___bilinear_interpolate.xhtml#gaa8dffbc2a01bb7accf231384498ec85e">arm_bilinear_interp_q15</a> (<a class="el" href="structarm__bilinear__interp__instance__q15.xhtml">arm_bilinear_interp_instance_q15</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> X, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Y)</td></tr>
<tr class="memdesc:gaa8dffbc2a01bb7accf231384498ec85e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q15 bilinear interpolation.  <a href="group___bilinear_interpolate.xhtml#gaa8dffbc2a01bb7accf231384498ec85e">More...</a><br /></td></tr>
<tr class="separator:gaa8dffbc2a01bb7accf231384498ec85e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade8db9706a3ae9ad03b2750a239d2ee6"><td class="memItemLeft" align="right" valign="top">static __INLINE <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___bilinear_interpolate.xhtml#gade8db9706a3ae9ad03b2750a239d2ee6">arm_bilinear_interp_q7</a> (<a class="el" href="structarm__bilinear__interp__instance__q7.xhtml">arm_bilinear_interp_instance_q7</a> *S, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> X, <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> Y)</td></tr>
<tr class="memdesc:gade8db9706a3ae9ad03b2750a239d2ee6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Q7 bilinear interpolation.  <a href="group___bilinear_interpolate.xhtml#gade8db9706a3ae9ad03b2750a239d2ee6">More...</a><br /></td></tr>
<tr class="separator:gade8db9706a3ae9ad03b2750a239d2ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a87c3b351c33a90de11a2f23e67867a8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87c3b351c33a90de11a2f23e67867a8a">&sect;&nbsp;</a></span>__CMSIS_GENERIC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __CMSIS_GENERIC&#160;&#160;&#160;/* disable <a class="el" href="group___c_m_s_i_s__core__base.xhtml#gac8e97e8ce56ae9f57da1363a937f8a17">NVIC</a> and Systick functions */</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ebff224ad44c217fde9f530342e2960"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ebff224ad44c217fde9f530342e2960">&sect;&nbsp;</a></span>__PACKq7</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __PACKq7</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v0, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v1, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v2, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v3&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">( (((int32_t)(v0) &lt;&lt;  0) &amp; (int32_t)0x000000FF) |   \</div><div class="line">                                (((int32_t)(v1) &lt;&lt;  8) &amp; (int32_t)0x0000FF00) |   \</div><div class="line">                         (((int32_t)(v2) &lt;&lt; 16) &amp; (int32_t)0x00FF0000) |   \</div><div class="line">                         (((int32_t)(v3) &lt;&lt; 24) &amp; (int32_t)0xFF000000)  )</div></div><!-- fragment -->
<p>definition to pack four 8 bit values. </p>

</div>
</div>
<a id="a9de2e0a5785be82866bcb96012282248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9de2e0a5785be82866bcb96012282248">&sect;&nbsp;</a></span>__SIMD32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __SIMD32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">addr</td><td>)</td>
          <td>&#160;&#160;&#160;(*(__SIMD32_TYPE **) &amp; (addr))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>definition to read/write two 16 bit values. </p>

</div>
</div>
<a id="a1185d670d798aaf52eec13f0403f3407"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1185d670d798aaf52eec13f0403f3407">&sect;&nbsp;</a></span>__SIMD32_CONST</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __SIMD32_CONST</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">addr</td><td>)</td>
          <td>&#160;&#160;&#160;((__SIMD32_TYPE *)(addr))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad1b053da364f9fd82ca1a381df7590b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1b053da364f9fd82ca1a381df7590b6">&sect;&nbsp;</a></span>__SIMD64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __SIMD64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">addr</td><td>)</td>
          <td>&#160;&#160;&#160;(*(int64_t **) &amp; (addr))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af0d54ec57b936994a34f073d0049ea3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0d54ec57b936994a34f073d0049ea3f">&sect;&nbsp;</a></span>_SIMD32_OFFSET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _SIMD32_OFFSET</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">addr</td><td>)</td>
          <td>&#160;&#160;&#160;(*(__SIMD32_TYPE *)  (addr))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a280a402ab28c399fcc4168f2ed631acb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a280a402ab28c399fcc4168f2ed631acb">&sect;&nbsp;</a></span>ALIGN4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ALIGN4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro for Unaligned Support. </p>

</div>
</div>
<a id="aaff6d2358c4ada8de838a279254ab550"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaff6d2358c4ada8de838a279254ab550">&sect;&nbsp;</a></span>CONTROLLER_Q31_SHIFT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CONTROLLER_Q31_SHIFT&#160;&#160;&#160;(32 - 9)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a663277ff19ad0b409fb98b64b2c2750b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a663277ff19ad0b409fb98b64b2c2750b">&sect;&nbsp;</a></span>DELTA_Q15</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DELTA_Q15&#160;&#160;&#160;0x5</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aad77ae594e95c5af6ae4129bd6a483c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad77ae594e95c5af6ae4129bd6a483c2">&sect;&nbsp;</a></span>DELTA_Q31</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DELTA_Q31&#160;&#160;&#160;(0x100)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macros required for reciprocal calculation in Normalized LMS. </p>

</div>
</div>
<a id="a34716b73c631e65e8dd855e08384ecb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34716b73c631e65e8dd855e08384ecb2">&sect;&nbsp;</a></span>FAST_MATH_Q15_SHIFT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FAST_MATH_Q15_SHIFT&#160;&#160;&#160;(16 - 10)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4268f77b1811a0c7fc2532a0bf6108b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4268f77b1811a0c7fc2532a0bf6108b0">&sect;&nbsp;</a></span>FAST_MATH_Q31_SHIFT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FAST_MATH_Q31_SHIFT&#160;&#160;&#160;(32 - 10)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afcb9147c96853bea484cfc2dde07463d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcb9147c96853bea484cfc2dde07463d">&sect;&nbsp;</a></span>FAST_MATH_TABLE_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FAST_MATH_TABLE_SIZE&#160;&#160;&#160;512</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macros required for SINE and COSINE Fast math approximations. </p>

</div>
</div>
<a id="a29f839928f4752b73c8858d6dbb55294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29f839928f4752b73c8858d6dbb55294">&sect;&nbsp;</a></span>INDEX_MASK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INDEX_MASK&#160;&#160;&#160;0x0000003F</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1339e9abc11a3870e0c04f822a62166a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1339e9abc11a3870e0c04f822a62166a">&sect;&nbsp;</a></span>INPUT_SPACING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INPUT_SPACING&#160;&#160;&#160;0xB60B61</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macros required for SINE and COSINE Controller functions. </p>

</div>
</div>
<a id="abb4baa0192bbb6fabc9251af4b4cb322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb4baa0192bbb6fabc9251af4b4cb322">&sect;&nbsp;</a></span>mult_32x32_keep32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define mult_32x32_keep32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y ) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a960f210642058d2b3d5368729a6e8375"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a960f210642058d2b3d5368729a6e8375">&sect;&nbsp;</a></span>mult_32x32_keep32_R</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define mult_32x32_keep32_R</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y + 0x80000000LL ) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a58454519e12e8157f0a1c36071333655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58454519e12e8157f0a1c36071333655">&sect;&nbsp;</a></span>multAcc_32x32_keep32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define multAcc_32x32_keep32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a += (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aba3e538352fc7f9d6d15f9a18d469399"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba3e538352fc7f9d6d15f9a18d469399">&sect;&nbsp;</a></span>multAcc_32x32_keep32_R</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define multAcc_32x32_keep32_R</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) a) &lt;&lt; 32) + ((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) + 0x80000000LL ) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of BilinearInterpolate group </p>

</div>
</div>
<a id="a9ec66f3082a4c65c78075638255f42ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ec66f3082a4c65c78075638255f42ab">&sect;&nbsp;</a></span>multSub_32x32_keep32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define multSub_32x32_keep32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a -= (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a668fbf1cd1c3bc8faf1b1c83964ade23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a668fbf1cd1c3bc8faf1b1c83964ade23">&sect;&nbsp;</a></span>multSub_32x32_keep32_R</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define multSub_32x32_keep32_R</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;a = (<a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>) (((((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) a) &lt;&lt; 32) - ((<a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>) x * y) + 0x80000000LL ) &gt;&gt; 32)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a598a3330b3c21701223ee0ca14316eca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a598a3330b3c21701223ee0ca14316eca">&sect;&nbsp;</a></span>PI</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PI&#160;&#160;&#160;3.14159265358979f</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a032503e76d6f69bc67e99e909c8125da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a032503e76d6f69bc67e99e909c8125da">&sect;&nbsp;</a></span>TABLE_SIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TABLE_SIZE&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a60b0142af7be007902142add27919b82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60b0142af7be007902142add27919b82">&sect;&nbsp;</a></span>TABLE_SPACING_Q15</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TABLE_SPACING_Q15&#160;&#160;&#160;0x80</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8407c9e1347d10e3bcf0a7014f1fb2ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8407c9e1347d10e3bcf0a7014f1fb2ff">&sect;&nbsp;</a></span>TABLE_SPACING_Q31</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TABLE_SPACING_Q31&#160;&#160;&#160;0x400000</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a4611b605e45ab401f02cab15c5e38715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4611b605e45ab401f02cab15c5e38715">&sect;&nbsp;</a></span>float32_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef float <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit floating-point type definition. </p>

</div>
</div>
<a id="ac55f3ae81b5bc9053760baacf57e47f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac55f3ae81b5bc9053760baacf57e47f4">&sect;&nbsp;</a></span>float64_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef double <a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>64-bit floating-point type definition. </p>

</div>
</div>
<a id="ab5a8fb21a5b3b983d5f54f31614052ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5a8fb21a5b3b983d5f54f31614052ea">&sect;&nbsp;</a></span>q15_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int16_t <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>16-bit fractional data type in 1.15 format. </p>

</div>
</div>
<a id="adc89a3547f5324b7b3b95adec3806bc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc89a3547f5324b7b3b95adec3806bc0">&sect;&nbsp;</a></span>q31_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int32_t <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit fractional data type in 1.31 format. </p>

</div>
</div>
<a id="a5aea1cb12fc02d9d44c8abf217eaa5c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5aea1cb12fc02d9d44c8abf217eaa5c6">&sect;&nbsp;</a></span>q63_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int64_t <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>64-bit fractional data type in 1.63 format. </p>

</div>
</div>
<a id="ae541b6f232c305361e9b416fc9eed263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae541b6f232c305361e9b416fc9eed263">&sect;&nbsp;</a></span>q7_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int8_t <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>8-bit fractional data type in 1.7 format. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a5e459c6409dfcd2927bb8a57491d7cf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e459c6409dfcd2927bb8a57491d7cf6">&sect;&nbsp;</a></span>arm_status</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error status returned by some functions in the library. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a9f8b2a10bd827fb4600e77d455902eb0"></a>ARM_MATH_SUCCESS&#160;</td><td class="fielddoc"><p>No error. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a74897e18d4b8f62b12a7d8a01dd2bb35"></a>ARM_MATH_ARGUMENT_ERROR&#160;</td><td class="fielddoc"><p>One or more arguments are incorrect. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a9ae74d7f8a53aec0512ae8f0a421e0e1"></a>ARM_MATH_LENGTH_ERROR&#160;</td><td class="fielddoc"><p>Length of data buffer is incorrect. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a7071b92f1f6bc3c5c312a237ea91105b"></a>ARM_MATH_SIZE_MISMATCH&#160;</td><td class="fielddoc"><p>Size of matrices is not compatible with the operation. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6ac55996aaf19245238a8f57a91aeaefcc"></a>ARM_MATH_NANINF&#160;</td><td class="fielddoc"><p>Not-a-number (NaN) or infinity is generated. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a91509ea9c819dbd592ac13a6b05382dc"></a>ARM_MATH_SINGULAR&#160;</td><td class="fielddoc"><p>Generated by matrix inversion if the input matrix is singular and cannot be inverted. </p>
</td></tr>
<tr><td class="fieldname"><a id="a5e459c6409dfcd2927bb8a57491d7cf6a09457f2be656b35015fd6d36202fa376"></a>ARM_MATH_TEST_FAILURE&#160;</td><td class="fielddoc"><p>Test Failed. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a421b6275f9d35f50286c0ff3beceff02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a421b6275f9d35f50286c0ff3beceff02">&sect;&nbsp;</a></span>arm_abs_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_abs_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point vector absolute value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a39f92964c9b649ba252e26ebe7b95594"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39f92964c9b649ba252e26ebe7b95594">&sect;&nbsp;</a></span>arm_abs_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_abs_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 vector absolute value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a59eafcdcdb52da60d37f20aec6ff4577"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59eafcdcdb52da60d37f20aec6ff4577">&sect;&nbsp;</a></span>arm_abs_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_abs_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 vector absolute value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="adc30985e33fbf96802a5a7954dece3b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc30985e33fbf96802a5a7954dece3b1">&sect;&nbsp;</a></span>arm_abs_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_abs_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q7 vector absolute value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a6a904a547413b10565dd1d251c6bafbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a904a547413b10565dd1d251c6bafbd">&sect;&nbsp;</a></span>arm_add_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_add_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point vector addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="abb51285a41f511670bbff62fc0e1bf62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb51285a41f511670bbff62fc0e1bf62">&sect;&nbsp;</a></span>arm_add_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_add_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 vector addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a24d6c3f7f8b9fae4847c0c3f26a39a3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24d6c3f7f8b9fae4847c0c3f26a39a3b">&sect;&nbsp;</a></span>arm_add_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_add_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 vector addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aed633f415a7840a66861debca2dfb96b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed633f415a7840a66861debca2dfb96b">&sect;&nbsp;</a></span>arm_add_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_add_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q7 vector addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a44900cecb8083afcaabf905ffcd656bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44900cecb8083afcaabf905ffcd656bb">&sect;&nbsp;</a></span>arm_biquad_cas_df1_32x64_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cas_df1_32x64_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the high precision Q31 Biquad cascade filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>shift to be applied to the output. Varies according to the coefficients format </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a953a83e69685de6575cff37feb358a93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a953a83e69685de6575cff37feb358a93">&sect;&nbsp;</a></span>arm_biquad_cas_df1_32x64_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cas_df1_32x64_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__cas__df1__32x64__ins__q31.xhtml">arm_biquad_cas_df1_32x64_ins_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the high precision Q31 Biquad cascade filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aa0dbe330d763e3c1d8030b3ef12d5bdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0dbe330d763e3c1d8030b3ef12d5bdc">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="affb9792c0220882efd4c58f3c6a05fd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affb9792c0220882efd4c58f3c6a05fd7">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_fast_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a456390f5e448afad3a38bed7d6e380e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a456390f5e448afad3a38bed7d6e380e3">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_fast_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a8e73b69a788e681a61bccc8959d823c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e73b69a788e681a61bccc8959d823c5">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__casd__df1__inst__f32.xhtml">arm_biquad_casd_df1_inst_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="ad54c724132f6d742a444eb6df0e9c731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad54c724132f6d742a444eb6df0e9c731">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>Shift to be applied to the output. Varies according to the coefficients format </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="af42a44f9b16d61e636418c83eefe577b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af42a44f9b16d61e636418c83eefe577b">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>Shift to be applied to the output. Varies according to the coefficients format </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="add66a0aefdc645031d607b0a5b37a942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add66a0aefdc645031d607b0a5b37a942">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__casd__df1__inst__q15.xhtml">arm_biquad_casd_df1_inst_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a27b0c54da702713976e5202d20b4473f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27b0c54da702713976e5202d20b4473f">&sect;&nbsp;</a></span>arm_biquad_cascade_df1_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df1_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__casd__df1__inst__q31.xhtml">arm_biquad_casd_df1_inst_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 Biquad cascade structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a646c25998bf35991c60299b1431460f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a646c25998bf35991c60299b1431460f7">&sect;&nbsp;</a></span>arm_biquad_cascade_df2T_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df2T_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point transposed direct form II Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad146359b7ab526d6ebc81d8aca530f78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad146359b7ab526d6ebc81d8aca530f78">&sect;&nbsp;</a></span>arm_biquad_cascade_df2T_f64()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df2T_f64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point transposed direct form II Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a70eaddf317a4a8bde6bd6a97df67fedd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70eaddf317a4a8bde6bd6a97df67fedd">&sect;&nbsp;</a></span>arm_biquad_cascade_df2T_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df2T_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__cascade__df2_t__instance__f32.xhtml">arm_biquad_cascade_df2T_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a12dc5d8e8892806ad70e79ca2ff9f86e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12dc5d8e8892806ad70e79ca2ff9f86e">&sect;&nbsp;</a></span>arm_biquad_cascade_df2T_init_f64()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_df2T_init_f64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__cascade__df2_t__instance__f64.xhtml">arm_biquad_cascade_df2T_instance_f64</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ac55f3ae81b5bc9053760baacf57e47f4">float64_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="aeff8ab405c3db567ae26344ec7539911"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeff8ab405c3db567ae26344ec7539911">&sect;&nbsp;</a></span>arm_biquad_cascade_stereo_df2T_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_stereo_df2T_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point transposed direct form II Biquad cascade filter. </p>
<p>2 channels </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a405197c89fe4d34003efd23786296425"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a405197c89fe4d34003efd23786296425">&sect;&nbsp;</a></span>arm_biquad_cascade_stereo_df2T_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_biquad_cascade_stereo_df2T_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__biquad__cascade__stereo__df2_t__instance__f32.xhtml">arm_biquad_cascade_stereo_df2T_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point transposed direct form II Biquad cascade filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the filter data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of 2nd order stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="ade0f9c4ff157b6b9c72a1eafd86ebf80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade0f9c4ff157b6b9c72a1eafd86ebf80">&sect;&nbsp;</a></span>arm_cfft_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__instance__f32.xhtml">arm_cfft_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a68cdacd2267a2967955e40e6b7ec1229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68cdacd2267a2967955e40e6b7ec1229">&sect;&nbsp;</a></span>arm_cfft_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__instance__q15.xhtml">arm_cfft_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a0008bd997ab6e2e299ef2fb272fb4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a0008bd997ab6e2e299ef2fb272fb4b">&sect;&nbsp;</a></span>arm_cfft_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__instance__q31.xhtml">arm_cfft_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9fadd650b802f612ae558ddaab789a6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fadd650b802f612ae558ddaab789a6d">&sect;&nbsp;</a></span>arm_cfft_radix2_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix2_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac9565e6bc7229577ecf5e090313cafd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9565e6bc7229577ecf5e090313cafd7">&sect;&nbsp;</a></span>arm_cfft_radix2_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix2_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix2__instance__f32.xhtml">arm_cfft_radix2_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c5b2127b3c4ea2d03692127f8543858"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c5b2127b3c4ea2d03692127f8543858">&sect;&nbsp;</a></span>arm_cfft_radix2_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix2_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abec9611e77382f31e152668bf6b4b638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abec9611e77382f31e152668bf6b4b638">&sect;&nbsp;</a></span>arm_cfft_radix2_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix2_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55b424341dc3efd3fa0bcaaff4bdbf40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55b424341dc3efd3fa0bcaaff4bdbf40">&sect;&nbsp;</a></span>arm_cfft_radix2_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix2_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix2__instance__q15.xhtml">arm_cfft_radix2_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6321f703ec87a274aedaab33d3e766b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6321f703ec87a274aedaab33d3e766b4">&sect;&nbsp;</a></span>arm_cfft_radix2_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix2_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix2__instance__q31.xhtml">arm_cfft_radix2_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a521f670cd9c571bc61aff9bec89f4c26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a521f670cd9c571bc61aff9bec89f4c26">&sect;&nbsp;</a></span>arm_cfft_radix4_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix4_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af336459f684f0b17bfae539ef1b1b78a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af336459f684f0b17bfae539ef1b1b78a">&sect;&nbsp;</a></span>arm_cfft_radix4_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix4_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0c2acfda3126c452e75b81669e8ad9ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c2acfda3126c452e75b81669e8ad9ef">&sect;&nbsp;</a></span>arm_cfft_radix4_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix4_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad5caaafeec900c8ff72321c01bbd462c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5caaafeec900c8ff72321c01bbd462c">&sect;&nbsp;</a></span>arm_cfft_radix4_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_cfft_radix4_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8d66cdac41b8bf6cefdb895456eee84a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d66cdac41b8bf6cefdb895456eee84a">&sect;&nbsp;</a></span>arm_cfft_radix4_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix4_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afde3ee1f58cf393b45a9073174fff548"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afde3ee1f58cf393b45a9073174fff548">&sect;&nbsp;</a></span>arm_cfft_radix4_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cfft_radix4_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae469fac5e1df35f8bcf1b3d7c3136484"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae469fac5e1df35f8bcf1b3d7c3136484">&sect;&nbsp;</a></span>arm_circularRead_f32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularRead_f32 </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>readOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>dst_base</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dst_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dstInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>floating-point Circular Read function. </p>

</div>
</div>
<a id="ad5fb134f83f2c802261f172e3dceb131"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5fb134f83f2c802261f172e3dceb131">&sect;&nbsp;</a></span>arm_circularRead_q15()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularRead_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>readOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>dst_base</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dst_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dstInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Q15 Circular Read function. </p>

</div>
</div>
<a id="a30aa80ea20abe71f3afa99f2f0391ed5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30aa80ea20abe71f3afa99f2f0391ed5">&sect;&nbsp;</a></span>arm_circularRead_q7()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularRead_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>readOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>dst_base</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dst_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dstInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Q7 Circular Read function. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a30aa80ea20abe71f3afa99f2f0391ed5_cgraph.svg" width="419" height="2267"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6ff56c0896ce00712ba8f2fcf72cacd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ff56c0896ce00712ba8f2fcf72cacd3">&sect;&nbsp;</a></span>arm_circularWrite_f32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularWrite_f32 </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>writeOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>srcInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>end of SQRT group </p>
<p>floating-point Circular write function. </p>

</div>
</div>
<a id="a3ba2d215477e692def7fda46dda883ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ba2d215477e692def7fda46dda883ed">&sect;&nbsp;</a></span>arm_circularWrite_q15()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularWrite_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>writeOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>srcInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Q15 Circular write function. </p>

</div>
</div>
<a id="addba85b1f7fbd472fd00ddd9ce43aea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addba85b1f7fbd472fd00ddd9ce43aea8">&sect;&nbsp;</a></span>arm_circularWrite_q7()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE void arm_circularWrite_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>circBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>writeOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bufferInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>srcInc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Q7 Circular write function. </p>

</div>
</div>
<a id="a3a102aead6460ad9fcb0626f6b226ffb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a102aead6460ad9fcb0626f6b226ffb">&sect;&nbsp;</a></span>arm_cmplx_conj_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_conj_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex conjugate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="af47689ae07962acaecb8ddde556df4a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af47689ae07962acaecb8ddde556df4a4">&sect;&nbsp;</a></span>arm_cmplx_conj_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_conj_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex conjugate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="afecc94879a383c5208ec3ef99485e4b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afecc94879a383c5208ec3ef99485e4b5">&sect;&nbsp;</a></span>arm_cmplx_conj_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_conj_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex conjugate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="adcfaf567a25eb641da4043eafb9bb076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcfaf567a25eb641da4043eafb9bb076">&sect;&nbsp;</a></span>arm_cmplx_dot_prod_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_dot_prod_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>realResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>imagResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex dot product. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*realResult</td><td>real part of the result returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*imagResult</td><td>imaginary part of the result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_adcfaf567a25eb641da4043eafb9bb076_icgraph.svg" width="398" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2b08b5e8001d2c15204639d00893fc70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b08b5e8001d2c15204639d00893fc70">&sect;&nbsp;</a></span>arm_cmplx_dot_prod_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_dot_prod_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>realResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>imagResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex dot product. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*realResult</td><td>real part of the result returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*imagResult</td><td>imaginary part of the result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a2b08b5e8001d2c15204639d00893fc70_icgraph.svg" width="402" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5b731a59db062a9ad84562ef68a6c8af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b731a59db062a9ad84562ef68a6c8af">&sect;&nbsp;</a></span>arm_cmplx_dot_prod_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_dot_prod_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>realResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>imagResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex dot product. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*realResult</td><td>real part of the result returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*imagResult</td><td>imaginary part of the result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a5b731a59db062a9ad84562ef68a6c8af_icgraph.svg" width="402" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae45024c497392cde2ae358a76d435213"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae45024c497392cde2ae358a76d435213">&sect;&nbsp;</a></span>arm_cmplx_mag_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex magnitude. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ae45024c497392cde2ae358a76d435213_icgraph.svg" width="370" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a4a8f77a6a51d9b3f3b9d729f85b7a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a4a8f77a6a51d9b3f3b9d729f85b7a4">&sect;&nbsp;</a></span>arm_cmplx_mag_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex magnitude. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a0a4a8f77a6a51d9b3f3b9d729f85b7a4_icgraph.svg" width="374" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a14f82f9230e9d96d5b9774e2fefcb7be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14f82f9230e9d96d5b9774e2fefcb7be">&sect;&nbsp;</a></span>arm_cmplx_mag_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex magnitude. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a14f82f9230e9d96d5b9774e2fefcb7be_icgraph.svg" width="374" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa7faccc0d96b061d8b7d0d7d82045074"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7faccc0d96b061d8b7d0d7d82045074">&sect;&nbsp;</a></span>arm_cmplx_mag_squared_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_squared_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex magnitude squared. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a45537f576102d960d467eb722b8431f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45537f576102d960d467eb722b8431f2">&sect;&nbsp;</a></span>arm_cmplx_mag_squared_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_squared_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex magnitude squared. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a384b0538101e8c03fa4fa14271e63b04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a384b0538101e8c03fa4fa14271e63b04">&sect;&nbsp;</a></span>arm_cmplx_mag_squared_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mag_squared_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex magnitude squared. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the real output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a14b47080054a1ba1250a86805be1ff6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14b47080054a1ba1250a86805be1ff6b">&sect;&nbsp;</a></span>arm_cmplx_mult_cmplx_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_cmplx_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex-by-complex multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a14b47080054a1ba1250a86805be1ff6b_icgraph.svg" width="415" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a67e96abfc9c3e30efb70a2ec9d0fe7e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67e96abfc9c3e30efb70a2ec9d0fe7e8">&sect;&nbsp;</a></span>arm_cmplx_mult_cmplx_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_cmplx_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex-by-complex multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a67e96abfc9c3e30efb70a2ec9d0fe7e8_icgraph.svg" width="419" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1829e50993a90742de225a0ce4213838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1829e50993a90742de225a0ce4213838">&sect;&nbsp;</a></span>arm_cmplx_mult_cmplx_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_cmplx_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex-by-complex multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of complex samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a1829e50993a90742de225a0ce4213838_icgraph.svg" width="419" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9c18616f56cb4d3c0889ce0b339221ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c18616f56cb4d3c0889ce0b339221ca">&sect;&nbsp;</a></span>arm_cmplx_mult_real_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_real_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcCmplx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCmplxDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point complex-by-real multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcCmplx</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcReal</td><td>points to the real input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pCmplxDst</td><td>points to the complex output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a9c18616f56cb4d3c0889ce0b339221ca_icgraph.svg" width="400" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3bd8889dcb45980e1d3e53344df54e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bd8889dcb45980e1d3e53344df54e85">&sect;&nbsp;</a></span>arm_cmplx_mult_real_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_real_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcCmplx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCmplxDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 complex-by-real multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcCmplx</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcReal</td><td>points to the real input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pCmplxDst</td><td>points to the complex output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a3bd8889dcb45980e1d3e53344df54e85_icgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a715e4bb8e945b8ca51ec5237611697ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a715e4bb8e945b8ca51ec5237611697ce">&sect;&nbsp;</a></span>arm_cmplx_mult_real_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_cmplx_mult_real_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcCmplx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCmplxDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numSamples</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 complex-by-real multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcCmplx</td><td>points to the complex input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcReal</td><td>points to the real input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pCmplxDst</td><td>points to the complex output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSamples</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a715e4bb8e945b8ca51ec5237611697ce_icgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3f860dc98c6fc4cafc421e4a2aed3c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f860dc98c6fc4cafc421e4a2aed3c89">&sect;&nbsp;</a></span>arm_conv_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of floating-point sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the location where the output result is written. Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="af16f490d245391ec18a42adc73d6d749"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af16f490d245391ec18a42adc73d6d749">&sect;&nbsp;</a></span>arm_conv_fast_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_fast_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch1</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch2</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad75ca978ce906e04abdf86a8d76306d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad75ca978ce906e04abdf86a8d76306d4">&sect;&nbsp;</a></span>arm_conv_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_fast_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a51112dcdf9b3624eb05182cdc4da9ec0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51112dcdf9b3624eb05182cdc4da9ec0">&sect;&nbsp;</a></span>arm_conv_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_fast_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac77dbcaef5c754cac27eab96c4753a3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac77dbcaef5c754cac27eab96c4753a3c">&sect;&nbsp;</a></span>arm_conv_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch1</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch2</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a4c7cf073e89d6d57cc4e711f078c3f68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c7cf073e89d6d57cc4e711f078c3f68">&sect;&nbsp;</a></span>arm_conv_opt_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_opt_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch1</td><td>points to scratch buffer(of type q15_t) of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch2</td><td>points to scratch buffer (of type q15_t) of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a16d10f32072cd79fc5fb6e785df45f5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16d10f32072cd79fc5fb6e785df45f5e">&sect;&nbsp;</a></span>arm_conv_partial_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of floating-point sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a3de9c4ddcc7886de25b70d875099a8d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3de9c4ddcc7886de25b70d875099a8d9">&sect;&nbsp;</a></span>arm_conv_partial_fast_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_fast_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*</td><td>pScratch1 points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*</td><td>pScratch2 points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a1e4d43385cb62262a78c6752fe1fafb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e4d43385cb62262a78c6752fe1fafb2">&sect;&nbsp;</a></span>arm_conv_partial_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_fast_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a10c5294cda8c4985386f4e3944be7650"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10c5294cda8c4985386f4e3944be7650">&sect;&nbsp;</a></span>arm_conv_partial_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_fast_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a834b23b4ade8682beeb55778399101f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a834b23b4ade8682beeb55778399101f8">&sect;&nbsp;</a></span>arm_conv_partial_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*</td><td>pScratch1 points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*</td><td>pScratch2 points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a3707e16af1435b215840006a7ab0c98f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3707e16af1435b215840006a7ab0c98f">&sect;&nbsp;</a></span>arm_conv_partial_opt_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_opt_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch1</td><td>points to scratch buffer(of type q15_t) of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch2</td><td>points to scratch buffer (of type q15_t) of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a209a2a913a0c5e5679c5988da8f46b03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a209a2a913a0c5e5679c5988da8f46b03">&sect;&nbsp;</a></span>arm_conv_partial_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a78e73a5f02d103168a09821fb461e77a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78e73a5f02d103168a09821fb461e77a">&sect;&nbsp;</a></span>arm_conv_partial_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q31 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="a8567259fe18396dd972242c41741ebf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8567259fe18396dd972242c41741ebf4">&sect;&nbsp;</a></span>arm_conv_partial_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_conv_partial_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>firstIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numPoints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Partial convolution of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstIndex</td><td>is the first output sample to start with. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numPoints</td><td>is the number of output points to be computed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUMENT_ERROR if the requested subset is not in the range [0 srcALen+srcBLen-2]. </dd></dl>

</div>
</div>
<a id="accd6a89b0ff7a94df64610598e6e6893"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accd6a89b0ff7a94df64610598e6e6893">&sect;&nbsp;</a></span>arm_conv_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the location where the output result is written. Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a946b58da734f1e4e78c91fcaab4b12b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a946b58da734f1e4e78c91fcaab4b12b6">&sect;&nbsp;</a></span>arm_conv_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q31 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae2070cb792a167e78dbad8d06b97cdab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2070cb792a167e78dbad8d06b97cdab">&sect;&nbsp;</a></span>arm_conv_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_conv_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convolution of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length srcALen+srcBLen-1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="add1f737e677e0e6ca31767c7001417b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add1f737e677e0e6ca31767c7001417b3">&sect;&nbsp;</a></span>arm_copy_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_copy_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a872ca4cfc18c680b8991ccd569a5fda0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a872ca4cfc18c680b8991ccd569a5fda0">&sect;&nbsp;</a></span>arm_copy_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_copy_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="addf70be7e3f87e535c324862b501f3f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addf70be7e3f87e535c324862b501f3f9">&sect;&nbsp;</a></span>arm_copy_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_copy_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a467579beda492aa92797529d794c88fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a467579beda492aa92797529d794c88fb">&sect;&nbsp;</a></span>arm_copy_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_copy_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies the elements of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a22021e4222773f01e9960358a531cfb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22021e4222773f01e9960358a531cfb8">&sect;&nbsp;</a></span>arm_correlate_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of floating-point sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a40a0236b17220e8e22a22b5bc1c53c6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40a0236b17220e8e22a22b5bc1c53c6b">&sect;&nbsp;</a></span>arm_correlate_fast_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_fast_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac8de3da44f58e86c2c86156276ca154f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8de3da44f58e86c2c86156276ca154f">&sect;&nbsp;</a></span>arm_correlate_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_fast_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="abecd3d7b077dbbef43f93e9e037815ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abecd3d7b077dbbef43f93e9e037815ed">&sect;&nbsp;</a></span>arm_correlate_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_fast_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad71c0ec70ec69edbc48563d9a5f68451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad71c0ec70ec69edbc48563d9a5f68451">&sect;&nbsp;</a></span>arm_correlate_opt_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_opt_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch</td><td>points to scratch buffer of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a746e8857cafe33ec5d6780729c18c311"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a746e8857cafe33ec5d6780729c18c311">&sect;&nbsp;</a></span>arm_correlate_opt_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_opt_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch1</td><td>points to scratch buffer(of type q15_t) of size <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> + 2*min(srcALen, srcBLen) - 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratch2</td><td>points to scratch buffer (of type q15_t) of size <a class="el" href="compiler_8h.xhtml#ac6afabdc09a49a433ee19d8a9486056d" title="Takes the minimal value of a and b. ">min(srcALen, srcBLen)</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a5ec96b8e420d68b0e626df0812274d46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ec96b8e420d68b0e626df0812274d46">&sect;&nbsp;</a></span>arm_correlate_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q15 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a1367dc6c80476406c951e68d7fac4e8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1367dc6c80476406c951e68d7fac4e8c">&sect;&nbsp;</a></span>arm_correlate_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q31 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a284ddcc49e4ac532d52a70d0383c5992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a284ddcc49e4ac532d52a70d0383c5992">&sect;&nbsp;</a></span>arm_correlate_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_correlate_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcALen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>srcBLen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Correlation of Q7 sequences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcALen</td><td>length of the first input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input sequence. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">srcBLen</td><td>length of the second input sequence. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data Length 2 * <a class="el" href="compiler_8h.xhtml#affe776513b24d84b39af8ab0930fef7f" title="Takes the maximal value of a and b. ">max(srcALen, srcBLen)</a> - 1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ace15287f9c64b9b4084d1c797d4c49d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace15287f9c64b9b4084d1c797d4c49d8">&sect;&nbsp;</a></span>arm_cos_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> arm_cos_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast approximation to the trigonometric cosine function for floating-point data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cos(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ace15287f9c64b9b4084d1c797d4c49d8_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="adfd60c24def501638c0d5db20f4c869b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfd60c24def501638c0d5db20f4c869b">&sect;&nbsp;</a></span>arm_cos_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> arm_cos_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast approximation to the trigonometric cosine function for Q15 data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Scaled input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cos(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_adfd60c24def501638c0d5db20f4c869b_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad80f121949ef885a77d83ab36e002567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad80f121949ef885a77d83ab36e002567">&sect;&nbsp;</a></span>arm_cos_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> arm_cos_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast approximation to the trigonometric cosine function for Q31 data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Scaled input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cos(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ad80f121949ef885a77d83ab36e002567_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afd538d68886848bc090ec2b0d364cc81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd538d68886848bc090ec2b0d364cc81">&sect;&nbsp;</a></span>arm_dct4_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dct4_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pInlineBuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point DCT4/IDCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*pInlineBuffer</td><td>points to the in-place input and output buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ab094ad3bc6fa1b84e8b12a24e1850a06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab094ad3bc6fa1b84e8b12a24e1850a06">&sect;&nbsp;</a></span>arm_dct4_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_dct4_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__dct4__instance__f32.xhtml">arm_dct4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S_RFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S_CFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>Nby2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>normalize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of floating-point DCT4/IDCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_RFFT</td><td>points to an instance of floating-point RFFT/RIFFT structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_CFFT</td><td>points to an instance of floating-point CFFT/CIFFT structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">N</td><td>length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Nby2</td><td>half of the length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalize</td><td>normalizing factor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>fftLenReal</code> is not a supported transform length. </dd></dl>

</div>
</div>
<a id="a966fd1b66a80873964533703ab5dc054"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a966fd1b66a80873964533703ab5dc054">&sect;&nbsp;</a></span>arm_dct4_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_dct4_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S_RFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__q15.xhtml">arm_cfft_radix4_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S_CFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>Nby2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>normalize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of Q15 DCT4/IDCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_RFFT</td><td>points to an instance of Q15 RFFT/RIFFT structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_CFFT</td><td>points to an instance of Q15 CFFT/CIFFT structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">N</td><td>length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Nby2</td><td>half of the length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalize</td><td>normalizing factor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>N</code> is not a supported transform length. </dd></dl>

</div>
</div>
<a id="a631bb59c7c97c814ff7147ecba6a716a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a631bb59c7c97c814ff7147ecba6a716a">&sect;&nbsp;</a></span>arm_dct4_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_dct4_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S_RFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__q31.xhtml">arm_cfft_radix4_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S_CFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>Nby2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>normalize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of Q31 DCT4/IDCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_RFFT</td><td>points to an instance of Q31 RFFT/RIFFT structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*S_CFFT</td><td>points to an instance of Q31 CFFT/CIFFT structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">N</td><td>length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">Nby2</td><td>half of the length of the DCT4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normalize</td><td>normalizing factor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>arm_status function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_ARGUMENT_ERROR if <code>N</code> is not a supported transform length. </dd></dl>

</div>
</div>
<a id="a114cb9635059f678df291fcc887aaf2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a114cb9635059f678df291fcc887aaf2b">&sect;&nbsp;</a></span>arm_dct4_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dct4_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__dct4__instance__q15.xhtml">arm_dct4_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pInlineBuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 DCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*pInlineBuffer</td><td>points to the in-place input and output buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad04d0baab6ed081d8e8afe02538eb80b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04d0baab6ed081d8e8afe02538eb80b">&sect;&nbsp;</a></span>arm_dct4_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dct4_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__dct4__instance__q31.xhtml">arm_dct4_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pInlineBuffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 DCT4/IDCT4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 DCT4 structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*pInlineBuffer</td><td>points to the in-place input and output buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a55418d4362f6ba84c327f9b4f089a8c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55418d4362f6ba84c327f9b4f089a8c3">&sect;&nbsp;</a></span>arm_dot_prod_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dot_prod_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dot product of floating-point vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*result</td><td>output result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a436d5bed28a4b73b24acbde436a3044b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a436d5bed28a4b73b24acbde436a3044b">&sect;&nbsp;</a></span>arm_dot_prod_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dot_prod_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dot product of Q15 vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*result</td><td>output result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ab15d8fa060fc85b4d948d091b7deaa11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab15d8fa060fc85b4d948d091b7deaa11">&sect;&nbsp;</a></span>arm_dot_prod_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dot_prod_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dot product of Q31 vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*result</td><td>output result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a9c3293a50ac7ec8ba928bf8e3aaea6c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c3293a50ac7ec8ba928bf8e3aaea6c1">&sect;&nbsp;</a></span>arm_dot_prod_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_dot_prod_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dot product of Q7 vectors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*result</td><td>output result returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2248e8d3901b4afb7827163132baad94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2248e8d3901b4afb7827163132baad94">&sect;&nbsp;</a></span>arm_fill_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fill_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fills a constant value into a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>input value to be filled </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a76b21c32a3783a2b3334d930a646e5d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76b21c32a3783a2b3334d930a646e5d8">&sect;&nbsp;</a></span>arm_fill_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fill_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fills a constant value into a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>input value to be filled </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a69cc781cf337bd0a31bb85c772a35f7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69cc781cf337bd0a31bb85c772a35f7f">&sect;&nbsp;</a></span>arm_fill_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fill_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fills a constant value into a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>input value to be filled </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a0465cf326ada039ed792f94b033d9ec5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0465cf326ada039ed792f94b033d9ec5">&sect;&nbsp;</a></span>arm_fill_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fill_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fills a constant value into a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>input value to be filled </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a25aa3d58a90bf91b6a82272a0bc518f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25aa3d58a90bf91b6a82272a0bc518f7">&sect;&nbsp;</a></span>arm_fir_decimate_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_decimate_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a3f434c9a5d3b4e68061feac0714ea2ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f434c9a5d3b4e68061feac0714ea2ac">&sect;&nbsp;</a></span>arm_fir_decimate_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_decimate_fast_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a3c18cc3d0548a410c577f1bead9582b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c18cc3d0548a410c577f1bead9582b7">&sect;&nbsp;</a></span>arm_fir_decimate_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_decimate_fast_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="aaa2524b08220fd6c3f753e692ffc7d3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa2524b08220fd6c3f753e692ffc7d3b">&sect;&nbsp;</a></span>arm_fir_decimate_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_decimate_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__decimate__instance__f32.xhtml">arm_fir_decimate_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>M</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">M</td><td>decimation factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <code>blockSize</code> is not a multiple of <code>M</code>. </dd></dl>

</div>
</div>
<a id="ada660e54b93d5d32178c6f5e1c6f368d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada660e54b93d5d32178c6f5e1c6f368d">&sect;&nbsp;</a></span>arm_fir_decimate_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_decimate_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>M</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">M</td><td>decimation factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <code>blockSize</code> is not a multiple of <code>M</code>. </dd></dl>

</div>
</div>
<a id="a9ed47c4e0f58affa935d84e0508a7f39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed47c4e0f58affa935d84e0508a7f39">&sect;&nbsp;</a></span>arm_fir_decimate_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_decimate_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>M</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">M</td><td>decimation factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if <code>blockSize</code> is not a multiple of <code>M</code>. </dd></dl>

</div>
</div>
<a id="ab8bef6d0f6a26fdbfce9485727713ce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8bef6d0f6a26fdbfce9485727713ce5">&sect;&nbsp;</a></span>arm_fir_decimate_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_decimate_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__decimate__instance__q15.xhtml">arm_fir_decimate_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="aef8e86add28f15fdc5ecc484e9dd7a4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef8e86add28f15fdc5ecc484e9dd7a4e">&sect;&nbsp;</a></span>arm_fir_decimate_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_decimate_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__decimate__instance__q31.xhtml">arm_fir_decimate_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 FIR decimator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR decimator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="ae8fb334ea67eb6ecbd31824ddc14cd6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8fb334ea67eb6ecbd31824ddc14cd6a">&sect;&nbsp;</a></span>arm_fir_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac7d35e9472e49ccd88800f37f3476bd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7d35e9472e49ccd88800f37f3476bd3">&sect;&nbsp;</a></span>arm_fir_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_fast_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a55aa292e057b43c376428ea1d9a938cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55aa292e057b43c376428ea1d9a938cc">&sect;&nbsp;</a></span>arm_fir_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_fast_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a98d13def6427e29522829f945d0967db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98d13def6427e29522829f945d0967db">&sect;&nbsp;</a></span>arm_fir_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__instance__f32.xhtml">arm_fir_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>Number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that are processed at a time. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae2a50f692f41ba57e44ed0719b1368bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2a50f692f41ba57e44ed0719b1368bd">&sect;&nbsp;</a></span>arm_fir_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>Number of filter coefficients in the filter. Must be even and greater than or equal to 4. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that are processed at a time. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARGUMENT_ERROR if <code>numTaps</code> is not a supported value. </dd></dl>

</div>
</div>
<a id="ac00d53af87684cbbe135767b55e748a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac00d53af87684cbbe135767b55e748a5">&sect;&nbsp;</a></span>arm_fir_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>Number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that are processed at a time. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a88e48688224d42dc173dbcec702f0c1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88e48688224d42dc173dbcec702f0c1d">&sect;&nbsp;</a></span>arm_fir_init_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_init_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q7 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q7 FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>Number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that are processed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a9cae104c5cf60b4e7671c82264a8c12e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cae104c5cf60b4e7671c82264a8c12e">&sect;&nbsp;</a></span>arm_fir_interpolate_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_interpolate_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a0f857457a815946f7e4dca989ebf6ff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f857457a815946f7e4dca989ebf6ff6">&sect;&nbsp;</a></span>arm_fir_interpolate_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_interpolate_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__interpolate__instance__f32.xhtml">arm_fir_interpolate_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">L</td><td>upsample factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>. </dd></dl>

</div>
</div>
<a id="a18e8c4a74ff1d0f88876cc63f675288f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18e8c4a74ff1d0f88876cc63f675288f">&sect;&nbsp;</a></span>arm_fir_interpolate_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_interpolate_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">L</td><td>upsample factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>. </dd></dl>

</div>
</div>
<a id="a9d0ba38ce9f12a850dd242731d307476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d0ba38ce9f12a850dd242731d307476">&sect;&nbsp;</a></span>arm_fir_interpolate_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_fir_interpolate_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>L</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">L</td><td>upsample factor. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the filter coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_LENGTH_ERROR if the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</code>. </dd></dl>

</div>
</div>
<a id="a7962b5f9636e54899f75d0c5936800b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7962b5f9636e54899f75d0c5936800b5">&sect;&nbsp;</a></span>arm_fir_interpolate_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_interpolate_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__interpolate__instance__q15.xhtml">arm_fir_interpolate_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aac9c0f01ed91c53f7083995d7411f5ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac9c0f01ed91c53f7083995d7411f5ee">&sect;&nbsp;</a></span>arm_fir_interpolate_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_interpolate_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__interpolate__instance__q31.xhtml">arm_fir_interpolate_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 FIR interpolator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR interpolator structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae63a45a63a11a65f2eae8b8b1fe370a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae63a45a63a11a65f2eae8b8b1fe370a8">&sect;&nbsp;</a></span>arm_fir_lattice_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a86199a1590af2b8941c6532ee9d03229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86199a1590af2b8941c6532ee9d03229">&sect;&nbsp;</a></span>arm_fir_lattice_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__lattice__instance__f32.xhtml">arm_fir_lattice_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of filter stages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. The array is of length numStages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a1b22f30ce1cc19bf5a5d7c9fca154d72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b22f30ce1cc19bf5a5d7c9fca154d72">&sect;&nbsp;</a></span>arm_fir_lattice_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of filter stages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. The array is of length numStages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac05a17a0188bb851b58d19e572870a54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac05a17a0188bb851b58d19e572870a54">&sect;&nbsp;</a></span>arm_fir_lattice_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of filter stages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. The array is of length numStages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="abb0ab07fd313b4d863070c3ddca51542"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb0ab07fd313b4d863070c3ddca51542">&sect;&nbsp;</a></span>arm_fir_lattice_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__lattice__instance__q15.xhtml">arm_fir_lattice_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2e36fd210e4a1a5dd333ce80dd6d9a88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e36fd210e4a1a5dd333ce80dd6d9a88">&sect;&nbsp;</a></span>arm_fir_lattice_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_lattice_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__lattice__instance__q31.xhtml">arm_fir_lattice_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 FIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a262d173058d6f80fdf60404ba262a8f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a262d173058d6f80fdf60404ba262a8f5">&sect;&nbsp;</a></span>arm_fir_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__q15.xhtml">arm_fir_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aadd938c68ab08967cbb5fc696f384bb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadd938c68ab08967cbb5fc696f384bb5">&sect;&nbsp;</a></span>arm_fir_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__q31.xhtml">arm_fir_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 FIR filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a31c91a0bf0962327ef8f626fae68ea32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31c91a0bf0962327ef8f626fae68ea32">&sect;&nbsp;</a></span>arm_fir_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_q7 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__fir__instance__q7.xhtml">arm_fir_instance_q7</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q7 FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q7 FIR filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a23a9284de5ee39406713b91d18ac8838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23a9284de5ee39406713b91d18ac8838">&sect;&nbsp;</a></span>arm_fir_sparse_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchIn</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a86378a08a9d9e1e0e5de77843b34d396"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86378a08a9d9e1e0e5de77843b34d396">&sect;&nbsp;</a></span>arm_fir_sparse_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__f32.xhtml">arm_fir_sparse_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>pTapDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of nonzero coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the array of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pTapDelay</td><td>points to the array of offset times. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxDelay</td><td>maximum offset time supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that will be processed per block. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a5eaa80bf72bcccef5a2c5fc6648d1baa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eaa80bf72bcccef5a2c5fc6648d1baa">&sect;&nbsp;</a></span>arm_fir_sparse_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>pTapDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of nonzero coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the array of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pTapDelay</td><td>points to the array of offset times. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxDelay</td><td>maximum offset time supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that will be processed per block. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a9a0bb2134bc85d3e55c6be6d946ee634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a0bb2134bc85d3e55c6be6d946ee634">&sect;&nbsp;</a></span>arm_fir_sparse_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>pTapDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of nonzero coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the array of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pTapDelay</td><td>points to the array of offset times. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxDelay</td><td>maximum offset time supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that will be processed per block. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a98f5c1a097d4572ce4ff3b0c58ebcdbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98f5c1a097d4572ce4ff3b0c58ebcdbd">&sect;&nbsp;</a></span>arm_fir_sparse_init_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_init_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>pTapDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxDelay</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q7 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q7 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of nonzero coefficients in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the array of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pTapDelay</td><td>points to the array of offset times. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxDelay</td><td>maximum offset time supported. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples that will be processed per block. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a2bffda2e156e72427e19276cd9c3d3cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bffda2e156e72427e19276cd9c3d3cc">&sect;&nbsp;</a></span>arm_fir_sparse_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q15.xhtml">arm_fir_sparse_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchIn</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchOut</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a03e9c2f0f35ad67d20bac66be9f920ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03e9c2f0f35ad67d20bac66be9f920ec">&sect;&nbsp;</a></span>arm_fir_sparse_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q31.xhtml">arm_fir_sparse_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchIn</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae86c145efc2d9ec32dc6d8c1ad2ccb3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae86c145efc2d9ec32dc6d8c1ad2ccb3c">&sect;&nbsp;</a></span>arm_fir_sparse_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_fir_sparse_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__fir__sparse__instance__q7.xhtml">arm_fir_sparse_instance_q7</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pScratchOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q7 sparse FIR filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q7 sparse FIR structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchIn</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pScratchOut</td><td>points to a temporary buffer of size blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of input samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a215456e35a18db86882e1d3f0d24e1f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a215456e35a18db86882e1d3f0d24e1f2">&sect;&nbsp;</a></span>arm_float_to_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_float_to_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the floating-point vector to Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the floating-point input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the Q15 output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a215456e35a18db86882e1d3f0d24e1f2_icgraph.svg" width="348" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a177704107f94564e9abe4daaa36f4554"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a177704107f94564e9abe4daaa36f4554">&sect;&nbsp;</a></span>arm_float_to_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_float_to_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the floating-point vector to Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the floating-point input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the Q31 output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a177704107f94564e9abe4daaa36f4554_icgraph.svg" width="348" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a44a393818cdee8dce80f2d66add25411"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44a393818cdee8dce80f2d66add25411">&sect;&nbsp;</a></span>arm_float_to_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_float_to_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the floating-point vector to Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the floating-point input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the Q7 output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a44a393818cdee8dce80f2d66add25411_icgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a56164a0fe48619b8ceec160347bdd2ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56164a0fe48619b8ceec160347bdd2ff">&sect;&nbsp;</a></span>arm_iir_lattice_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the floating-point IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aed3b0230bb77439dc902daa625985e04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed3b0230bb77439dc902daa625985e04">&sect;&nbsp;</a></span>arm_iir_lattice_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__iir__lattice__instance__f32.xhtml">arm_iir_lattice_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pkCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pvCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pkCoeffs</td><td>points to the reflection coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pvCoeffs</td><td>points to the ladder coefficient buffer. The array is of length numStages+1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. The array is of length numStages+blockSize-1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a1f4bc2dd3d5641e96815d3a5aad58998"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f4bc2dd3d5641e96815d3a5aad58998">&sect;&nbsp;</a></span>arm_iir_lattice_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pkCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pvCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the fixed-point Q15 IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pkCoeffs</td><td>points to reflection coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pvCoeffs</td><td>points to ladder coefficient buffer. The array is of length numStages+1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. The array is of length numStages+blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process per call. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ab686c14175581797d9c3ad7bf1d5cc1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab686c14175581797d9c3ad7bf1d5cc1e">&sect;&nbsp;</a></span>arm_iir_lattice_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numStages</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pkCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pvCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numStages</td><td>number of stages in the filter. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pkCoeffs</td><td>points to the reflection coefficient buffer. The array is of length numStages. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pvCoeffs</td><td>points to the ladder coefficient buffer. The array is of length numStages+1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. The array is of length numStages+blockSize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aeb9e9599a288832ed123183eaa8b294a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb9e9599a288832ed123183eaa8b294a">&sect;&nbsp;</a></span>arm_iir_lattice_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__iir__lattice__instance__q15.xhtml">arm_iir_lattice_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q15 IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a123b26fa9156cd8d3622dd85931741ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a123b26fa9156cd8d3622dd85931741ed">&sect;&nbsp;</a></span>arm_iir_lattice_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_iir_lattice_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__iir__lattice__instance__q31.xhtml">arm_iir_lattice_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for the Q31 IIR lattice filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 IIR lattice structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae266d009e682180421601627c79a3843"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae266d009e682180421601627c79a3843">&sect;&nbsp;</a></span>arm_lms_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for floating-point LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a9fc7adca0966ff2cec1746fca8364cee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fc7adca0966ff2cec1746fca8364cee">&sect;&nbsp;</a></span>arm_lms_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__instance__f32.xhtml">arm_lms_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for floating-point LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a9544cc26f18cd4465cfbed371be822b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9544cc26f18cd4465cfbed371be822b3">&sect;&nbsp;</a></span>arm_lms_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to the coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>bit shift applied to coefficients. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a8d4bc251169f4b102355097a9f7530d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d4bc251169f4b102355097a9f7530d6">&sect;&nbsp;</a></span>arm_lms_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for Q31 LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>bit shift applied to coefficients. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2418c929087c6eba719758eaae3f3300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2418c929087c6eba719758eaae3f3300">&sect;&nbsp;</a></span>arm_lms_norm_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for floating-point normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point normalized LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac7ccbaea863882056eee815456464670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7ccbaea863882056eee815456464670">&sect;&nbsp;</a></span>arm_lms_norm_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__f32.xhtml">arm_lms_norm_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for floating-point normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the floating-point LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a213ab1ee2e154cc2fa30d667b1994b89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a213ab1ee2e154cc2fa30d667b1994b89">&sect;&nbsp;</a></span>arm_lms_norm_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for Q15 normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 normalized LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>bit shift applied to coefficients. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a1d9659dbbea4c89a7a9d14d5fc0dd490"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d9659dbbea4c89a7a9d14d5fc0dd490">&sect;&nbsp;</a></span>arm_lms_norm_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>numTaps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCoeffs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>mu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>postShift</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for Q31 normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 normalized LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numTaps</td><td>number of filter coefficients. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pCoeffs</td><td>points to coefficient buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to state buffer. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mu</td><td>step size that controls filter coefficient updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">postShift</td><td>bit shift applied to coefficients. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad47486a399dedb0bc85a5990ec5cf981"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad47486a399dedb0bc85a5990ec5cf981">&sect;&nbsp;</a></span>arm_lms_norm_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__q15.xhtml">arm_lms_norm_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for Q15 normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 normalized LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a7128775e99817c183a7d7ad34e8b6e05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7128775e99817c183a7d7ad34e8b6e05">&sect;&nbsp;</a></span>arm_lms_norm_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_norm_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__lms__norm__instance__q31.xhtml">arm_lms_norm_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for Q31 normalized LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q31 normalized LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="acde16c17eb75979f81b34e2e2a58c7ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acde16c17eb75979f81b34e2e2a58c7ac">&sect;&nbsp;</a></span>arm_lms_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__lms__instance__q15.xhtml">arm_lms_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for Q15 LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a6a0abfe6041253a6f91c63b383a64257"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a0abfe6041253a6f91c63b383a64257">&sect;&nbsp;</a></span>arm_lms_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_lms_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__lms__instance__q31.xhtml">arm_lms_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pErr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing function for Q31 LMS filter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*S</td><td>points to an instance of the Q15 LMS filter structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the block of input data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pRef</td><td>points to the block of reference data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pOut</td><td>points to the block of output data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pErr</td><td>points to the block of error data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a04bbf64a5f9c9e57dd1efb26a768aba1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04bbf64a5f9c9e57dd1efb26a768aba1">&sect;&nbsp;</a></span>arm_mat_add_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_add_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a147e90b7c12a162735ab8824127a33ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a147e90b7c12a162735ab8824127a33ee">&sect;&nbsp;</a></span>arm_mat_add_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_add_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a7d9d7d81a0832a17b831aad1e4a5dc16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d9d7d81a0832a17b831aad1e4a5dc16">&sect;&nbsp;</a></span>arm_mat_add_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_add_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix addition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a1adb839ac84445b8c2f04efa43faef35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1adb839ac84445b8c2f04efa43faef35">&sect;&nbsp;</a></span>arm_mat_cmplx_mult_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_cmplx_mult_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point, complex, matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a63066615e7d6f6a44f4358725092419e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63066615e7d6f6a44f4358725092419e">&sect;&nbsp;</a></span>arm_mat_cmplx_mult_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_cmplx_mult_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pScratch</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15, complex, matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="aaf3c0b171ca8412c77bab9fa90804737"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3c0b171ca8412c77bab9fa90804737">&sect;&nbsp;</a></span>arm_mat_cmplx_mult_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_cmplx_mult_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31, complex, matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a11e3dc41592a6401c13182fef9416a27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11e3dc41592a6401c13182fef9416a27">&sect;&nbsp;</a></span>arm_mat_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mat_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nColumns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix initialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point matrix structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nRows</td><td>number of rows in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nColumns</td><td>number of columns in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pData</td><td>points to the matrix data array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a31a7c2b991803d49719393eb2d53dc26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31a7c2b991803d49719393eb2d53dc26">&sect;&nbsp;</a></span>arm_mat_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mat_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nColumns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix initialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point matrix structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nRows</td><td>number of rows in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nColumns</td><td>number of columns in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pData</td><td>points to the matrix data array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a48a5e5d37e1f062cc57fcfaf683343cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48a5e5d37e1f062cc57fcfaf683343cc">&sect;&nbsp;</a></span>arm_mat_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mat_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>nColumns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix initialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the floating-point matrix structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nRows</td><td>number of rows in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nColumns</td><td>number of columns in the matrix. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pData</td><td>points to the matrix data array. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="ab1283b23c96da04362a0efcdc7f23901"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1283b23c96da04362a0efcdc7f23901">&sect;&nbsp;</a></span>arm_mat_inverse_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_inverse_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of PID group </p>
<p>Floating-point matrix inverse. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*src</td><td>points to the instance of the input floating-point matrix structure. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*dst</td><td>points to the instance of the output floating-point matrix structure. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match. If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ab1283b23c96da04362a0efcdc7f23901_icgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3dd167a2b71330f9f7b606374e9ec063"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dd167a2b71330f9f7b606374e9ec063">&sect;&nbsp;</a></span>arm_mat_inverse_f64()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_inverse_f64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> *&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f64.xhtml">arm_matrix_instance_f64</a> *&#160;</td>
          <td class="paramname"><em>dst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix inverse. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*src</td><td>points to the instance of the input floating-point matrix structure. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*dst</td><td>points to the instance of the output floating-point matrix structure. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match. If the input matrix is singular (does not have an inverse), then the algorithm terminates and returns error status ARM_MATH_SINGULAR. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a3dd167a2b71330f9f7b606374e9ec063_icgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a917bf0270310c1d3f0eda1fc7c0026a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917bf0270310c1d3f0eda1fc7c0026a0">&sect;&nbsp;</a></span>arm_mat_mult_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_mult_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a08f37d93a5bfef0c5000dc5e0a411f93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08f37d93a5bfef0c5000dc5e0a411f93">&sect;&nbsp;</a></span>arm_mat_mult_fast_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_mult_fast_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the array for storing intermediate results </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a2785e8c1b785348b0c439b56aaf585a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2785e8c1b785348b0c439b56aaf585a3">&sect;&nbsp;</a></span>arm_mat_mult_fast_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_mult_fast_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a7521d59196189bb6dde26e8cdfb66e21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7521d59196189bb6dde26e8cdfb66e21">&sect;&nbsp;</a></span>arm_mat_mult_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_mult_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pState</td><td>points to the array for storing intermediate results </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a2ec612a8c2c4916477fb9bc1ab548a6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ec612a8c2c4916477fb9bc1ab548a6e">&sect;&nbsp;</a></span>arm_mat_mult_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_mult_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a9cb4e385b18c9a0b9cbc940c1067ca12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cb4e385b18c9a0b9cbc940c1067ca12">&sect;&nbsp;</a></span>arm_mat_scale_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_scale_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix scaling. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>scale factor </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a7521769e2cf1c3d9c4656138cd2ae2ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7521769e2cf1c3d9c4656138cd2ae2ca">&sect;&nbsp;</a></span>arm_mat_scale_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_scale_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>scaleFract</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>shift</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix scaling. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFract</td><td>fractional portion of the scale factor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>number of bits to shift the result by </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a609743821ee81fa8c34c4bcdc1ed9744"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a609743821ee81fa8c34c4bcdc1ed9744">&sect;&nbsp;</a></span>arm_mat_scale_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_scale_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>scaleFract</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>shift</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix scaling. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to input matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFract</td><td>fractional portion of the scale factor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>number of bits to shift the result by </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="ac8b72fb70246ccfee3b372002345732c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8b72fb70246ccfee3b372002345732c">&sect;&nbsp;</a></span>arm_mat_sub_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_sub_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="af647776a425b7f9dd0aca3e11d81f02f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af647776a425b7f9dd0aca3e11d81f02f">&sect;&nbsp;</a></span>arm_mat_sub_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_sub_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a39f42e0e3b7f115fbb909d6ff4e1329d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39f42e0e3b7f115fbb909d6ff4e1329d">&sect;&nbsp;</a></span>arm_mat_sub_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_sub_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input matrix structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input matrix structure </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to output matrix structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="ad7dd9f108429da13d3864696ceeec789"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7dd9f108429da13d3864696ceeec789">&sect;&nbsp;</a></span>arm_mat_trans_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_trans_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__f32.xhtml">arm_matrix_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point matrix transpose. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input matrix </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a4f4f821cc695fd0ef9061d702e08050a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f4f821cc695fd0ef9061d702e08050a">&sect;&nbsp;</a></span>arm_mat_trans_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_trans_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q15.xhtml">arm_matrix_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 matrix transpose. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input matrix </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a30a4d49489ac67ff98a46b9f58f73bf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30a4d49489ac67ff98a46b9f58f73bf1">&sect;&nbsp;</a></span>arm_mat_trans_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_mat_trans_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__matrix__instance__q31.xhtml">arm_matrix_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 matrix transpose. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input matrix </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The function returns either <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking. </dd></dl>

</div>
</div>
<a id="a5b89d1b04575aeec494f678695fb87d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b89d1b04575aeec494f678695fb87d8">&sect;&nbsp;</a></span>arm_max_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_max_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum value of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>maximum value returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>index of maximum value returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a5b89d1b04575aeec494f678695fb87d8_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac132856c68f4bf2a056eaad5921c7880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac132856c68f4bf2a056eaad5921c7880">&sect;&nbsp;</a></span>arm_max_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_max_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum value of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>maximum value returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>index of maximum value returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ac132856c68f4bf2a056eaad5921c7880_icgraph.svg" width="328" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aff7cbd4e955382def06724cc4cc85795"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff7cbd4e955382def06724cc4cc85795">&sect;&nbsp;</a></span>arm_max_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_max_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum value of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>maximum value returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>index of maximum value returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_aff7cbd4e955382def06724cc4cc85795_icgraph.svg" width="328" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6afd64d381b5c232de59163ebfe71e35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6afd64d381b5c232de59163ebfe71e35">&sect;&nbsp;</a></span>arm_max_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_max_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum value of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>length of the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>maximum value returned here </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>index of maximum value returned here </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a6afd64d381b5c232de59163ebfe71e35_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a74ce08c49ab61e57bd50c3a0ca1fdb2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ce08c49ab61e57bd50c3a0ca1fdb2b">&sect;&nbsp;</a></span>arm_mean_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mean_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mean value of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a74ce08c49ab61e57bd50c3a0ca1fdb2b_icgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac882495d5f098819fd3939c1ef7795b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac882495d5f098819fd3939c1ef7795b3">&sect;&nbsp;</a></span>arm_mean_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mean_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mean value of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ac882495d5f098819fd3939c1ef7795b3_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acf2526d8c2d75e486e8f0b0e31877ad0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf2526d8c2d75e486e8f0b0e31877ad0">&sect;&nbsp;</a></span>arm_mean_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mean_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mean value of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_acf2526d8c2d75e486e8f0b0e31877ad0_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aebc707ee539020357c25da4c75b52eb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebc707ee539020357c25da4c75b52eb7">&sect;&nbsp;</a></span>arm_mean_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mean_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mean value of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_aebc707ee539020357c25da4c75b52eb7_icgraph.svg" width="328" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af62b1673740fc516ea64daf777b7d74a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af62b1673740fc516ea64daf777b7d74a">&sect;&nbsp;</a></span>arm_min_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_min_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minimum value of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>is the array index of the minimum value in the input buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_af62b1673740fc516ea64daf777b7d74a_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad065e37535ebb726750ac1545cb3fa6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad065e37535ebb726750ac1545cb3fa6f">&sect;&nbsp;</a></span>arm_min_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_min_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minimum value of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pIndex</td><td>is the array index of the minimum value in the input buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ad065e37535ebb726750ac1545cb3fa6f_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab20faeceb5ff5d2d9dd628c2ecf41303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab20faeceb5ff5d2d9dd628c2ecf41303">&sect;&nbsp;</a></span>arm_min_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_min_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>pIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minimum value of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pIndex</td><td>is the array index of the minimum value in the input buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ab20faeceb5ff5d2d9dd628c2ecf41303_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1f5f8212a4994882b647f0538a55856c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f5f8212a4994882b647f0538a55856c">&sect;&nbsp;</a></span>arm_min_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_min_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minimum value of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*result</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>is the array index of the minimum value in the input buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a1f5f8212a4994882b647f0538a55856c_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aca3f0b8227da431ab29225b88888aa32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca3f0b8227da431ab29225b88888aa32">&sect;&nbsp;</a></span>arm_mult_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mult_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point vector multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="afb0778d27ed98a2a6f2ecb7d48cc8c75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb0778d27ed98a2a6f2ecb7d48cc8c75">&sect;&nbsp;</a></span>arm_mult_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mult_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 vector multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a3528c0f54a0607acc603f0490d3ca6c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3528c0f54a0607acc603f0490d3ca6c6">&sect;&nbsp;</a></span>arm_mult_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mult_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 vector multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a16677275ed83ff0878da531e875c27ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16677275ed83ff0878da531e875c27ef">&sect;&nbsp;</a></span>arm_mult_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_mult_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q7 vector multiplication. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2e169c4de6cc6e3ba4be9473531e6657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e169c4de6cc6e3ba4be9473531e6657">&sect;&nbsp;</a></span>arm_negate_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_negate_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Negates the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a0239a833d72cf00290b9723c394e5042"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0239a833d72cf00290b9723c394e5042">&sect;&nbsp;</a></span>arm_negate_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_negate_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Negates the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2784c6887686a73dc7c364e2e41c776c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2784c6887686a73dc7c364e2e41c776c">&sect;&nbsp;</a></span>arm_negate_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_negate_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Negates the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aae78fc079a43bdaa3055f9b32e2a1f4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae78fc079a43bdaa3055f9b32e2a1f4c">&sect;&nbsp;</a></span>arm_negate_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_negate_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Negates the elements of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a989dfae15235799d82f62ef9d356abb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a989dfae15235799d82f62ef9d356abb4">&sect;&nbsp;</a></span>arm_offset_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_offset_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constant offset to a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>is the offset to be added </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ab4c1d2391b599549e5a06fdfbc2747bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4c1d2391b599549e5a06fdfbc2747bf">&sect;&nbsp;</a></span>arm_offset_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_offset_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constant offset to a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>is the offset to be added </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ac84ec42cbbebc5c197a87d0221819acf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac84ec42cbbebc5c197a87d0221819acf">&sect;&nbsp;</a></span>arm_offset_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_offset_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constant offset to a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>is the offset to be added </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a00bd9cc17c5bf905e76c91ad50886393"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00bd9cc17c5bf905e76c91ad50886393">&sect;&nbsp;</a></span>arm_offset_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_offset_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td>
          <td class="paramname"><em>offset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constant offset to a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">offset</td><td>is the offset to be added </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ae31536b19b82b93ed184fb1ab73cfcb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae31536b19b82b93ed184fb1ab73cfcb3">&sect;&nbsp;</a></span>arm_pid_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>resetStateFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the floating-point PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the PID structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">resetStateFlag</td><td>flag to reset the state. 0 = no change in state 1 = reset the state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a2cb1e3d3ebb167348fdabec74653d5c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cb1e3d3ebb167348fdabec74653d5c3">&sect;&nbsp;</a></span>arm_pid_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>resetStateFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q15 PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 PID structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">resetStateFlag</td><td>flag to reset the state. 0 = no change in state 1 = reset the state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ad9d88485234fa9460b1ce9e64989ac86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d88485234fa9460b1ce9e64989ac86">&sect;&nbsp;</a></span>arm_pid_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>resetStateFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization function for the Q31 PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q15 PID structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">resetStateFlag</td><td>flag to reset the state. 0 = no change in state 1 = reset the state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a9ec860bcb6f8ca31205bf0f1b51ab723"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ec860bcb6f8ca31205bf0f1b51ab723">&sect;&nbsp;</a></span>arm_pid_reset_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_reset_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__f32.xhtml">arm_pid_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset function for the floating-point PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>is an instance of the floating-point PID Control structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a408566dacb4fa6e0458b2c75672e525f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a408566dacb4fa6e0458b2c75672e525f">&sect;&nbsp;</a></span>arm_pid_reset_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_reset_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__q15.xhtml">arm_pid_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset function for the Q15 PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the q15 PID Control structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="aeecbacd3fb37c608ec25474d3a0dffa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeecbacd3fb37c608ec25474d3a0dffa9">&sect;&nbsp;</a></span>arm_pid_reset_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_pid_reset_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__pid__instance__q31.xhtml">arm_pid_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset function for the Q31 PID Control. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">*S</td><td>points to an instance of the Q31 PID Control structure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none </dd></dl>

</div>
</div>
<a id="a993c00dd7f661d66bdb6e58426e893aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a993c00dd7f661d66bdb6e58426e893aa">&sect;&nbsp;</a></span>arm_power_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_power_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sum of the squares of the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a993c00dd7f661d66bdb6e58426e893aa_icgraph.svg" width="334" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7050c04b7515e01a75c38f1abbaf71ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7050c04b7515e01a75c38f1abbaf71ba">&sect;&nbsp;</a></span>arm_power_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_power_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sum of the squares of the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a7050c04b7515e01a75c38f1abbaf71ba_icgraph.svg" width="338" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0b93d31bb5b5ed214c2b94d8a7744cd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b93d31bb5b5ed214c2b94d8a7744cd2">&sect;&nbsp;</a></span>arm_power_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_power_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sum of the squares of the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a0b93d31bb5b5ed214c2b94d8a7744cd2_icgraph.svg" width="338" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af969c85c5655e3d72d7b99ff188f92c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af969c85c5655e3d72d7b99ff188f92c9">&sect;&nbsp;</a></span>arm_power_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_power_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sum of the squares of the elements of a Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_af969c85c5655e3d72d7b99ff188f92c9_icgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af8b0d2324de273fc430b0e61ad4e9eb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8b0d2324de273fc430b0e61ad4e9eb2">&sect;&nbsp;</a></span>arm_q15_to_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q15_to_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the Q15 vector to floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_af8b0d2324de273fc430b0e61ad4e9eb2_icgraph.svg" width="348" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7ba2d87366990ad5380439e2b4a4c0a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ba2d87366990ad5380439e2b4a4c0a5">&sect;&nbsp;</a></span>arm_q15_to_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q15_to_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the Q15 vector to Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a7ba2d87366990ad5380439e2b4a4c0a5_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8fb31855ff8cce09c2ec9308f48ded69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fb31855ff8cce09c2ec9308f48ded69">&sect;&nbsp;</a></span>arm_q15_to_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q15_to_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the Q15 vector to Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a8fb31855ff8cce09c2ec9308f48ded69_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acf407b007a37da18e99dabd9023c56b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf407b007a37da18e99dabd9023c56b4">&sect;&nbsp;</a></span>arm_q31_to_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q31_to_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of Inverse park group </p>
<p>Converts the elements of the Q31 vector to floating-point vector. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_acf407b007a37da18e99dabd9023c56b4_icgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a901dede4661365c9e7c630d3eb31c32c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a901dede4661365c9e7c630d3eb31c32c">&sect;&nbsp;</a></span>arm_q31_to_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q31_to_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the Q31 vector to Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a901dede4661365c9e7c630d3eb31c32c_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7f297d1a7d776805395095fdb24a8071"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f297d1a7d776805395095fdb24a8071">&sect;&nbsp;</a></span>arm_q31_to_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q31_to_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts the elements of the Q31 vector to Q7 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a7f297d1a7d776805395095fdb24a8071_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a656620f957b65512ed83db03fd455ec5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a656620f957b65512ed83db03fd455ec5">&sect;&nbsp;</a></span>arm_q7_to_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q7_to_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of park group </p>
<p>Converts the elements of the Q7 vector to floating-point vector. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>is output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a656620f957b65512ed83db03fd455ec5_icgraph.svg" width="300" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abc02597fc3f01033daf43ec0547a2f78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc02597fc3f01033daf43ec0547a2f78">&sect;&nbsp;</a></span>arm_q7_to_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q7_to_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of inv_clarke group </p>
<p>Converts the elements of the Q7 vector to Q15 vector. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_abc02597fc3f01033daf43ec0547a2f78_icgraph.svg" width="331" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad8958cd3cb7f521466168b46a25b7908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8958cd3cb7f521466168b46a25b7908">&sect;&nbsp;</a></span>arm_q7_to_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_q7_to_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of clarke group </p>
<p>Converts the elements of the Q7 vector to Q31 vector. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>input pointer </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>output pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples to process </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ad8958cd3cb7f521466168b46a25b7908_icgraph.svg" width="306" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1c66e370a6ae91aaafbaec5e979198d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c66e370a6ae91aaafbaec5e979198d7">&sect;&nbsp;</a></span>arm_recip_q15()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE uint32_t arm_recip_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pRecipTable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to Calculates 1/in (reciprocal) value of Q15 Data type. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a1c66e370a6ae91aaafbaec5e979198d7_cgraph.svg" width="302" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a43140f04ca94c2a7394e7a222e2d8fb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43140f04ca94c2a7394e7a222e2d8fb4">&sect;&nbsp;</a></span>arm_recip_q31()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE uint32_t arm_recip_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pRecipTable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to Calculates 1/in (reciprocal) value of Q31 Data type. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a43140f04ca94c2a7394e7a222e2d8fb4_cgraph.svg" width="302" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3df1766d230532bc068fc4ed69d0fcdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3df1766d230532bc068fc4ed69d0fcdc">&sect;&nbsp;</a></span>arm_rfft_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rfft_f32 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a180d8b764d59cbb85d37a2d5f7cd9799"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a180d8b764d59cbb85d37a2d5f7cd9799">&sect;&nbsp;</a></span>arm_rfft_fast_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rfft_fast_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>ifftFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac5fceb172551e7c11eb4d0e17ef15aa3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5fceb172551e7c11eb4d0e17ef15aa3">&sect;&nbsp;</a></span>arm_rfft_fast_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_rfft_fast_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__rfft__fast__instance__f32.xhtml">arm_rfft_fast_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>fftLen</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a10717ee326bf50832ef1c25b85a23068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10717ee326bf50832ef1c25b85a23068">&sect;&nbsp;</a></span>arm_rfft_init_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_rfft_init_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__f32.xhtml">arm_rfft_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__cfft__radix4__instance__f32.xhtml">arm_cfft_radix4_instance_f32</a> *&#160;</td>
          <td class="paramname"><em>S_CFFT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>fftLenReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ifftFlagR</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a053450cc600a55410ba5b5605e96245d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a053450cc600a55410ba5b5605e96245d">&sect;&nbsp;</a></span>arm_rfft_init_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_rfft_init_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>fftLenReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ifftFlagR</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5abde938abbe72e95c5bab080eb33c45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5abde938abbe72e95c5bab080eb33c45">&sect;&nbsp;</a></span>arm_rfft_init_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#a5e459c6409dfcd2927bb8a57491d7cf6">arm_status</a> arm_rfft_init_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>fftLenReal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ifftFlagR</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bitReverseFlag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a00e615f5db21736ad5b27fb6146f3fc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00e615f5db21736ad5b27fb6146f3fc5">&sect;&nbsp;</a></span>arm_rfft_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rfft_q15 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__rfft__instance__q15.xhtml">arm_rfft_instance_q15</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abaeab5646aeea9844e6d42ca8c73fe3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaeab5646aeea9844e6d42ca8c73fe3a">&sect;&nbsp;</a></span>arm_rfft_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rfft_q31 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__rfft__instance__q31.xhtml">arm_rfft_instance_q31</a> *&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0e3ab1b57da32d45388d1fa90d7fd88c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e3ab1b57da32d45388d1fa90d7fd88c">&sect;&nbsp;</a></span>arm_rms_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rms_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Root Mean Square of the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a0e3ab1b57da32d45388d1fa90d7fd88c_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af5b836b72dda9e5dfbbd17c7906fd13f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5b836b72dda9e5dfbbd17c7906fd13f">&sect;&nbsp;</a></span>arm_rms_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rms_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Root Mean Square of the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_af5b836b72dda9e5dfbbd17c7906fd13f_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae33015fda23fc44e7ead5e5ed7e8d314"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae33015fda23fc44e7ead5e5ed7e8d314">&sect;&nbsp;</a></span>arm_rms_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_rms_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Root Mean Square of the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ae33015fda23fc44e7ead5e5ed7e8d314_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3487af88b112f682ee90589cd419e123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3487af88b112f682ee90589cd419e123">&sect;&nbsp;</a></span>arm_scale_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_scale_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiplies a floating-point vector by a scalar. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>scale factor to be applied </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="afaac0e1927daffeb68a42719b53ea780"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaac0e1927daffeb68a42719b53ea780">&sect;&nbsp;</a></span>arm_scale_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_scale_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>scaleFract</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shift</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiplies a Q15 vector by a scalar. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFract</td><td>fractional portion of the scale value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>number of bits to shift the result by </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a83e36cd82bf51ce35406a199e477d47c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83e36cd82bf51ce35406a199e477d47c">&sect;&nbsp;</a></span>arm_scale_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_scale_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>scaleFract</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shift</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiplies a Q31 vector by a scalar. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFract</td><td>fractional portion of the scale value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>number of bits to shift the result by </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="abc9fd3d37904c58df56492b351d21fb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc9fd3d37904c58df56492b351d21fb0">&sect;&nbsp;</a></span>arm_scale_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_scale_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a>&#160;</td>
          <td class="paramname"><em>scaleFract</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shift</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multiplies a Q7 vector by a scalar. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFract</td><td>fractional portion of the scale value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shift</td><td>number of bits to shift the result by </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="aa1757e53279780107acc92cf100adb61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1757e53279780107acc92cf100adb61">&sect;&nbsp;</a></span>arm_shift_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_shift_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shiftBits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shifts the elements of a Q15 vector a specified number of bits. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shiftBits</td><td>number of bits to shift. A positive value shifts left; a negative value shifts right. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a387dd8b7b87377378280978f16cdb13d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387dd8b7b87377378280978f16cdb13d">&sect;&nbsp;</a></span>arm_shift_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_shift_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shiftBits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shifts the elements of a Q31 vector a specified number of bits. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shiftBits</td><td>number of bits to shift. A positive value shifts left; a negative value shifts right. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a47295d08a685f7de700a48dafb4db6fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47295d08a685f7de700a48dafb4db6fb">&sect;&nbsp;</a></span>arm_shift_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_shift_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>shiftBits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shifts the elements of a Q7 vector a specified number of bits. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>points to the input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shiftBits</td><td>number of bits to shift. A positive value shifts left; a negative value shifts right. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a1a087fa2be56e29d5ac7bb2afa590aee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a087fa2be56e29d5ac7bb2afa590aee">&sect;&nbsp;</a></span>arm_sin_cos_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sin_cos_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>theta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSinVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pCcosVal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae9e4ddebff9d4eb5d0a093e28e0bc504"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9e4ddebff9d4eb5d0a093e28e0bc504">&sect;&nbsp;</a></span>arm_sin_cos_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sin_cos_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>theta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSinVal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pCosVal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae164899c4a3fc0e946dc5d55555fe541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae164899c4a3fc0e946dc5d55555fe541">&sect;&nbsp;</a></span>arm_sin_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> arm_sin_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end of LinearInterpolate group </p>
<p>Fast approximation to the trigonometric sine function for floating-point data. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>sin(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ae164899c4a3fc0e946dc5d55555fe541_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1fc6d6640be6cfa688a8bea0a48397ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fc6d6640be6cfa688a8bea0a48397ee">&sect;&nbsp;</a></span>arm_sin_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> arm_sin_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast approximation to the trigonometric sine function for Q15 data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Scaled input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>sin(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a1fc6d6640be6cfa688a8bea0a48397ee_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a57aade7d8892585992cdc6375bd82f9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57aade7d8892585992cdc6375bd82f9c">&sect;&nbsp;</a></span>arm_sin_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> arm_sin_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast approximation to the trigonometric sine function for Q31 data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Scaled input value in radians. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>sin(x). </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a57aade7d8892585992cdc6375bd82f9c_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4969b5b5f3d001377bc401a3ee99dfc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4969b5b5f3d001377bc401a3ee99dfc2">&sect;&nbsp;</a></span>arm_std_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_std_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard deviation of the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a4969b5b5f3d001377bc401a3ee99dfc2_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af9d27afa9928ff28a63cd98ea9218a72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9d27afa9928ff28a63cd98ea9218a72">&sect;&nbsp;</a></span>arm_std_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_std_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard deviation of the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_af9d27afa9928ff28a63cd98ea9218a72_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a39495e74f96116178be085c9dc7742f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39495e74f96116178be085c9dc7742f5">&sect;&nbsp;</a></span>arm_std_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_std_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard deviation of the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a39495e74f96116178be085c9dc7742f5_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7f975a472de286331134227c08aad826"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f975a472de286331134227c08aad826">&sect;&nbsp;</a></span>arm_sub_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sub_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Floating-point vector subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a997a8ee93088d15bda23c325d455b588"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a997a8ee93088d15bda23c325d455b588">&sect;&nbsp;</a></span>arm_sub_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sub_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q15 vector subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a28aa6908d092752144413e21933dc878"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28aa6908d092752144413e21933dc878">&sect;&nbsp;</a></span>arm_sub_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sub_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q31 vector subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="ab09941de7dfeb247e5c29b406a435fcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab09941de7dfeb247e5c29b406a435fcc">&sect;&nbsp;</a></span>arm_sub_q7()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_sub_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pSrcB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> *&#160;</td>
          <td class="paramname"><em>pDst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Q7 vector subtraction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcA</td><td>points to the first input vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrcB</td><td>points to the second input vector </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pDst</td><td>points to the output vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>number of samples in each vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>

</div>
</div>
<a id="a393f26c5a3bfa05624fb8d32232a6d96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a393f26c5a3bfa05624fb8d32232a6d96">&sect;&nbsp;</a></span>arm_var_f32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_var_f32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Variance of the elements of a floating-point vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a393f26c5a3bfa05624fb8d32232a6d96_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a79dce009ed2de28a125aeb3f19631654"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79dce009ed2de28a125aeb3f19631654">&sect;&nbsp;</a></span>arm_var_q15()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_var_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Variance of the elements of a Q15 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a79dce009ed2de28a125aeb3f19631654_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac02873f1c2cc80adfd799305f0e6465d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac02873f1c2cc80adfd799305f0e6465d">&sect;&nbsp;</a></span>arm_var_q31()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_var_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pSrc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>blockSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> *&#160;</td>
          <td class="paramname"><em>pResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Variance of the elements of a Q31 vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">*pSrc</td><td>is input pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">blockSize</td><td>is the number of samples to process </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">*pResult</td><td>is output value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>none. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ac02873f1c2cc80adfd799305f0e6465d_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4af3ca330e14587289518e6565fd04bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4af3ca330e14587289518e6565fd04bd">&sect;&nbsp;</a></span>clip_q31_to_q15()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> clip_q31_to_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clips Q31 to Q15 values. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_a4af3ca330e14587289518e6565fd04bd_icgraph.svg" width="302" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa9918ce19228b0d4f072fb84776eabc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9918ce19228b0d4f072fb84776eabc1">&sect;&nbsp;</a></span>clip_q31_to_q7()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE <a class="el" href="arm__math_8h.xhtml#ae541b6f232c305361e9b416fc9eed263">q7_t</a> clip_q31_to_q7 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clips Q31 to Q7 values. </p>

</div>
</div>
<a id="aa6f1e5d0d276f42217e75f071ca84a2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6f1e5d0d276f42217e75f071ca84a2e">&sect;&nbsp;</a></span>clip_q63_to_q15()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE <a class="el" href="arm__math_8h.xhtml#ab5a8fb21a5b3b983d5f54f31614052ea">q15_t</a> clip_q63_to_q15 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clips Q63 to Q15 values. </p>

</div>
</div>
<a id="ad7373e53d3c2e1adfeafc8c2e9720b5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7373e53d3c2e1adfeafc8c2e9720b5c">&sect;&nbsp;</a></span>clip_q63_to_q31()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE <a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a> clip_q63_to_q31 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clips Q63 to Q31 values. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="arm__math_8h_ad7373e53d3c2e1adfeafc8c2e9720b5c_icgraph.svg" width="302" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a642a29d71f7951a7f6c0b797c300b711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a642a29d71f7951a7f6c0b797c300b711">&sect;&nbsp;</a></span>mult32x64()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static __INLINE <a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a> mult32x64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#a5aea1cb12fc02d9d44c8abf217eaa5c6">q63_t</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="arm__math_8h.xhtml#adc89a3547f5324b7b3b95adec3806bc0">q31_t</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Multiplies 32 X 64 and returns 32 bit result in 2.30 format. </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
