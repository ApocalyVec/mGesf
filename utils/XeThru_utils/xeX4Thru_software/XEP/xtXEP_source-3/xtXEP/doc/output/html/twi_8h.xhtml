<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/twi.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">twi.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for configuration the Two Wire Interface (TWI) peripheral.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for twi.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h__incl.svg" width="234" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h__dep__incl.svg" width="206" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="twi_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:af7e15b22aaa6d2e9e782afed5b59374d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#af7e15b22aaa6d2e9e782afed5b59374d">TWI_STATUS_TXRDY</a>(status)&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga5bdee198f4a1c34b583374f4d643d46c">TWIHS_SR_TXRDY</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga5bdee198f4a1c34b583374f4d643d46c">TWIHS_SR_TXRDY</a>)</td></tr>
<tr class="separator:af7e15b22aaa6d2e9e782afed5b59374d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e22913ecfdece55b1b8f553351893bb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a0e22913ecfdece55b1b8f553351893bb">TWI_STATUS_RXRDY</a>(status)&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga0af9878bc9db95db94b0bf024cc00138">TWIHS_SR_RXRDY</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga0af9878bc9db95db94b0bf024cc00138">TWIHS_SR_RXRDY</a>)</td></tr>
<tr class="separator:a0e22913ecfdece55b1b8f553351893bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249be77a569ec813dfeb2983085e9423"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a249be77a569ec813dfeb2983085e9423">TWI_STATUS_TXCOMP</a>(status)&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#gad1a38e3c4d41f5b30cd53f9e59a00a45">TWIHS_SR_TXCOMP</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#gad1a38e3c4d41f5b30cd53f9e59a00a45">TWIHS_SR_TXCOMP</a>)</td></tr>
<tr class="separator:a249be77a569ec813dfeb2983085e9423"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ac90d2f32c99191c21f02626a9584b6bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ac90d2f32c99191c21f02626a9584b6bb">TWI_ConfigureMaster</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t twck, uint32_t mck)</td></tr>
<tr class="memdesc:ac90d2f32c99191c21f02626a9584b6bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a TWI peripheral to operate in master mode, at the given frequency (in Hz).  <a href="#ac90d2f32c99191c21f02626a9584b6bb">More...</a><br /></td></tr>
<tr class="separator:ac90d2f32c99191c21f02626a9584b6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf540599d435de6b06ddc35427a17fed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#adf540599d435de6b06ddc35427a17fed">TWI_ConfigureSlave</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t slaveAddress)</td></tr>
<tr class="memdesc:adf540599d435de6b06ddc35427a17fed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures a TWI peripheral to operate in slave mode.  <a href="#adf540599d435de6b06ddc35427a17fed">More...</a><br /></td></tr>
<tr class="separator:adf540599d435de6b06ddc35427a17fed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6f6a89c7dbb1075f904386273252977"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ab6f6a89c7dbb1075f904386273252977">TWI_Stop</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:ab6f6a89c7dbb1075f904386273252977"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a STOP condition on the TWI.  <a href="#ab6f6a89c7dbb1075f904386273252977">More...</a><br /></td></tr>
<tr class="separator:ab6f6a89c7dbb1075f904386273252977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a806d1ace472ce5f4e2fe2de6f5a425ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a806d1ace472ce5f4e2fe2de6f5a425ff">TWI_StartRead</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t address, uint32_t iaddress, uint8_t isize)</td></tr>
<tr class="memdesc:a806d1ace472ce5f4e2fe2de6f5a425ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a read operation on the TWI bus with the specified slave, it returns immediately.  <a href="#a806d1ace472ce5f4e2fe2de6f5a425ff">More...</a><br /></td></tr>
<tr class="separator:a806d1ace472ce5f4e2fe2de6f5a425ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b4e96e6ce1126921517147b048fde51"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a8b4e96e6ce1126921517147b048fde51">TWI_ReadByte</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a8b4e96e6ce1126921517147b048fde51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a byte from the TWI bus.  <a href="#a8b4e96e6ce1126921517147b048fde51">More...</a><br /></td></tr>
<tr class="separator:a8b4e96e6ce1126921517147b048fde51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad728b448499f0b4d4633dfe0cc4a5ee7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ad728b448499f0b4d4633dfe0cc4a5ee7">TWI_WriteByte</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t byte)</td></tr>
<tr class="memdesc:ad728b448499f0b4d4633dfe0cc4a5ee7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a byte of data to one of the TWI slaves on the bus.  <a href="#ad728b448499f0b4d4633dfe0cc4a5ee7">More...</a><br /></td></tr>
<tr class="separator:ad728b448499f0b4d4633dfe0cc4a5ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933fafb0a0d430f7feb10d01138b0466"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a933fafb0a0d430f7feb10d01138b0466">TWI_StartWrite</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t byte)</td></tr>
<tr class="memdesc:a933fafb0a0d430f7feb10d01138b0466"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a write operation on the TWI to access the selected slave, then returns immediately.  <a href="#a933fafb0a0d430f7feb10d01138b0466">More...</a><br /></td></tr>
<tr class="separator:a933fafb0a0d430f7feb10d01138b0466"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb399b4984df2fdaabf741326636de2"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a2bb399b4984df2fdaabf741326636de2">TWI_ByteReceived</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a2bb399b4984df2fdaabf741326636de2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a byte have been received from TWI.  <a href="#a2bb399b4984df2fdaabf741326636de2">More...</a><br /></td></tr>
<tr class="separator:a2bb399b4984df2fdaabf741326636de2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a908535df2873ebeaa63f6fda73ea6708"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a908535df2873ebeaa63f6fda73ea6708">TWI_ByteSent</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a908535df2873ebeaa63f6fda73ea6708"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a byte have been sent to TWI.  <a href="#a908535df2873ebeaa63f6fda73ea6708">More...</a><br /></td></tr>
<tr class="separator:a908535df2873ebeaa63f6fda73ea6708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d8a0d10a7d128428c350f7337191fbd"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a8d8a0d10a7d128428c350f7337191fbd">TWI_TransferComplete</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a8d8a0d10a7d128428c350f7337191fbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if current transmission is completed.  <a href="#a8d8a0d10a7d128428c350f7337191fbd">More...</a><br /></td></tr>
<tr class="separator:a8d8a0d10a7d128428c350f7337191fbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3bf1b5df694229af5fae34ca569ab7b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ab3bf1b5df694229af5fae34ca569ab7b">TWI_EnableIt</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t sources)</td></tr>
<tr class="memdesc:ab3bf1b5df694229af5fae34ca569ab7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the selected interrupts sources on a TWI peripheral.  <a href="#ab3bf1b5df694229af5fae34ca569ab7b">More...</a><br /></td></tr>
<tr class="separator:ab3bf1b5df694229af5fae34ca569ab7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac976e61b9b9d4488753f960d3df80c63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ac976e61b9b9d4488753f960d3df80c63">TWI_DisableIt</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint32_t sources)</td></tr>
<tr class="memdesc:ac976e61b9b9d4488753f960d3df80c63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the selected interrupts sources on a TWI peripheral.  <a href="#ac976e61b9b9d4488753f960d3df80c63">More...</a><br /></td></tr>
<tr class="separator:ac976e61b9b9d4488753f960d3df80c63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a316b5d5ffbfa49a8d6517a061b92a4a6"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#a316b5d5ffbfa49a8d6517a061b92a4a6">TWI_GetStatus</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a316b5d5ffbfa49a8d6517a061b92a4a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current status register of the given TWI peripheral.  <a href="#a316b5d5ffbfa49a8d6517a061b92a4a6">More...</a><br /></td></tr>
<tr class="separator:a316b5d5ffbfa49a8d6517a061b92a4a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee8c3520f24c54aedbad6cee6ab2eeaa"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#aee8c3520f24c54aedbad6cee6ab2eeaa">TWI_GetMaskedStatus</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:aee8c3520f24c54aedbad6cee6ab2eeaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current status register of the given TWI peripheral, but masking interrupt sources which are not currently enabled.  <a href="#aee8c3520f24c54aedbad6cee6ab2eeaa">More...</a><br /></td></tr>
<tr class="separator:aee8c3520f24c54aedbad6cee6ab2eeaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1813a089ae27dac920fa1b07d46b94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twi_8h.xhtml#ade1813a089ae27dac920fa1b07d46b94">TWI_SendSTOPCondition</a> (<a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:ade1813a089ae27dac920fa1b07d46b94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a STOP condition.  <a href="#ade1813a089ae27dac920fa1b07d46b94">More...</a><br /></td></tr>
<tr class="separator:ade1813a089ae27dac920fa1b07d46b94"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface for configuration the Two Wire Interface (TWI) peripheral. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a0e22913ecfdece55b1b8f553351893bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e22913ecfdece55b1b8f553351893bb">&sect;&nbsp;</a></span>TWI_STATUS_RXRDY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWI_STATUS_RXRDY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status</td><td>)</td>
          <td>&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga0af9878bc9db95db94b0bf024cc00138">TWIHS_SR_RXRDY</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga0af9878bc9db95db94b0bf024cc00138">TWIHS_SR_RXRDY</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a249be77a569ec813dfeb2983085e9423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a249be77a569ec813dfeb2983085e9423">&sect;&nbsp;</a></span>TWI_STATUS_TXCOMP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWI_STATUS_TXCOMP</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status</td><td>)</td>
          <td>&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#gad1a38e3c4d41f5b30cd53f9e59a00a45">TWIHS_SR_TXCOMP</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#gad1a38e3c4d41f5b30cd53f9e59a00a45">TWIHS_SR_TXCOMP</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af7e15b22aaa6d2e9e782afed5b59374d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7e15b22aaa6d2e9e782afed5b59374d">&sect;&nbsp;</a></span>TWI_STATUS_TXRDY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWI_STATUS_TXRDY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status</td><td>)</td>
          <td>&#160;&#160;&#160;((status &amp; <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga5bdee198f4a1c34b583374f4d643d46c">TWIHS_SR_TXRDY</a>) == <a class="el" href="group___s_a_m_v71___t_w_i_h_s.xhtml#ga5bdee198f4a1c34b583374f4d643d46c">TWIHS_SR_TXRDY</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a2bb399b4984df2fdaabf741326636de2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bb399b4984df2fdaabf741326636de2">&sect;&nbsp;</a></span>TWI_ByteReceived()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWI_ByteReceived </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if a byte have been received from TWI. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if a byte has been received and can be read on the given TWI peripheral; otherwise, returns 0. This function resets the status register. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a2bb399b4984df2fdaabf741326636de2_icgraph.svg" width="284" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a908535df2873ebeaa63f6fda73ea6708"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a908535df2873ebeaa63f6fda73ea6708">&sect;&nbsp;</a></span>TWI_ByteSent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWI_ByteSent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if a byte have been sent to TWI. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if a byte has been sent so another one can be stored for transmission; otherwise returns 0. This function clears the status register. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a908535df2873ebeaa63f6fda73ea6708_icgraph.svg" width="259" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac90d2f32c99191c21f02626a9584b6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac90d2f32c99191c21f02626a9584b6bb">&sect;&nbsp;</a></span>TWI_ConfigureMaster()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_ConfigureMaster </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwTwCk</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwMCk</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a TWI peripheral to operate in master mode, at the given frequency (in Hz). </p>
<p>The duty cycle of the TWI clock is set to 50%. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">twck</td><td>Desired TWI clock frequency. </td></tr>
    <tr><td class="paramname">mck</td><td>Master clock frequency. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adf540599d435de6b06ddc35427a17fed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf540599d435de6b06ddc35427a17fed">&sect;&nbsp;</a></span>TWI_ConfigureSlave()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_ConfigureSlave </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>slaveAddress</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures a TWI peripheral to operate in slave mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">slaveAddress</td><td>Slave address. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_adf540599d435de6b06ddc35427a17fed_icgraph.svg" width="302" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac976e61b9b9d4488753f960d3df80c63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac976e61b9b9d4488753f960d3df80c63">&sect;&nbsp;</a></span>TWI_DisableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_DisableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables the selected interrupts sources on a TWI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_ac976e61b9b9d4488753f960d3df80c63_icgraph.svg" width="291" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab3bf1b5df694229af5fae34ca569ab7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3bf1b5df694229af5fae34ca569ab7b">&sect;&nbsp;</a></span>TWI_EnableIt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_EnableIt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>sources</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the selected interrupts sources on a TWI peripheral. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">sources</td><td>Bitwise OR of selected interrupt sources. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_ab3bf1b5df694229af5fae34ca569ab7b_icgraph.svg" width="287" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aee8c3520f24c54aedbad6cee6ab2eeaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee8c3520f24c54aedbad6cee6ab2eeaa">&sect;&nbsp;</a></span>TWI_GetMaskedStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t TWI_GetMaskedStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current status register of the given TWI peripheral, but masking interrupt sources which are not currently enabled. </p>
<dl class="section note"><dt>Note</dt><dd>This resets the internal value of the status register, so further read may yield different values. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_aee8c3520f24c54aedbad6cee6ab2eeaa_icgraph.svg" width="334" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a316b5d5ffbfa49a8d6517a061b92a4a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a316b5d5ffbfa49a8d6517a061b92a4a6">&sect;&nbsp;</a></span>TWI_GetStatus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t TWI_GetStatus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current status register of the given TWI peripheral. </p>
<dl class="section note"><dt>Note</dt><dd>This resets the internal value of the status register, so further read may yield different values. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TWI status register. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a316b5d5ffbfa49a8d6517a061b92a4a6_icgraph.svg" width="300" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8b4e96e6ce1126921517147b048fde51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b4e96e6ce1126921517147b048fde51">&sect;&nbsp;</a></span>TWI_ReadByte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWI_ReadByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a byte from the TWI bus. </p>
<p>The read operation must have been started using <a class="el" href="twi_8c.xhtml#a806d1ace472ce5f4e2fe2de6f5a425ff" title="Starts a read operation on the TWI bus with the specified slave, it returns immediately. ">TWI_StartRead()</a> and a byte must be available (check with <a class="el" href="twi_8c.xhtml#a2bb399b4984df2fdaabf741326636de2" title="Check if a byte have been received from TWI. ">TWI_ByteReceived()</a>). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>byte read. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a8b4e96e6ce1126921517147b048fde51_icgraph.svg" width="296" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ade1813a089ae27dac920fa1b07d46b94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade1813a089ae27dac920fa1b07d46b94">&sect;&nbsp;</a></span>TWI_SendSTOPCondition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_SendSTOPCondition </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a STOP condition. </p>
<p>STOP Condition is sent just after completing the current byte transmission in master read mode. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_ade1813a089ae27dac920fa1b07d46b94_icgraph.svg" width="347" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a806d1ace472ce5f4e2fe2de6f5a425ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a806d1ace472ce5f4e2fe2de6f5a425ff">&sect;&nbsp;</a></span>TWI_StartRead()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_StartRead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts a read operation on the TWI bus with the specified slave, it returns immediately. </p>
<p>Data must then be read using <a class="el" href="twi_8c.xhtml#a8b4e96e6ce1126921517147b048fde51" title="Reads a byte from the TWI bus. ">TWI_ReadByte()</a> whenever a byte is available (poll using <a class="el" href="twi_8c.xhtml#a2bb399b4984df2fdaabf741326636de2" title="Check if a byte have been received from TWI. ">TWI_ByteReceived()</a>). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">address</td><td>Slave address on the bus. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional internal address bytes. </td></tr>
    <tr><td class="paramname">isize</td><td>Number of internal address bytes. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a806d1ace472ce5f4e2fe2de6f5a425ff_icgraph.svg" width="295" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a933fafb0a0d430f7feb10d01138b0466"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a933fafb0a0d430f7feb10d01138b0466">&sect;&nbsp;</a></span>TWI_StartWrite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_StartWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>byte</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts a write operation on the TWI to access the selected slave, then returns immediately. </p>
<p>A byte of data must be provided to start the write; other bytes are written next. after that to send the remaining bytes. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">address</td><td>Address of slave to acccess on the bus. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional slave internal address. </td></tr>
    <tr><td class="paramname">isize</td><td>Number of internal address bytes. </td></tr>
    <tr><td class="paramname">byte</td><td>First byte to send. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a933fafb0a0d430f7feb10d01138b0466_cgraph.svg" width="283" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a933fafb0a0d430f7feb10d01138b0466_icgraph.svg" width="295" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab6f6a89c7dbb1075f904386273252977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6f6a89c7dbb1075f904386273252977">&sect;&nbsp;</a></span>TWI_Stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_Stop </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a STOP condition on the TWI. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_ab6f6a89c7dbb1075f904386273252977_icgraph.svg" width="262" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8d8a0d10a7d128428c350f7337191fbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d8a0d10a7d128428c350f7337191fbd">&sect;&nbsp;</a></span>TWI_TransferComplete()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWI_TransferComplete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if current transmission is completed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the current transmission is complete (the STOP has been sent); otherwise returns 0. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_a8d8a0d10a7d128428c350f7337191fbd_icgraph.svg" width="312" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad728b448499f0b4d4633dfe0cc4a5ee7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad728b448499f0b4d4633dfe0cc4a5ee7">&sect;&nbsp;</a></span>TWI_WriteByte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWI_WriteByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>byte</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a byte of data to one of the TWI slaves on the bus. </p>
<dl class="section note"><dt>Note</dt><dd>This function must be called once before <a class="el" href="twi_8c.xhtml#a933fafb0a0d430f7feb10d01138b0466" title="Starts a write operation on the TWI to access the selected slave, then returns immediately. ">TWI_StartWrite()</a> with the first byte of data to send, then it shall be called repeatedly after that to send the remaining bytes. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwi</td><td>Pointer to an <a class="el" href="struct_twihs.xhtml" title="Twihs hardware registers. ">Twihs</a> instance. </td></tr>
    <tr><td class="paramname">byte</td><td>Byte to send. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twi_8h_ad728b448499f0b4d4633dfe0cc4a5ee7_icgraph.svg" width="467" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
