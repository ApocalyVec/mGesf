<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/cmsis/CMSIS/Include/cmsis_armcc.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_74e208acb2b5db593baf5455224ab674.xhtml">cmsis</a></li><li class="navelem"><a class="el" href="dir_fd2588db4c2c5affdf1bbcee370aa10f.xhtml">CMSIS</a></li><li class="navelem"><a class="el" href="dir_b736d58476c43830a264712b5920737c.xhtml">Include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cmsis_armcc.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cmsis__armcc_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**************************************************************************/</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/* Copyright (c) 2009 - 2015 ARM LIMITED</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">   All rights reserved.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">   Redistribution and use in source and binary forms, with or without</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">   modification, are permitted provided that the following conditions are met:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">   - Redistributions of source code must retain the above copyright</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">     notice, this list of conditions and the following disclaimer.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">   - Redistributions in binary form must reproduce the above copyright</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     notice, this list of conditions and the following disclaimer in the</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     documentation and/or other materials provided with the distribution.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">   - Neither the name of ARM nor the names of its contributors may be used</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">     to endorse or promote products derived from this software without</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">     specific prior written permission.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">   *</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">   POSSIBILITY OF SUCH DAMAGE.</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">   ---------------------------------------------------------------------------*/</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#ifndef __CMSIS_ARMCC_H</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#define __CMSIS_ARMCC_H</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 400677)</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">  #error &quot;Please use ARM Compiler Toolchain V4.0.677 or later!&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/* ###########################  Core Function Access  ########################### */</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">/* intrinsic void __enable_irq();     */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/* intrinsic void __disable_irq();    */</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga5fe64567d5bf0a81c118374e9a3a4598">   58</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga5fe64567d5bf0a81c118374e9a3a4598">__get_CONTROL</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">register</span> uint32_t __regControl         __ASM(<span class="stringliteral">&quot;control&quot;</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordflow">return</span>(__regControl);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga558df7eeb0a34765e0b54d9853d08484">   71</a></span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga558df7eeb0a34765e0b54d9853d08484">__set_CONTROL</a>(uint32_t control)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keyword">register</span> uint32_t __regControl         __ASM(<span class="stringliteral">&quot;control&quot;</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  __regControl = control;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga2c18685a915eb9b7513a907c2b866636">   84</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga2c18685a915eb9b7513a907c2b866636">__get_IPSR</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keyword">register</span> uint32_t __regIPSR          __ASM(<span class="stringliteral">&quot;ipsr&quot;</span>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span>(__regIPSR);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gaf082254959c727c663f2334021f1a98a">   97</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gaf082254959c727c663f2334021f1a98a">__get_APSR</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keyword">register</span> uint32_t __regAPSR          __ASM(<span class="stringliteral">&quot;apsr&quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">return</span>(__regAPSR);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga94c675a736d4754a5f73d8748b24aa11">  110</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga94c675a736d4754a5f73d8748b24aa11">__get_xPSR</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keyword">register</span> uint32_t __regXPSR          __ASM(<span class="stringliteral">&quot;xpsr&quot;</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">return</span>(__regXPSR);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga0c569cbb49336f8d638686f9103047aa">  123</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga0c569cbb49336f8d638686f9103047aa">__get_PSP</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keyword">register</span> uint32_t __regProcessStackPointer  __ASM(<span class="stringliteral">&quot;psp&quot;</span>);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">return</span>(__regProcessStackPointer);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gab145e35dbaf6868d3a17a8ad360fe379">  136</a></span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gab145e35dbaf6868d3a17a8ad360fe379">__set_PSP</a>(uint32_t topOfProcStack)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keyword">register</span> uint32_t __regProcessStackPointer  __ASM(<span class="stringliteral">&quot;psp&quot;</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  __regProcessStackPointer = topOfProcStack;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac5267c10c9b15b5349eea0a959ea014c">  149</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac5267c10c9b15b5349eea0a959ea014c">__get_MSP</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keyword">register</span> uint32_t __regMainStackPointer     __ASM(<span class="stringliteral">&quot;msp&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">return</span>(__regMainStackPointer);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga1ff33c0b5ed0e687dd7967a1dd283d5f">  162</a></span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga1ff33c0b5ed0e687dd7967a1dd283d5f">__set_MSP</a>(uint32_t topOfMainStack)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">register</span> uint32_t __regMainStackPointer     __ASM(<span class="stringliteral">&quot;msp&quot;</span>);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  __regMainStackPointer = topOfMainStack;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac9e3a67ff722261b89c77ebe49b6f9a7">  175</a></span>&#160;__STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac9e3a67ff722261b89c77ebe49b6f9a7">__get_PRIMASK</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">register</span> uint32_t __regPriMask         __ASM(<span class="stringliteral">&quot;primask&quot;</span>);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordflow">return</span>(__regPriMask);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga42e74e3fffe1a2d93db1de04d9260929">  188</a></span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> <a class="code" href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga42e74e3fffe1a2d93db1de04d9260929">__set_PRIMASK</a>(uint32_t priMask)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keyword">register</span> uint32_t __regPriMask         __ASM(<span class="stringliteral">&quot;primask&quot;</span>);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  __regPriMask = (priMask);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#if       (__CORTEX_M &gt;= 0x03U) || (__CORTEX_SC &gt;= 300U)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#define __enable_fault_irq                __enable_fiq</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#define __disable_fault_irq               __disable_fiq</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;__STATIC_INLINE uint32_t  __get_BASEPRI(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;{</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keyword">register</span> uint32_t __regBasePri         __ASM(<span class="stringliteral">&quot;basepri&quot;</span>);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keywordflow">return</span>(__regBasePri);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> __set_BASEPRI(uint32_t basePri)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;{</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keyword">register</span> uint32_t __regBasePri         __ASM(<span class="stringliteral">&quot;basepri&quot;</span>);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  __regBasePri = (basePri &amp; 0xFFU);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> __set_BASEPRI_MAX(uint32_t basePri)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keyword">register</span> uint32_t __regBasePriMax      __ASM(<span class="stringliteral">&quot;basepri_max&quot;</span>);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  __regBasePriMax = (basePri &amp; 0xFFU);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;__STATIC_INLINE uint32_t __get_FAULTMASK(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;{</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keyword">register</span> uint32_t __regFaultMask       __ASM(<span class="stringliteral">&quot;faultmask&quot;</span>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keywordflow">return</span>(__regFaultMask);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> __set_FAULTMASK(uint32_t faultMask)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;{</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keyword">register</span> uint32_t __regFaultMask       __ASM(<span class="stringliteral">&quot;faultmask&quot;</span>);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  __regFaultMask = (faultMask &amp; (uint32_t)1);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* (__CORTEX_M &gt;= 0x03U) || (__CORTEX_SC &gt;= 300U) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;__STATIC_INLINE uint32_t __get_FPSCR(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">#if (__FPU_PRESENT == 1U) &amp;&amp; (__FPU_USED == 1U)</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keyword">register</span> uint32_t __regfpscr         __ASM(<span class="stringliteral">&quot;fpscr&quot;</span>);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">return</span>(__regfpscr);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;   <span class="keywordflow">return</span>(0U);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;__STATIC_INLINE <span class="keywordtype">void</span> __set_FPSCR(uint32_t fpscr)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#if (__FPU_PRESENT == 1U) &amp;&amp; (__FPU_USED == 1U)</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keyword">register</span> uint32_t __regfpscr         __ASM(<span class="stringliteral">&quot;fpscr&quot;</span>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  __regfpscr = (fpscr);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">/* ##########################  Core Instruction Access  ######################### */</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">/* Define macros for porting to both thumb1 and thumb2.</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment"> * For thumb1, use low register (r0-r7), specified by constrant &quot;l&quot;</span></div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment"> * Otherwise, use general registers, specified by constrant &quot;r&quot; */</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="preprocessor">#if defined (__thumb__) &amp;&amp; !defined (__thumb2__)</span></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="preprocessor">#define __CMSIS_GCC_OUT_REG(r) &quot;=l&quot; (r)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor">#define __CMSIS_GCC_USE_REG(r) &quot;l&quot; (r)</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gabc17e391c13c71702366c67cba39c276">  334</a></span>&#160;<span class="preprocessor">#define __CMSIS_GCC_OUT_REG(r) &quot;=r&quot; (r)</span></div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga9d94dee7402367961d2cf0accc00fd97">  335</a></span>&#160;<span class="preprocessor">#define __CMSIS_GCC_USE_REG(r) &quot;r&quot; (r)</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gabd585ddc865fb9b7f2493af1eee1a572">  342</a></span>&#160;<span class="preprocessor">#define __NOP                             __nop</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gad23bf2b78a9a4524157c9de0d30b7448">  350</a></span>&#160;<span class="preprocessor">#define __WFI                             __wfi</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaac6cc7dd4325d9cb40d3290fa5244b3d">  358</a></span>&#160;<span class="preprocessor">#define __WFE                             __wfe</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaab4f296d0022b4b10dc0976eb22052f9">  365</a></span>&#160;<span class="preprocessor">#define __SEV                             __sev</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaad233022e850a009fc6f7602be1182f6">  374</a></span>&#160;<span class="preprocessor">#define __ISB() do {\</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="preprocessor">                   __isb(0xF);\</span></div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor">                } while (0U)</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga067d257a2b34565410acefb5afef2203">  385</a></span>&#160;<span class="preprocessor">#define __DSB() do {\</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="preprocessor">                   __dsb(0xF);\</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">                } while (0U)</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga671101179b5943990785f36f8c1e2269">  396</a></span>&#160;<span class="preprocessor">#define __DMB() do {\</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor">                   __dmb(0xF);\</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="preprocessor">                   __schedule_barrier();\</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="preprocessor">                } while (0U)</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga14f54807872c0f5e05604c4924abfdae">  409</a></span>&#160;<span class="preprocessor">#define __REV                             __rev</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="preprocessor">#ifndef __NO_EMBEDDED_ASM</span></div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaf2c5bef14a2884d08cace0c784654db6">  420</a></span>&#160;__attribute__((section(<span class="stringliteral">&quot;.rev16_text&quot;</span>))) __STATIC_INLINE __ASM uint32_t <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaf2c5bef14a2884d08cace0c784654db6">__REV16</a>(uint32_t value)</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;{</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  rev16 r0, r0</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  bx lr</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;}</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="preprocessor">#ifndef __NO_EMBEDDED_ASM</span></div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gadf722e3df4586108e43cce4b757e195b">  435</a></span>&#160;__attribute__((section(<span class="stringliteral">&quot;.revsh_text&quot;</span>))) __STATIC_INLINE __ASM int32_t <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#gadf722e3df4586108e43cce4b757e195b">__REVSH</a>(int32_t value)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;{</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  revsh r0, r0</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  bx lr</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;}</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga95b9bd281ddeda378b85afdb8f2ced86">  451</a></span>&#160;<span class="preprocessor">#define __ROR                             __ror</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga15ea6bd3c507d3e81c3b3a1258e46397">  462</a></span>&#160;<span class="preprocessor">#define __BKPT(value)                       __breakpoint(value)</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">#if       (__CORTEX_M &gt;= 0x03U) || (__CORTEX_SC &gt;= 300U)</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor">  #define __RBIT                          __rbit</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga03cb1ad07cb0bacb736cc302ebdbcc0c">  475</a></span>&#160;__attribute__((always_inline)) __STATIC_INLINE uint32_t <a class="code" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga03cb1ad07cb0bacb736cc302ebdbcc0c">__RBIT</a>(uint32_t value)</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;{</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  uint32_t result;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  int32_t s = 4 <span class="comment">/*sizeof(v)*/</span> * 8 - 1; <span class="comment">// extra shift needed at end</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  result = value;                      <span class="comment">// r will be reversed bits of v; first get LSB of v</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;  <span class="keywordflow">for</span> (value &gt;&gt;= 1U; value; value &gt;&gt;= 1U)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  {</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    result &lt;&lt;= 1U;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    result |= value &amp; 1U;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    s--;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  }</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  result &lt;&lt;= s;                       <span class="comment">// shift when v&#39;s highest bits are zero</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  <span class="keywordflow">return</span>(result);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga5d5bb1527e042be4a9fa5a33f65cc248">  500</a></span>&#160;<span class="preprocessor">#define __CLZ                             __clz</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="preprocessor">#if       (__CORTEX_M &gt;= 0x03U) || (__CORTEX_SC &gt;= 300U)</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="preprocessor">  #define __LDREXB(ptr)                                                        ((uint8_t ) __ldrex(ptr))</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="preprocessor">  #define __LDREXB(ptr)          _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) ((uint8_t ) __ldrex(ptr))  _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor">  #define __LDREXH(ptr)                                                        ((uint16_t) __ldrex(ptr))</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="preprocessor">  #define __LDREXH(ptr)          _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) ((uint16_t) __ldrex(ptr))  _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="preprocessor">  #define __LDREXW(ptr)                                                        ((uint32_t ) __ldrex(ptr))</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="preprocessor">  #define __LDREXW(ptr)          _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) ((uint32_t ) __ldrex(ptr))  _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="preprocessor">  #define __STREXB(value, ptr)                                                 __strex(value, ptr)</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="preprocessor">  #define __STREXB(value, ptr)   _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) __strex(value, ptr)        _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="preprocessor">  #define __STREXH(value, ptr)                                                 __strex(value, ptr)</span></div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="preprocessor">  #define __STREXH(value, ptr)   _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) __strex(value, ptr)        _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="preprocessor">#if (__ARMCC_VERSION &lt; 5060020)</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">  #define __STREXW(value, ptr)                                                 __strex(value, ptr)</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="preprocessor">  #define __STREXW(value, ptr)   _Pragma(&quot;push&quot;) _Pragma(&quot;diag_suppress 3731&quot;) __strex(value, ptr)        _Pragma(&quot;pop&quot;)</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="preprocessor">#define __CLREX                           __clrex</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="preprocessor">#define __SSAT                            __ssat</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="preprocessor">#define __USAT                            __usat</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="preprocessor">#ifndef __NO_EMBEDDED_ASM</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;__attribute__((section(<span class="stringliteral">&quot;.rrx_text&quot;</span>))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;{</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;  rrx r0, r0</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;  bx lr</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;}</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="preprocessor">#define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="preprocessor">#define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="preprocessor">#define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="preprocessor">#define __STRBT(value, ptr)               __strt(value, ptr)</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="preprocessor">#define __STRHT(value, ptr)               __strt(value, ptr)</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="preprocessor">#define __STRT(value, ptr)                __strt(value, ptr)</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* (__CORTEX_M &gt;= 0x03U) || (__CORTEX_SC &gt;= 300U) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160; <span class="comment">/* end of group CMSIS_Core_InstructionInterface */</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">/* ###################  Compiler specific Intrinsics  ########################### */</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="preprocessor">#if (__CORTEX_M &gt;= 0x04U)  </span><span class="comment">/* only for Cortex-M4 and above */</span><span class="preprocessor"></span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="preprocessor">#define __SADD8                           __sadd8</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="preprocessor">#define __QADD8                           __qadd8</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="preprocessor">#define __SHADD8                          __shadd8</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="preprocessor">#define __UADD8                           __uadd8</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="preprocessor">#define __UQADD8                          __uqadd8</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="preprocessor">#define __UHADD8                          __uhadd8</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="preprocessor">#define __SSUB8                           __ssub8</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="preprocessor">#define __QSUB8                           __qsub8</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="preprocessor">#define __SHSUB8                          __shsub8</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="preprocessor">#define __USUB8                           __usub8</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="preprocessor">#define __UQSUB8                          __uqsub8</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="preprocessor">#define __UHSUB8                          __uhsub8</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="preprocessor">#define __SADD16                          __sadd16</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="preprocessor">#define __QADD16                          __qadd16</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="preprocessor">#define __SHADD16                         __shadd16</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="preprocessor">#define __UADD16                          __uadd16</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="preprocessor">#define __UQADD16                         __uqadd16</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;<span class="preprocessor">#define __UHADD16                         __uhadd16</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="preprocessor">#define __SSUB16                          __ssub16</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="preprocessor">#define __QSUB16                          __qsub16</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="preprocessor">#define __SHSUB16                         __shsub16</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="preprocessor">#define __USUB16                          __usub16</span></div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="preprocessor">#define __UQSUB16                         __uqsub16</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="preprocessor">#define __UHSUB16                         __uhsub16</span></div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="preprocessor">#define __SASX                            __sasx</span></div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="preprocessor">#define __QASX                            __qasx</span></div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="preprocessor">#define __SHASX                           __shasx</span></div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="preprocessor">#define __UASX                            __uasx</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="preprocessor">#define __UQASX                           __uqasx</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="preprocessor">#define __UHASX                           __uhasx</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="preprocessor">#define __SSAX                            __ssax</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="preprocessor">#define __QSAX                            __qsax</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="preprocessor">#define __SHSAX                           __shsax</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="preprocessor">#define __USAX                            __usax</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="preprocessor">#define __UQSAX                           __uqsax</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="preprocessor">#define __UHSAX                           __uhsax</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="preprocessor">#define __USAD8                           __usad8</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="preprocessor">#define __USADA8                          __usada8</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="preprocessor">#define __SSAT16                          __ssat16</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="preprocessor">#define __USAT16                          __usat16</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="preprocessor">#define __UXTB16                          __uxtb16</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;<span class="preprocessor">#define __UXTAB16                         __uxtab16</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;<span class="preprocessor">#define __SXTB16                          __sxtb16</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;<span class="preprocessor">#define __SXTAB16                         __sxtab16</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="preprocessor">#define __SMUAD                           __smuad</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="preprocessor">#define __SMUADX                          __smuadx</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="preprocessor">#define __SMLAD                           __smlad</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="preprocessor">#define __SMLADX                          __smladx</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="preprocessor">#define __SMLALD                          __smlald</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="preprocessor">#define __SMLALDX                         __smlaldx</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="preprocessor">#define __SMUSD                           __smusd</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="preprocessor">#define __SMUSDX                          __smusdx</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="preprocessor">#define __SMLSD                           __smlsd</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="preprocessor">#define __SMLSDX                          __smlsdx</span></div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="preprocessor">#define __SMLSLD                          __smlsld</span></div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="preprocessor">#define __SMLSLDX                         __smlsldx</span></div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="preprocessor">#define __SEL                             __sel</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;<span class="preprocessor">#define __QADD                            __qadd</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="preprocessor">#define __QSUB                            __qsub</span></div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="preprocessor">#define __PKHBT(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) &amp; 0x0000FFFFUL) |  \</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="preprocessor">                                           ((((uint32_t)(ARG2)) &lt;&lt; (ARG3)) &amp; 0xFFFF0000UL)  )</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="preprocessor">#define __PKHTB(ARG1,ARG2,ARG3)          ( ((((uint32_t)(ARG1))          ) &amp; 0xFFFF0000UL) |  \</span></div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="preprocessor">                                           ((((uint32_t)(ARG2)) &gt;&gt; (ARG3)) &amp; 0x0000FFFFUL)  )</span></div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;<span class="preprocessor">#define __SMMLA(ARG1,ARG2,ARG3)          ( (int32_t)((((int64_t)(ARG1) * (ARG2)) + \</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="preprocessor">                                                      ((int64_t)(ARG3) &lt;&lt; 32U)     ) &gt;&gt; 32U))</span></div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* (__CORTEX_M &gt;= 0x04) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __CMSIS_ARMCC_H */</span><span class="preprocessor"></span></div><div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_gaf082254959c727c663f2334021f1a98a"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gaf082254959c727c663f2334021f1a98a">__get_APSR</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_APSR(void)</div><div class="ttdoc">Get APSR Register. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:97</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___instruction_interface_xhtml_ga03cb1ad07cb0bacb736cc302ebdbcc0c"><div class="ttname"><a href="group___c_m_s_i_s___core___instruction_interface.xhtml#ga03cb1ad07cb0bacb736cc302ebdbcc0c">__RBIT</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __RBIT(uint32_t value)</div><div class="ttdoc">Reverse bit order of value. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:475</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga94c675a736d4754a5f73d8748b24aa11"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga94c675a736d4754a5f73d8748b24aa11">__get_xPSR</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_xPSR(void)</div><div class="ttdoc">Get xPSR Register. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:110</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_gac9e3a67ff722261b89c77ebe49b6f9a7"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac9e3a67ff722261b89c77ebe49b6f9a7">__get_PRIMASK</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_PRIMASK(void)</div><div class="ttdoc">Get Priority Mask. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:175</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___instruction_interface_xhtml_gaf2c5bef14a2884d08cace0c784654db6"><div class="ttname"><a href="group___c_m_s_i_s___core___instruction_interface.xhtml#gaf2c5bef14a2884d08cace0c784654db6">__REV16</a></div><div class="ttdeci">__STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)</div><div class="ttdoc">Reverse byte order (16 bit) </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:420</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_gac5267c10c9b15b5349eea0a959ea014c"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gac5267c10c9b15b5349eea0a959ea014c">__get_MSP</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_MSP(void)</div><div class="ttdoc">Get Main Stack Pointer. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:149</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___instruction_interface_xhtml_gadf722e3df4586108e43cce4b757e195b"><div class="ttname"><a href="group___c_m_s_i_s___core___instruction_interface.xhtml#gadf722e3df4586108e43cce4b757e195b">__REVSH</a></div><div class="ttdeci">__STATIC_INLINE __ASM int32_t __REVSH(int32_t value)</div><div class="ttdoc">Reverse byte order in signed short value. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:435</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga2c18685a915eb9b7513a907c2b866636"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga2c18685a915eb9b7513a907c2b866636">__get_IPSR</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_IPSR(void)</div><div class="ttdoc">Get IPSR Register. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:84</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_gab145e35dbaf6868d3a17a8ad360fe379"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#gab145e35dbaf6868d3a17a8ad360fe379">__set_PSP</a></div><div class="ttdeci">__STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)</div><div class="ttdoc">Set Process Stack Pointer. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:136</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga558df7eeb0a34765e0b54d9853d08484"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga558df7eeb0a34765e0b54d9853d08484">__set_CONTROL</a></div><div class="ttdeci">__STATIC_INLINE void __set_CONTROL(uint32_t control)</div><div class="ttdoc">Set Control Register. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:71</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga0c569cbb49336f8d638686f9103047aa"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga0c569cbb49336f8d638686f9103047aa">__get_PSP</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_PSP(void)</div><div class="ttdoc">Get Process Stack Pointer. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:123</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga42e74e3fffe1a2d93db1de04d9260929"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga42e74e3fffe1a2d93db1de04d9260929">__set_PRIMASK</a></div><div class="ttdeci">__STATIC_INLINE void __set_PRIMASK(uint32_t priMask)</div><div class="ttdoc">Set Priority Mask. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:188</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga5fe64567d5bf0a81c118374e9a3a4598"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga5fe64567d5bf0a81c118374e9a3a4598">__get_CONTROL</a></div><div class="ttdeci">__STATIC_INLINE uint32_t __get_CONTROL(void)</div><div class="ttdoc">Get Control Register. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:58</div></div>
<div class="ttc" id="group___c_m_s_i_s___core___reg_acc_functions_xhtml_ga1ff33c0b5ed0e687dd7967a1dd283d5f"><div class="ttname"><a href="group___c_m_s_i_s___core___reg_acc_functions.xhtml#ga1ff33c0b5ed0e687dd7967a1dd283d5f">__set_MSP</a></div><div class="ttdeci">__STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)</div><div class="ttdoc">Set Main Stack Pointer. </div><div class="ttdef"><b>Definition:</b> cmsis_armcc.h:162</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
