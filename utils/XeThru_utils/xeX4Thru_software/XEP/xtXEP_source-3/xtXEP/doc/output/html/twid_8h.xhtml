<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/twid.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">twid.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for twid.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h__incl.svg" width="206" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="twid_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___async.xhtml">_Async</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronous transfer descriptor.  <a href="struct___async.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___twid.xhtml">_Twid</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TWI driver structure.  <a href="struct___twid.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">TWI driver structure.  <a href="struct_twihs_dma.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:af55b1a35917b65680617a14c7d88652c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#af55b1a35917b65680617a14c7d88652c">TWID_ERROR_BUSY</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:af55b1a35917b65680617a14c7d88652c"><td class="mdescLeft">&#160;</td><td class="mdescRight">TWI driver is currently busy.  <a href="#af55b1a35917b65680617a14c7d88652c">More...</a><br /></td></tr>
<tr class="separator:af55b1a35917b65680617a14c7d88652c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04bdbd7b9839d78bb6e0ad757674ea24"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a04bdbd7b9839d78bb6e0ad757674ea24">ASYNC_STATUS_PENDING</a>&#160;&#160;&#160;0xFF</td></tr>
<tr class="memdesc:a04bdbd7b9839d78bb6e0ad757674ea24"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> is still pending.  <a href="#a04bdbd7b9839d78bb6e0ad757674ea24">More...</a><br /></td></tr>
<tr class="separator:a04bdbd7b9839d78bb6e0ad757674ea24"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a84cb0e3a5d377fb4499517b7323e81b5"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___async.xhtml">_Async</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a></td></tr>
<tr class="memdesc:a84cb0e3a5d377fb4499517b7323e81b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronous transfer descriptor.  <a href="#a84cb0e3a5d377fb4499517b7323e81b5">More...</a><br /></td></tr>
<tr class="separator:a84cb0e3a5d377fb4499517b7323e81b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abede34758f65b083d99cc0f3558d2731"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___twid.xhtml">_Twid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a></td></tr>
<tr class="memdesc:abede34758f65b083d99cc0f3558d2731"><td class="mdescLeft">&#160;</td><td class="mdescRight">TWI driver structure.  <a href="#abede34758f65b083d99cc0f3558d2731">More...</a><br /></td></tr>
<tr class="separator:abede34758f65b083d99cc0f3558d2731"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a3eb3de848851a9d5ae848efdd435d167"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a3eb3de848851a9d5ae848efdd435d167">TWID_Initialize</a> (<a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *pTwid, <a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi)</td></tr>
<tr class="memdesc:a3eb3de848851a9d5ae848efdd435d167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a TWI driver instance, using the given TWI peripheral.  <a href="#a3eb3de848851a9d5ae848efdd435d167">More...</a><br /></td></tr>
<tr class="separator:a3eb3de848851a9d5ae848efdd435d167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a93a963b33545933b831ca77a89c2a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a5a93a963b33545933b831ca77a89c2a2">TWID_DmaInitialize</a> (<a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *pTwidma, <a class="el" href="struct_twihs.xhtml">Twihs</a> *pTwi, uint8_t bPolling)</td></tr>
<tr class="memdesc:a5a93a963b33545933b831ca77a89c2a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a TWI driver instance, using the given TWI peripheral.  <a href="#a5a93a963b33545933b831ca77a89c2a2">More...</a><br /></td></tr>
<tr class="separator:a5a93a963b33545933b831ca77a89c2a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bc4824729ea7fce14e514036ee38490"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a1bc4824729ea7fce14e514036ee38490">TWID_Handler</a> (<a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *pTwid)</td></tr>
<tr class="memdesc:a1bc4824729ea7fce14e514036ee38490"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interrupt handler for a TWI peripheral.  <a href="#a1bc4824729ea7fce14e514036ee38490">More...</a><br /></td></tr>
<tr class="separator:a1bc4824729ea7fce14e514036ee38490"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff666e4e48382473f30c3568ac39fc5"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a8ff666e4e48382473f30c3568ac39fc5">ASYNC_IsFinished</a> (<a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *pAsync)</td></tr>
<tr class="memdesc:a8ff666e4e48382473f30c3568ac39fc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns 1 if the given transfer has ended; otherwise returns 0.  <a href="#a8ff666e4e48382473f30c3568ac39fc5">More...</a><br /></td></tr>
<tr class="separator:a8ff666e4e48382473f30c3568ac39fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13f06b4cc25a29302d3c932e82136599"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a13f06b4cc25a29302d3c932e82136599">TWID_Read</a> (<a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *pTwid, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t *pData, uint32_t num, <a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *pAsync)</td></tr>
<tr class="memdesc:a13f06b4cc25a29302d3c932e82136599"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronously reads data from a slave on the TWI bus.  <a href="#a13f06b4cc25a29302d3c932e82136599">More...</a><br /></td></tr>
<tr class="separator:a13f06b4cc25a29302d3c932e82136599"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c6f278372fcb213e7848929db89d3f"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a67c6f278372fcb213e7848929db89d3f">TWID_Write</a> (<a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *pTwid, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t *pData, uint32_t num, <a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *pAsync)</td></tr>
<tr class="memdesc:a67c6f278372fcb213e7848929db89d3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronously sends data to a slave on the TWI bus.  <a href="#a67c6f278372fcb213e7848929db89d3f">More...</a><br /></td></tr>
<tr class="separator:a67c6f278372fcb213e7848929db89d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa58a543bbbb8570c4136811e16d2be11"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#aa58a543bbbb8570c4136811e16d2be11">TWID_DmaRead</a> (<a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *pTwiXdma, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t *pData, uint32_t num, <a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *pAsync)</td></tr>
<tr class="memdesc:aa58a543bbbb8570c4136811e16d2be11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronously reads data from a slave on the TWI bus.  <a href="#aa58a543bbbb8570c4136811e16d2be11">More...</a><br /></td></tr>
<tr class="separator:aa58a543bbbb8570c4136811e16d2be11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a610f1dadb4046085412fe8c2817e16b1"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="twid_8h.xhtml#a610f1dadb4046085412fe8c2817e16b1">TWID_DmaWrite</a> (<a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *pTwiXdma, uint8_t address, uint32_t iaddress, uint8_t isize, uint8_t *pData, uint32_t num, <a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *pAsync)</td></tr>
<tr class="memdesc:a610f1dadb4046085412fe8c2817e16b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asynchronously sends data to a slave on the TWI bus.  <a href="#a610f1dadb4046085412fe8c2817e16b1">More...</a><br /></td></tr>
<tr class="separator:a610f1dadb4046085412fe8c2817e16b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a04bdbd7b9839d78bb6e0ad757674ea24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04bdbd7b9839d78bb6e0ad757674ea24">&sect;&nbsp;</a></span>ASYNC_STATUS_PENDING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASYNC_STATUS_PENDING&#160;&#160;&#160;0xFF</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> is still pending. </p>

</div>
</div>
<a id="af55b1a35917b65680617a14c7d88652c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af55b1a35917b65680617a14c7d88652c">&sect;&nbsp;</a></span>TWID_ERROR_BUSY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TWID_ERROR_BUSY&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>TWI driver is currently busy. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a84cb0e3a5d377fb4499517b7323e81b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84cb0e3a5d377fb4499517b7323e81b5">&sect;&nbsp;</a></span>Async</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___async.xhtml">_Async</a>  <a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Asynchronous transfer descriptor. </p>

</div>
</div>
<a id="abede34758f65b083d99cc0f3558d2731"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abede34758f65b083d99cc0f3558d2731">&sect;&nbsp;</a></span>Twid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___twid.xhtml">_Twid</a>  <a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>TWI driver structure. </p>
<p>Holds the internal state of the driver. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a8ff666e4e48382473f30c3568ac39fc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff666e4e48382473f30c3568ac39fc5">&sect;&nbsp;</a></span>ASYNC_IsFinished()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t ASYNC_IsFinished </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *&#160;</td>
          <td class="paramname"><em>pAsync</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns 1 if the given transfer has ended; otherwise returns 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pAsync</td><td>Pointer to an Async instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5a93a963b33545933b831ca77a89c2a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a93a963b33545933b831ca77a89c2a2">&sect;&nbsp;</a></span>TWID_DmaInitialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWID_DmaInitialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *&#160;</td>
          <td class="paramname"><em>pTwidma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bPolling</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a TWI driver instance, using the given TWI peripheral. </p>
<dl class="section note"><dt>Note</dt><dd>The peripheral must have been initialized properly before calling this function. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to the Twid instance to initialize. </td></tr>
    <tr><td class="paramname">pTwi</td><td>Pointer to the TWI peripheral to use. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a5a93a963b33545933b831ca77a89c2a2_cgraph.svg" width="543" height="164"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa58a543bbbb8570c4136811e16d2be11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa58a543bbbb8570c4136811e16d2be11">&sect;&nbsp;</a></span>TWID_DmaRead()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWID_DmaRead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *&#160;</td>
          <td class="paramname"><em>pTwiXdma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *&#160;</td>
          <td class="paramname"><em>pAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Asynchronously reads data from a slave on the TWI bus. </p>
<p>An optional callback function is triggered when the transfer is complete. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to a Twid instance. </td></tr>
    <tr><td class="paramname">address</td><td>TWI slave address. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional slave internal address. </td></tr>
    <tr><td class="paramname">isize</td><td>Internal address size in bytes. </td></tr>
    <tr><td class="paramname">pData</td><td>Data buffer for storing received bytes. </td></tr>
    <tr><td class="paramname">num</td><td>Number of bytes to read. </td></tr>
    <tr><td class="paramname">pAsync</td><td>Asynchronous transfer descriptor. </td></tr>
    <tr><td class="paramname">TWI_ID</td><td>TWI ID for TWI0, TWIHS1, TWIHS2. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the transfer has been started; otherwise returns a TWI error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_aa58a543bbbb8570c4136811e16d2be11_cgraph.svg" width="371" height="712"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a610f1dadb4046085412fe8c2817e16b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a610f1dadb4046085412fe8c2817e16b1">&sect;&nbsp;</a></span>TWID_DmaWrite()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWID_DmaWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_twihs_dma.xhtml">TwihsDma</a> *&#160;</td>
          <td class="paramname"><em>pTwiXdma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *&#160;</td>
          <td class="paramname"><em>pAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Asynchronously sends data to a slave on the TWI bus. </p>
<p>An optional callback function is invoked whenever the transfer is complete. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to a Twid instance. </td></tr>
    <tr><td class="paramname">address</td><td>TWI slave address. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional slave internal address. </td></tr>
    <tr><td class="paramname">isize</td><td>Number of internal address bytes. </td></tr>
    <tr><td class="paramname">pData</td><td>Data buffer for storing received bytes. </td></tr>
    <tr><td class="paramname">num</td><td>Data buffer to send. </td></tr>
    <tr><td class="paramname">pAsync</td><td>Asynchronous transfer descriptor. </td></tr>
    <tr><td class="paramname">TWI_ID</td><td>TWIHS ID for TWIHS0, TWIHS1, TWIHS2. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the transfer has been started; otherwise returns a TWI error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a610f1dadb4046085412fe8c2817e16b1_cgraph.svg" width="383" height="696"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1bc4824729ea7fce14e514036ee38490"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bc4824729ea7fce14e514036ee38490">&sect;&nbsp;</a></span>TWID_Handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWID_Handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *&#160;</td>
          <td class="paramname"><em>pTwid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Interrupt handler for a TWI peripheral. </p>
<p>Manages asynchronous transfer occurring on the bus. This function MUST be called by the interrupt service routine of the TWI peripheral if asynchronous read/write are needed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to a Twid instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a1bc4824729ea7fce14e514036ee38490_cgraph.svg" width="347" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3eb3de848851a9d5ae848efdd435d167"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3eb3de848851a9d5ae848efdd435d167">&sect;&nbsp;</a></span>TWID_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TWID_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *&#160;</td>
          <td class="paramname"><em>pTwid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_twihs.xhtml">Twihs</a> *&#160;</td>
          <td class="paramname"><em>pTwi</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a TWI driver instance, using the given TWI peripheral. </p>
<dl class="section note"><dt>Note</dt><dd>The peripheral must have been initialized properly before calling this function. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to the Twid instance to initialize. </td></tr>
    <tr><td class="paramname">pTwi</td><td>Pointer to the TWI peripheral to use. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a13f06b4cc25a29302d3c932e82136599"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13f06b4cc25a29302d3c932e82136599">&sect;&nbsp;</a></span>TWID_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWID_Read </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *&#160;</td>
          <td class="paramname"><em>pTwid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *&#160;</td>
          <td class="paramname"><em>pAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Asynchronously reads data from a slave on the TWI bus. </p>
<p>An optional callback function is triggered when the transfer is complete. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to a Twid instance. </td></tr>
    <tr><td class="paramname">address</td><td>TWI slave address. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional slave internal address. </td></tr>
    <tr><td class="paramname">isize</td><td>Internal address size in bytes. </td></tr>
    <tr><td class="paramname">pData</td><td>Data buffer for storing received bytes. </td></tr>
    <tr><td class="paramname">num</td><td>Number of bytes to read. </td></tr>
    <tr><td class="paramname">pAsync</td><td>Asynchronous transfer descriptor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the transfer has been started; otherwise returns a TWI error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a13f06b4cc25a29302d3c932e82136599_cgraph.svg" width="312" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a13f06b4cc25a29302d3c932e82136599_icgraph.svg" width="303" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a67c6f278372fcb213e7848929db89d3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c6f278372fcb213e7848929db89d3f">&sect;&nbsp;</a></span>TWID_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t TWID_Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#abede34758f65b083d99cc0f3558d2731">Twid</a> *&#160;</td>
          <td class="paramname"><em>pTwid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iaddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>isize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="twid_8h.xhtml#a84cb0e3a5d377fb4499517b7323e81b5">Async</a> *&#160;</td>
          <td class="paramname"><em>pAsync</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Asynchronously sends data to a slave on the TWI bus. </p>
<p>An optional callback function is invoked whenever the transfer is complete. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTwid</td><td>Pointer to a Twid instance. </td></tr>
    <tr><td class="paramname">address</td><td>TWI slave address. </td></tr>
    <tr><td class="paramname">iaddress</td><td>Optional slave internal address. </td></tr>
    <tr><td class="paramname">isize</td><td>Number of internal address bytes. </td></tr>
    <tr><td class="paramname">pData</td><td>Data buffer for storing received bytes. </td></tr>
    <tr><td class="paramname">num</td><td>Data buffer to send. </td></tr>
    <tr><td class="paramname">pAsync</td><td>Asynchronous transfer descriptor. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the transfer has been started; otherwise returns a TWI error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a67c6f278372fcb213e7848929db89d3f_cgraph.svg" width="327" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="twid_8h_a67c6f278372fcb213e7848929db89d3f_icgraph.svg" width="304" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
