<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/uart.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">uart.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="uart_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*                  Atmel Microcontroller Software Support                      */</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*                       SAM Software Package License                           */</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/* Copyright (c) 2015, Atmel Corporation                                        */</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/* All rights reserved.                                                         */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/* Redistribution and use in source and binary forms, with or without           */</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/* modification, are permitted provided that the following condition is met:    */</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/* - Redistributions of source code must retain the above copyright notice,     */</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/* this list of conditions and the disclaimer below.                            */</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/* Atmel&#39;s name may not be used to endorse or promote products derived from     */</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/* this software without specific prior written permission.                     */</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/*                                                                              */</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL &quot;AS IS&quot; AND ANY EXPRESS OR   */</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">/* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF */</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE   */</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,      */</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,  */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF    */</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">/* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING         */</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, */</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                           */</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">/* ---------------------------------------------------------------------------- */</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#ifndef UART_H</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#define UART_H</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">//         Global functions</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">//------------------------------------------------------------------------------</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#ac7edef0d8ae22231b638865c882db8a9">UART_Configure</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint32_t mode, uint32_t baudrate,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    uint32_t masterClock);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#a77a2772d898640ae4426f747ed18b3ad">UART_SetTransmitterEnabled</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t enabled);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#ab9b2807951dac51cbe4faeb7fd762222">UART_SetReceiverEnabled</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t enabled);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#a3c87a55c11e78561fcc351c0ecc6489c">UART_PutChar</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t c);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;uint32_t <a class="code" href="uart_8h.xhtml#a00e60c418f3031062060215af67aa3e1">UART_IsRxReady</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;uint8_t <a class="code" href="uart_8h.xhtml#a8003de31149ba9e3e57eada21fec5fbc">UART_GetChar</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;uint32_t <a class="code" href="uart_8h.xhtml#ac8f0a1c0423306d023ba97302f12a8bf">UART_GetStatus</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#ab90ae0999c45068283a55c0e7ae04b84">UART_EnableIt</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint32_t mode);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#a2496899a7954170b4142ff10e6c9f9a5">UART_DisableIt</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint32_t mode);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;uint32_t <a class="code" href="uart_8h.xhtml#a3536ff32234ca4c6d073bda3fa4ece1d">UART_GetItMask</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#a9b16a8d3558aa9934123f30725a0c5ea">UART_SendBuffer</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t *pBuffer, uint32_t BuffLen);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#aca2278de164451574247f8289130d442">UART_ReceiveBuffer</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t *pBuffer, uint32_t BuffLen);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keywordtype">void</span> <a class="code" href="uart_8h.xhtml#af4aad27d6130d05cea25419d2dadd049">UART_CompareConfig</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart, uint8_t Val1, uint8_t Val2);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;uint32_t <a class="code" href="uart_8h.xhtml#a8b9e717f56d5d80e9592e8fe32579774">UART_IsTxReady</a>(<a class="code" href="struct_uart.xhtml">Uart</a> *uart);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#endif //#ifndef UART_H</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="ttc" id="uart_8h_xhtml_af4aad27d6130d05cea25419d2dadd049"><div class="ttname"><a href="uart_8h.xhtml#af4aad27d6130d05cea25419d2dadd049">UART_CompareConfig</a></div><div class="ttdeci">void UART_CompareConfig(Uart *uart, uint8_t Val1, uint8_t Val2)</div><div class="ttdef"><b>Definition:</b> uart.c:229</div></div>
<div class="ttc" id="uart_8h_xhtml_ac7edef0d8ae22231b638865c882db8a9"><div class="ttname"><a href="uart_8h.xhtml#ac7edef0d8ae22231b638865c882db8a9">UART_Configure</a></div><div class="ttdeci">void UART_Configure(Uart *uart, uint32_t mode, uint32_t baudrate, uint32_t masterClock)</div><div class="ttdoc">Configures an UART peripheral with the specified parameters. </div><div class="ttdef"><b>Definition:</b> uart.c:58</div></div>
<div class="ttc" id="uart_8h_xhtml_ac8f0a1c0423306d023ba97302f12a8bf"><div class="ttname"><a href="uart_8h.xhtml#ac8f0a1c0423306d023ba97302f12a8bf">UART_GetStatus</a></div><div class="ttdeci">uint32_t UART_GetStatus(Uart *uart)</div><div class="ttdoc">Get present status. </div><div class="ttdef"><b>Definition:</b> uart.c:174</div></div>
<div class="ttc" id="uart_8h_xhtml_a9b16a8d3558aa9934123f30725a0c5ea"><div class="ttname"><a href="uart_8h.xhtml#a9b16a8d3558aa9934123f30725a0c5ea">UART_SendBuffer</a></div><div class="ttdeci">void UART_SendBuffer(Uart *uart, uint8_t *pBuffer, uint32_t BuffLen)</div><div class="ttdef"><b>Definition:</b> uart.c:208</div></div>
<div class="ttc" id="uart_8h_xhtml_a00e60c418f3031062060215af67aa3e1"><div class="ttname"><a href="uart_8h.xhtml#a00e60c418f3031062060215af67aa3e1">UART_IsRxReady</a></div><div class="ttdeci">uint32_t UART_IsRxReady(Uart *uart)</div><div class="ttdoc">Return 1 if a character can be read in UART. </div><div class="ttdef"><b>Definition:</b> uart.c:113</div></div>
<div class="ttc" id="uart_8h_xhtml_aca2278de164451574247f8289130d442"><div class="ttname"><a href="uart_8h.xhtml#aca2278de164451574247f8289130d442">UART_ReceiveBuffer</a></div><div class="ttdeci">void UART_ReceiveBuffer(Uart *uart, uint8_t *pBuffer, uint32_t BuffLen)</div><div class="ttdef"><b>Definition:</b> uart.c:219</div></div>
<div class="ttc" id="uart_8h_xhtml_a3c87a55c11e78561fcc351c0ecc6489c"><div class="ttname"><a href="uart_8h.xhtml#a3c87a55c11e78561fcc351c0ecc6489c">UART_PutChar</a></div><div class="ttdeci">void UART_PutChar(Uart *uart, uint8_t c)</div><div class="ttdoc">Sends one packet of data through the specified UART peripheral. </div><div class="ttdef"><b>Definition:</b> uart.c:158</div></div>
<div class="ttc" id="uart_8h_xhtml_a2496899a7954170b4142ff10e6c9f9a5"><div class="ttname"><a href="uart_8h.xhtml#a2496899a7954170b4142ff10e6c9f9a5">UART_DisableIt</a></div><div class="ttdeci">void UART_DisableIt(Uart *uart, uint32_t mode)</div><div class="ttdoc">Disable interrupt. </div><div class="ttdef"><b>Definition:</b> uart.c:194</div></div>
<div class="ttc" id="struct_uart_xhtml"><div class="ttname"><a href="struct_uart.xhtml">Uart</a></div><div class="ttdoc">Uart hardware registers. </div><div class="ttdef"><b>Definition:</b> component_uart.h:41</div></div>
<div class="ttc" id="uart_8h_xhtml_a8003de31149ba9e3e57eada21fec5fbc"><div class="ttname"><a href="uart_8h.xhtml#a8003de31149ba9e3e57eada21fec5fbc">UART_GetChar</a></div><div class="ttdeci">uint8_t UART_GetChar(Uart *uart)</div><div class="ttdoc">Reads and returns a character from the UART. </div><div class="ttdef"><b>Definition:</b> uart.c:125</div></div>
<div class="ttc" id="uart_8h_xhtml_a3536ff32234ca4c6d073bda3fa4ece1d"><div class="ttname"><a href="uart_8h.xhtml#a3536ff32234ca4c6d073bda3fa4ece1d">UART_GetItMask</a></div><div class="ttdeci">uint32_t UART_GetItMask(Uart *uart)</div><div class="ttdoc">Return interrupt mask. </div><div class="ttdef"><b>Definition:</b> uart.c:203</div></div>
<div class="ttc" id="uart_8h_xhtml_a8b9e717f56d5d80e9592e8fe32579774"><div class="ttname"><a href="uart_8h.xhtml#a8b9e717f56d5d80e9592e8fe32579774">UART_IsTxReady</a></div><div class="ttdeci">uint32_t UART_IsTxReady(Uart *uart)</div><div class="ttdoc">Return 1 if a character can be send to UART. </div><div class="ttdef"><b>Definition:</b> uart.c:136</div></div>
<div class="ttc" id="uart_8h_xhtml_ab9b2807951dac51cbe4faeb7fd762222"><div class="ttname"><a href="uart_8h.xhtml#ab9b2807951dac51cbe4faeb7fd762222">UART_SetReceiverEnabled</a></div><div class="ttdeci">void UART_SetReceiverEnabled(Uart *uart, uint8_t enabled)</div><div class="ttdoc">Enables or disables the receiver of an UART peripheral. </div><div class="ttdef"><b>Definition:</b> uart.c:101</div></div>
<div class="ttc" id="uart_8h_xhtml_a77a2772d898640ae4426f747ed18b3ad"><div class="ttname"><a href="uart_8h.xhtml#a77a2772d898640ae4426f747ed18b3ad">UART_SetTransmitterEnabled</a></div><div class="ttdeci">void UART_SetTransmitterEnabled(Uart *uart, uint8_t enabled)</div><div class="ttdoc">Enables or disables the transmitter of an UART peripheral. </div><div class="ttdef"><b>Definition:</b> uart.c:86</div></div>
<div class="ttc" id="uart_8h_xhtml_ab90ae0999c45068283a55c0e7ae04b84"><div class="ttname"><a href="uart_8h.xhtml#ab90ae0999c45068283a55c0e7ae04b84">UART_EnableIt</a></div><div class="ttdeci">void UART_EnableIt(Uart *uart, uint32_t mode)</div><div class="ttdoc">Enable interrupt. </div><div class="ttdef"><b>Definition:</b> uart.c:184</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
