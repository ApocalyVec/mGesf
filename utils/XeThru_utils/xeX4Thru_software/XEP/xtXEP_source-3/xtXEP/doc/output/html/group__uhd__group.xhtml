<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: USB Host Driver (UHD)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">USB Host Driver (UHD)<div class="ingroups"><a class="el" href="group__usb__host__group.xhtml">USB Stack Host</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>The UHD driver provides a low-level abstraction of the host controller hardware.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for USB Host Driver (UHD):</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structuhd__ctrl__request__t.xhtml">uhd_ctrl_request_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure to store the high level setup request.  <a href="structuhd__ctrl__request__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_u_s_b_h___pipe_job__t.xhtml">USBH_PipeJob_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure definition to store registered jobs on a pipe.  <a href="struct_u_s_b_h___pipe_job__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga1f9327e5240f0665f459d242f2066fc1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga1f9327e5240f0665f459d242f2066fc1">UHD_ISOCHRONOUS_NB_BANK</a>&#160;&#160;&#160;2</td></tr>
<tr class="separator:ga1f9327e5240f0665f459d242f2066fc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9c1f091cdf089e6c3607ff5f6dedadc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gae9c1f091cdf089e6c3607ff5f6dedadc">UHD_BULK_NB_BANK</a>&#160;&#160;&#160;2</td></tr>
<tr class="separator:gae9c1f091cdf089e6c3607ff5f6dedadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ee68a7bae20173b77003f961dacc00a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga8ee68a7bae20173b77003f961dacc00a">UHD_INTERRUPT_NB_BANK</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga8ee68a7bae20173b77003f961dacc00a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gaadd3e901fd924e79699319a721b9bde6"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaadd3e901fd924e79699319a721b9bde6">uhd_callback_reset_t</a>) (void)</td></tr>
<tr class="memdesc:gaadd3e901fd924e79699319a721b9bde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of reset callback function type.  <a href="#gaadd3e901fd924e79699319a721b9bde6">More...</a><br /></td></tr>
<tr class="separator:gaadd3e901fd924e79699319a721b9bde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf19b51871fc55b8c5d78305d38a88425"><td class="memItemLeft" align="right" valign="top">typedef bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaf19b51871fc55b8c5d78305d38a88425">uhd_callback_setup_run_t</a>) (uint8_t add, uint8_t **payload, uint16_t *payload_size)</td></tr>
<tr class="memdesc:gaf19b51871fc55b8c5d78305d38a88425"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data setup transfer callback function type.  <a href="#gaf19b51871fc55b8c5d78305d38a88425">More...</a><br /></td></tr>
<tr class="separator:gaf19b51871fc55b8c5d78305d38a88425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ad6a2c3e931f6c7fea447cddae5fda4"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga5ad6a2c3e931f6c7fea447cddae5fda4">uhd_callback_setup_end_t</a>) (uint8_t add, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status, uint16_t payload_trans)</td></tr>
<tr class="memdesc:ga5ad6a2c3e931f6c7fea447cddae5fda4"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of setup callback function type.  <a href="#ga5ad6a2c3e931f6c7fea447cddae5fda4">More...</a><br /></td></tr>
<tr class="separator:ga5ad6a2c3e931f6c7fea447cddae5fda4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f26a6754e1cab77e20f2afec9c7c51f"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga2f26a6754e1cab77e20f2afec9c7c51f">uhd_callback_trans_t</a>) (uint8_t add, uint8_t ep, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status, uint32_t nb_transfered)</td></tr>
<tr class="memdesc:ga2f26a6754e1cab77e20f2afec9c7c51f"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of transfer callback function type.  <a href="#ga2f26a6754e1cab77e20f2afec9c7c51f">More...</a><br /></td></tr>
<tr class="separator:ga2f26a6754e1cab77e20f2afec9c7c51f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga3d1a10bd9f6a35bd4db20ced8f72474a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a> { <a class="el" href="group__uhd__group.xhtml#gga3d1a10bd9f6a35bd4db20ced8f72474aae2cb230200e5440916daac7c14fb85a5">UHD_SPEED_LOW</a> = 0, 
<a class="el" href="group__uhd__group.xhtml#gga3d1a10bd9f6a35bd4db20ced8f72474aa508b48b3c7be9d7573b83acedfc6f294">UHD_SPEED_FULL</a> = 1, 
<a class="el" href="group__uhd__group.xhtml#gga3d1a10bd9f6a35bd4db20ced8f72474aaa99e0938fe0c64d2a212fba1b2bdbddd">UHD_SPEED_HIGH</a> = 2
 }<tr class="memdesc:ga3d1a10bd9f6a35bd4db20ced8f72474a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Device speed.  <a href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga3d1a10bd9f6a35bd4db20ced8f72474a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga19c67cc9d097b54049dbc7c12119eb83"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> { <br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a51f2cf9245d0e0d3e7b421c9e6b301b8">UHD_TRANS_NOERROR</a> = 0, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a43222d17d7126cc526f3e96b9e3cb26e">UHD_TRANS_DISCONNECT</a>, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a869890b0450c2fc6eff8d2cdac71551f">UHD_TRANS_CRC</a>, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83adfcb327cec42c755aaeaa3af47f61e44">UHD_TRANS_DT_MISMATCH</a>, 
<br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a5743eea90e7ad818b4c29ff54cfc67a9">UHD_TRANS_STALL</a>, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a917bd794eebf5057b6589bcc02669eb6">UHD_TRANS_NOTRESPONDING</a>, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83aa869c9043392018ac04ba3dd145a0552">UHD_TRANS_PIDFAILURE</a>, 
<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83a5c7e1f0526fb0fbc78231246e3cc3d56">UHD_TRANS_TIMEOUT</a>, 
<br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#gga19c67cc9d097b54049dbc7c12119eb83ad01b0da250552801bd801152b2a8be92">UHD_TRANS_ABORTED</a>
<br />
 }<tr class="memdesc:ga19c67cc9d097b54049dbc7c12119eb83"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> transfer status The status field is updated after each transaction attempt, whether successful or not.  <a href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga19c67cc9d097b54049dbc7c12119eb83"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga12b21dabf5465ef92208084d4f336186"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga12b21dabf5465ef92208084d4f336186">USBH_HAL_ManageSof</a> (void)</td></tr>
<tr class="separator:ga12b21dabf5465ef92208084d4f336186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga85b92a3f7bc4357fae366d2f7a1c595b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga85b92a3f7bc4357fae366d2f7a1c595b">USBH_HAL_ControlInterrupt</a> (void)</td></tr>
<tr class="separator:ga85b92a3f7bc4357fae366d2f7a1c595b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ddb6a33201674d513c4ad9c5de79e93"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga1ddb6a33201674d513c4ad9c5de79e93">USBH_HAL_PhaseControlSetup</a> (void)</td></tr>
<tr class="separator:ga1ddb6a33201674d513c4ad9c5de79e93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1f5aedd5277d055c4c23a9a185fb7e6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gad1f5aedd5277d055c4c23a9a185fb7e6">USBH_HAL_PhaseDataInStart</a> (void)</td></tr>
<tr class="separator:gad1f5aedd5277d055c4c23a9a185fb7e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc3093c163c3229d9343cb5f2f6ef8dd"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gadc3093c163c3229d9343cb5f2f6ef8dd">USBH_HAL_PhaseDataIn</a> (void)</td></tr>
<tr class="separator:gadc3093c163c3229d9343cb5f2f6ef8dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fcd1bf925a9ad0692672d08f3da3427"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga9fcd1bf925a9ad0692672d08f3da3427">USBH_HAL_InZLP</a> (void)</td></tr>
<tr class="separator:ga9fcd1bf925a9ad0692672d08f3da3427"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74ceb21eb2c7ef68d5fe6f02ea7beb58"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga74ceb21eb2c7ef68d5fe6f02ea7beb58">USBH_HAL_PhaseDataOut</a> (void)</td></tr>
<tr class="separator:ga74ceb21eb2c7ef68d5fe6f02ea7beb58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d07dff59bfb3f4de2343ae894fdac03"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga5d07dff59bfb3f4de2343ae894fdac03">USBH_HAL_OutZLP</a> (void)</td></tr>
<tr class="separator:ga5d07dff59bfb3f4de2343ae894fdac03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb1043e05189c04ded956208eea3e2b5"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gafb1043e05189c04ded956208eea3e2b5">USBH_HAL_ControlReqEnd</a> (<a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status)</td></tr>
<tr class="separator:gafb1043e05189c04ded956208eea3e2b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35a73750c6a0ec35950ed24ec89b1cac"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga35a73750c6a0ec35950ed24ec89b1cac">USBH_HAL_GetPipeError</a> (uint8_t pipe)</td></tr>
<tr class="separator:ga35a73750c6a0ec35950ed24ec89b1cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38980ecff58f484bbb915b6efe6136b1"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga38980ecff58f484bbb915b6efe6136b1">USBH_HAL_GetPipe</a> (uint8_t Addr, uint8_t bEndpoint)</td></tr>
<tr class="separator:ga38980ecff58f484bbb915b6efe6136b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39a6506d44760a518b49d004574bc9c9"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga39a6506d44760a518b49d004574bc9c9">USBH_HAL_PipeOutReady</a> (uint8_t pipe)</td></tr>
<tr class="separator:ga39a6506d44760a518b49d004574bc9c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafba473f1b723cdb9500b91ec7fad0207"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gafba473f1b723cdb9500b91ec7fad0207">USBH_HAL_PipeInReceived</a> (uint8_t pipe)</td></tr>
<tr class="separator:gafba473f1b723cdb9500b91ec7fad0207"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa29c0122543b5f5faf600eee68474615"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaa29c0122543b5f5faf600eee68474615">USBH_HAL_PipeInterrupt</a> (uint8_t pipe)</td></tr>
<tr class="separator:gaa29c0122543b5f5faf600eee68474615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba849a4ecb7f5b837541fbccf850da59"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaba849a4ecb7f5b837541fbccf850da59">USBH_HAL_PipeAbort</a> (uint8_t pipe, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status)</td></tr>
<tr class="separator:gaba849a4ecb7f5b837541fbccf850da59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8e9ff0a2565377088b95ef2b31787de"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaf8e9ff0a2565377088b95ef2b31787de">USBH_HAL_PipeXfrEnd</a> (uint8_t pipe, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status)</td></tr>
<tr class="separator:gaf8e9ff0a2565377088b95ef2b31787de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafcd12a00544aac7645deb694ec611e7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gafcd12a00544aac7645deb694ec611e7a">USBHS_Handler</a> (void)</td></tr>
<tr class="memdesc:gafcd12a00544aac7645deb694ec611e7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">USBD (UDP) interrupt handler Manages device resume, suspend, end of bus reset.  <a href="#gafcd12a00544aac7645deb694ec611e7a">More...</a><br /></td></tr>
<tr class="separator:gafcd12a00544aac7645deb694ec611e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a715175934fb8bf3c918f04ef0dae2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga3a715175934fb8bf3c918f04ef0dae2b">USBH_HAL_EnableUsbHost</a> (void)</td></tr>
<tr class="memdesc:ga3a715175934fb8bf3c918f04ef0dae2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the USB host mode Start the ID pin management if the ID pin is available.  <a href="#ga3a715175934fb8bf3c918f04ef0dae2b">More...</a><br /></td></tr>
<tr class="separator:ga3a715175934fb8bf3c918f04ef0dae2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b45418a37c193dbcff7ef17040cfa30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga9b45418a37c193dbcff7ef17040cfa30">USBH_HAL_DisableUsb</a> (bool b_id_stop)</td></tr>
<tr class="memdesc:ga9b45418a37c193dbcff7ef17040cfa30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the USB host mode.  <a href="#ga9b45418a37c193dbcff7ef17040cfa30">More...</a><br /></td></tr>
<tr class="separator:ga9b45418a37c193dbcff7ef17040cfa30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d1a91042ba3675ea7495dce99f1871b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga6d1a91042ba3675ea7495dce99f1871b">USBH_HAL_GetSpeed</a> (void)</td></tr>
<tr class="memdesc:ga6d1a91042ba3675ea7495dce99f1871b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the speed of connected device.  <a href="#ga6d1a91042ba3675ea7495dce99f1871b">More...</a><br /></td></tr>
<tr class="separator:ga6d1a91042ba3675ea7495dce99f1871b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee8af62530aefb6025ad2391361e8895"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaee8af62530aefb6025ad2391361e8895">USBH_HAL_GetFrameNum</a> (void)</td></tr>
<tr class="memdesc:gaee8af62530aefb6025ad2391361e8895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current Start Of Frame (SOF) number.  <a href="#gaee8af62530aefb6025ad2391361e8895">More...</a><br /></td></tr>
<tr class="separator:gaee8af62530aefb6025ad2391361e8895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae32ed29203116712f786dbc913d96327"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gae32ed29203116712f786dbc913d96327">USBH_HAL_GetMicroFrameNum</a> (void)</td></tr>
<tr class="memdesc:gae32ed29203116712f786dbc913d96327"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current micro start of frame number.  <a href="#gae32ed29203116712f786dbc913d96327">More...</a><br /></td></tr>
<tr class="separator:gae32ed29203116712f786dbc913d96327"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cedbbab25d378fecdae30a07b4b811f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga9cedbbab25d378fecdae30a07b4b811f">USBH_HAL_Reset</a> (<a class="el" href="group__uhd__group.xhtml#gaadd3e901fd924e79699319a721b9bde6">uhd_callback_reset_t</a> callback)</td></tr>
<tr class="memdesc:ga9cedbbab25d378fecdae30a07b4b811f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the Reset state on the USB line.  <a href="#ga9cedbbab25d378fecdae30a07b4b811f">More...</a><br /></td></tr>
<tr class="separator:ga9cedbbab25d378fecdae30a07b4b811f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga108d6958efd3c7337897ae40963e3f58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga108d6958efd3c7337897ae40963e3f58">USBH_HAL_Suspend</a> (void)</td></tr>
<tr class="memdesc:ga108d6958efd3c7337897ae40963e3f58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the suspend state on the USB line.  <a href="#ga108d6958efd3c7337897ae40963e3f58">More...</a><br /></td></tr>
<tr class="separator:ga108d6958efd3c7337897ae40963e3f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45fc0843344e751529a0c4f113aa3d91"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga45fc0843344e751529a0c4f113aa3d91">USBH_HAL_IsSuspended</a> (void)</td></tr>
<tr class="memdesc:ga45fc0843344e751529a0c4f113aa3d91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if the suspend state is enabled on the USB line.  <a href="#ga45fc0843344e751529a0c4f113aa3d91">More...</a><br /></td></tr>
<tr class="separator:ga45fc0843344e751529a0c4f113aa3d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9fdf87a0d813bf3717f1440e60c41d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gac9fdf87a0d813bf3717f1440e60c41d8">USBH_HAL_Resume</a> (void)</td></tr>
<tr class="memdesc:gac9fdf87a0d813bf3717f1440e60c41d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the IDLE state on the USB line.  <a href="#gac9fdf87a0d813bf3717f1440e60c41d8">More...</a><br /></td></tr>
<tr class="separator:gac9fdf87a0d813bf3717f1440e60c41d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga11038bdbac3a23c70a7b7f5abcecc8ba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga11038bdbac3a23c70a7b7f5abcecc8ba">USBH_HAL_SetupReq</a> (uint8_t add, <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *req, uint8_t *payload, uint16_t payload_size, <a class="el" href="group__uhd__group.xhtml#gaf19b51871fc55b8c5d78305d38a88425">uhd_callback_setup_run_t</a> callback_run, <a class="el" href="group__uhd__group.xhtml#ga5ad6a2c3e931f6c7fea447cddae5fda4">uhd_callback_setup_end_t</a> callback_end)</td></tr>
<tr class="memdesc:ga11038bdbac3a23c70a7b7f5abcecc8ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a setup request in the control endpoint setup queue.  <a href="#ga11038bdbac3a23c70a7b7f5abcecc8ba">More...</a><br /></td></tr>
<tr class="separator:ga11038bdbac3a23c70a7b7f5abcecc8ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga170d8082df4bb77da27db090827145ec"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga170d8082df4bb77da27db090827145ec">USBH_HAL_DelayedSuspend</a> (void)</td></tr>
<tr class="separator:ga170d8082df4bb77da27db090827145ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga879e4d4476c528ed4cfac77d41bb1a06"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga879e4d4476c528ed4cfac77d41bb1a06">USBH_HAL_DelayedResume</a> (void)</td></tr>
<tr class="separator:ga879e4d4476c528ed4cfac77d41bb1a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e9c1f691d695f4c878712831d38e9c0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga0e9c1f691d695f4c878712831d38e9c0">USBH_HAL_ControlTimeout</a> (void)</td></tr>
<tr class="separator:ga0e9c1f691d695f4c878712831d38e9c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee441a294b489cd2d9861de8a0139d31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaee441a294b489cd2d9861de8a0139d31">USBHS_SCB_CleanDCache_by_Addr</a> (uint32_t *addr, int32_t dsize)</td></tr>
<tr class="separator:gaee441a294b489cd2d9861de8a0139d31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27e6e1c865c634f55e0ac75a6b3a81b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga27e6e1c865c634f55e0ac75a6b3a81b4">USBHS_SCB_InvalidateDCache_by_Addr</a> (uint32_t *addr, int32_t dsize)</td></tr>
<tr class="separator:ga27e6e1c865c634f55e0ac75a6b3a81b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga7659557bf43afa6da0355062df9e5f0e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__uhd__group.xhtml#gaadd3e901fd924e79699319a721b9bde6">uhd_callback_reset_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga7659557bf43afa6da0355062df9e5f0e">uhd_reset_callback</a> = NULL</td></tr>
<tr class="memdesc:ga7659557bf43afa6da0355062df9e5f0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store the callback to be call at the end of reset signal.  <a href="#ga7659557bf43afa6da0355062df9e5f0e">More...</a><br /></td></tr>
<tr class="separator:ga7659557bf43afa6da0355062df9e5f0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga136925222d060e308024764c3c34a114"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="pio_8h.xhtml#a5435e02d3c6181a41089b9abc6ce4aee">Pin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga136925222d060e308024764c3c34a114">USB_HOST</a> [] = {<a class="el" href="_r_e_m_o_v_e__board__e70__xpld_8h.xhtml#aa08f1878c2d154a25b00ce239c441374">PINS_VBUS_EN</a>}</td></tr>
<tr class="separator:ga136925222d060e308024764c3c34a114"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Power management</h2></td></tr>
<tr class="memitem:ga763c7a9a339aa2cb2b670d6446f37147"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga763c7a9a339aa2cb2b670d6446f37147">uhd_uotghs_state_enum</a> { <br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147ab008bc0e0626bc0c8f6df3f5e6276dc1">UHD_STATE_OFF</a> = 0, 
<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147a72afa750cb49f78017f0243e54e89252">UHD_STATE_WAIT_ID_HOST</a> = 1, 
<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147af9f340c3b281f9d14944dbe44654b9b6">UHD_STATE_NO_VBUS</a> = 2, 
<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147a051452b77a8c89240d7c23a4c6946317">UHD_STATE_DISCONNECT</a> = 3, 
<br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147a6f3dad2adb0c3729086526c0d0ebcdc3">UHD_STATE_SUSPEND</a> = 4, 
<a class="el" href="group__uhd__group.xhtml#gga763c7a9a339aa2cb2b670d6446f37147af87eee94eca0a6c769217489a3c4772b">UHD_STATE_IDLE</a> = 5
<br />
 }<tr class="memdesc:ga763c7a9a339aa2cb2b670d6446f37147"><td class="mdescLeft">&#160;</td><td class="mdescRight">States of USBHS interface.  <a href="group__uhd__group.xhtml#ga763c7a9a339aa2cb2b670d6446f37147">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ga763c7a9a339aa2cb2b670d6446f37147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d9360ec239feb3ede5e4a0223d3c6e2"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga5d9360ec239feb3ede5e4a0223d3c6e2">uhd_sleep_mode</a> (enum <a class="el" href="group__uhd__group.xhtml#ga763c7a9a339aa2cb2b670d6446f37147">uhd_uotghs_state_enum</a> new_state)</td></tr>
<tr class="memdesc:ga5d9360ec239feb3ede5e4a0223d3c6e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manages the sleep mode following the USBHS state.  <a href="#ga5d9360ec239feb3ede5e4a0223d3c6e2">More...</a><br /></td></tr>
<tr class="separator:ga5d9360ec239feb3ede5e4a0223d3c6e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Control endpoint low level management routine.</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpc60f904f933dd5c177261b92bc2abc62"></a>This function performs control endpoint management.</p>
<p>It handles the SETUP/DATA/HANDSHAKE phases of a control transaction. </p>
</td></tr>
<tr class="memitem:gab5c14d3e2e40e55761ffe45496ae5427"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gab5c14d3e2e40e55761ffe45496ae5427">uhd_ctrl_request_phase_t</a> { <br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#ggab5c14d3e2e40e55761ffe45496ae5427a4d58c9d6d4a100fafb7a2c99304ef274">UHD_CTRL_REQ_PHASE_SETUP</a> = 0, 
<a class="el" href="group__uhd__group.xhtml#ggab5c14d3e2e40e55761ffe45496ae5427aab15b28a6a920b07a0cc82de1d0c414a">UHD_CTRL_REQ_PHASE_DATA_OUT</a> = 1, 
<a class="el" href="group__uhd__group.xhtml#ggab5c14d3e2e40e55761ffe45496ae5427adad9d075f8a169516efd6b29961612a5">UHD_CTRL_REQ_PHASE_DATA_IN</a> = 2, 
<a class="el" href="group__uhd__group.xhtml#ggab5c14d3e2e40e55761ffe45496ae5427acb0a9b7a084121f4ff48cd53ad76842a">UHD_CTRL_REQ_PHASE_ZLP_IN</a> = 3, 
<br />
&#160;&#160;<a class="el" href="group__uhd__group.xhtml#ggab5c14d3e2e40e55761ffe45496ae5427a62b5126d713b2ed56894a6899fda885e">UHD_CTRL_REQ_PHASE_ZLP_OUT</a> = 4
<br />
 }<tr class="memdesc:gab5c14d3e2e40e55761ffe45496ae5427"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit definitions to store setup request state machine.  <a href="group__uhd__group.xhtml#gab5c14d3e2e40e55761ffe45496ae5427">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:gab5c14d3e2e40e55761ffe45496ae5427"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2628647770aba23602cd668c75f30cd"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structuhd__ctrl__request__t.xhtml">uhd_ctrl_request_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gad2628647770aba23602cd668c75f30cd">uhd_ctrl_request_first</a></td></tr>
<tr class="memdesc:gad2628647770aba23602cd668c75f30cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Entry points of setup request list.  <a href="#gad2628647770aba23602cd668c75f30cd">More...</a><br /></td></tr>
<tr class="separator:gad2628647770aba23602cd668c75f30cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa27beade335f1ccfdd230cd88c5d1e7a"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structuhd__ctrl__request__t.xhtml">uhd_ctrl_request_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaa27beade335f1ccfdd230cd88c5d1e7a">uhd_ctrl_request_last</a></td></tr>
<tr class="separator:gaa27beade335f1ccfdd230cd88c5d1e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49ee25dd706f7dedc0598ba7f5575353"><td class="memItemLeft" align="right" valign="top">volatile uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga49ee25dd706f7dedc0598ba7f5575353">uhd_ctrl_request_timeout</a></td></tr>
<tr class="memdesc:ga49ee25dd706f7dedc0598ba7f5575353"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remaining time for on-going setup request (No request on-going if equal 0)  <a href="#ga49ee25dd706f7dedc0598ba7f5575353">More...</a><br /></td></tr>
<tr class="separator:ga49ee25dd706f7dedc0598ba7f5575353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga213de2c8a6616c71912577930df2fff0"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga213de2c8a6616c71912577930df2fff0">uhd_ctrl_nb_trans</a></td></tr>
<tr class="memdesc:ga213de2c8a6616c71912577930df2fff0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of transfered byte on DATA phase of current setup request.  <a href="#ga213de2c8a6616c71912577930df2fff0">More...</a><br /></td></tr>
<tr class="separator:ga213de2c8a6616c71912577930df2fff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6cef8545effc6137e7216ca2507d950"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gac6cef8545effc6137e7216ca2507d950">uhd_b_suspend_requested</a></td></tr>
<tr class="memdesc:gac6cef8545effc6137e7216ca2507d950"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag to delay a suspend request after all on-going setup request.  <a href="#gac6cef8545effc6137e7216ca2507d950">More...</a><br /></td></tr>
<tr class="separator:gac6cef8545effc6137e7216ca2507d950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga07b29cb6c467896f4a7b925c74a54e2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__uhd__group.xhtml#gab5c14d3e2e40e55761ffe45496ae5427">uhd_ctrl_request_phase_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga07b29cb6c467896f4a7b925c74a54e2c">uhd_ctrl_request_phase</a></td></tr>
<tr class="separator:ga07b29cb6c467896f4a7b925c74a54e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Management of bulk/interrupt/isochronous endpoints</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpeb26be1d47656a473f2b25d5d9510dc8"></a>The UHD manages the data transfer on endpoints:</p>
<ul>
<li>Start data transfer on endpoint with USB DMA</li>
<li>Send a ZLP packet if requested</li>
<li>Call registered callback to signal end of transfer The transfer abort and stall feature are supported. </li>
</ul>
</td></tr>
<tr class="memitem:gabc762b239541d9a2259d92e0df5ddb18"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="struct_u_s_b_h___pipe_job__t.xhtml">USBH_PipeJob_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gabc762b239541d9a2259d92e0df5ddb18">uhd_pipe_job</a> [<a class="el" href="usbhs_8h.xhtml#a6095628336ad1cdd9336b4c1f5baef35">USBHS_EPT_NUM</a> - 1]</td></tr>
<tr class="memdesc:gabc762b239541d9a2259d92e0df5ddb18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Array to register a job on bulk/interrupt/isochronous endpoint.  <a href="#gabc762b239541d9a2259d92e0df5ddb18">More...</a><br /></td></tr>
<tr class="separator:gabc762b239541d9a2259d92e0df5ddb18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga621f8ed0c74e1d6cd789dbc64c6722cf"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga621f8ed0c74e1d6cd789dbc64c6722cf">uhd_suspend_start</a></td></tr>
<tr class="memdesc:ga621f8ed0c74e1d6cd789dbc64c6722cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variables to manage the suspend/resume sequence.  <a href="#ga621f8ed0c74e1d6cd789dbc64c6722cf">More...</a><br /></td></tr>
<tr class="separator:ga621f8ed0c74e1d6cd789dbc64c6722cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41de1d3b60d8d03b81b44bb616abec54"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga41de1d3b60d8d03b81b44bb616abec54">uhd_resume_start</a></td></tr>
<tr class="separator:ga41de1d3b60d8d03b81b44bb616abec54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga772de96060be737f41d388ffcdc23ddd"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga772de96060be737f41d388ffcdc23ddd">uhd_pipes_unfreeze</a></td></tr>
<tr class="separator:ga772de96060be737f41d388ffcdc23ddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Endpoint Management</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp2079b64d60bb0a4d375fcfbbc32aa9e1"></a>The following functions allow drivers to create and remove endpoints, as well as set, clear and query their "halted" and "wedged" states. </p>
</td></tr>
<tr class="memitem:gad9e15307f67bf17a172ce88dc52ff6a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gad9e15307f67bf17a172ce88dc52ff6a3">USBH_HAL_ConfigureControlPipe</a> (uint8_t add, uint16_t ep_size)</td></tr>
<tr class="memdesc:gad9e15307f67bf17a172ce88dc52ff6a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures and enables a control endpoint 0.  <a href="#gad9e15307f67bf17a172ce88dc52ff6a3">More...</a><br /></td></tr>
<tr class="separator:gad9e15307f67bf17a172ce88dc52ff6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8da03709234cba062389fcaee2c62f8b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga8da03709234cba062389fcaee2c62f8b">USBH_HAL_ConfigurePipe</a> (uint8_t add, <a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *ep_desc)</td></tr>
<tr class="memdesc:ga8da03709234cba062389fcaee2c62f8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures and enables an endpoint.  <a href="#ga8da03709234cba062389fcaee2c62f8b">More...</a><br /></td></tr>
<tr class="separator:ga8da03709234cba062389fcaee2c62f8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga83779ae5393f2318b1eb0856f583b637"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga83779ae5393f2318b1eb0856f583b637">USBH_HAL_FreePipe</a> (uint8_t add, uint8_t endp)</td></tr>
<tr class="memdesc:ga83779ae5393f2318b1eb0856f583b637"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables an endpoint or all endpoint of a device.  <a href="#ga83779ae5393f2318b1eb0856f583b637">More...</a><br /></td></tr>
<tr class="separator:ga83779ae5393f2318b1eb0856f583b637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d4a9f98194cb255b2fcb6cdf8d83fb8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga1d4a9f98194cb255b2fcb6cdf8d83fb8">USBH_HAL_RunEndpoint</a> (uint8_t add, uint8_t endp, bool b_shortpacket, uint8_t *buf, uint32_t buf_size, uint16_t timeout, <a class="el" href="group__uhd__group.xhtml#ga2f26a6754e1cab77e20f2afec9c7c51f">uhd_callback_trans_t</a> callback)</td></tr>
<tr class="memdesc:ga1d4a9f98194cb255b2fcb6cdf8d83fb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to receive or send data on an endpoint.  <a href="#ga1d4a9f98194cb255b2fcb6cdf8d83fb8">More...</a><br /></td></tr>
<tr class="separator:ga1d4a9f98194cb255b2fcb6cdf8d83fb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga410423649d19fc0282fe5012f3455b31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga410423649d19fc0282fe5012f3455b31">USBH_HAL_AbortEndPoint</a> (uint8_t add, uint8_t endp)</td></tr>
<tr class="memdesc:ga410423649d19fc0282fe5012f3455b31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aborts an on-going transfer on an endpoint.  <a href="#ga410423649d19fc0282fe5012f3455b31">More...</a><br /></td></tr>
<tr class="separator:ga410423649d19fc0282fe5012f3455b31"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
UHC callbacks to provide for UHD</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpdadcb33f719f2debe61abc0a9139b11f"></a>The following callbacks are used by UHD. </p>
</td></tr>
<tr class="memitem:gaab14b5e42335b6361fa392ce889ffdc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gaab14b5e42335b6361fa392ce889ffdc2">USBH_start</a> (void)</td></tr>
<tr class="memdesc:gaab14b5e42335b6361fa392ce889ffdc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the host mode.  <a href="#gaab14b5e42335b6361fa392ce889ffdc2">More...</a><br /></td></tr>
<tr class="separator:gaab14b5e42335b6361fa392ce889ffdc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga819c9e725c718cff7dba36e636066ece"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga819c9e725c718cff7dba36e636066ece">USBH_stop</a> (bool b_id_stop)</td></tr>
<tr class="memdesc:ga819c9e725c718cff7dba36e636066ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the host mode.  <a href="#ga819c9e725c718cff7dba36e636066ece">More...</a><br /></td></tr>
<tr class="separator:ga819c9e725c718cff7dba36e636066ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga78a0073e6ae8ed58cc6a28ea89820ef1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga78a0073e6ae8ed58cc6a28ea89820ef1">USBH_notify_connection</a> (bool b_plug)</td></tr>
<tr class="memdesc:ga78a0073e6ae8ed58cc6a28ea89820ef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notify device connection or disconnection.  <a href="#ga78a0073e6ae8ed58cc6a28ea89820ef1">More...</a><br /></td></tr>
<tr class="separator:ga78a0073e6ae8ed58cc6a28ea89820ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac60ed6b8615775ae9b773432d4ee8828"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#gac60ed6b8615775ae9b773432d4ee8828">USBH_notify_sof</a> (bool b_micro)</td></tr>
<tr class="memdesc:gac60ed6b8615775ae9b773432d4ee8828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notify each start of frame sent by driver.  <a href="#gac60ed6b8615775ae9b773432d4ee8828">More...</a><br /></td></tr>
<tr class="separator:gac60ed6b8615775ae9b773432d4ee8828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8793c42aa4012a8bb24364f4243b4bff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uhd__group.xhtml#ga8793c42aa4012a8bb24364f4243b4bff">USBH_notify_resume</a> (void)</td></tr>
<tr class="memdesc:ga8793c42aa4012a8bb24364f4243b4bff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notify that a resume bus occurs A resume can occur after a downstream or an upstream resume.  <a href="#ga8793c42aa4012a8bb24364f4243b4bff">More...</a><br /></td></tr>
<tr class="separator:ga8793c42aa4012a8bb24364f4243b4bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The UHD driver provides a low-level abstraction of the host controller hardware. </p>
<h1><a class="anchor" id="USB_CONF"></a>
USB dual role configuration</h1>
<p>The defines UHD_ENABLE and UDD_ENABLE must be added in project to allow the USB low level (UHD) to manage or not the dual role (device and host).</p>
<h1><a class="anchor" id="USBHS_CONF"></a>
USBHS Custom configuration</h1>
<p>The following USBHS driver configuration must be defined in conf_usb_host.h file of the application.</p>
<p>UHD_USB_INT_LEVEL<br />
 Option to change the interrupt priority (0 to 15) by default 5 (recommended).</p>
<p>UHD_USB_INT_FUN<br />
 Option to fit interrupt function to what defined in exception table.</p>
<p>UHD_ISOCHRONOUS_NB_BANK<br />
 Feature to reduce or increase isochronous endpoints buffering (1 to 2). Default value 2.</p>
<p>UHD_BULK_NB_BANK<br />
 Feature to reduce or increase bulk endpoints buffering (1 to 2). Default value 2.</p>
<p>UHD_INTERRUPT_NB_BANK<br />
 Feature to reduce or increase interrupt endpoints buffering (1 to 2). Default value 1.</p>
<h1><a class="anchor" id="Callbacks"></a>
management</h1>
<p>The USB driver is fully managed by interrupt and does not request periodic task. Thereby, the USB events use callbacks to transfer the information. The callbacks can be declared in static during compilation or dynamically during code execution.</p>
<h1><a class="anchor" id="Power"></a>
mode management</h1>
<p>The driver uses the sleepmgr service to manage the different sleep modes. The sleep mode depends on USB driver state (uhd_uotghs_state_enum).</p>
<p>Most events coming from the hardware such as interrupts may cause the UHD performing function call in UHC and UHI. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="gae9c1f091cdf089e6c3607ff5f6dedadc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae9c1f091cdf089e6c3607ff5f6dedadc">&sect;&nbsp;</a></span>UHD_BULK_NB_BANK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHD_BULK_NB_BANK&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga8ee68a7bae20173b77003f961dacc00a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8ee68a7bae20173b77003f961dacc00a">&sect;&nbsp;</a></span>UHD_INTERRUPT_NB_BANK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHD_INTERRUPT_NB_BANK&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga1f9327e5240f0665f459d242f2066fc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1f9327e5240f0665f459d242f2066fc1">&sect;&nbsp;</a></span>UHD_ISOCHRONOUS_NB_BANK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UHD_ISOCHRONOUS_NB_BANK&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gaadd3e901fd924e79699319a721b9bde6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaadd3e901fd924e79699319a721b9bde6">&sect;&nbsp;</a></span>uhd_callback_reset_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* uhd_callback_reset_t) (void)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>End of reset callback function type. </p>
<p>Registered by uhd_send_reset() Callback called when reset event is completed. </p>

</div>
</div>
<a id="ga5ad6a2c3e931f6c7fea447cddae5fda4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ad6a2c3e931f6c7fea447cddae5fda4">&sect;&nbsp;</a></span>uhd_callback_setup_end_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* uhd_callback_setup_end_t) (uint8_t add, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status, uint16_t payload_trans)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>End of setup callback function type. </p>
<p>Registered by <a class="el" href="group__uhd__group.xhtml#ga11038bdbac3a23c70a7b7f5abcecc8ba" title="Add a setup request in the control endpoint setup queue. ">USBH_HAL_SetupReq()</a> Called when the setup request is completed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of the setup request </td></tr>
    <tr><td class="paramname">status</td><td><a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> status </td></tr>
    <tr><td class="paramname">payload_trans</td><td>Number of data transfered during DATA phase </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf19b51871fc55b8c5d78305d38a88425"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf19b51871fc55b8c5d78305d38a88425">&sect;&nbsp;</a></span>uhd_callback_setup_run_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef bool(* uhd_callback_setup_run_t) (uint8_t add, uint8_t **payload, uint16_t *payload_size)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Data setup transfer callback function type. </p>
<p>Registered by <a class="el" href="group__uhd__group.xhtml#ga11038bdbac3a23c70a7b7f5abcecc8ba" title="Add a setup request in the control endpoint setup queue. ">USBH_HAL_SetupReq()</a> Called during DATA phase when the (payload) buffer is full or empty. Then the setup request is halted. A new buffer can be provided to continue the DATA phase or abort DATA phase.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of the setup request </td></tr>
    <tr><td class="paramname">payload</td><td>To return the next buffer address </td></tr>
    <tr><td class="paramname">payload_size</td><td>To return the size of next buffer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>true</code>, if a new buffer is available, otherwise stop the request. </dd></dl>

</div>
</div>
<a id="ga2f26a6754e1cab77e20f2afec9c7c51f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f26a6754e1cab77e20f2afec9c7c51f">&sect;&nbsp;</a></span>uhd_callback_trans_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* uhd_callback_trans_t) (uint8_t add, uint8_t ep, <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> status, uint32_t nb_transfered)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>End of transfer callback function type. </p>
<p>Registered by <a class="el" href="group__uhd__group.xhtml#ga1d4a9f98194cb255b2fcb6cdf8d83fb8" title="Allows to receive or send data on an endpoint. ">USBH_HAL_RunEndpoint()</a> Callback called by USB interrupt after data transfer or abort (reset,...).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address used by the transfer </td></tr>
    <tr><td class="paramname">status</td><td><a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> status </td></tr>
    <tr><td class="paramname">nb_transfered</td><td>Number of data transfered </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gab5c14d3e2e40e55761ffe45496ae5427"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab5c14d3e2e40e55761ffe45496ae5427">&sect;&nbsp;</a></span>uhd_ctrl_request_phase_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__uhd__group.xhtml#gab5c14d3e2e40e55761ffe45496ae5427">uhd_ctrl_request_phase_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bit definitions to store setup request state machine. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggab5c14d3e2e40e55761ffe45496ae5427a4d58c9d6d4a100fafb7a2c99304ef274"></a>UHD_CTRL_REQ_PHASE_SETUP&#160;</td><td class="fielddoc"><p>Wait a SETUP packet. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab5c14d3e2e40e55761ffe45496ae5427aab15b28a6a920b07a0cc82de1d0c414a"></a>UHD_CTRL_REQ_PHASE_DATA_OUT&#160;</td><td class="fielddoc"><p>Wait a OUT data packet. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab5c14d3e2e40e55761ffe45496ae5427adad9d075f8a169516efd6b29961612a5"></a>UHD_CTRL_REQ_PHASE_DATA_IN&#160;</td><td class="fielddoc"><p>Wait a IN data packet. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab5c14d3e2e40e55761ffe45496ae5427acb0a9b7a084121f4ff48cd53ad76842a"></a>UHD_CTRL_REQ_PHASE_ZLP_IN&#160;</td><td class="fielddoc"><p>Wait a IN ZLP packet. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggab5c14d3e2e40e55761ffe45496ae5427a62b5126d713b2ed56894a6899fda885e"></a>UHD_CTRL_REQ_PHASE_ZLP_OUT&#160;</td><td class="fielddoc"><p>Wait a OUT ZLP packet. </p>
</td></tr>
</table>

</div>
</div>
<a id="ga763c7a9a339aa2cb2b670d6446f37147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga763c7a9a339aa2cb2b670d6446f37147">&sect;&nbsp;</a></span>uhd_uotghs_state_enum</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__uhd__group.xhtml#ga763c7a9a339aa2cb2b670d6446f37147">uhd_uotghs_state_enum</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>States of USBHS interface. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147ab008bc0e0626bc0c8f6df3f5e6276dc1"></a>UHD_STATE_OFF&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147a72afa750cb49f78017f0243e54e89252"></a>UHD_STATE_WAIT_ID_HOST&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147af9f340c3b281f9d14944dbe44654b9b6"></a>UHD_STATE_NO_VBUS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147a051452b77a8c89240d7c23a4c6946317"></a>UHD_STATE_DISCONNECT&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147a6f3dad2adb0c3729086526c0d0ebcdc3"></a>UHD_STATE_SUSPEND&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga763c7a9a339aa2cb2b670d6446f37147af87eee94eca0a6c769217489a3c4772b"></a>UHD_STATE_IDLE&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ga3d1a10bd9f6a35bd4db20ced8f72474a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d1a10bd9f6a35bd4db20ced8f72474a">&sect;&nbsp;</a></span>USBH_Speed_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Device speed. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga3d1a10bd9f6a35bd4db20ced8f72474aae2cb230200e5440916daac7c14fb85a5"></a>UHD_SPEED_LOW&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga3d1a10bd9f6a35bd4db20ced8f72474aa508b48b3c7be9d7573b83acedfc6f294"></a>UHD_SPEED_FULL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="gga3d1a10bd9f6a35bd4db20ced8f72474aaa99e0938fe0c64d2a212fba1b2bdbddd"></a>UHD_SPEED_HIGH&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="ga19c67cc9d097b54049dbc7c12119eb83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga19c67cc9d097b54049dbc7c12119eb83">&sect;&nbsp;</a></span>USBH_XfrStatus_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> transfer status The status field is updated after each transaction attempt, whether successful or not. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a51f2cf9245d0e0d3e7b421c9e6b301b8"></a>UHD_TRANS_NOERROR&#160;</td><td class="fielddoc"><p>Transaction is successful. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a43222d17d7126cc526f3e96b9e3cb26e"></a>UHD_TRANS_DISCONNECT&#160;</td><td class="fielddoc"><p>Device is disconnected. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a869890b0450c2fc6eff8d2cdac71551f"></a>UHD_TRANS_CRC&#160;</td><td class="fielddoc"><p>CRC error in data packet. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83adfcb327cec42c755aaeaa3af47f61e44"></a>UHD_TRANS_DT_MISMATCH&#160;</td><td class="fielddoc"><p>Data toggle PID did not match the expected value. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a5743eea90e7ad818b4c29ff54cfc67a9"></a>UHD_TRANS_STALL&#160;</td><td class="fielddoc"><p>The endpoint returned a STALL PID. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a917bd794eebf5057b6589bcc02669eb6"></a>UHD_TRANS_NOTRESPONDING&#160;</td><td class="fielddoc"><p>Device did not respond to token (IN) or did not provide a handshake (OUT) </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83aa869c9043392018ac04ba3dd145a0552"></a>UHD_TRANS_PIDFAILURE&#160;</td><td class="fielddoc"><p>Check bits on PID from endpoint failed. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83a5c7e1f0526fb0fbc78231246e3cc3d56"></a>UHD_TRANS_TIMEOUT&#160;</td><td class="fielddoc"><p>Data transmission not completed before timeout. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga19c67cc9d097b54049dbc7c12119eb83ad01b0da250552801bd801152b2a8be92"></a>UHD_TRANS_ABORTED&#160;</td><td class="fielddoc"><p>Data transmission has been aborted. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga5d9360ec239feb3ede5e4a0223d3c6e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d9360ec239feb3ede5e4a0223d3c6e2">&sect;&nbsp;</a></span>uhd_sleep_mode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void uhd_sleep_mode </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="group__uhd__group.xhtml#ga763c7a9a339aa2cb2b670d6446f37147">uhd_uotghs_state_enum</a>&#160;</td>
          <td class="paramname"><em>new_state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manages the sleep mode following the USBHS state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_state</td><td>New USBHS state </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga5d9360ec239feb3ede5e4a0223d3c6e2_icgraph.svg" width="398" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga410423649d19fc0282fe5012f3455b31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga410423649d19fc0282fe5012f3455b31">&sect;&nbsp;</a></span>USBH_HAL_AbortEndPoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_AbortEndPoint </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Aborts an on-going transfer on an endpoint. </p>
<p>If a transfer is on going, then it is stopped and the callback registered is called to signal the end of transfer. Note: The control endpoint is not authorized.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of endpoint </td></tr>
    <tr><td class="paramname">endp</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> to abort </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga410423649d19fc0282fe5012f3455b31_cgraph.svg" width="412" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gad9e15307f67bf17a172ce88dc52ff6a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad9e15307f67bf17a172ce88dc52ff6a3">&sect;&nbsp;</a></span>USBH_HAL_ConfigureControlPipe()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_HAL_ConfigureControlPipe </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>ep_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures and enables a control endpoint 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of endpoint </td></tr>
    <tr><td class="paramname">ep_size</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> control maximum size</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>1</code> if the endpoint is enabled, otherwise <code>0</code>. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gad9e15307f67bf17a172ce88dc52ff6a3_cgraph.svg" width="514" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gad9e15307f67bf17a172ce88dc52ff6a3_icgraph.svg" width="494" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga8da03709234cba062389fcaee2c62f8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8da03709234cba062389fcaee2c62f8b">&sect;&nbsp;</a></span>USBH_HAL_ConfigurePipe()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_HAL_ConfigurePipe </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga5396acbd7f05624071e6752fdb38cca5">USBEndpointDescriptor</a> *&#160;</td>
          <td class="paramname"><em>ep_desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures and enables an endpoint. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of endpoint </td></tr>
    <tr><td class="paramname">ep_desc</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> descriptor</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>1</code> if the endpoint is enabled, otherwise <code>0</code>. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga8da03709234cba062389fcaee2c62f8b_cgraph.svg" width="467" height="544"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga8da03709234cba062389fcaee2c62f8b_icgraph.svg" width="410" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga85b92a3f7bc4357fae366d2f7a1c595b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga85b92a3f7bc4357fae366d2f7a1c595b">&sect;&nbsp;</a></span>USBH_HAL_ControlInterrupt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_ControlInterrupt </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga85b92a3f7bc4357fae366d2f7a1c595b_cgraph.svg" width="1024" height="611"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga85b92a3f7bc4357fae366d2f7a1c595b_icgraph.svg" width="387" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafb1043e05189c04ded956208eea3e2b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb1043e05189c04ded956208eea3e2b5">&sect;&nbsp;</a></span>USBH_HAL_ControlReqEnd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_ControlReqEnd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a>&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gafb1043e05189c04ded956208eea3e2b5_cgraph.svg" width="682" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gafb1043e05189c04ded956208eea3e2b5_icgraph.svg" width="475" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga0e9c1f691d695f4c878712831d38e9c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0e9c1f691d695f4c878712831d38e9c0">&sect;&nbsp;</a></span>USBH_HAL_ControlTimeout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_ControlTimeout </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga0e9c1f691d695f4c878712831d38e9c0_cgraph.svg" width="478" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga0e9c1f691d695f4c878712831d38e9c0_icgraph.svg" width="430" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga879e4d4476c528ed4cfac77d41bb1a06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga879e4d4476c528ed4cfac77d41bb1a06">&sect;&nbsp;</a></span>USBH_HAL_DelayedResume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_DelayedResume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga879e4d4476c528ed4cfac77d41bb1a06_cgraph.svg" width="486" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga879e4d4476c528ed4cfac77d41bb1a06_icgraph.svg" width="434" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga170d8082df4bb77da27db090827145ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga170d8082df4bb77da27db090827145ec">&sect;&nbsp;</a></span>USBH_HAL_DelayedSuspend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_DelayedSuspend </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga170d8082df4bb77da27db090827145ec_cgraph.svg" width="459" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga170d8082df4bb77da27db090827145ec_icgraph.svg" width="439" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9b45418a37c193dbcff7ef17040cfa30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9b45418a37c193dbcff7ef17040cfa30">&sect;&nbsp;</a></span>USBH_HAL_DisableUsb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_DisableUsb </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_id_stop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables the USB host mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_id_stop</td><td>Stop ID pin management, if true. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9b45418a37c193dbcff7ef17040cfa30_cgraph.svg" width="410" height="646"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9b45418a37c193dbcff7ef17040cfa30_icgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga3a715175934fb8bf3c918f04ef0dae2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3a715175934fb8bf3c918f04ef0dae2b">&sect;&nbsp;</a></span>USBH_HAL_EnableUsbHost()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_EnableUsbHost </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the USB host mode Start the ID pin management if the ID pin is available. </p>
<p>Freeze USB clock to use wakeup interrupt to detect connection. After detection of wakeup interrupt, the clock is unfreeze to have the true connection interrupt.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga3a715175934fb8bf3c918f04ef0dae2b_cgraph.svg" width="651" height="899"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga3a715175934fb8bf3c918f04ef0dae2b_icgraph.svg" width="355" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga83779ae5393f2318b1eb0856f583b637"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga83779ae5393f2318b1eb0856f583b637">&sect;&nbsp;</a></span>USBH_HAL_FreePipe()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_FreePipe </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables an endpoint or all endpoint of a device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of endpoint </td></tr>
    <tr><td class="paramname">endp</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number and direction (USB_EP_DIR_IN/OUT). Remove all endpoints of USB address, if 0xFF. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga83779ae5393f2318b1eb0856f583b637_cgraph.svg" width="614" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga83779ae5393f2318b1eb0856f583b637_icgraph.svg" width="648" height="284"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaee8af62530aefb6025ad2391361e8895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaee8af62530aefb6025ad2391361e8895">&sect;&nbsp;</a></span>USBH_HAL_GetFrameNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t USBH_HAL_GetFrameNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current Start Of Frame (SOF) number. </p>
<dl class="section return"><dt>Returns</dt><dd>current start of frame number. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaee8af62530aefb6025ad2391361e8895_cgraph.svg" width="408" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaee8af62530aefb6025ad2391361e8895_icgraph.svg" width="594" height="158"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae32ed29203116712f786dbc913d96327"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae32ed29203116712f786dbc913d96327">&sect;&nbsp;</a></span>USBH_HAL_GetMicroFrameNum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t USBH_HAL_GetMicroFrameNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current micro start of frame number. </p>
<dl class="section return"><dt>Returns</dt><dd>current micro start of frame number required in high speed mode. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gae32ed29203116712f786dbc913d96327_cgraph.svg" width="454" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gae32ed29203116712f786dbc913d96327_icgraph.svg" width="627" height="158"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga38980ecff58f484bbb915b6efe6136b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga38980ecff58f484bbb915b6efe6136b1">&sect;&nbsp;</a></span>USBH_HAL_GetPipe()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint8_t USBH_HAL_GetPipe </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>Addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bEndpoint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga38980ecff58f484bbb915b6efe6136b1_cgraph.svg" width="396" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga38980ecff58f484bbb915b6efe6136b1_icgraph.svg" width="400" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga35a73750c6a0ec35950ed24ec89b1cac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35a73750c6a0ec35950ed24ec89b1cac">&sect;&nbsp;</a></span>USBH_HAL_GetPipeError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a> USBH_HAL_GetPipeError </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga35a73750c6a0ec35950ed24ec89b1cac_cgraph.svg" width="398" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga35a73750c6a0ec35950ed24ec89b1cac_icgraph.svg" width="442" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6d1a91042ba3675ea7495dce99f1871b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d1a91042ba3675ea7495dce99f1871b">&sect;&nbsp;</a></span>USBH_HAL_GetSpeed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__uhd__group.xhtml#ga3d1a10bd9f6a35bd4db20ced8f72474a">USBH_Speed_t</a> USBH_HAL_GetSpeed </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the speed of connected device. </p>
<dl class="section return"><dt>Returns</dt><dd>Device speed </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga6d1a91042ba3675ea7495dce99f1871b_cgraph.svg" width="388" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga6d1a91042ba3675ea7495dce99f1871b_icgraph.svg" width="415" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9fcd1bf925a9ad0692672d08f3da3427"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fcd1bf925a9ad0692672d08f3da3427">&sect;&nbsp;</a></span>USBH_HAL_InZLP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_InZLP </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9fcd1bf925a9ad0692672d08f3da3427_cgraph.svg" width="419" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9fcd1bf925a9ad0692672d08f3da3427_icgraph.svg" width="638" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga45fc0843344e751529a0c4f113aa3d91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga45fc0843344e751529a0c4f113aa3d91">&sect;&nbsp;</a></span>USBH_HAL_IsSuspended()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_HAL_IsSuspended </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Test if the suspend state is enabled on the USB line. </p>
<dl class="section return"><dt>Returns</dt><dd>USB line in SUSPEND state, if true </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga45fc0843344e751529a0c4f113aa3d91_cgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga45fc0843344e751529a0c4f113aa3d91_icgraph.svg" width="380" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga12b21dabf5465ef92208084d4f336186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga12b21dabf5465ef92208084d4f336186">&sect;&nbsp;</a></span>USBH_HAL_ManageSof()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_ManageSof </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga12b21dabf5465ef92208084d4f336186_cgraph.svg" width="711" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga12b21dabf5465ef92208084d4f336186_icgraph.svg" width="358" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga5d07dff59bfb3f4de2343ae894fdac03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d07dff59bfb3f4de2343ae894fdac03">&sect;&nbsp;</a></span>USBH_HAL_OutZLP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_OutZLP </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga5d07dff59bfb3f4de2343ae894fdac03_cgraph.svg" width="431" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga5d07dff59bfb3f4de2343ae894fdac03_icgraph.svg" width="388" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1ddb6a33201674d513c4ad9c5de79e93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ddb6a33201674d513c4ad9c5de79e93">&sect;&nbsp;</a></span>USBH_HAL_PhaseControlSetup()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PhaseControlSetup </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga1ddb6a33201674d513c4ad9c5de79e93_cgraph.svg" width="712" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga1ddb6a33201674d513c4ad9c5de79e93_icgraph.svg" width="475" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gadc3093c163c3229d9343cb5f2f6ef8dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc3093c163c3229d9343cb5f2f6ef8dd">&sect;&nbsp;</a></span>USBH_HAL_PhaseDataIn()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PhaseDataIn </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gadc3093c163c3229d9343cb5f2f6ef8dd_cgraph.svg" width="735" height="392"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gadc3093c163c3229d9343cb5f2f6ef8dd_icgraph.svg" width="442" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gad1f5aedd5277d055c4c23a9a185fb7e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad1f5aedd5277d055c4c23a9a185fb7e6">&sect;&nbsp;</a></span>USBH_HAL_PhaseDataInStart()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PhaseDataInStart </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gad1f5aedd5277d055c4c23a9a185fb7e6_cgraph.svg" width="496" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gad1f5aedd5277d055c4c23a9a185fb7e6_icgraph.svg" width="474" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga74ceb21eb2c7ef68d5fe6f02ea7beb58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga74ceb21eb2c7ef68d5fe6f02ea7beb58">&sect;&nbsp;</a></span>USBH_HAL_PhaseDataOut()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PhaseDataOut </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga74ceb21eb2c7ef68d5fe6f02ea7beb58_cgraph.svg" width="683" height="335"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga74ceb21eb2c7ef68d5fe6f02ea7beb58_icgraph.svg" width="454" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaba849a4ecb7f5b837541fbccf850da59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaba849a4ecb7f5b837541fbccf850da59">&sect;&nbsp;</a></span>USBH_HAL_PipeAbort()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PipeAbort </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a>&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaba849a4ecb7f5b837541fbccf850da59_cgraph.svg" width="446" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaba849a4ecb7f5b837541fbccf850da59_icgraph.svg" width="412" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafba473f1b723cdb9500b91ec7fad0207"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafba473f1b723cdb9500b91ec7fad0207">&sect;&nbsp;</a></span>USBH_HAL_PipeInReceived()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PipeInReceived </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gafba473f1b723cdb9500b91ec7fad0207_cgraph.svg" width="478" height="342"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gafba473f1b723cdb9500b91ec7fad0207_icgraph.svg" width="436" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa29c0122543b5f5faf600eee68474615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa29c0122543b5f5faf600eee68474615">&sect;&nbsp;</a></span>USBH_HAL_PipeInterrupt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PipeInterrupt </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaa29c0122543b5f5faf600eee68474615_cgraph.svg" width="758" height="692"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaa29c0122543b5f5faf600eee68474615_icgraph.svg" width="368" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga39a6506d44760a518b49d004574bc9c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga39a6506d44760a518b49d004574bc9c9">&sect;&nbsp;</a></span>USBH_HAL_PipeOutReady()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PipeOutReady </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga39a6506d44760a518b49d004574bc9c9_cgraph.svg" width="478" height="848"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga39a6506d44760a518b49d004574bc9c9_icgraph.svg" width="430" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf8e9ff0a2565377088b95ef2b31787de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf8e9ff0a2565377088b95ef2b31787de">&sect;&nbsp;</a></span>USBH_HAL_PipeXfrEnd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void USBH_HAL_PipeXfrEnd </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#ga19c67cc9d097b54049dbc7c12119eb83">USBH_XfrStatus_t</a>&#160;</td>
          <td class="paramname"><em>status</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaf8e9ff0a2565377088b95ef2b31787de_cgraph.svg" width="399" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaf8e9ff0a2565377088b95ef2b31787de_icgraph.svg" width="652" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga9cedbbab25d378fecdae30a07b4b811f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9cedbbab25d378fecdae30a07b4b811f">&sect;&nbsp;</a></span>USBH_HAL_Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_Reset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#gaadd3e901fd924e79699319a721b9bde6">uhd_callback_reset_t</a>&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the Reset state on the USB line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">callback</td><td>Callback when reset sequence is finished </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9cedbbab25d378fecdae30a07b4b811f_cgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga9cedbbab25d378fecdae30a07b4b811f_icgraph.svg" width="383" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac9fdf87a0d813bf3717f1440e60c41d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac9fdf87a0d813bf3717f1440e60c41d8">&sect;&nbsp;</a></span>USBH_HAL_Resume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_Resume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the IDLE state on the USB line. </p>
<p>The IDLE state is enable when SOF are present on USB line. A Downstream Resume signal can be sent. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gac9fdf87a0d813bf3717f1440e60c41d8_cgraph.svg" width="380" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gac9fdf87a0d813bf3717f1440e60c41d8_icgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1d4a9f98194cb255b2fcb6cdf8d83fb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d4a9f98194cb255b2fcb6cdf8d83fb8">&sect;&nbsp;</a></span>USBH_HAL_RunEndpoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_HAL_RunEndpoint </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>endp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_shortpacket</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>buf_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#ga2f26a6754e1cab77e20f2afec9c7c51f">uhd_callback_trans_t</a>&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allows to receive or send data on an endpoint. </p>
<p>If a USB DMA is available, the driver uses it to transfer endpoint data from or to internal RAM. When the transfer is finished or aborted (stall, reset, ...), the <em>callback</em> is called. This callback returns the transfer status and eventually the number of byte transfered. Note: The control endpoint is not authorized.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of endpoint </td></tr>
    <tr><td class="paramname">endp</td><td><a class="el" href="struct_endpoint.xhtml" title="Describes the state of an endpoint of the UDP controller. ">Endpoint</a> number </td></tr>
    <tr><td class="paramname">b_shortpacket</td><td>Enabled automatic short packet </td></tr>
    <tr><td class="paramname">buf</td><td>Buffer on Internal RAM to send or fill. It must be align, then use COMPILER_WORD_ALIGNED. </td></tr>
    <tr><td class="paramname">buf_size</td><td>Buffer size to send or fill </td></tr>
    <tr><td class="paramname">timeout</td><td><a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> timeout (ms) </td></tr>
    <tr><td class="paramname">callback</td><td>NULL or function to call at the end of transfer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>About <em>b_shortpacket</em>, for OUT endpoint it means that a short packet or a Zero Length Packet must be sent to the USB line to properly close the USB transfer at the end of the data transfer. For Bulk and Interrupt IN endpoint, it will automatically stop the transfer at the end of the data transfer (received short packet).</dd>
<dd>
About <em>timeout</em>, for BULK endpoint with <em>timeout</em> set to zero, it means that the transfer will never be stopped before transfer done. Since most of USB embedded peripherals do not manage the transfer bandwidth by peripheral hardware, such a BULK transfer will occupy all USB non-periodic transfer bandwidth. In this case, other BULK transfers started later will be pending until this transfer is done and bandwidth released. So it is better to use BULK transfers with none zero <em>timeout</em>.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd><code>1</code> if function was successfully done, otherwise <code>0</code>. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga1d4a9f98194cb255b2fcb6cdf8d83fb8_cgraph.svg" width="462" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga1d4a9f98194cb255b2fcb6cdf8d83fb8_icgraph.svg" width="392" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga11038bdbac3a23c70a7b7f5abcecc8ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga11038bdbac3a23c70a7b7f5abcecc8ba">&sect;&nbsp;</a></span>USBH_HAL_SetupReq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool USBH_HAL_SetupReq </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>add</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>req</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>payload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>payload_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#gaf19b51871fc55b8c5d78305d38a88425">uhd_callback_setup_run_t</a>&#160;</td>
          <td class="paramname"><em>callback_run</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__uhd__group.xhtml#ga5ad6a2c3e931f6c7fea447cddae5fda4">uhd_callback_setup_end_t</a>&#160;</td>
          <td class="paramname"><em>callback_end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a setup request in the control endpoint setup queue. </p>
<p>Note: Request timeout is 5s.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add</td><td>USB address of control endpoint </td></tr>
    <tr><td class="paramname">req</td><td>Setup request definition </td></tr>
    <tr><td class="paramname">payload</td><td>Buffer to use in setup DATA phase </td></tr>
    <tr><td class="paramname">payload_size</td><td>Size of buffer used in DATA phase </td></tr>
    <tr><td class="paramname">callback_run</td><td>Callback to call if buffer is empty or full </td></tr>
    <tr><td class="paramname">callback_end</td><td>Callback to call when request is finish</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>true</code> if the request has been accepted, otherwise <code>false</code>. Note: The swap of "req.wValues" from uin16_t to le16_t is done by UHD. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga11038bdbac3a23c70a7b7f5abcecc8ba_cgraph.svg" width="443" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga11038bdbac3a23c70a7b7f5abcecc8ba_icgraph.svg" width="1412" height="712"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga108d6958efd3c7337897ae40963e3f58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga108d6958efd3c7337897ae40963e3f58">&sect;&nbsp;</a></span>USBH_HAL_Suspend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_HAL_Suspend </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables the suspend state on the USB line. </p>
<p>The SUSPEND state is enable when SOF are disabled on USB line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga108d6958efd3c7337897ae40963e3f58_cgraph.svg" width="446" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga108d6958efd3c7337897ae40963e3f58_icgraph.svg" width="426" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga78a0073e6ae8ed58cc6a28ea89820ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga78a0073e6ae8ed58cc6a28ea89820ef1">&sect;&nbsp;</a></span>USBH_notify_connection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_notify_connection </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_plug</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notify device connection or disconnection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_plug</td><td>Device connection, if true </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga78a0073e6ae8ed58cc6a28ea89820ef1_cgraph.svg" width="408" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga78a0073e6ae8ed58cc6a28ea89820ef1_icgraph.svg" width="410" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga8793c42aa4012a8bb24364f4243b4bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8793c42aa4012a8bb24364f4243b4bff">&sect;&nbsp;</a></span>USBH_notify_resume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_notify_resume </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notify that a resume bus occurs A resume can occur after a downstream or an upstream resume. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga8793c42aa4012a8bb24364f4243b4bff_cgraph.svg" width="380" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga8793c42aa4012a8bb24364f4243b4bff_icgraph.svg" width="420" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac60ed6b8615775ae9b773432d4ee8828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac60ed6b8615775ae9b773432d4ee8828">&sect;&nbsp;</a></span>USBH_notify_sof()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_notify_sof </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_micro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notify each start of frame sent by driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_micro</td><td>It is a micro start of frame, if true </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gac60ed6b8615775ae9b773432d4ee8828_icgraph.svg" width="359" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaab14b5e42335b6361fa392ce889ffdc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab14b5e42335b6361fa392ce889ffdc2">&sect;&nbsp;</a></span>USBH_start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_start </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the host mode. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaab14b5e42335b6361fa392ce889ffdc2_cgraph.svg" width="355" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga819c9e725c718cff7dba36e636066ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga819c9e725c718cff7dba36e636066ece">&sect;&nbsp;</a></span>USBH_stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBH_stop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>b_id_stop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stops the host mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b_id_stop</td><td>Stop USB ID pin management, if true. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga819c9e725c718cff7dba36e636066ece_cgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafcd12a00544aac7645deb694ec611e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafcd12a00544aac7645deb694ec611e7a">&sect;&nbsp;</a></span>USBHS_Handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBHS_Handler </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>USBD (UDP) interrupt handler Manages device resume, suspend, end of bus reset. </p>
<p>Forwards endpoint events to the appropriate handler. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gafcd12a00544aac7645deb694ec611e7a_cgraph.svg" width="658" height="1811"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaee441a294b489cd2d9861de8a0139d31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaee441a294b489cd2d9861de8a0139d31">&sect;&nbsp;</a></span>USBHS_SCB_CleanDCache_by_Addr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBHS_SCB_CleanDCache_by_Addr </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dsize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_gaee441a294b489cd2d9861de8a0139d31_cgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga27e6e1c865c634f55e0ac75a6b3a81b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27e6e1c865c634f55e0ac75a6b3a81b4">&sect;&nbsp;</a></span>USBHS_SCB_InvalidateDCache_by_Addr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void USBHS_SCB_InvalidateDCache_by_Addr </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>dsize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga27e6e1c865c634f55e0ac75a6b3a81b4_cgraph.svg" width="447" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__uhd__group_ga27e6e1c865c634f55e0ac75a6b3a81b4_icgraph.svg" width="431" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="gac6cef8545effc6137e7216ca2507d950"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac6cef8545effc6137e7216ca2507d950">&sect;&nbsp;</a></span>uhd_b_suspend_requested</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool uhd_b_suspend_requested</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag to delay a suspend request after all on-going setup request. </p>

</div>
</div>
<a id="ga213de2c8a6616c71912577930df2fff0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga213de2c8a6616c71912577930df2fff0">&sect;&nbsp;</a></span>uhd_ctrl_nb_trans</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t uhd_ctrl_nb_trans</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of transfered byte on DATA phase of current setup request. </p>

</div>
</div>
<a id="gad2628647770aba23602cd668c75f30cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2628647770aba23602cd668c75f30cd">&sect;&nbsp;</a></span>uhd_ctrl_request_first</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structuhd__ctrl__request__t.xhtml">uhd_ctrl_request_t</a>* uhd_ctrl_request_first</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Entry points of setup request list. </p>

</div>
</div>
<a id="gaa27beade335f1ccfdd230cd88c5d1e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa27beade335f1ccfdd230cd88c5d1e7a">&sect;&nbsp;</a></span>uhd_ctrl_request_last</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structuhd__ctrl__request__t.xhtml">uhd_ctrl_request_t</a>* uhd_ctrl_request_last</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga07b29cb6c467896f4a7b925c74a54e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga07b29cb6c467896f4a7b925c74a54e2c">&sect;&nbsp;</a></span>uhd_ctrl_request_phase</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__uhd__group.xhtml#gab5c14d3e2e40e55761ffe45496ae5427">uhd_ctrl_request_phase_t</a> uhd_ctrl_request_phase</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga49ee25dd706f7dedc0598ba7f5575353"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga49ee25dd706f7dedc0598ba7f5575353">&sect;&nbsp;</a></span>uhd_ctrl_request_timeout</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">volatile uint16_t uhd_ctrl_request_timeout</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remaining time for on-going setup request (No request on-going if equal 0) </p>

</div>
</div>
<a id="gabc762b239541d9a2259d92e0df5ddb18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabc762b239541d9a2259d92e0df5ddb18">&sect;&nbsp;</a></span>uhd_pipe_job</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_u_s_b_h___pipe_job__t.xhtml">USBH_PipeJob_t</a> uhd_pipe_job[<a class="el" href="usbhs_8h.xhtml#a6095628336ad1cdd9336b4c1f5baef35">USBHS_EPT_NUM</a> - 1]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Array to register a job on bulk/interrupt/isochronous endpoint. </p>

</div>
</div>
<a id="ga772de96060be737f41d388ffcdc23ddd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga772de96060be737f41d388ffcdc23ddd">&sect;&nbsp;</a></span>uhd_pipes_unfreeze</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t uhd_pipes_unfreeze</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga7659557bf43afa6da0355062df9e5f0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7659557bf43afa6da0355062df9e5f0e">&sect;&nbsp;</a></span>uhd_reset_callback</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__uhd__group.xhtml#gaadd3e901fd924e79699319a721b9bde6">uhd_callback_reset_t</a> uhd_reset_callback = NULL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Store the callback to be call at the end of reset signal. </p>

</div>
</div>
<a id="ga41de1d3b60d8d03b81b44bb616abec54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga41de1d3b60d8d03b81b44bb616abec54">&sect;&nbsp;</a></span>uhd_resume_start</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t uhd_resume_start</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga621f8ed0c74e1d6cd789dbc64c6722cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga621f8ed0c74e1d6cd789dbc64c6722cf">&sect;&nbsp;</a></span>uhd_suspend_start</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t uhd_suspend_start</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Variables to manage the suspend/resume sequence. </p>

</div>
</div>
<a id="ga136925222d060e308024764c3c34a114"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga136925222d060e308024764c3c34a114">&sect;&nbsp;</a></span>USB_HOST</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="pio_8h.xhtml#a5435e02d3c6181a41089b9abc6ce4aee">Pin</a> USB_HOST[] = {<a class="el" href="_r_e_m_o_v_e__board__e70__xpld_8h.xhtml#aa08f1878c2d154a25b00ce239c441374">PINS_VBUS_EN</a>}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
