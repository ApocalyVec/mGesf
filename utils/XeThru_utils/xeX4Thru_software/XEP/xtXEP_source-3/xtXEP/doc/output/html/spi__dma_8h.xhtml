<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: src/hal/x4m0x_s70/libraries/libchip/include/spi_dma.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_4ce6a7f885e2866a554ba9e7335035f1.xhtml">hal</a></li><li class="navelem"><a class="el" href="dir_9dc4d255e566c48428ae1788dff8c9e9.xhtml">x4m0x_s70</a></li><li class="navelem"><a class="el" href="dir_75c70effab526b28e035b6c6a3220eb7.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_a75a6fe80fd9120ba7dd67a0b33a7bc9.xhtml">libchip</a></li><li class="navelem"><a class="el" href="dir_66d505d01f5149f3674faaa78d4997d4.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">spi_dma.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of SPI driver, transfer data through DMA.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="chip_8h_source.xhtml">chip.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for spi_dma.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi__dma_8h__incl.svg" width="206" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="spi__dma_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___spid_cmd.xhtml">_SpidCmd</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Request prepared by the application upper layer.  <a href="struct___spid_cmd.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___spid.xhtml">_Spid</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant structure associated with SPI port.  <a href="struct___spid.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a7f2e704bcee6233e727de0d7907e2834"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a7f2e704bcee6233e727de0d7907e2834">SPID_ERROR</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:a7f2e704bcee6233e727de0d7907e2834"><td class="mdescLeft">&#160;</td><td class="mdescRight">An unspecified error has occurred.  <a href="#a7f2e704bcee6233e727de0d7907e2834">More...</a><br /></td></tr>
<tr class="separator:a7f2e704bcee6233e727de0d7907e2834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfcf7777c4bb3d21f5e67b04b793e4fb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#abfcf7777c4bb3d21f5e67b04b793e4fb">SPID_ERROR_LOCK</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:abfcf7777c4bb3d21f5e67b04b793e4fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">SPI driver is currently in use.  <a href="#abfcf7777c4bb3d21f5e67b04b793e4fb">More...</a><br /></td></tr>
<tr class="separator:abfcf7777c4bb3d21f5e67b04b793e4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee751b4a981d9bc65688a7ee3fba61f8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#aee751b4a981d9bc65688a7ee3fba61f8">SPID_CSR_SCBR</a>(mck,  spck)&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71___s_p_i.xhtml#ga79a3b403edc0716791844ff68b28f345">SPI_CSR_SCBR</a>((mck) / (spck))</td></tr>
<tr class="memdesc:aee751b4a981d9bc65688a7ee3fba61f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the value of the SCBR field of the Chip Select Register given MCK and SPCK.  <a href="#aee751b4a981d9bc65688a7ee3fba61f8">More...</a><br /></td></tr>
<tr class="separator:aee751b4a981d9bc65688a7ee3fba61f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbb61b55b22f0e3be865799be4e05eb9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#abbb61b55b22f0e3be865799be4e05eb9">SPID_CSR_DLYBS</a>(mck,  delay)</td></tr>
<tr class="memdesc:abbb61b55b22f0e3be865799be4e05eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the value of the DLYBS field of the Chip Select Register given delay in ns and MCK.  <a href="#abbb61b55b22f0e3be865799be4e05eb9">More...</a><br /></td></tr>
<tr class="separator:abbb61b55b22f0e3be865799be4e05eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b91175e70818bc295c1a903dd3b44a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a8b91175e70818bc295c1a903dd3b44a4">SPID_CSR_DLYBCT</a>(mck,  delay)</td></tr>
<tr class="memdesc:a8b91175e70818bc295c1a903dd3b44a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the value of the DLYBCT field of the Chip Select Register given delay in ns and MCK.  <a href="#a8b91175e70818bc295c1a903dd3b44a4">More...</a><br /></td></tr>
<tr class="separator:a8b91175e70818bc295c1a903dd3b44a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aebc642e37d24ab8f4151260c8a268541"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#aebc642e37d24ab8f4151260c8a268541">SpidCallback</a>) (uint8_t, void *)</td></tr>
<tr class="memdesc:aebc642e37d24ab8f4151260c8a268541"><td class="mdescLeft">&#160;</td><td class="mdescRight">SPI transfer complete callback.  <a href="#aebc642e37d24ab8f4151260c8a268541">More...</a><br /></td></tr>
<tr class="separator:aebc642e37d24ab8f4151260c8a268541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bc9732eedc1e8f02a7bfaf99d97837b"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___spid_cmd.xhtml">_SpidCmd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a8bc9732eedc1e8f02a7bfaf99d97837b">SpidCmd</a></td></tr>
<tr class="memdesc:a8bc9732eedc1e8f02a7bfaf99d97837b"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Request prepared by the application upper layer.  <a href="#a8bc9732eedc1e8f02a7bfaf99d97837b">More...</a><br /></td></tr>
<tr class="separator:a8bc9732eedc1e8f02a7bfaf99d97837b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c6dff4e6aa11c3609620b9436a3f6da"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___spid.xhtml">_Spid</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a></td></tr>
<tr class="memdesc:a9c6dff4e6aa11c3609620b9436a3f6da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant structure associated with SPI port.  <a href="#a9c6dff4e6aa11c3609620b9436a3f6da">More...</a><br /></td></tr>
<tr class="separator:a9c6dff4e6aa11c3609620b9436a3f6da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9592feff98f0b7d84dcf2bfb4f49b40d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a9592feff98f0b7d84dcf2bfb4f49b40d">SPID_Configure</a> (<a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid, <a class="el" href="struct_spi.xhtml">Spi</a> *pSpiHw, uint8_t spiId, uint32_t <a class="el" href="qspi_8h.xhtml#aca4d7775cab4dd1c0cd15e3049c00d11ad6343b50c92c2e13e4f30497a6028476">SpiMode</a>, <a class="el" href="group__dmad__structs.xhtml#gaf2c13151514615a6beb35c0d868a5053">sXdmad</a> *pXdmad)</td></tr>
<tr class="memdesc:a9592feff98f0b7d84dcf2bfb4f49b40d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the Spid structure and the corresponding SPI &amp; DMA hardware.  <a href="#a9592feff98f0b7d84dcf2bfb4f49b40d">More...</a><br /></td></tr>
<tr class="separator:a9592feff98f0b7d84dcf2bfb4f49b40d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36e110a3cda7abf52985f30626c47b5f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a36e110a3cda7abf52985f30626c47b5f">SPID_ConfigureCS</a> (<a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid, uint32_t dwCS, uint32_t dwCsr)</td></tr>
<tr class="memdesc:a36e110a3cda7abf52985f30626c47b5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures the parameters for the device corresponding to the cs value.  <a href="#a36e110a3cda7abf52985f30626c47b5f">More...</a><br /></td></tr>
<tr class="separator:a36e110a3cda7abf52985f30626c47b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c774fb7e4bcf2db4e5d9e8891b6abd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#ae3c774fb7e4bcf2db4e5d9e8891b6abd">SPID_SendCommand</a> (<a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid, <a class="el" href="spi__dma_8h.xhtml#a8bc9732eedc1e8f02a7bfaf99d97837b">SpidCmd</a> *pCommand)</td></tr>
<tr class="memdesc:ae3c774fb7e4bcf2db4e5d9e8891b6abd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts a SPI master transfer.  <a href="#ae3c774fb7e4bcf2db4e5d9e8891b6abd">More...</a><br /></td></tr>
<tr class="separator:ae3c774fb7e4bcf2db4e5d9e8891b6abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a3c8803c9b7a4afa168b5d3912d0e4f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a1a3c8803c9b7a4afa168b5d3912d0e4f">SPID_Handler</a> (<a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid)</td></tr>
<tr class="separator:a1a3c8803c9b7a4afa168b5d3912d0e4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6828b97f4c33b6e809954f39086e12a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a6828b97f4c33b6e809954f39086e12a9">SPID_DmaHandler</a> (<a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid)</td></tr>
<tr class="separator:a6828b97f4c33b6e809954f39086e12a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a570a26a429bb5c77a48336209bd8acc5"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="spi__dma_8h.xhtml#a570a26a429bb5c77a48336209bd8acc5">SPID_IsBusy</a> (const <a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *pSpid)</td></tr>
<tr class="memdesc:a570a26a429bb5c77a48336209bd8acc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the SPI driver is busy.  <a href="#a570a26a429bb5c77a48336209bd8acc5">More...</a><br /></td></tr>
<tr class="separator:a570a26a429bb5c77a48336209bd8acc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implementation of SPI driver, transfer data through DMA. </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a8b91175e70818bc295c1a903dd3b44a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b91175e70818bc295c1a903dd3b44a4">&sect;&nbsp;</a></span>SPID_CSR_DLYBCT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SPID_CSR_DLYBCT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mck, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">delay&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="group___s_a_m_e70___s_p_i.xhtml#ga83472baced06540c97a84138c4e0921c">SPI_CSR_DLYBCT</a>((((delay) / 32 * \</div><div class="line">        ((mck) / 1000000)) / 1000) + 1)</div><div class="ttc" id="group___s_a_m_e70___s_p_i_xhtml_ga83472baced06540c97a84138c4e0921c"><div class="ttname"><a href="group___s_a_m_e70___s_p_i.xhtml#ga83472baced06540c97a84138c4e0921c">SPI_CSR_DLYBCT</a></div><div class="ttdeci">#define SPI_CSR_DLYBCT(value)</div><div class="ttdef"><b>Definition:</b> component_spi.h:146</div></div>
</div><!-- fragment -->
<p>Calculates the value of the DLYBCT field of the Chip Select Register given delay in ns and MCK. </p>

</div>
</div>
<a id="abbb61b55b22f0e3be865799be4e05eb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbb61b55b22f0e3be865799be4e05eb9">&sect;&nbsp;</a></span>SPID_CSR_DLYBS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SPID_CSR_DLYBS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mck, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">delay&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="group___s_a_m_e70___s_p_i.xhtml#ga3941994b67e6d6f31e1bf2c5be54a20a">SPI_CSR_DLYBS</a>((((delay) * \</div><div class="line">        ((mck) / 1000000)) / 1000) + 1)</div><div class="ttc" id="group___s_a_m_e70___s_p_i_xhtml_ga3941994b67e6d6f31e1bf2c5be54a20a"><div class="ttname"><a href="group___s_a_m_e70___s_p_i.xhtml#ga3941994b67e6d6f31e1bf2c5be54a20a">SPI_CSR_DLYBS</a></div><div class="ttdeci">#define SPI_CSR_DLYBS(value)</div><div class="ttdef"><b>Definition:</b> component_spi.h:143</div></div>
</div><!-- fragment -->
<p>Calculates the value of the DLYBS field of the Chip Select Register given delay in ns and MCK. </p>

</div>
</div>
<a id="aee751b4a981d9bc65688a7ee3fba61f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee751b4a981d9bc65688a7ee3fba61f8">&sect;&nbsp;</a></span>SPID_CSR_SCBR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SPID_CSR_SCBR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mck, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">spck&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group___s_a_m_v71___s_p_i.xhtml#ga79a3b403edc0716791844ff68b28f345">SPI_CSR_SCBR</a>((mck) / (spck))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the value of the SCBR field of the Chip Select Register given MCK and SPCK. </p>

</div>
</div>
<a id="a7f2e704bcee6233e727de0d7907e2834"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f2e704bcee6233e727de0d7907e2834">&sect;&nbsp;</a></span>SPID_ERROR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SPID_ERROR&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>An unspecified error has occurred. </p>

</div>
</div>
<a id="abfcf7777c4bb3d21f5e67b04b793e4fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfcf7777c4bb3d21f5e67b04b793e4fb">&sect;&nbsp;</a></span>SPID_ERROR_LOCK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SPID_ERROR_LOCK&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SPI driver is currently in use. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a9c6dff4e6aa11c3609620b9436a3f6da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c6dff4e6aa11c3609620b9436a3f6da">&sect;&nbsp;</a></span>Spid</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___spid.xhtml">_Spid</a>  <a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constant structure associated with SPI port. </p>
<p>This structure prevents client applications to have access in the same time. </p>

</div>
</div>
<a id="aebc642e37d24ab8f4151260c8a268541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebc642e37d24ab8f4151260c8a268541">&sect;&nbsp;</a></span>SpidCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* SpidCallback) (uint8_t, void *)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SPI transfer complete callback. </p>

</div>
</div>
<a id="a8bc9732eedc1e8f02a7bfaf99d97837b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bc9732eedc1e8f02a7bfaf99d97837b">&sect;&nbsp;</a></span>SpidCmd</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___spid_cmd.xhtml">_SpidCmd</a>  <a class="el" href="spi__dma_8h.xhtml#a8bc9732eedc1e8f02a7bfaf99d97837b">SpidCmd</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> <a class="el" href="struct_transfer.xhtml" title="Describes a transfer on a UDP endpoint. ">Transfer</a> Request prepared by the application upper layer. </p>
<p>This structure is sent to the SPI_SendCommand function to start the transfer. At the end of the transfer, the callback is invoked by the interrupt handler. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9592feff98f0b7d84dcf2bfb4f49b40d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9592feff98f0b7d84dcf2bfb4f49b40d">&sect;&nbsp;</a></span>SPID_Configure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPID_Configure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_spi.xhtml">Spi</a> *&#160;</td>
          <td class="paramname"><em>pSpiHw</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>spiId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>spiMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__dmad__structs.xhtml#gaf2c13151514615a6beb35c0d868a5053">sXdmad</a> *&#160;</td>
          <td class="paramname"><em>pXdmad</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the Spid structure and the corresponding SPI &amp; DMA hardware. </p>
<p>select value. The driver will uses DMA channel 0 for RX and DMA channel 1 for TX. The DMA channels are freed automatically when no SPI command processing.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSpid</td><td>Pointer to a Spid instance. </td></tr>
    <tr><td class="paramname">pSpiHw</td><td>Associated SPI peripheral. </td></tr>
    <tr><td class="paramname">spiId</td><td>SPI peripheral identifier. </td></tr>
    <tr><td class="paramname">pDmad</td><td>Pointer to a Dmad instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi__dma_8h_a9592feff98f0b7d84dcf2bfb4f49b40d_cgraph.svg" width="290" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a36e110a3cda7abf52985f30626c47b5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36e110a3cda7abf52985f30626c47b5f">&sect;&nbsp;</a></span>SPID_ConfigureCS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPID_ConfigureCS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwCS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwCsr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures the parameters for the device corresponding to the cs value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSpid</td><td>Pointer to a Spid instance. </td></tr>
    <tr><td class="paramname">cs</td><td>number corresponding to the SPI chip select. </td></tr>
    <tr><td class="paramname">csr</td><td>SPI_CSR value to setup. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi__dma_8h_a36e110a3cda7abf52985f30626c47b5f_cgraph.svg" width="366" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6828b97f4c33b6e809954f39086e12a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6828b97f4c33b6e809954f39086e12a9">&sect;&nbsp;</a></span>SPID_DmaHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPID_DmaHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1a3c8803c9b7a4afa168b5d3912d0e4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a3c8803c9b7a4afa168b5d3912d0e4f">&sect;&nbsp;</a></span>SPID_Handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SPID_Handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a570a26a429bb5c77a48336209bd8acc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a570a26a429bb5c77a48336209bd8acc5">&sect;&nbsp;</a></span>SPID_IsBusy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPID_IsBusy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the SPI driver is busy. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSpid</td><td>Pointer to a Spid instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the SPI driver is currently busy executing a command; otherwise </dd></dl>

</div>
</div>
<a id="ae3c774fb7e4bcf2db4e5d9e8891b6abd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c774fb7e4bcf2db4e5d9e8891b6abd">&sect;&nbsp;</a></span>SPID_SendCommand()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t SPID_SendCommand </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a9c6dff4e6aa11c3609620b9436a3f6da">Spid</a> *&#160;</td>
          <td class="paramname"><em>pSpid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="spi__dma_8h.xhtml#a8bc9732eedc1e8f02a7bfaf99d97837b">SpidCmd</a> *&#160;</td>
          <td class="paramname"><em>pCommand</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts a SPI master transfer. </p>
<p>This is a non blocking function. It will return as soon as the transfer is started.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSpid</td><td>Pointer to a Spid instance. </td></tr>
    <tr><td class="paramname">pCommand</td><td>Pointer to the SPI command to execute. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the transfer has been started successfully; otherwise returns SPID_ERROR_LOCK is the driver is in use, or SPID_ERROR if the command is not valid. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="spi__dma_8h_ae3c774fb7e4bcf2db4e5d9e8891b6abd_cgraph.svg" width="428" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
