<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: include/xep_hal.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">xep_hal.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Brief description.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;stdint.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for xep_hal.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h__incl.svg" width="187" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h__dep__incl.svg" width="5148" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="xep__hal_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct with results specific for a test.  <a href="structxt__test__result__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structxt__radar__t.xhtml">xt_radar_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct with radar configuration.  <a href="structxt__radar__t.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:abaf0e993cd739df6f7c90cf5f6a1a593"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abaf0e993cd739df6f7c90cf5f6a1a593">XT_SELFTEST_DATA_LENGTH</a>&#160;&#160;&#160;256</td></tr>
<tr class="separator:abaf0e993cd739df6f7c90cf5f6a1a593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab3d52480192cb2985bd524ee3e1b4c8d">XTIO_GPIO_MODE</a>&#160;&#160;&#160;0x0001</td></tr>
<tr class="memdesc:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normal GPIO mode - this is default mode.  <a href="#ab3d52480192cb2985bd524ee3e1b4c8d">More...</a><br /></td></tr>
<tr class="separator:ab3d52480192cb2985bd524ee3e1b4c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0aca13b2e9f6051822058e890a02650"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af0aca13b2e9f6051822058e890a02650">XTIO_PULL_UP</a>&#160;&#160;&#160;0x0010</td></tr>
<tr class="memdesc:af0aca13b2e9f6051822058e890a02650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pull up enabled.  <a href="#af0aca13b2e9f6051822058e890a02650">More...</a><br /></td></tr>
<tr class="separator:af0aca13b2e9f6051822058e890a02650"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a0402ba24c9ec87157bfd25fc9c033e3e">XTIO_PULL_DOWN</a>&#160;&#160;&#160;0x0020</td></tr>
<tr class="memdesc:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pull down enabled.  <a href="#a0402ba24c9ec87157bfd25fc9c033e3e">More...</a><br /></td></tr>
<tr class="separator:a0402ba24c9ec87157bfd25fc9c033e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff4345ea8836266d999a952cd7b200b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#adff4345ea8836266d999a952cd7b200b">XTIO_FLOATING</a>&#160;&#160;&#160;0x0030</td></tr>
<tr class="memdesc:adff4345ea8836266d999a952cd7b200b"><td class="mdescLeft">&#160;</td><td class="mdescRight">No pull ups enabled.  <a href="#adff4345ea8836266d999a952cd7b200b">More...</a><br /></td></tr>
<tr class="separator:adff4345ea8836266d999a952cd7b200b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13fe15ce50ca460283a7c29ed1c24303"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a13fe15ce50ca460283a7c29ed1c24303">XTIO_OPEN_DRAIN</a>&#160;&#160;&#160;0x0040</td></tr>
<tr class="separator:a13fe15ce50ca460283a7c29ed1c24303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9793193337497d6f1a56c5cdb708300"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aa9793193337497d6f1a56c5cdb708300">XTIO_INTERRUPT_MODE</a>&#160;&#160;&#160;0x0002</td></tr>
<tr class="memdesc:aa9793193337497d6f1a56c5cdb708300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable interrupt for IO pin.  <a href="#aa9793193337497d6f1a56c5cdb708300">More...</a><br /></td></tr>
<tr class="separator:aa9793193337497d6f1a56c5cdb708300"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a3c505a1c06065976774a1f8e0c34c0a3"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a></td></tr>
<tr class="separator:a3c505a1c06065976774a1f8e0c34c0a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4611b605e45ab401f02cab15c5e38715"><td class="memItemLeft" align="right" valign="top">typedef float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td></tr>
<tr class="memdesc:a4611b605e45ab401f02cab15c5e38715"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit floating-point type definition.  <a href="#a4611b605e45ab401f02cab15c5e38715">More...</a><br /></td></tr>
<tr class="separator:a4611b605e45ab401f02cab15c5e38715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207a2b1d7e551ae04c478adfbee1d22c"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a>) (void *arg)</td></tr>
<tr class="memdesc:a207a2b1d7e551ae04c478adfbee1d22c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef of callback function for notifying of completed transfer.  <a href="#a207a2b1d7e551ae04c478adfbee1d22c">More...</a><br /></td></tr>
<tr class="separator:a207a2b1d7e551ae04c478adfbee1d22c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6953ba4affb2bb9997051c0db5ae6c1"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab6953ba4affb2bb9997051c0db5ae6c1">xtio_host_send_t</a>) (uint8_t *, uint32_t, <a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a>, void *)</td></tr>
<tr class="separator:ab6953ba4affb2bb9997051c0db5ae6c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c104ea225c9f8d9aaf1686991f3fd6"><td class="memItemLeft" align="right" valign="top">typedef int(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ae3c104ea225c9f8d9aaf1686991f3fd6">xtio_serial_init_t</a>) (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *)</td></tr>
<tr class="separator:ae3c104ea225c9f8d9aaf1686991f3fd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a92e0221f7ca588ab70b2b5c7348186f7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> { <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7af94e6911231594aff63156dd46a493f9">XT_SUCCESS</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7a696ef68b6db1d1a578945a52c17732cc">XT_NOT_IMPLEMENTED</a> = 900, 
<a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7a8e9b114d7e549fce776d183c7ffe2195">XT_ERROR</a> = 999
 }</td></tr>
<tr class="separator:a92e0221f7ca588ab70b2b5c7348186f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da954804eef3f19c7003ad7717dd2db347">XT_OPMODE_FACTORY</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da1cd76f74ac7a6a72af778fb02805f715">XT_OPMODE_SYNC_SERIAL</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da2d826b2a5a96acfbdd8056be1d29fb81">XT_OPMODE_SPI</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da552daf0181a4fdec71585537850812a0">XT_OPMODE_SERIAL</a> = 3, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da484326c3e15c4045dfe96dab4b11f28d">XT_OPMODE_CERTIFICATION</a> = 32, 
<a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115da9e68d3056bb9e86ea9f47bab0762632d">XT_OPMODE_UNINITIALIZED</a> = 0xFF
<br />
 }<tr class="memdesc:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation mode.  <a href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:af58e0890a0aeecb7d4301c4dc3e4115d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccac2e1f8e6be69b0f41db8ebdcce1fcd39">XT_SWRST_NONE</a> = 0x00, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccaf53371b99fc85bbd247d78c2f7141ad5">XT_SWRST_INTENDED</a> = 0x01, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca0a7e81c6eaf6120fdc84f9f895eee17a">XT_SWRST_BOOTLOADER</a> = 0x02, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca238d7daef58554b6fab408f05e1d1b45">XT_SWRST_SYSTEM_MONITOR</a> = 0x10, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca44df7b604eff7e025d31852eae42ad6d">XT_SWRST_MALLOC_FAILED</a> = 0x11, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca236bbe24c234e628582c62d2880617e2">XT_SWRST_STACK_OVERFLOW</a> = 0x12, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca1e62a39b080510c57e3801abc7ede608">XT_SWRST_HARDFAULT</a> = 0x13, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca7e537acfc3b826e57184bfda1aecb9ce">XT_SWRST_MEMMANAGE</a> = 0x14, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccaf36515c9f5557670f8783b137ca933ff">XT_SWRST_BUSFAULT</a> = 0x15, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca091e9119bd72e6996587651046ee3ce8">XT_SWRST_USAGEFAULT</a> = 0x16, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca4cb2e496fa9c68defa4afc21fd513264">XT_SWRST_DEBUGMON</a> = 0x17, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccad0d7f4b9927a190383c1b1a9458a0539">XT_SWRST_NMI</a> = 0x18, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca74581fbae14277c4bc07d4aa452eee52">XT_SWRST_WDT</a> = 0x19, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca5f896de134d5599ceba404809fc917a9">XT_SWRST_HW_PIN</a> = 0x1A, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccaf23aeccfbf9bcb34a4ba5bb87f2a8229">XT_SWRST_HARD_WDT</a> = 0x1B, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccac703e822f6efd49b5d7063bebf93960b">XT_SWRST_ASSERT</a> = 0x1C, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fccac2c0356dbd9d4785caaa049817b32a1d">XT_SWRST_HOSTCOMMAND</a> = 0x30, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca5eeb7d6d7a101bc18c2b3d4c09786f72">XT_SWRST_APPUNLOAD</a> = 0x40, 
<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcca62e3cfe8d1252c5e09cac4a6aa43bd82">XT_SWRST_UNDEFINED</a> = 0x50
<br />
 }<tr class="memdesc:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cause of a software-triggered reset.  <a href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a03d192f5543ec51c3b36ab5b022d8fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d045520d5e2aa2f3bc58de038a43c49"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ada0ed79c1d64b9c97a22be57e0633c51">XTIO_XETHRU_IO1</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49af18e480230702a15a4862169df364bec">XTIO_XETHRU_IO2</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a75d16332cd4aeab3d880a557744f2234">XTIO_XETHRU_IO3</a> = 3, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a166beeafc6d0369cffb352b87564d520">XTIO_XETHRU_IO4</a> = 4, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49aa6b5da273178793ce307437bf81b8d2a">XTIO_XETHRU_IO5</a> = 5, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a586fe434c74a67499e8bb8d891825416">XTIO_XETHRU_IO6</a> = 6, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a8cb663887552be5637f054af69e75d93">XTIO_XETHRU_IO7</a> = 7, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49aaf3d8e50251d73566b3e6f5a87bf1eba">XTIO_XETHRU_IO8</a> = 8, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49af7cd773157ae654c55e6f99d1a0122f5">XTIO_XETHRU_IO9</a> = 9, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a6fa37fa1ca47e867517cb22d29a9102d">XTIO_X4_IO1</a> = 41, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a8f9c15ebdeb32fea70a689c16304d8d9">XTIO_X4_IO2</a> = 42, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a0d98fb7d04531b0edb83437229dcc839">XTIO_X4_IO3</a> = 43, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a256be84be9b60fc56b49e030f253e8bc">XTIO_X4_IO4</a> = 44, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49acdcb9c0c1057227930241235ea426e90">XTIO_X4_ENABLE</a> = 49, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a1ef9a78fe8764a8f839e8de45975a537">XTIO_MODE_SEL1</a> = 70, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a7b371ef59416d7f27127e2ffa697a795">XTIO_MODE_SEL2</a> = 71, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49af023c6f7d850e88a506cf51f5803466c">XTIO_SERIAL_SCLK</a> = 80, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a62b0ddb69d2dfa43fbdd613f056adfc2">XTIO_SERIAL_nSS</a> = 81, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49acb7f389d72f0941032d31166a6f4ac12">XTIO_SERIAL_RX</a> = 82, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a3bd30232f8cbf2ab82dee770d477ad23">XTIO_SERIAL_TX</a> = 83, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ade2ffaa22617ff6dbe340a27543a0897">XTIO_SERIAL_SDA</a> = 84, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49a6ce008bf14e645a7cc335ffa028c6332">XTIO_SERIAL_SCL</a> = 85, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ae3f102103a158548ce70dc528812141c">XTIO_SERIAL_IRQ</a> = 86, 
<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49ae3650a7541762c434a47b929622f8cae">XTIO_USB_VBUS</a> = 90
<br />
 }<tr class="memdesc:a2d045520d5e2aa2f3bc58de038a43c49"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of all IO pins that may be available.  <a href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a2d045520d5e2aa2f3bc58de038a43c49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396877b2b28db63069691151b759a5cb"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a> { <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cba73eb6fa29703c57e721e4ecd14e9c98c">XTIO_INTERRUPT_NONE</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cbaa9cfa9c0c4dbaeb08105bcf3b8b85026">XTIO_INTERRUPT_RISING_EDGE</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cbacdd88aad5e85dba99c90e24394ed123f">XTIO_INTERRUPT_FALLING_EDGE</a> = 2
 }<tr class="memdesc:a396877b2b28db63069691151b759a5cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Trigger mode for interrupt on IO pins.  <a href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a396877b2b28db63069691151b759a5cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a> { <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4aa1881efe569101feb8fe91619f3ff3c3">XTIO_INPUT</a>, 
<a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4aecd7fde249f00325cb7d875268f7709b">XTIO_OUTPUT</a>
 }<tr class="memdesc:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">IO pin direction "macroes".  <a href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a8bb288b15f8da9edbbb414d0b72dd9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> { <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5ba3c64f5e24ae70f2b3c81d1bcadeb2a9c">XTIO_PIN_LEVEL_LOW</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5baae5dced8083873daa158eef83cadd409">XTIO_PIN_LEVEL_HIGH</a> = 1
 }<tr class="memdesc:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">IOPORT levels.  <a href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a1c2710d0b7b7fdbe602d1159aca07e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe742b85eb29e92e6acc722cb848ffc8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a09fca6c55c289371ea748d7af62e1a6f">XTIO_LED_RED</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8ad9cd549bfe27dd71e6582f8b44a5fab2">XTIO_LED_GREEN</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8acceb3b7da3eb33cf2240983c079e260a">XTIO_LED_BLUE</a> = 3, 
<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a691f66251ce6a1ebe9802eaa5a7c9fb0">XTIO_LED_YELLOW</a> = 4, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8a66d8899079b805c8552f73787b5c1baa">XTIO_LED_WHITE</a> = 5
<br />
 }<tr class="memdesc:abe742b85eb29e92e6acc722cb848ffc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">ID of all LEDs that may be available.  <a href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:abe742b85eb29e92e6acc722cb848ffc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae05ac0ba669068133f24e75a6302a21"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a> { <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21a0888088ed0d9076ccade01e5055cd3c3">XTIO_LED_ONOFF</a>, 
<a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21aca819c01ee17e78f6b69acfd6968725b">XTIO_LED_PWM</a>
 }<tr class="memdesc:aae05ac0ba669068133f24e75a6302a21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mode for LEDs that may be available.  <a href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:aae05ac0ba669068133f24e75a6302a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> { <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8a2b49a372e9704e1f8a5bba6849009a88">XTIO_LED_OFF</a> = 0, 
<a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8af085e9845957f7aece9dba3bed4393de">XTIO_LED_ON</a> = 1
 }<tr class="memdesc:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">States for LEDs that may be available.  <a href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ad8a6b1a6e624c4ff2c5e2af26685afb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad084a0a637f44d3c04365d5b654fab1d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> { <br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da37b9d3ca0bda18ac655a9f7b84f17a96">XTIO_SUCCESS</a> = XT_SUCCESS, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da34ac40338d44b5fbc9d032eae0d8efbe">XTIO_WRONG_PIN_ID</a> = 1, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da7ab2ad5d11b8ba20f580681316046cc4">XTIO_IO_FUNCTION_NOT_AVAILABLE</a> = 2, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da46542e3b2a85053e1893e2bb6ed698d1">XTIO_INTERRUPT_NOT_AVAILABLE</a> = 3, 
<br />
&#160;&#160;<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da64d16083198f43d1647d180bfa2f5ee1">XTIO_MODE_NOT_SUPPORTED</a> = 4, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da8035212b6e7def315eb3ea5bc7583562">XTIO_WRONG_LED_ID</a> = 10, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da46ff9649ec8eba93a55dfb6bed211472">XTIO_LED_MODE_NOT_AVAILABLE</a> = 11, 
<a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1da8240cca8a4c72ed31923cfe3d80c12fa">XTIO_REPEAT</a> = 20
<br />
 }<tr class="memdesc:ad084a0a637f44d3c04365d5b654fab1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error codes for Xethru IO driver.  <a href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ad084a0a637f44d3c04365d5b654fab1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a23a7563c734f3b439d1d26f0598fafe7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a23a7563c734f3b439d1d26f0598fafe7">xt_run_selftest</a> (uint8_t testcode, <a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a> *test_result)</td></tr>
<tr class="memdesc:a23a7563c734f3b439d1d26f0598fafe7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs the specified selftest.  <a href="#a23a7563c734f3b439d1d26f0598fafe7">More...</a><br /></td></tr>
<tr class="separator:a23a7563c734f3b439d1d26f0598fafe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6b80e97e26108da85bc193be8ee57ed"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af6b80e97e26108da85bc193be8ee57ed">xt_selftest_x4_connectivity_mark_faulty_pin</a> (int pin)</td></tr>
<tr class="memdesc:af6b80e97e26108da85bc193be8ee57ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access function for X4Driver to mark a faulty pin.  <a href="#af6b80e97e26108da85bc193be8ee57ed">More...</a><br /></td></tr>
<tr class="separator:af6b80e97e26108da85bc193be8ee57ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fc787dfe17335b3f6eab3f9db8d2998"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a7fc787dfe17335b3f6eab3f9db8d2998">xt_selftest_x4_connectivity_get_pin_table</a> (int *count, const int **x4_pins, const int **mcu_pins)</td></tr>
<tr class="memdesc:a7fc787dfe17335b3f6eab3f9db8d2998"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access function for X4Driver to get the pin combinations to test.  <a href="#a7fc787dfe17335b3f6eab3f9db8d2998">More...</a><br /></td></tr>
<tr class="separator:a7fc787dfe17335b3f6eab3f9db8d2998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8e58faffa8a7b0934ca76bc1fa5ef6fa">xt_wait</a> (uint32_t ms_to_wait)</td></tr>
<tr class="memdesc:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Causes the calling task to wait and yields to another task.  <a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">More...</a><br /></td></tr>
<tr class="separator:a8e58faffa8a7b0934ca76bc1fa5ef6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a7d0980e5e1fb4f42a5d10102c91609f4">xt_delay_us</a> (uint32_t us_to_wait)</td></tr>
<tr class="memdesc:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delays the execution for the specified number of microseconds.  <a href="#a7d0980e5e1fb4f42a5d10102c91609f4">More...</a><br /></td></tr>
<tr class="separator:a7d0980e5e1fb4f42a5d10102c91609f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2af126089abe1d676edfc1400d0bf7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ace2af126089abe1d676edfc1400d0bf7">xt_software_reset</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:ace2af126089abe1d676edfc1400d0bf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers a software reset of MCU.  <a href="#ace2af126089abe1d676edfc1400d0bf7">More...</a><br /></td></tr>
<tr class="separator:ace2af126089abe1d676edfc1400d0bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a368ae5b6898f4745b8ccf4d3d15b38ac">xt_use_external_memory</a> (bool use)</td></tr>
<tr class="memdesc:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Controls whether or not to use external memory.  <a href="#a368ae5b6898f4745b8ccf4d3d15b38ac">More...</a><br /></td></tr>
<tr class="separator:a368ae5b6898f4745b8ccf4d3d15b38ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31dcedbddd6f896d0157ce276d449fd4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a31dcedbddd6f896d0157ce276d449fd4">xt_external_memory_enabled</a> (void)</td></tr>
<tr class="memdesc:a31dcedbddd6f896d0157ce276d449fd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if external memory is enabled.  <a href="#a31dcedbddd6f896d0157ce276d449fd4">More...</a><br /></td></tr>
<tr class="separator:a31dcedbddd6f896d0157ce276d449fd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf93e159c610831f349d07c00962f80d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#acf93e159c610831f349d07c00962f80d">xt_fast_memory_enabled</a> (void)</td></tr>
<tr class="memdesc:acf93e159c610831f349d07c00962f80d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if fast memory is enabled.  <a href="#acf93e159c610831f349d07c00962f80d">More...</a><br /></td></tr>
<tr class="separator:acf93e159c610831f349d07c00962f80d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c4b3201bcc90f24579249f3b6297fb3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a3c4b3201bcc90f24579249f3b6297fb3">xt_get_reset_count</a> (void)</td></tr>
<tr class="memdesc:a3c4b3201bcc90f24579249f3b6297fb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get reset count.  <a href="#a3c4b3201bcc90f24579249f3b6297fb3">More...</a><br /></td></tr>
<tr class="separator:a3c4b3201bcc90f24579249f3b6297fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a5e62effeb5c5323c3d423225a6a3dbf3">xt_get_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *reason)</td></tr>
<tr class="memdesc:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the cause of the previous software reset.  <a href="#a5e62effeb5c5323c3d423225a6a3dbf3">More...</a><br /></td></tr>
<tr class="separator:a5e62effeb5c5323c3d423225a6a3dbf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88a96f708160bd3ccf8a8f0986f51d88"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a88a96f708160bd3ccf8a8f0986f51d88">xt_get_crash_count</a> (void)</td></tr>
<tr class="memdesc:a88a96f708160bd3ccf8a8f0986f51d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get crash count.  <a href="#a88a96f708160bd3ccf8a8f0986f51d88">More...</a><br /></td></tr>
<tr class="separator:a88a96f708160bd3ccf8a8f0986f51d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1edd0aeeab16f7278315403bcd6a29b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ac1edd0aeeab16f7278315403bcd6a29b">xt_reset_crash_count</a> (void)</td></tr>
<tr class="memdesc:ac1edd0aeeab16f7278315403bcd6a29b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets crash count.  <a href="#ac1edd0aeeab16f7278315403bcd6a29b">More...</a><br /></td></tr>
<tr class="separator:ac1edd0aeeab16f7278315403bcd6a29b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a389bc6b896aa270d8a1e473dd9c32ffc">xt_set_reset_reason</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> reason)</td></tr>
<tr class="memdesc:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the cause of the coming software reset.  <a href="#a389bc6b896aa270d8a1e473dd9c32ffc">More...</a><br /></td></tr>
<tr class="separator:a389bc6b896aa270d8a1e473dd9c32ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0d28c0bbd203c3d66b4e46cf4e7fb5f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab0d28c0bbd203c3d66b4e46cf4e7fb5f">xt_get_default_radar_config</a> (<a class="el" href="structxt__radar__t.xhtml">xt_radar_t</a> *config)</td></tr>
<tr class="memdesc:ab0d28c0bbd203c3d66b4e46cf4e7fb5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets default radar configuration.  <a href="#ab0d28c0bbd203c3d66b4e46cf4e7fb5f">More...</a><br /></td></tr>
<tr class="separator:ab0d28c0bbd203c3d66b4e46cf4e7fb5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2426ce12540f282ecbb2a73534d8ecb4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a2426ce12540f282ecbb2a73534d8ecb4">xt_use_external_clock</a> (bool use)</td></tr>
<tr class="memdesc:a2426ce12540f282ecbb2a73534d8ecb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instructs the firmware whether to use either a crystal oscillator or external clock.  <a href="#a2426ce12540f282ecbb2a73534d8ecb4">More...</a><br /></td></tr>
<tr class="separator:a2426ce12540f282ecbb2a73534d8ecb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56773fb0b5a5ce0e8e4633581137100d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a56773fb0b5a5ce0e8e4633581137100d">xt_using_external_clock</a> (void)</td></tr>
<tr class="memdesc:a56773fb0b5a5ce0e8e4633581137100d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the crystal oscillator or external clock should be used.  <a href="#a56773fb0b5a5ce0e8e4633581137100d">More...</a><br /></td></tr>
<tr class="separator:a56773fb0b5a5ce0e8e4633581137100d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba84ec695575730f2fd3b4f75eefe28a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aba84ec695575730f2fd3b4f75eefe28a">xt_feed_watchdog</a> (void)</td></tr>
<tr class="memdesc:aba84ec695575730f2fd3b4f75eefe28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the watchdog timer.  <a href="#aba84ec695575730f2fd3b4f75eefe28a">More...</a><br /></td></tr>
<tr class="separator:aba84ec695575730f2fd3b4f75eefe28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a362d4391cf2e203a9ed7b1dbbfe65f25">xt_trigger_crash</a> (<a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> crash_reason, const char *crash_info, bool full_dump)</td></tr>
<tr class="memdesc:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers a crashdump and reset of module.  <a href="#a362d4391cf2e203a9ed7b1dbbfe65f25">More...</a><br /></td></tr>
<tr class="separator:a362d4391cf2e203a9ed7b1dbbfe65f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f57228b9448df87a3f5f30968b3fa8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#af1f57228b9448df87a3f5f30968b3fa8">xt_get_operation_mode</a> (void)</td></tr>
<tr class="memdesc:af1f57228b9448df87a3f5f30968b3fa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the operation mode of the module.  <a href="#af1f57228b9448df87a3f5f30968b3fa8">More...</a><br /></td></tr>
<tr class="separator:af1f57228b9448df87a3f5f30968b3fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d576cef4eead3e26b3adf733cd487c2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8d576cef4eead3e26b3adf733cd487c2">xt_get_certification_submode</a> (void)</td></tr>
<tr class="memdesc:a8d576cef4eead3e26b3adf733cd487c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the submode of the module for certification.  <a href="#a8d576cef4eead3e26b3adf733cd487c2">More...</a><br /></td></tr>
<tr class="separator:a8d576cef4eead3e26b3adf733cd487c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ac6fbcd6ee86a6cc239db400a2f9560a6">xt_get_system_timer_us</a> (void)</td></tr>
<tr class="memdesc:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the system timer in microseconds.  <a href="#ac6fbcd6ee86a6cc239db400a2f9560a6">More...</a><br /></td></tr>
<tr class="separator:ac6fbcd6ee86a6cc239db400a2f9560a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b086edc4d10515d81e925efba022638"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a9b086edc4d10515d81e925efba022638">xt_get_program_counter_from_task_handle</a> (void *handle)</td></tr>
<tr class="memdesc:a9b086edc4d10515d81e925efba022638"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the program counter of the specified task.  <a href="#a9b086edc4d10515d81e925efba022638">More...</a><br /></td></tr>
<tr class="separator:a9b086edc4d10515d81e925efba022638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab218029969f3b92b546b111d1c1e03d0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab218029969f3b92b546b111d1c1e03d0">xt_get_stack_area_from_task_handle</a> (void *handle, uint32_t stack_size, void **stack_pointer, uint32_t *depth)</td></tr>
<tr class="memdesc:ab218029969f3b92b546b111d1c1e03d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the stack start pointer and depth for specified task.  <a href="#ab218029969f3b92b546b111d1c1e03d0">More...</a><br /></td></tr>
<tr class="separator:ab218029969f3b92b546b111d1c1e03d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe26eed3d46d8d18c673b026a4c1af49"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#abe26eed3d46d8d18c673b026a4c1af49">xt_get_cpu_load</a> (void)</td></tr>
<tr class="memdesc:abe26eed3d46d8d18c673b026a4c1af49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current average CPU load.  <a href="#abe26eed3d46d8d18c673b026a4c1af49">More...</a><br /></td></tr>
<tr class="separator:abe26eed3d46d8d18c673b026a4c1af49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b959a98419bc53f38212b561edb0d07"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a4b959a98419bc53f38212b561edb0d07">xtio_flash_erase</a> (uint32_t address, uint32_t size)</td></tr>
<tr class="memdesc:a4b959a98419bc53f38212b561edb0d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases specified flash area.  <a href="#a4b959a98419bc53f38212b561edb0d07">More...</a><br /></td></tr>
<tr class="separator:a4b959a98419bc53f38212b561edb0d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f73f9b3594686e4318f0ca195cc38b4"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a0f73f9b3594686e4318f0ca195cc38b4">xtio_flash_write</a> (uint32_t address, uint8_t *data, uint32_t size)</td></tr>
<tr class="memdesc:a0f73f9b3594686e4318f0ca195cc38b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes data to flash.  <a href="#a0f73f9b3594686e4318f0ca195cc38b4">More...</a><br /></td></tr>
<tr class="separator:a0f73f9b3594686e4318f0ca195cc38b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69a3f02de1c4e206640015c8d19af4f9"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a69a3f02de1c4e206640015c8d19af4f9">xtio_flash_store</a> (uint32_t destination_address, uint8_t *buffer, uint32_t size)</td></tr>
<tr class="memdesc:a69a3f02de1c4e206640015c8d19af4f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores data in flash.  <a href="#a69a3f02de1c4e206640015c8d19af4f9">More...</a><br /></td></tr>
<tr class="separator:a69a3f02de1c4e206640015c8d19af4f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a141d202242dba41a03dbaddf29c88d6e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a141d202242dba41a03dbaddf29c88d6e">xtio_get_page_size</a> (void)</td></tr>
<tr class="memdesc:a141d202242dba41a03dbaddf29c88d6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the flash page size.  <a href="#a141d202242dba41a03dbaddf29c88d6e">More...</a><br /></td></tr>
<tr class="separator:a141d202242dba41a03dbaddf29c88d6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fac657ee93738242d05ad86ceb17260"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a1fac657ee93738242d05ad86ceb17260">xtio_get_block_size</a> (void)</td></tr>
<tr class="memdesc:a1fac657ee93738242d05ad86ceb17260"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the flash block size.  <a href="#a1fac657ee93738242d05ad86ceb17260">More...</a><br /></td></tr>
<tr class="separator:a1fac657ee93738242d05ad86ceb17260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2daff1abf4c972f5d57d94a65a24a3cf"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a2daff1abf4c972f5d57d94a65a24a3cf">xtio_get_flash_size</a> (void)</td></tr>
<tr class="memdesc:a2daff1abf4c972f5d57d94a65a24a3cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the entire flash.  <a href="#a2daff1abf4c972f5d57d94a65a24a3cf">More...</a><br /></td></tr>
<tr class="separator:a2daff1abf4c972f5d57d94a65a24a3cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d0b9f16d57df52e21d6f8d08b8c7d48"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a2d0b9f16d57df52e21d6f8d08b8c7d48">xtio_flash_get_unique_id</a> (uint8_t *buffer, uint32_t max_size, uint32_t *size)</td></tr>
<tr class="memdesc:a2d0b9f16d57df52e21d6f8d08b8c7d48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an ascii string of a cpu unique identifyer.  <a href="#a2d0b9f16d57df52e21d6f8d08b8c7d48">More...</a><br /></td></tr>
<tr class="separator:a2d0b9f16d57df52e21d6f8d08b8c7d48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a4f087fae5e8098b3b9c8f9df124b7f4e">xtio_set_direction</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, int direction, int level)</td></tr>
<tr class="memdesc:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set direction of specified IO pin.  <a href="#a4f087fae5e8098b3b9c8f9df124b7f4e">More...</a><br /></td></tr>
<tr class="separator:a4f087fae5e8098b3b9c8f9df124b7f4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387b000f6fb5128449611d9fe0e47369"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a387b000f6fb5128449611d9fe0e47369">xtio_set_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, int level)</td></tr>
<tr class="memdesc:a387b000f6fb5128449611d9fe0e47369"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the level of specified IO pin.  <a href="#a387b000f6fb5128449611d9fe0e47369">More...</a><br /></td></tr>
<tr class="separator:a387b000f6fb5128449611d9fe0e47369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ab37c30dc5bf179f86b20907fb42e1e4d">xtio_toggle_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id)</td></tr>
<tr class="memdesc:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggle the level of specified IO pin.  <a href="#ab37c30dc5bf179f86b20907fb42e1e4d">More...</a><br /></td></tr>
<tr class="separator:ab37c30dc5bf179f86b20907fb42e1e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a984c6d05372bfd34dc338a85d21dc81a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a984c6d05372bfd34dc338a85d21dc81a">xtio_get_level</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> *level)</td></tr>
<tr class="memdesc:a984c6d05372bfd34dc338a85d21dc81a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get level of specified IO pin.  <a href="#a984c6d05372bfd34dc338a85d21dc81a">More...</a><br /></td></tr>
<tr class="separator:a984c6d05372bfd34dc338a85d21dc81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c169f60838175920c2f9ab467d020c1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a9c169f60838175920c2f9ab467d020c1">xtio_set_pin_mode</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, uint32_t mode)</td></tr>
<tr class="memdesc:a9c169f60838175920c2f9ab467d020c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set mode for specified IO pin.  <a href="#a9c169f60838175920c2f9ab467d020c1">More...</a><br /></td></tr>
<tr class="separator:a9c169f60838175920c2f9ab467d020c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b22ca935e03d989e5572a9aa8bf29c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a90b22ca935e03d989e5572a9aa8bf29c">xtio_irq_register_callback</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id, void(*irq_callback)(void), <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a> mode)</td></tr>
<tr class="memdesc:a90b22ca935e03d989e5572a9aa8bf29c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register interrupt callback function.  <a href="#a90b22ca935e03d989e5572a9aa8bf29c">More...</a><br /></td></tr>
<tr class="separator:a90b22ca935e03d989e5572a9aa8bf29c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8f8214e214e26de85a41a1b0af1fc6d7">xtio_irq_unregister_callback</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> pin_id)</td></tr>
<tr class="memdesc:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister interrupt handler.  <a href="#a8f8214e214e26de85a41a1b0af1fc6d7">More...</a><br /></td></tr>
<tr class="separator:a8f8214e214e26de85a41a1b0af1fc6d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a02d431b74bbdd1cc5d4ff79903f7ebd6">xtio_led_init</a> (<a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> led_id, int mode, float led_state)</td></tr>
<tr class="memdesc:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate LED.  <a href="#a02d431b74bbdd1cc5d4ff79903f7ebd6">More...</a><br /></td></tr>
<tr class="separator:a02d431b74bbdd1cc5d4ff79903f7ebd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aea9d8137a0fddb8ed22f14f318dfec4f">xtio_led_set_state</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> led_id, float led_state)</td></tr>
<tr class="memdesc:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set LED state.  <a href="#aea9d8137a0fddb8ed22f14f318dfec4f">More...</a><br /></td></tr>
<tr class="separator:aea9d8137a0fddb8ed22f14f318dfec4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a7b093baba56abe7b2f64e2221ba40"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ae8a7b093baba56abe7b2f64e2221ba40">xtio_led_toggle_state</a> (<a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> led_id)</td></tr>
<tr class="memdesc:ae8a7b093baba56abe7b2f64e2221ba40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggle LED state.  <a href="#ae8a7b093baba56abe7b2f64e2221ba40">More...</a><br /></td></tr>
<tr class="separator:ae8a7b093baba56abe7b2f64e2221ba40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3e424512de2e10133b2ffe41f6577ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aa3e424512de2e10133b2ffe41f6577ea">xtio_extram_init</a> (void)</td></tr>
<tr class="memdesc:aa3e424512de2e10133b2ffe41f6577ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize external RAM if available.  <a href="#aa3e424512de2e10133b2ffe41f6577ea">More...</a><br /></td></tr>
<tr class="separator:aa3e424512de2e10133b2ffe41f6577ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75257f6264fe4bb32722e8eccd519680"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a75257f6264fe4bb32722e8eccd519680">xtio_uart_set_baudrate</a> (int baudrate)</td></tr>
<tr class="memdesc:a75257f6264fe4bb32722e8eccd519680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures UART module with the specified baudrate.  <a href="#a75257f6264fe4bb32722e8eccd519680">More...</a><br /></td></tr>
<tr class="separator:a75257f6264fe4bb32722e8eccd519680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1d90c71870adfe51d508b4661ba2b78"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#ae1d90c71870adfe51d508b4661ba2b78">xtio_host_send</a> (uint8_t *buffer, uint32_t <a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, <a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a> callback, void *callback_arg)</td></tr>
<tr class="memdesc:ae1d90c71870adfe51d508b4661ba2b78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a data buffer to host through a serial port - USB or UART.  <a href="#ae1d90c71870adfe51d508b4661ba2b78">More...</a><br /></td></tr>
<tr class="separator:ae1d90c71870adfe51d508b4661ba2b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58295d828f76f664dffe8a080a2ab8b6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a58295d828f76f664dffe8a080a2ab8b6">xtio_host_send_debug</a> (uint8_t *buffer, uint32_t <a class="el" href="host__hid_8c.xhtml#ae809d5359ac030c60a30a8f0b2294b82">length</a>, <a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a> callback, void *callback_arg)</td></tr>
<tr class="memdesc:a58295d828f76f664dffe8a080a2ab8b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a data buffer to host through debug interface.  <a href="#a58295d828f76f664dffe8a080a2ab8b6">More...</a><br /></td></tr>
<tr class="separator:a58295d828f76f664dffe8a080a2ab8b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143e7abdc640864b988cc34a2d53fd81"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a143e7abdc640864b988cc34a2d53fd81">xtio_serial_com_init</a> (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *xt_protocol)</td></tr>
<tr class="memdesc:a143e7abdc640864b988cc34a2d53fd81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate serial communication - USB if available, otherwise UART.  <a href="#a143e7abdc640864b988cc34a2d53fd81">More...</a><br /></td></tr>
<tr class="separator:a143e7abdc640864b988cc34a2d53fd81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875308939bcbe311557d0e0fb97f9b7d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a875308939bcbe311557d0e0fb97f9b7d">xtio_serial_com_debug_init</a> (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *xt_protocol)</td></tr>
<tr class="memdesc:a875308939bcbe311557d0e0fb97f9b7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate debug serial communication.  <a href="#a875308939bcbe311557d0e0fb97f9b7d">More...</a><br /></td></tr>
<tr class="separator:a875308939bcbe311557d0e0fb97f9b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4316287f7b348fc5799124596685b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#aad4316287f7b348fc5799124596685b9">xt_has_bootloader</a> (void)</td></tr>
<tr class="memdesc:aad4316287f7b348fc5799124596685b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if we have a bootloader available.  <a href="#aad4316287f7b348fc5799124596685b9">More...</a><br /></td></tr>
<tr class="separator:aad4316287f7b348fc5799124596685b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bd9bef2216392003bffa6c552e0779b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="xep__hal_8h.xhtml#a8bd9bef2216392003bffa6c552e0779b">xt_bootloader_string</a> (void)</td></tr>
<tr class="memdesc:a8bd9bef2216392003bffa6c552e0779b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a string identifying what type of bootloader we have, or "" if we don't.  <a href="#a8bd9bef2216392003bffa6c552e0779b">More...</a><br /></td></tr>
<tr class="separator:a8bd9bef2216392003bffa6c552e0779b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Brief description. </p>
<p>Longer description </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="abaf0e993cd739df6f7c90cf5f6a1a593"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaf0e993cd739df6f7c90cf5f6a1a593">&sect;&nbsp;</a></span>XT_SELFTEST_DATA_LENGTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XT_SELFTEST_DATA_LENGTH&#160;&#160;&#160;256</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adff4345ea8836266d999a952cd7b200b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adff4345ea8836266d999a952cd7b200b">&sect;&nbsp;</a></span>XTIO_FLOATING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_FLOATING&#160;&#160;&#160;0x0030</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>No pull ups enabled. </p>

</div>
</div>
<a id="ab3d52480192cb2985bd524ee3e1b4c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3d52480192cb2985bd524ee3e1b4c8d">&sect;&nbsp;</a></span>XTIO_GPIO_MODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_GPIO_MODE&#160;&#160;&#160;0x0001</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Normal GPIO mode - this is default mode. </p>

</div>
</div>
<a id="aa9793193337497d6f1a56c5cdb708300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9793193337497d6f1a56c5cdb708300">&sect;&nbsp;</a></span>XTIO_INTERRUPT_MODE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_INTERRUPT_MODE&#160;&#160;&#160;0x0002</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable interrupt for IO pin. </p>

</div>
</div>
<a id="a13fe15ce50ca460283a7c29ed1c24303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13fe15ce50ca460283a7c29ed1c24303">&sect;&nbsp;</a></span>XTIO_OPEN_DRAIN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_OPEN_DRAIN&#160;&#160;&#160;0x0040</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0402ba24c9ec87157bfd25fc9c033e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0402ba24c9ec87157bfd25fc9c033e3e">&sect;&nbsp;</a></span>XTIO_PULL_DOWN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_PULL_DOWN&#160;&#160;&#160;0x0020</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pull down enabled. </p>

</div>
</div>
<a id="af0aca13b2e9f6051822058e890a02650"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0aca13b2e9f6051822058e890a02650">&sect;&nbsp;</a></span>XTIO_PULL_UP</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define XTIO_PULL_UP&#160;&#160;&#160;0x0010</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pull up enabled. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a4611b605e45ab401f02cab15c5e38715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4611b605e45ab401f02cab15c5e38715">&sect;&nbsp;</a></span>float32_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef float <a class="el" href="x4driver_8h.xhtml#a4611b605e45ab401f02cab15c5e38715">float32_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit floating-point type definition. </p>

</div>
</div>
<a id="a207a2b1d7e551ae04c478adfbee1d22c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a207a2b1d7e551ae04c478adfbee1d22c">&sect;&nbsp;</a></span>xtio_host_send_completed_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(*  xtio_host_send_completed_t) (void *arg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef of callback function for notifying of completed transfer. </p>

</div>
</div>
<a id="ab6953ba4affb2bb9997051c0db5ae6c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6953ba4affb2bb9997051c0db5ae6c1">&sect;&nbsp;</a></span>xtio_host_send_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_host_send_t) (uint8_t *, uint32_t, <a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a>, void *)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3c104ea225c9f8d9aaf1686991f3fd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c104ea225c9f8d9aaf1686991f3fd6">&sect;&nbsp;</a></span>xtio_serial_init_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*  xtio_serial_init_t) (<a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c505a1c06065976774a1f8e0c34c0a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c505a1c06065976774a1f8e0c34c0a3">&sect;&nbsp;</a></span>xtProtocol</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> <a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a92e0221f7ca588ab70b2b5c7348186f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92e0221f7ca588ab70b2b5c7348186f7">&sect;&nbsp;</a></span>xt_error_codes_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7af94e6911231594aff63156dd46a493f9"></a>XT_SUCCESS&#160;</td><td class="fielddoc"><p>Return value of a function that executed successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7a696ef68b6db1d1a578945a52c17732cc"></a>XT_NOT_IMPLEMENTED&#160;</td><td class="fielddoc"><p>Return value of a function that is not implemented. </p>
</td></tr>
<tr><td class="fieldname"><a id="a92e0221f7ca588ab70b2b5c7348186f7a8e9b114d7e549fce776d183c7ffe2195"></a>XT_ERROR&#160;</td><td class="fielddoc"><p>Return value of a function where an unspecified error occured. </p>
</td></tr>
</table>

</div>
</div>
<a id="af58e0890a0aeecb7d4301c4dc3e4115d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af58e0890a0aeecb7d4301c4dc3e4115d">&sect;&nbsp;</a></span>xt_opmode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Operation mode. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da954804eef3f19c7003ad7717dd2db347"></a>XT_OPMODE_FACTORY&#160;</td><td class="fielddoc"><p>Factory test mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da1cd76f74ac7a6a72af778fb02805f715"></a>XT_OPMODE_SYNC_SERIAL&#160;</td><td class="fielddoc"><p>USART communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da2d826b2a5a96acfbdd8056be1d29fb81"></a>XT_OPMODE_SPI&#160;</td><td class="fielddoc"><p>SPI communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da552daf0181a4fdec71585537850812a0"></a>XT_OPMODE_SERIAL&#160;</td><td class="fielddoc"><p>UART communication mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da484326c3e15c4045dfe96dab4b11f28d"></a>XT_OPMODE_CERTIFICATION&#160;</td><td class="fielddoc"><p>Certification mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="af58e0890a0aeecb7d4301c4dc3e4115da9e68d3056bb9e86ea9f47bab0762632d"></a>XT_OPMODE_UNINITIALIZED&#160;</td><td class="fielddoc"><p>Mode is not initialized. </p>
</td></tr>
</table>

</div>
</div>
<a id="a03d192f5543ec51c3b36ab5b022d8fcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03d192f5543ec51c3b36ab5b022d8fcc">&sect;&nbsp;</a></span>xt_swreset_reason_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cause of a software-triggered reset. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccac2e1f8e6be69b0f41db8ebdcce1fcd39"></a>XT_SWRST_NONE&#160;</td><td class="fielddoc"><p>No cause of reset. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccaf53371b99fc85bbd247d78c2f7141ad5"></a>XT_SWRST_INTENDED&#160;</td><td class="fielddoc"><p>Reset was intentionally triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca0a7e81c6eaf6120fdc84f9f895eee17a"></a>XT_SWRST_BOOTLOADER&#160;</td><td class="fielddoc"><p>Enter bootloader mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca238d7daef58554b6fab408f05e1d1b45"></a>XT_SWRST_SYSTEM_MONITOR&#160;</td><td class="fielddoc"><p>System monitor detected an unrecoverable error. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca44df7b604eff7e025d31852eae42ad6d"></a>XT_SWRST_MALLOC_FAILED&#160;</td><td class="fielddoc"><p>Failed to allocate memory. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca236bbe24c234e628582c62d2880617e2"></a>XT_SWRST_STACK_OVERFLOW&#160;</td><td class="fielddoc"><p>Overflow in stack. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca1e62a39b080510c57e3801abc7ede608"></a>XT_SWRST_HARDFAULT&#160;</td><td class="fielddoc"><p>MCU HardFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca7e537acfc3b826e57184bfda1aecb9ce"></a>XT_SWRST_MEMMANAGE&#160;</td><td class="fielddoc"><p>MCU MemManage fault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccaf36515c9f5557670f8783b137ca933ff"></a>XT_SWRST_BUSFAULT&#160;</td><td class="fielddoc"><p>MCU BusFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca091e9119bd72e6996587651046ee3ce8"></a>XT_SWRST_USAGEFAULT&#160;</td><td class="fielddoc"><p>MCU UsageFault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca4cb2e496fa9c68defa4afc21fd513264"></a>XT_SWRST_DEBUGMON&#160;</td><td class="fielddoc"><p>MCU DebugMon fault triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccad0d7f4b9927a190383c1b1a9458a0539"></a>XT_SWRST_NMI&#160;</td><td class="fielddoc"><p>Non-Maskable Interrupt triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca74581fbae14277c4bc07d4aa452eee52"></a>XT_SWRST_WDT&#160;</td><td class="fielddoc"><p>Watchdog Timer triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca5f896de134d5599ceba404809fc917a9"></a>XT_SWRST_HW_PIN&#160;</td><td class="fielddoc"><p>HW reset pin triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccaf23aeccfbf9bcb34a4ba5bb87f2a8229"></a>XT_SWRST_HARD_WDT&#160;</td><td class="fielddoc"><p>Hard Watchdog Timer triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccac703e822f6efd49b5d7063bebf93960b"></a>XT_SWRST_ASSERT&#160;</td><td class="fielddoc"><p>An assert was triggered. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fccac2c0356dbd9d4785caaa049817b32a1d"></a>XT_SWRST_HOSTCOMMAND&#160;</td><td class="fielddoc"><p>Host requested reset. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca5eeb7d6d7a101bc18c2b3d4c09786f72"></a>XT_SWRST_APPUNLOAD&#160;</td><td class="fielddoc"><p>Application was unloaded. </p>
</td></tr>
<tr><td class="fieldname"><a id="a03d192f5543ec51c3b36ab5b022d8fcca62e3cfe8d1252c5e09cac4a6aa43bd82"></a>XT_SWRST_UNDEFINED&#160;</td><td class="fielddoc"><p>Unknown cause of software reset. </p>
</td></tr>
</table>

</div>
</div>
<a id="ad084a0a637f44d3c04365d5b654fab1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad084a0a637f44d3c04365d5b654fab1d">&sect;&nbsp;</a></span>xtio_error_codes_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error codes for Xethru IO driver. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da37b9d3ca0bda18ac655a9f7b84f17a96"></a>XTIO_SUCCESS&#160;</td><td class="fielddoc"><p>Executed successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da34ac40338d44b5fbc9d032eae0d8efbe"></a>XTIO_WRONG_PIN_ID&#160;</td><td class="fielddoc"><p>Using Pin ID not implemented for this HW board. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da7ab2ad5d11b8ba20f580681316046cc4"></a>XTIO_IO_FUNCTION_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>IO function not available for this pin. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da46542e3b2a85053e1893e2bb6ed698d1"></a>XTIO_INTERRUPT_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>Interrupt for this IO pin is not available. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da64d16083198f43d1647d180bfa2f5ee1"></a>XTIO_MODE_NOT_SUPPORTED&#160;</td><td class="fielddoc"><p>IO mode not supported. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da8035212b6e7def315eb3ea5bc7583562"></a>XTIO_WRONG_LED_ID&#160;</td><td class="fielddoc"><p>LED is not present on this board. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da46ff9649ec8eba93a55dfb6bed211472"></a>XTIO_LED_MODE_NOT_AVAILABLE&#160;</td><td class="fielddoc"><p>LED mode not available. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad084a0a637f44d3c04365d5b654fab1da8240cca8a4c72ed31923cfe3d80c12fa"></a>XTIO_REPEAT&#160;</td><td class="fielddoc"><p>Repeat action. </p>
</td></tr>
</table>

</div>
</div>
<a id="a396877b2b28db63069691151b759a5cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a396877b2b28db63069691151b759a5cb">&sect;&nbsp;</a></span>xtio_interrupt_modes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Trigger mode for interrupt on IO pins. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cba73eb6fa29703c57e721e4ecd14e9c98c"></a>XTIO_INTERRUPT_NONE&#160;</td><td class="fielddoc"><p>No interrupt will trigger. </p>
</td></tr>
<tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cbaa9cfa9c0c4dbaeb08105bcf3b8b85026"></a>XTIO_INTERRUPT_RISING_EDGE&#160;</td><td class="fielddoc"><p>Interrupt triggers on rising edge. </p>
</td></tr>
<tr><td class="fieldname"><a id="a396877b2b28db63069691151b759a5cbacdd88aad5e85dba99c90e24394ed123f"></a>XTIO_INTERRUPT_FALLING_EDGE&#160;</td><td class="fielddoc"><p>Interrupt triggers on fallin edge. </p>
</td></tr>
</table>

</div>
</div>
<a id="abe742b85eb29e92e6acc722cb848ffc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe742b85eb29e92e6acc722cb848ffc8">&sect;&nbsp;</a></span>xtio_led_id_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ID of all LEDs that may be available. </p>
<p>Some board implementations may not implement all LEDs. If a LED is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a09fca6c55c289371ea748d7af62e1a6f"></a>XTIO_LED_RED&#160;</td><td class="fielddoc"><p>ID for red LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8ad9cd549bfe27dd71e6582f8b44a5fab2"></a>XTIO_LED_GREEN&#160;</td><td class="fielddoc"><p>ID for green LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8acceb3b7da3eb33cf2240983c079e260a"></a>XTIO_LED_BLUE&#160;</td><td class="fielddoc"><p>ID for blue LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a691f66251ce6a1ebe9802eaa5a7c9fb0"></a>XTIO_LED_YELLOW&#160;</td><td class="fielddoc"><p>ID for yellow LED. </p>
</td></tr>
<tr><td class="fieldname"><a id="abe742b85eb29e92e6acc722cb848ffc8a66d8899079b805c8552f73787b5c1baa"></a>XTIO_LED_WHITE&#160;</td><td class="fielddoc"><p>ID for white LED. </p>
</td></tr>
</table>

</div>
</div>
<a id="aae05ac0ba669068133f24e75a6302a21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae05ac0ba669068133f24e75a6302a21">&sect;&nbsp;</a></span>xtio_led_mode_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Mode for LEDs that may be available. </p>
<p>Some board implementations may not implement all LED modes. If a LED mode is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aae05ac0ba669068133f24e75a6302a21a0888088ed0d9076ccade01e5055cd3c3"></a>XTIO_LED_ONOFF&#160;</td><td class="fielddoc"><p>LED is ON of OFF. </p>
</td></tr>
<tr><td class="fieldname"><a id="aae05ac0ba669068133f24e75a6302a21aca819c01ee17e78f6b69acfd6968725b"></a>XTIO_LED_PWM&#160;</td><td class="fielddoc"><p>LED is controlled by PWM. </p>
</td></tr>
</table>

</div>
</div>
<a id="ad8a6b1a6e624c4ff2c5e2af26685afb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8a6b1a6e624c4ff2c5e2af26685afb8">&sect;&nbsp;</a></span>xtio_led_state_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>States for LEDs that may be available. </p>
<p>Some board implementations may not implement all LED states. If a LED state is not implemented, an error code shall be returned.</p>
<p>In addition, PWM controlled LEDs may also be available. Brightness of light is then controlled by a value between 0.0 and 1.0. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad8a6b1a6e624c4ff2c5e2af26685afb8a2b49a372e9704e1f8a5bba6849009a88"></a>XTIO_LED_OFF&#160;</td><td class="fielddoc"><p>LED is OFF. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad8a6b1a6e624c4ff2c5e2af26685afb8af085e9845957f7aece9dba3bed4393de"></a>XTIO_LED_ON&#160;</td><td class="fielddoc"><p>LED is OFF. </p>
</td></tr>
</table>

</div>
</div>
<a id="a8bb288b15f8da9edbbb414d0b72dd9a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bb288b15f8da9edbbb414d0b72dd9a4">&sect;&nbsp;</a></span>xtio_pin_direction_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>IO pin direction "macroes". </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a8bb288b15f8da9edbbb414d0b72dd9a4aa1881efe569101feb8fe91619f3ff3c3"></a>XTIO_INPUT&#160;</td><td class="fielddoc"><p>IO pin as input. </p>
</td></tr>
<tr><td class="fieldname"><a id="a8bb288b15f8da9edbbb414d0b72dd9a4aecd7fde249f00325cb7d875268f7709b"></a>XTIO_OUTPUT&#160;</td><td class="fielddoc"><p>IO pin as output. </p>
</td></tr>
</table>

</div>
</div>
<a id="a2d045520d5e2aa2f3bc58de038a43c49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d045520d5e2aa2f3bc58de038a43c49">&sect;&nbsp;</a></span>xtio_pin_id_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ID of all IO pins that may be available. </p>
<p>Some board implementations may not implement all IO pins. If an IO pin is not implemented, an error code shall be returned. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ada0ed79c1d64b9c97a22be57e0633c51"></a>XTIO_XETHRU_IO1&#160;</td><td class="fielddoc"><p>ID for IO pin IO1 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49af18e480230702a15a4862169df364bec"></a>XTIO_XETHRU_IO2&#160;</td><td class="fielddoc"><p>ID for IO pin IO2 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a75d16332cd4aeab3d880a557744f2234"></a>XTIO_XETHRU_IO3&#160;</td><td class="fielddoc"><p>ID for IO pin IO3 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a166beeafc6d0369cffb352b87564d520"></a>XTIO_XETHRU_IO4&#160;</td><td class="fielddoc"><p>ID for IO pin IO4 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49aa6b5da273178793ce307437bf81b8d2a"></a>XTIO_XETHRU_IO5&#160;</td><td class="fielddoc"><p>ID for IO pin IO5 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a586fe434c74a67499e8bb8d891825416"></a>XTIO_XETHRU_IO6&#160;</td><td class="fielddoc"><p>ID for IO pin IO6 on the XeThru 16 pin connector. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a8cb663887552be5637f054af69e75d93"></a>XTIO_XETHRU_IO7&#160;</td><td class="fielddoc"><p>ID for IO pin IO7 on the XeThru 16 pin connector. </p>
<p>This pin can also function as WAKEUP and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49aaf3d8e50251d73566b3e6f5a87bf1eba"></a>XTIO_XETHRU_IO8&#160;</td><td class="fielddoc"><p>ID for IO pin IO8 on the XeThru 16 pin connector. </p>
<p>This pin can also function as SWCLK and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49af7cd773157ae654c55e6f99d1a0122f5"></a>XTIO_XETHRU_IO9&#160;</td><td class="fielddoc"><p>ID for IO pin IO9 on the XeThru 16 pin connector. </p>
<p>This pin can also function as SWDIO and should normally not be used as an IO pin </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a6fa37fa1ca47e867517cb22d29a9102d"></a>XTIO_X4_IO1&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO1 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a8f9c15ebdeb32fea70a689c16304d8d9"></a>XTIO_X4_IO2&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO2 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a0d98fb7d04531b0edb83437229dcc839"></a>XTIO_X4_IO3&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO3 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a256be84be9b60fc56b49e030f253e8bc"></a>XTIO_X4_IO4&#160;</td><td class="fielddoc"><p>ID for IO pin X4_IO4 on tin the X4 Radar IC This pin can also have functions other than GPIO during communication with X4. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49acdcb9c0c1057227930241235ea426e90"></a>XTIO_X4_ENABLE&#160;</td><td class="fielddoc"><p>ID for IO pin X4_ENABLE on tin the X4 Radar IC. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a1ef9a78fe8764a8f839e8de45975a537"></a>XTIO_MODE_SEL1&#160;</td><td class="fielddoc"><p>ID for IO pin for mode selection. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a7b371ef59416d7f27127e2ffa697a795"></a>XTIO_MODE_SEL2&#160;</td><td class="fielddoc"><p>ID for IO pin for mode selection. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49af023c6f7d850e88a506cf51f5803466c"></a>XTIO_SERIAL_SCLK&#160;</td><td class="fielddoc"><p>ID for IO pin on the XeThru 16 pin connector This pin can also function as clock in SPI mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a62b0ddb69d2dfa43fbdd613f056adfc2"></a>XTIO_SERIAL_nSS&#160;</td><td class="fielddoc"><p>ID for IO pin on the XeThru 16 pin connector This pin can also function as slave select in SPI mode. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49acb7f389d72f0941032d31166a6f4ac12"></a>XTIO_SERIAL_RX&#160;</td><td class="fielddoc"><p>ID for IO pin on the XeThru 3 pin connector This pin normally is used for serial communication. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a3bd30232f8cbf2ab82dee770d477ad23"></a>XTIO_SERIAL_TX&#160;</td><td class="fielddoc"><p>ID for IO pin on the XeThru 4 pin connector This pin normally is used for serial communication. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ade2ffaa22617ff6dbe340a27543a0897"></a>XTIO_SERIAL_SDA&#160;</td><td class="fielddoc"><p>ID for SDA pin This pin normally is used for serial communication. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49a6ce008bf14e645a7cc335ffa028c6332"></a>XTIO_SERIAL_SCL&#160;</td><td class="fielddoc"><p>ID for SCL pin This pin normally is used for serial communication. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ae3f102103a158548ce70dc528812141c"></a>XTIO_SERIAL_IRQ&#160;</td><td class="fielddoc"><p>ID for IRQ pin This pin normally is used for serial communication. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2d045520d5e2aa2f3bc58de038a43c49ae3650a7541762c434a47b929622f8cae"></a>XTIO_USB_VBUS&#160;</td><td class="fielddoc"><p>ID for IO pin sensing USB VBUS. </p>
</td></tr>
</table>

</div>
</div>
<a id="a1c2710d0b7b7fdbe602d1159aca07e5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c2710d0b7b7fdbe602d1159aca07e5b">&sect;&nbsp;</a></span>xtio_pin_level_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>IOPORT levels. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a1c2710d0b7b7fdbe602d1159aca07e5ba3c64f5e24ae70f2b3c81d1bcadeb2a9c"></a>XTIO_PIN_LEVEL_LOW&#160;</td><td class="fielddoc"><p>IOPORT pin value low. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1c2710d0b7b7fdbe602d1159aca07e5baae5dced8083873daa158eef83cadd409"></a>XTIO_PIN_LEVEL_HIGH&#160;</td><td class="fielddoc"><p>IOPORT pin value high. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a8bd9bef2216392003bffa6c552e0779b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bd9bef2216392003bffa6c552e0779b">&sect;&nbsp;</a></span>xt_bootloader_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* xt_bootloader_string </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return a string identifying what type of bootloader we have, or "" if we don't. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8bd9bef2216392003bffa6c552e0779b_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8bd9bef2216392003bffa6c552e0779b_icgraph.svg" width="371" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7d0980e5e1fb4f42a5d10102c91609f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d0980e5e1fb4f42a5d10102c91609f4">&sect;&nbsp;</a></span>xt_delay_us()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_delay_us </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>us_to_wait</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delays the execution for the specified number of microseconds. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">us_to_wait</td><td>Microseconds to delay </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a7d0980e5e1fb4f42a5d10102c91609f4_cgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a7d0980e5e1fb4f42a5d10102c91609f4_icgraph.svg" width="342" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a31dcedbddd6f896d0157ce276d449fd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31dcedbddd6f896d0157ce276d449fd4">&sect;&nbsp;</a></span>xt_external_memory_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_external_memory_enabled </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if external memory is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a31dcedbddd6f896d0157ce276d449fd4_icgraph.svg" width="868" height="899"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acf93e159c610831f349d07c00962f80d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf93e159c610831f349d07c00962f80d">&sect;&nbsp;</a></span>xt_fast_memory_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_fast_memory_enabled </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if fast memory is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_acf93e159c610831f349d07c00962f80d_icgraph.svg" width="476" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aba84ec695575730f2fd3b4f75eefe28a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba84ec695575730f2fd3b4f75eefe28a">&sect;&nbsp;</a></span>xt_feed_watchdog()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_feed_watchdog </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the watchdog timer. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aba84ec695575730f2fd3b4f75eefe28a_cgraph.svg" width="299" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aba84ec695575730f2fd3b4f75eefe28a_icgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8d576cef4eead3e26b3adf733cd487c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d576cef4eead3e26b3adf733cd487c2">&sect;&nbsp;</a></span>xt_get_certification_submode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_certification_submode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the submode of the module for certification. </p>
<dl class="section return"><dt>Returns</dt><dd>Operation mode as defined in <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8d576cef4eead3e26b3adf733cd487c2_cgraph.svg" width="344" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8d576cef4eead3e26b3adf733cd487c2_icgraph.svg" width="339" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe26eed3d46d8d18c673b026a4c1af49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe26eed3d46d8d18c673b026a4c1af49">&sect;&nbsp;</a></span>xt_get_cpu_load()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xt_get_cpu_load </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the current average CPU load. </p>
<dl class="section return"><dt>Returns</dt><dd>Current average CPU load, 0 means no load, 1000 means full load </dd></dl>

</div>
</div>
<a id="a88a96f708160bd3ccf8a8f0986f51d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88a96f708160bd3ccf8a8f0986f51d88">&sect;&nbsp;</a></span>xt_get_crash_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_crash_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get crash count. </p>
<dl class="section return"><dt>Returns</dt><dd>Crash count </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a88a96f708160bd3ccf8a8f0986f51d88_cgraph.svg" width="359" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a88a96f708160bd3ccf8a8f0986f51d88_icgraph.svg" width="424" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab0d28c0bbd203c3d66b4e46cf4e7fb5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0d28c0bbd203c3d66b4e46cf4e7fb5f">&sect;&nbsp;</a></span>xt_get_default_radar_config()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_default_radar_config </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structxt__radar__t.xhtml">xt_radar_t</a> *&#160;</td>
          <td class="paramname"><em>config</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets default radar configuration. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">config</td><td>Default radar configuration </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab0d28c0bbd203c3d66b4e46cf4e7fb5f_icgraph.svg" width="675" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af1f57228b9448df87a3f5f30968b3fa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f57228b9448df87a3f5f30968b3fa8">&sect;&nbsp;</a></span>xt_get_operation_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> xt_get_operation_mode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the operation mode of the module. </p>
<dl class="section return"><dt>Returns</dt><dd>Operation mode as defined in <a class="el" href="xep__hal_8h.xhtml#af58e0890a0aeecb7d4301c4dc3e4115d">xt_opmode_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af1f57228b9448df87a3f5f30968b3fa8_cgraph.svg" width="428" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af1f57228b9448df87a3f5f30968b3fa8_icgraph.svg" width="463" height="459"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9b086edc4d10515d81e925efba022638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b086edc4d10515d81e925efba022638">&sect;&nbsp;</a></span>xt_get_program_counter_from_task_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* xt_get_program_counter_from_task_handle </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the program counter of the specified task. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to instruction </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9b086edc4d10515d81e925efba022638_cgraph.svg" width="304" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9b086edc4d10515d81e925efba022638_icgraph.svg" width="411" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3c4b3201bcc90f24579249f3b6297fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c4b3201bcc90f24579249f3b6297fb3">&sect;&nbsp;</a></span>xt_get_reset_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_reset_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get reset count. </p>
<p>Must be called at least once every reset to update counter.</p>
<dl class="section return"><dt>Returns</dt><dd>Reset count </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a3c4b3201bcc90f24579249f3b6297fb3_cgraph.svg" width="358" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a3c4b3201bcc90f24579249f3b6297fb3_icgraph.svg" width="376" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5e62effeb5c5323c3d423225a6a3dbf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e62effeb5c5323c3d423225a6a3dbf3">&sect;&nbsp;</a></span>xt_get_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> *&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the cause of the previous software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a5e62effeb5c5323c3d423225a6a3dbf3_cgraph.svg" width="364" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a5e62effeb5c5323c3d423225a6a3dbf3_icgraph.svg" width="780" height="211"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab218029969f3b92b546b111d1c1e03d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab218029969f3b92b546b111d1c1e03d0">&sect;&nbsp;</a></span>xt_get_stack_area_from_task_handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_get_stack_area_from_task_handle </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>stack_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void **&#160;</td>
          <td class="paramname"><em>stack_pointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>depth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the stack start pointer and depth for specified task. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab218029969f3b92b546b111d1c1e03d0_icgraph.svg" width="407" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac6fbcd6ee86a6cc239db400a2f9560a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6fbcd6ee86a6cc239db400a2f9560a6">&sect;&nbsp;</a></span>xt_get_system_timer_us()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t xt_get_system_timer_us </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the system timer in microseconds. </p>
<dl class="section return"><dt>Returns</dt><dd>System timer in microseconds </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ac6fbcd6ee86a6cc239db400a2f9560a6_cgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ac6fbcd6ee86a6cc239db400a2f9560a6_icgraph.svg" width="410" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aad4316287f7b348fc5799124596685b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad4316287f7b348fc5799124596685b9">&sect;&nbsp;</a></span>xt_has_bootloader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_has_bootloader </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if we have a bootloader available. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aad4316287f7b348fc5799124596685b9_icgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac1edd0aeeab16f7278315403bcd6a29b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1edd0aeeab16f7278315403bcd6a29b">&sect;&nbsp;</a></span>xt_reset_crash_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_reset_crash_count </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets crash count. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ac1edd0aeeab16f7278315403bcd6a29b_icgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23a7563c734f3b439d1d26f0598fafe7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23a7563c734f3b439d1d26f0598fafe7">&sect;&nbsp;</a></span>xt_run_selftest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_run_selftest </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>testcode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structxt__test__result__t.xhtml">xt_test_result_t</a> *&#160;</td>
          <td class="paramname"><em>test_result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs the specified selftest. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">testcode</td><td>Test to run as defined in xt_selftest_code_t </td></tr>
    <tr><td class="paramname">test_result</td><td>Pointer to struct that will hold result of test </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a23a7563c734f3b439d1d26f0598fafe7_cgraph.svg" width="384" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a23a7563c734f3b439d1d26f0598fafe7_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7fc787dfe17335b3f6eab3f9db8d2998"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fc787dfe17335b3f6eab3f9db8d2998">&sect;&nbsp;</a></span>xt_selftest_x4_connectivity_get_pin_table()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_selftest_x4_connectivity_get_pin_table </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int **&#160;</td>
          <td class="paramname"><em>x4_pins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int **&#160;</td>
          <td class="paramname"><em>mcu_pins</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access function for X4Driver to get the pin combinations to test. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>Pointer to holder for the number of pins </td></tr>
    <tr><td class="paramname">x4_pins</td><td>Pointer to holder for the X4 pin array </td></tr>
    <tr><td class="paramname">mcu_pins</td><td>Pointer to holder for the MCU pin array </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a7fc787dfe17335b3f6eab3f9db8d2998_icgraph.svg" width="466" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af6b80e97e26108da85bc193be8ee57ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6b80e97e26108da85bc193be8ee57ed">&sect;&nbsp;</a></span>xt_selftest_x4_connectivity_mark_faulty_pin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_selftest_x4_connectivity_mark_faulty_pin </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Access function for X4Driver to mark a faulty pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin</td><td>Index of faulty pin </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_af6b80e97e26108da85bc193be8ee57ed_icgraph.svg" width="466" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a389bc6b896aa270d8a1e473dd9c32ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389bc6b896aa270d8a1e473dd9c32ffc">&sect;&nbsp;</a></span>xt_set_reset_reason()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_set_reset_reason </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the cause of the coming software reset. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a389bc6b896aa270d8a1e473dd9c32ffc_icgraph.svg" width="434" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ace2af126089abe1d676edfc1400d0bf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace2af126089abe1d676edfc1400d0bf7">&sect;&nbsp;</a></span>xt_software_reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_software_reset </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>reason</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triggers a software reset of MCU. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reason</td><td>Reset reason as defined in <a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ace2af126089abe1d676edfc1400d0bf7_cgraph.svg" width="352" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ace2af126089abe1d676edfc1400d0bf7_icgraph.svg" width="412" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a362d4391cf2e203a9ed7b1dbbfe65f25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a362d4391cf2e203a9ed7b1dbbfe65f25">&sect;&nbsp;</a></span>xt_trigger_crash()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_trigger_crash </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a03d192f5543ec51c3b36ab5b022d8fcc">xt_swreset_reason_t</a>&#160;</td>
          <td class="paramname"><em>crash_reason</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>crash_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>full_dump</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triggers a crashdump and reset of module. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#a92e0221f7ca588ab70b2b5c7348186f7">xt_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a362d4391cf2e203a9ed7b1dbbfe65f25_cgraph.svg" width="319" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a362d4391cf2e203a9ed7b1dbbfe65f25_icgraph.svg" width="392" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2426ce12540f282ecbb2a73534d8ecb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2426ce12540f282ecbb2a73534d8ecb4">&sect;&nbsp;</a></span>xt_use_external_clock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_use_external_clock </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Instructs the firmware whether to use either a crystal oscillator or external clock. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>

</div>
</div>
<a id="a368ae5b6898f4745b8ccf4d3d15b38ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a368ae5b6898f4745b8ccf4d3d15b38ac">&sect;&nbsp;</a></span>xt_use_external_memory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_use_external_memory </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Controls whether or not to use external memory. </p>
<p>Requires a system reset to take effect.</p>
<dl class="section return"><dt>Returns</dt><dd>True if memory is enabled, false otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a368ae5b6898f4745b8ccf4d3d15b38ac_cgraph.svg" width="398" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a56773fb0b5a5ce0e8e4633581137100d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56773fb0b5a5ce0e8e4633581137100d">&sect;&nbsp;</a></span>xt_using_external_clock()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xt_using_external_clock </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks whether the crystal oscillator or external clock should be used. </p>
<dl class="section return"><dt>Returns</dt><dd>True for external clock, false for crystal oscillator. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a56773fb0b5a5ce0e8e4633581137100d_icgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8e58faffa8a7b0934ca76bc1fa5ef6fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e58faffa8a7b0934ca76bc1fa5ef6fa">&sect;&nbsp;</a></span>xt_wait()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xt_wait </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ms_to_wait</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Causes the calling task to wait and yields to another task. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ms_to_wait</td><td>Milliseconds to wait </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8e58faffa8a7b0934ca76bc1fa5ef6fa_icgraph.svg" width="319" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa3e424512de2e10133b2ffe41f6577ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3e424512de2e10133b2ffe41f6577ea">&sect;&nbsp;</a></span>xtio_extram_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_extram_init </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize external RAM if available. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>

</div>
</div>
<a id="a4b959a98419bc53f38212b561edb0d07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b959a98419bc53f38212b561edb0d07">&sect;&nbsp;</a></span>xtio_flash_erase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_flash_erase </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Erases specified flash area. </p>
<p>Must be aligned to erase size.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4b959a98419bc53f38212b561edb0d07_cgraph.svg" width="375" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4b959a98419bc53f38212b561edb0d07_icgraph.svg" width="348" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2d0b9f16d57df52e21d6f8d08b8c7d48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d0b9f16d57df52e21d6f8d08b8c7d48">&sect;&nbsp;</a></span>xtio_flash_get_unique_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_flash_get_unique_id </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>max_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an ascii string of a cpu unique identifyer. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes in flash </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a2d0b9f16d57df52e21d6f8d08b8c7d48_cgraph.svg" width="359" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a2d0b9f16d57df52e21d6f8d08b8c7d48_icgraph.svg" width="396" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a69a3f02de1c4e206640015c8d19af4f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69a3f02de1c4e206640015c8d19af4f9">&sect;&nbsp;</a></span>xtio_flash_store()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_flash_store </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>destination_address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stores data in flash. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a></dd></dl>
<p>Stores data in flash.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a69a3f02de1c4e206640015c8d19af4f9_cgraph.svg" width="372" height="459"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0f73f9b3594686e4318f0ca195cc38b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f73f9b3594686e4318f0ca195cc38b4">&sect;&nbsp;</a></span>xtio_flash_write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_flash_write </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes data to flash. </p>
<p>User must make sure to call erase prior to writing.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a0f73f9b3594686e4318f0ca195cc38b4_cgraph.svg" width="368" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a0f73f9b3594686e4318f0ca195cc38b4_icgraph.svg" width="342" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1fac657ee93738242d05ad86ceb17260"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fac657ee93738242d05ad86ceb17260">&sect;&nbsp;</a></span>xtio_get_block_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_get_block_size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the flash block size. </p>
<p>This is the erase size.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes in block </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a1fac657ee93738242d05ad86ceb17260_icgraph.svg" width="271" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2daff1abf4c972f5d57d94a65a24a3cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2daff1abf4c972f5d57d94a65a24a3cf">&sect;&nbsp;</a></span>xtio_get_flash_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_get_flash_size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the size of the entire flash. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes in flash </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a2daff1abf4c972f5d57d94a65a24a3cf_icgraph.svg" width="387" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a984c6d05372bfd34dc338a85d21dc81a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a984c6d05372bfd34dc338a85d21dc81a">&sect;&nbsp;</a></span>xtio_get_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_get_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> *&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Input pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a984c6d05372bfd34dc338a85d21dc81a_cgraph.svg" width="311" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a984c6d05372bfd34dc338a85d21dc81a_icgraph.svg" width="544" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a141d202242dba41a03dbaddf29c88d6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a141d202242dba41a03dbaddf29c88d6e">&sect;&nbsp;</a></span>xtio_get_page_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t xtio_get_page_size </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the flash page size. </p>
<p>This is the programming size.</p>
<dl class="section return"><dt>Returns</dt><dd>Number of bytes in page </dd></dl>

</div>
</div>
<a id="ae1d90c71870adfe51d508b4661ba2b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1d90c71870adfe51d508b4661ba2b78">&sect;&nbsp;</a></span>xtio_host_send()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_host_send </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>callback_arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a data buffer to host through a serial port - USB or UART. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>Pointer to buffer with data to send </td></tr>
    <tr><td class="paramname">length</td><td>Length of data to send </td></tr>
    <tr><td class="paramname">callback</td><td>Callback when completed </td></tr>
    <tr><td class="paramname">callback_arg</td><td>Argument for callback </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ae1d90c71870adfe51d508b4661ba2b78_icgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a58295d828f76f664dffe8a080a2ab8b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58295d828f76f664dffe8a080a2ab8b6">&sect;&nbsp;</a></span>xtio_host_send_debug()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_host_send_debug </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a207a2b1d7e551ae04c478adfbee1d22c">xtio_host_send_completed_t</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>callback_arg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Send a data buffer to host through debug interface. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>Pointer to buffer with data to send </td></tr>
    <tr><td class="paramname">length</td><td>Length of data to send </td></tr>
    <tr><td class="paramname">callback</td><td>Callback when completed </td></tr>
    <tr><td class="paramname">callback_arg</td><td>Argument for callback </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a58295d828f76f664dffe8a080a2ab8b6_icgraph.svg" width="363" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a90b22ca935e03d989e5572a9aa8bf29c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b22ca935e03d989e5572a9aa8bf29c">&sect;&nbsp;</a></span>xtio_irq_register_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_irq_register_callback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(void)&#160;</td>
          <td class="paramname"><em>irq_callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a396877b2b28db63069691151b759a5cb">xtio_interrupt_modes</a>&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register interrupt callback function. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">irq_callback</td><td>Interrupt callback function </td></tr>
    <tr><td class="paramname">mode</td><td>Tripper mode for IRQ </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a90b22ca935e03d989e5572a9aa8bf29c_cgraph.svg" width="391" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a90b22ca935e03d989e5572a9aa8bf29c_icgraph.svg" width="392" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8f8214e214e26de85a41a1b0af1fc6d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f8214e214e26de85a41a1b0af1fc6d7">&sect;&nbsp;</a></span>xtio_irq_unregister_callback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_irq_unregister_callback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unregister interrupt handler. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8f8214e214e26de85a41a1b0af1fc6d7_cgraph.svg" width="342" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a8f8214e214e26de85a41a1b0af1fc6d7_icgraph.svg" width="350" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a02d431b74bbdd1cc5d4ff79903f7ebd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02d431b74bbdd1cc5d4ff79903f7ebd6">&sect;&nbsp;</a></span>xtio_led_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>led_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate LED. </p>
<p>Set MCU pin as output and set initial LED state.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
    <tr><td class="paramname">mode</td><td>LED mode as defined in <a class="el" href="xep__hal_8h.xhtml#aae05ac0ba669068133f24e75a6302a21">xtio_led_mode_t</a> </td></tr>
    <tr><td class="paramname">led_state</td><td>LED state as defined in <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a02d431b74bbdd1cc5d4ff79903f7ebd6_cgraph.svg" width="299" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a02d431b74bbdd1cc5d4ff79903f7ebd6_icgraph.svg" width="255" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aea9d8137a0fddb8ed22f14f318dfec4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9d8137a0fddb8ed22f14f318dfec4f">&sect;&nbsp;</a></span>xtio_led_set_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_set_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>led_state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set LED state. </p>
<p>If LED is set to ON/OFF mode, a value of 0 is OFF and 1 is ON. If PWM mode is implemented, the brightness is controlled by a value between 0.0 and 1.0 - 0.0 is OFF.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
    <tr><td class="paramname">led_state</td><td>LED state as defined in <a class="el" href="xep__hal_8h.xhtml#ad8a6b1a6e624c4ff2c5e2af26685afb8">xtio_led_state_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aea9d8137a0fddb8ed22f14f318dfec4f_cgraph.svg" width="340" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_aea9d8137a0fddb8ed22f14f318dfec4f_icgraph.svg" width="346" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae8a7b093baba56abe7b2f64e2221ba40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a7b093baba56abe7b2f64e2221ba40">&sect;&nbsp;</a></span>xtio_led_toggle_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_led_toggle_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>led_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggle LED state. </p>
<p>If LED is set to ON/OFF mode, a value of 0 is OFF and 1 is ON. If LED is in PWM mode, this function will set LED state to either ON or OFF depending on current state.</p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">led_id</td><td>LED ID as defined in <a class="el" href="xep__hal_8h.xhtml#abe742b85eb29e92e6acc722cb848ffc8">xtio_led_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ae8a7b093baba56abe7b2f64e2221ba40_cgraph.svg" width="360" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a875308939bcbe311557d0e0fb97f9b7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a875308939bcbe311557d0e0fb97f9b7d">&sect;&nbsp;</a></span>xtio_serial_com_debug_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_serial_com_debug_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *&#160;</td>
          <td class="paramname"><em>xt_protocol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate debug serial communication. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xt_protocol</td><td>Pointer to an xtProtocol object used for parsing communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a875308939bcbe311557d0e0fb97f9b7d_cgraph.svg" width="368" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a875308939bcbe311557d0e0fb97f9b7d_icgraph.svg" width="392" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a143e7abdc640864b988cc34a2d53fd81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a143e7abdc640864b988cc34a2d53fd81">&sect;&nbsp;</a></span>xtio_serial_com_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_serial_com_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a3c505a1c06065976774a1f8e0c34c0a3">xtProtocol</a> *&#160;</td>
          <td class="paramname"><em>xt_protocol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate serial communication - USB if available, otherwise UART. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xt_protocol</td><td>Pointer to an xtProtocol object used for parsing communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a143e7abdc640864b988cc34a2d53fd81_cgraph.svg" width="334" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a143e7abdc640864b988cc34a2d53fd81_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4f087fae5e8098b3b9c8f9df124b7f4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f087fae5e8098b3b9c8f9df124b7f4e">&sect;&nbsp;</a></span>xtio_set_direction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_direction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set direction of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">direction</td><td>Input or output direction as defined in <a class="el" href="xep__hal_8h.xhtml#a8bb288b15f8da9edbbb414d0b72dd9a4">xtio_pin_direction_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Output pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4f087fae5e8098b3b9c8f9df124b7f4e_cgraph.svg" width="336" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a4f087fae5e8098b3b9c8f9df124b7f4e_icgraph.svg" width="407" height="358"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a387b000f6fb5128449611d9fe0e47369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387b000f6fb5128449611d9fe0e47369">&sect;&nbsp;</a></span>xtio_set_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>level</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">level</td><td>Output pin level as defined in <a class="el" href="xep__hal_8h.xhtml#a1c2710d0b7b7fdbe602d1159aca07e5b">xtio_pin_level_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a387b000f6fb5128449611d9fe0e47369_cgraph.svg" width="310" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a387b000f6fb5128449611d9fe0e47369_icgraph.svg" width="362" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9c169f60838175920c2f9ab467d020c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c169f60838175920c2f9ab467d020c1">&sect;&nbsp;</a></span>xtio_set_pin_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_set_pin_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set mode for specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
    <tr><td class="paramname">mode</td><td>IO mode as defined by macroes </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9c169f60838175920c2f9ab467d020c1_cgraph.svg" width="344" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a9c169f60838175920c2f9ab467d020c1_icgraph.svg" width="379" height="256"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab37c30dc5bf179f86b20907fb42e1e4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab37c30dc5bf179f86b20907fb42e1e4d">&sect;&nbsp;</a></span>xtio_toggle_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_toggle_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a>&#160;</td>
          <td class="paramname"><em>pin_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggle the level of specified IO pin. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pin_id</td><td>IO Pin ID as defined in <a class="el" href="xep__hal_8h.xhtml#a2d045520d5e2aa2f3bc58de038a43c49">xtio_pin_id_t</a> </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_ab37c30dc5bf179f86b20907fb42e1e4d_cgraph.svg" width="330" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a75257f6264fe4bb32722e8eccd519680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75257f6264fe4bb32722e8eccd519680">&sect;&nbsp;</a></span>xtio_uart_set_baudrate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int xtio_uart_set_baudrate </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>baudrate</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures UART module with the specified baudrate. </p>
<dl class="section return"><dt>Returns</dt><dd>Status of execution as defined in <a class="el" href="xep__hal_8h.xhtml#ad084a0a637f44d3c04365d5b654fab1d">xtio_error_codes_t</a> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">baudrate</td><td>Baudrate for UART communication </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a75257f6264fe4bb32722e8eccd519680_cgraph.svg" width="374" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="xep__hal_8h_a75257f6264fe4bb32722e8eccd519680_icgraph.svg" width="538" height="114"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
