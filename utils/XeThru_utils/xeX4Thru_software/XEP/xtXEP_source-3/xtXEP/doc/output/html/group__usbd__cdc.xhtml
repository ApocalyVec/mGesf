<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XeThru Embedded Platform - XEP: Usbd_cdc</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">XeThru Embedded Platform - XEP
          &#160;<span id="projectnumber">3.4.7</span>
        </div>
        <div id="projectbrief" class="col-sm-12">Embedded platform for XeThru firmware products</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Usbd_cdc</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Collaboration diagram for Usbd_cdc:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc.svg" width="310" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__usbd__cdc__if"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc__if.xhtml">USB Device CDC EEM Interface IDs</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__cdc__eem__desc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc__eem__desc.xhtml">USB Device EEM Port Descriptor Values</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__cdc__serial__desc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc__serial__desc.xhtml">USB Device Serial Port Descriptor Values</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__cdc__serial__events"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc__serial__events.xhtml">USB Device Serial Port Events</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__usbd__cdc__serial__device__ids"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc__serial__device__ids.xhtml">CDC Serial Device IDs</a></td></tr>
<tr class="memdesc:group__usbd__cdc__serial__device__ids"><td class="mdescLeft">&#160;</td><td class="mdescRight">This page lists the IDs used in the CDC Serial Device Descriptor. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_parse_data.xhtml">_CDCDParseData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse data extention for descriptor parsing.  <a href="struct___c_d_c_d_parse_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_e_e_m_driver_configuration_descriptors.xhtml">_CDCDEEMDriverConfigurationDescriptors</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_e_e_m_driver_configuration_descriptors_o_t_g.xhtml">_CDCDEEMDriverConfigurationDescriptorsOTG</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_e_e_m_port.xhtml">_CDCDEEMPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for USB CDC EEM port function.  <a href="struct___c_d_c_d_e_e_m_port.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_serial_driver_configuration_descriptors.xhtml">_CDCDSerialDriverConfigurationDescriptors</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_serial_driver_configuration_descriptors_o_t_g.xhtml">_CDCDSerialDriverConfigurationDescriptorsOTG</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct___c_d_c_d_serial_port.xhtml">_CDCDSerialPort</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for USB CDC virtual COM serial port function.  <a href="struct___c_d_c_d_serial_port.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga9aad3080ded355abe147d5c60f44168d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga9aad3080ded355abe147d5c60f44168d">DATAPACKETSIZE</a>&#160;&#160;&#160;(1536)</td></tr>
<tr class="memdesc:ga9aad3080ded355abe147d5c60f44168d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum packet size in bytes.  <a href="#ga9aad3080ded355abe147d5c60f44168d">More...</a><br /></td></tr>
<tr class="separator:ga9aad3080ded355abe147d5c60f44168d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa00f910116b7fca294ce753f2e98c8c0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaa00f910116b7fca294ce753f2e98c8c0">DATABUFFERSIZE</a>&#160;&#160;&#160;(<a class="el" href="xtio__serial__com_8c.xhtml#a9aad3080ded355abe147d5c60f44168d">DATAPACKETSIZE</a>+2)</td></tr>
<tr class="memdesc:gaa00f910116b7fca294ce753f2e98c8c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size in bytes of the buffer used for reading data from USB.  <a href="#gaa00f910116b7fca294ce753f2e98c8c0">More...</a><br /></td></tr>
<tr class="separator:gaa00f910116b7fca294ce753f2e98c8c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7ba2c109a860a75b04095acb7e6834d5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7ba2c109a860a75b04095acb7e6834d5">USB_TX_BUFFERS</a>&#160;&#160;&#160;64</td></tr>
<tr class="memdesc:ga7ba2c109a860a75b04095acb7e6834d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of transmit buffers.  <a href="#ga7ba2c109a860a75b04095acb7e6834d5">More...</a><br /></td></tr>
<tr class="separator:ga7ba2c109a860a75b04095acb7e6834d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga3acffbd305ee72dcd4593c0d8af64a4f">MIN</a>(a,  b)&#160;&#160;&#160;((a &lt; b) ? a : b)</td></tr>
<tr class="memdesc:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum between two values.  <a href="#ga3acffbd305ee72dcd4593c0d8af64a4f">More...</a><br /></td></tr>
<tr class="separator:ga3acffbd305ee72dcd4593c0d8af64a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga0b2bcdb11b5672239934d2486bff14c8"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_parse_data.xhtml">_CDCDParseData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a></td></tr>
<tr class="memdesc:ga0b2bcdb11b5672239934d2486bff14c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse data extention for descriptor parsing.  <a href="#ga0b2bcdb11b5672239934d2486bff14c8">More...</a><br /></td></tr>
<tr class="separator:ga0b2bcdb11b5672239934d2486bff14c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0b2bcdb11b5672239934d2486bff14c8"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_parse_data.xhtml">_CDCDParseData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a></td></tr>
<tr class="memdesc:ga0b2bcdb11b5672239934d2486bff14c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse data extention for descriptor parsing.  <a href="#ga0b2bcdb11b5672239934d2486bff14c8">More...</a><br /></td></tr>
<tr class="separator:ga0b2bcdb11b5672239934d2486bff14c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b056e67e7f26fdb622c5c3b24ec29b6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_e_e_m_driver_configuration_descriptors.xhtml">_CDCDEEMDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7b056e67e7f26fdb622c5c3b24ec29b6">CDCDEEMDriverConfigurationDescriptors</a></td></tr>
<tr class="memdesc:ga7b056e67e7f26fdb622c5c3b24ec29b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration descriptor list for a device implementing a CDC EEM driver.  <a href="#ga7b056e67e7f26fdb622c5c3b24ec29b6">More...</a><br /></td></tr>
<tr class="separator:ga7b056e67e7f26fdb622c5c3b24ec29b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae028431c5278cd03bbe090732133f935"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_e_e_m_driver_configuration_descriptors_o_t_g.xhtml">_CDCDEEMDriverConfigurationDescriptorsOTG</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gae028431c5278cd03bbe090732133f935">CDCDEEMDriverConfigurationDescriptorsOTG</a></td></tr>
<tr class="memdesc:gae028431c5278cd03bbe090732133f935"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration descriptor list for a device implementing a CDC EEM OTG driver.  <a href="#gae028431c5278cd03bbe090732133f935">More...</a><br /></td></tr>
<tr class="separator:gae028431c5278cd03bbe090732133f935"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad0c64ae9bb36cf998073fa1547cd745a"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_e_e_m_port.xhtml">_CDCDEEMPort</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a></td></tr>
<tr class="memdesc:gad0c64ae9bb36cf998073fa1547cd745a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for USB CDC EEM port function.  <a href="#gad0c64ae9bb36cf998073fa1547cd745a">More...</a><br /></td></tr>
<tr class="separator:gad0c64ae9bb36cf998073fa1547cd745a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c29a23bbdc4d226e2415775a984426a"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_serial_driver_configuration_descriptors.xhtml">_CDCDSerialDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a></td></tr>
<tr class="memdesc:ga8c29a23bbdc4d226e2415775a984426a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration descriptor list for a device implementing a CDC serial driver.  <a href="#ga8c29a23bbdc4d226e2415775a984426a">More...</a><br /></td></tr>
<tr class="separator:ga8c29a23bbdc4d226e2415775a984426a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga317cd7a24cb5af53ecbdaf56f57010a8"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_serial_driver_configuration_descriptors_o_t_g.xhtml">_CDCDSerialDriverConfigurationDescriptorsOTG</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga317cd7a24cb5af53ecbdaf56f57010a8">CDCDSerialDriverConfigurationDescriptorsOTG</a></td></tr>
<tr class="memdesc:ga317cd7a24cb5af53ecbdaf56f57010a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration descriptor list for a device implementing a CDC serial OTG driver.  <a href="#ga317cd7a24cb5af53ecbdaf56f57010a8">More...</a><br /></td></tr>
<tr class="separator:ga317cd7a24cb5af53ecbdaf56f57010a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3a8bae9f7b3af3e754ce52accef7731c"><td class="memItemLeft" align="right" valign="top">typedef uint32_t(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga3a8bae9f7b3af3e754ce52accef7731c">CDCDSerialPortEventHandler</a>) (uint32_t dwEvent, uint32_t dwParam, void *pArguments)</td></tr>
<tr class="memdesc:ga3a8bae9f7b3af3e754ce52accef7731c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback function for serial port events.  <a href="#ga3a8bae9f7b3af3e754ce52accef7731c">More...</a><br /></td></tr>
<tr class="separator:ga3a8bae9f7b3af3e754ce52accef7731c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41d954a5a3c99f857c7c56b0c383b0e6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct___c_d_c_d_serial_port.xhtml">_CDCDSerialPort</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a></td></tr>
<tr class="memdesc:ga41d954a5a3c99f857c7c56b0c383b0e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for USB CDC virtual COM serial port function.  <a href="#ga41d954a5a3c99f857c7c56b0c383b0e6">More...</a><br /></td></tr>
<tr class="separator:ga41d954a5a3c99f857c7c56b0c383b0e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1082499b9ce587deca4f132eb39c4e2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1082499b9ce587deca4f132eb39c4e2f">CDCDEEM_Initialize</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, uint8_t bInterfaceNb)</td></tr>
<tr class="memdesc:ga1082499b9ce587deca4f132eb39c4e2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial driver &amp; USBD Driver.  <a href="#ga1082499b9ce587deca4f132eb39c4e2f">More...</a><br /></td></tr>
<tr class="separator:ga1082499b9ce587deca4f132eb39c4e2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1ed08b27219311a91054848030b7c5d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaf1ed08b27219311a91054848030b7c5d">CDCDEEM_ConfigureFunction</a> (<a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint16_t wLength)</td></tr>
<tr class="memdesc:gaf1ed08b27219311a91054848030b7c5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked whenever the device is changed by the host.  <a href="#gaf1ed08b27219311a91054848030b7c5d">More...</a><br /></td></tr>
<tr class="separator:gaf1ed08b27219311a91054848030b7c5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga801be6bfd3c037fb453c7e7ffd0f1e85"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga801be6bfd3c037fb453c7e7ffd0f1e85">CDCDEEM_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:ga801be6bfd3c037fb453c7e7ffd0f1e85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#ga801be6bfd3c037fb453c7e7ffd0f1e85">More...</a><br /></td></tr>
<tr class="separator:ga801be6bfd3c037fb453c7e7ffd0f1e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac92fa8fd122462732b56fd197477e8fd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gac92fa8fd122462732b56fd197477e8fd">CDCDEEM_Read</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:gac92fa8fd122462732b56fd197477e8fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#gac92fa8fd122462732b56fd197477e8fd">More...</a><br /></td></tr>
<tr class="separator:gac92fa8fd122462732b56fd197477e8fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga626636e7fcd1458fabf797f1280bd272"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga626636e7fcd1458fabf797f1280bd272">CDCDEEM_Write</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga626636e7fcd1458fabf797f1280bd272"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#ga626636e7fcd1458fabf797f1280bd272">More...</a><br /></td></tr>
<tr class="separator:ga626636e7fcd1458fabf797f1280bd272"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga474c6e12f50626640933b9400b89b03c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga474c6e12f50626640933b9400b89b03c">CDCDEEMDriver_Initialize</a> (const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors)</td></tr>
<tr class="memdesc:ga474c6e12f50626640933b9400b89b03c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial driver &amp; USBD Driver.  <a href="#ga474c6e12f50626640933b9400b89b03c">More...</a><br /></td></tr>
<tr class="separator:ga474c6e12f50626640933b9400b89b03c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf39ba7b7516aa693368fb4bacebcabb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaf39ba7b7516aa693368fb4bacebcabb3">CDCDEEMDriver_ConfigurationChangedHandler</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:gaf39ba7b7516aa693368fb4bacebcabb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked whenever the active configuration of device is changed by the host.  <a href="#gaf39ba7b7516aa693368fb4bacebcabb3">More...</a><br /></td></tr>
<tr class="separator:gaf39ba7b7516aa693368fb4bacebcabb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa153bf1169562e3a7b2249889e95a17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaaa153bf1169562e3a7b2249889e95a17">CDCDEEMDriver_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gaaa153bf1169562e3a7b2249889e95a17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#gaaa153bf1169562e3a7b2249889e95a17">More...</a><br /></td></tr>
<tr class="separator:gaaa153bf1169562e3a7b2249889e95a17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae577f8bd58f037ee1e8cc9c20d4413e0"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gae577f8bd58f037ee1e8cc9c20d4413e0">_Interfaces_Parse</a> (<a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDesc, <a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a> *pArg)</td></tr>
<tr class="memdesc:gae577f8bd58f037ee1e8cc9c20d4413e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse descriptors: Interface, Bulk IN/OUT, Interrupt IN.  <a href="#gae577f8bd58f037ee1e8cc9c20d4413e0">More...</a><br /></td></tr>
<tr class="separator:gae577f8bd58f037ee1e8cc9c20d4413e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28acc08820659f041668dd2edf6284da"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga28acc08820659f041668dd2edf6284da">_TransferCallback</a> (const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, uint8_t status, uint32_t received, uint32_t remaining)</td></tr>
<tr class="separator:ga28acc08820659f041668dd2edf6284da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f89eafbcc1fe2f7ff6600943edbebf0"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga2f89eafbcc1fe2f7ff6600943edbebf0">_UsbTxBufferPush</a> (void)</td></tr>
<tr class="separator:ga2f89eafbcc1fe2f7ff6600943edbebf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36a77ddede1ea66a616d1a1ad86a5a39"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga36a77ddede1ea66a616d1a1ad86a5a39">_UsbTxBufferPop</a> (void)</td></tr>
<tr class="separator:ga36a77ddede1ea66a616d1a1ad86a5a39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga127cc185c908343e2c059c61cf6f20b6"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga127cc185c908343e2c059c61cf6f20b6">_UsbTxBufferPeek</a> (void)</td></tr>
<tr class="separator:ga127cc185c908343e2c059c61cf6f20b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadfeadaa787932fc6f8ef50a53fdb2ed0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gadfeadaa787932fc6f8ef50a53fdb2ed0">_FlushUsbTxBuffers</a> (const uint8_t *pipe)</td></tr>
<tr class="separator:gadfeadaa787932fc6f8ef50a53fdb2ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab841b1a9dc617afc102ab5badd8ee656"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gab841b1a9dc617afc102ab5badd8ee656">_UsbDataSent</a> (void *pipe, uint8_t status, uint32_t received, uint32_t remaining)</td></tr>
<tr class="separator:gab841b1a9dc617afc102ab5badd8ee656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga30f82977566cc02b46eaabb879b13958"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga30f82977566cc02b46eaabb879b13958">CDCDEEMPort_Initialize</a> (<a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, uint8_t firstInterface, uint8_t numInterface)</td></tr>
<tr class="memdesc:ga30f82977566cc02b46eaabb879b13958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial port function.  <a href="#ga30f82977566cc02b46eaabb879b13958">More...</a><br /></td></tr>
<tr class="separator:ga30f82977566cc02b46eaabb879b13958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c9e140e48ceaa47a7cc57cd4e144553"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga6c9e140e48ceaa47a7cc57cd4e144553">CDCDEEMPort_ParseInterfaces</a> (<a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, <a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint32_t dwLength)</td></tr>
<tr class="memdesc:ga6c9e140e48ceaa47a7cc57cd4e144553"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse CDC EEM Port information for CDCDEEMPort instance.  <a href="#ga6c9e140e48ceaa47a7cc57cd4e144553">More...</a><br /></td></tr>
<tr class="separator:ga6c9e140e48ceaa47a7cc57cd4e144553"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22689d00e906f48f9d99ae975b6a0ebb"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga22689d00e906f48f9d99ae975b6a0ebb">CDCDEEMPort_RequestHandler</a> (<a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:ga22689d00e906f48f9d99ae975b6a0ebb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#ga22689d00e906f48f9d99ae975b6a0ebb">More...</a><br /></td></tr>
<tr class="separator:ga22689d00e906f48f9d99ae975b6a0ebb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96f1ea97b11b0f511e9b470ac1c3c6bb"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga96f1ea97b11b0f511e9b470ac1c3c6bb">CDCDEEMPort_Read</a> (const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, void *pData, uint32_t dwSize, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArg)</td></tr>
<tr class="memdesc:ga96f1ea97b11b0f511e9b470ac1c3c6bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#ga96f1ea97b11b0f511e9b470ac1c3c6bb">More...</a><br /></td></tr>
<tr class="separator:ga96f1ea97b11b0f511e9b470ac1c3c6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1a69b4eba25b161f947805f21e00e1af"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1a69b4eba25b161f947805f21e00e1af">CDCDEEMPort_Write</a> (const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *pCdcd, void *pData, uint32_t dwSize, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArg)</td></tr>
<tr class="memdesc:ga1a69b4eba25b161f947805f21e00e1af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#ga1a69b4eba25b161f947805f21e00e1af">More...</a><br /></td></tr>
<tr class="separator:ga1a69b4eba25b161f947805f21e00e1af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga32163598f16b8f844c8640af789ac0ca"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga32163598f16b8f844c8640af789ac0ca">CDCDSerial_EventHandler</a> (uint32_t event, uint32_t param)</td></tr>
<tr class="memdesc:ga32163598f16b8f844c8640af789ac0ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">USB CDC Serial Port Event Handler.  <a href="#ga32163598f16b8f844c8640af789ac0ca">More...</a><br /></td></tr>
<tr class="separator:ga32163598f16b8f844c8640af789ac0ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61ffa29ba9dde8fb06537dec89b665c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga61ffa29ba9dde8fb06537dec89b665c4">CDCDSerial_Initialize</a> (<a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, uint8_t bInterfaceNb)</td></tr>
<tr class="memdesc:ga61ffa29ba9dde8fb06537dec89b665c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial driver &amp; USBD Driver.  <a href="#ga61ffa29ba9dde8fb06537dec89b665c4">More...</a><br /></td></tr>
<tr class="separator:ga61ffa29ba9dde8fb06537dec89b665c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f46147999cac65dacbef7b85dc70dd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga2f46147999cac65dacbef7b85dc70dd1">CDCDSerial_ConfigureFunction</a> (<a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint16_t wLength)</td></tr>
<tr class="memdesc:ga2f46147999cac65dacbef7b85dc70dd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked whenever the device is changed by the host.  <a href="#ga2f46147999cac65dacbef7b85dc70dd1">More...</a><br /></td></tr>
<tr class="separator:ga2f46147999cac65dacbef7b85dc70dd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9ba93a4fe6bb97098e92d54e3aff6a2"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gae9ba93a4fe6bb97098e92d54e3aff6a2">CDCDSerial_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gae9ba93a4fe6bb97098e92d54e3aff6a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#gae9ba93a4fe6bb97098e92d54e3aff6a2">More...</a><br /></td></tr>
<tr class="separator:gae9ba93a4fe6bb97098e92d54e3aff6a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc5ca8c0214a9e7db56272e0d57c4237"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gacc5ca8c0214a9e7db56272e0d57c4237">CDCDSerial_Read</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:gacc5ca8c0214a9e7db56272e0d57c4237"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#gacc5ca8c0214a9e7db56272e0d57c4237">More...</a><br /></td></tr>
<tr class="separator:gacc5ca8c0214a9e7db56272e0d57c4237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga192075ad673f331b3d4414c40c117bad"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga192075ad673f331b3d4414c40c117bad">CDCDSerial_Write</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga192075ad673f331b3d4414c40c117bad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#ga192075ad673f331b3d4414c40c117bad">More...</a><br /></td></tr>
<tr class="separator:ga192075ad673f331b3d4414c40c117bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga290c8108a4ebd9aa818692da02df52c7"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga290c8108a4ebd9aa818692da02df52c7">CDCDSerial_GetControlLineState</a> (void)</td></tr>
<tr class="memdesc:ga290c8108a4ebd9aa818692da02df52c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current control line state of the RS-232 line.  <a href="#ga290c8108a4ebd9aa818692da02df52c7">More...</a><br /></td></tr>
<tr class="separator:ga290c8108a4ebd9aa818692da02df52c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc49b8f92d4598aad2573a82674bb8c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gafc49b8f92d4598aad2573a82674bb8c5">CDCDSerial_GetLineCoding</a> (<a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *pLineCoding)</td></tr>
<tr class="memdesc:gafc49b8f92d4598aad2573a82674bb8c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy current line coding settings to pointered space.  <a href="#gafc49b8f92d4598aad2573a82674bb8c5">More...</a><br /></td></tr>
<tr class="separator:gafc49b8f92d4598aad2573a82674bb8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6752886ecca7104ed060dc9bd2e0eefa"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga6752886ecca7104ed060dc9bd2e0eefa">CDCDSerial_GetSerialState</a> (void)</td></tr>
<tr class="memdesc:ga6752886ecca7104ed060dc9bd2e0eefa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current status of the RS-232 line.  <a href="#ga6752886ecca7104ed060dc9bd2e0eefa">More...</a><br /></td></tr>
<tr class="separator:ga6752886ecca7104ed060dc9bd2e0eefa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf36cc7779a7aa6dc6af6df4e148aebc8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaf36cc7779a7aa6dc6af6df4e148aebc8">CDCDSerial_SetSerialState</a> (uint16_t serialState)</td></tr>
<tr class="memdesc:gaf36cc7779a7aa6dc6af6df4e148aebc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current serial state of the device to the given value.  <a href="#gaf36cc7779a7aa6dc6af6df4e148aebc8">More...</a><br /></td></tr>
<tr class="separator:gaf36cc7779a7aa6dc6af6df4e148aebc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga191a619ddb7cfdac13b7d8f04349e3ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga191a619ddb7cfdac13b7d8f04349e3ef">CDCDSerialDriver_Initialize</a> (const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *pDescriptors)</td></tr>
<tr class="memdesc:ga191a619ddb7cfdac13b7d8f04349e3ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial driver &amp; USBD Driver.  <a href="#ga191a619ddb7cfdac13b7d8f04349e3ef">More...</a><br /></td></tr>
<tr class="separator:ga191a619ddb7cfdac13b7d8f04349e3ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6435498b62ec6c1d4378563f68767120"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga6435498b62ec6c1d4378563f68767120">CDCDSerialDriver_ConfigurationChangedHandler</a> (uint8_t cfgnum)</td></tr>
<tr class="memdesc:ga6435498b62ec6c1d4378563f68767120"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked whenever the active configuration of device is changed by the host.  <a href="#ga6435498b62ec6c1d4378563f68767120">More...</a><br /></td></tr>
<tr class="separator:ga6435498b62ec6c1d4378563f68767120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga494662f08154675457d9953fbced331a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga494662f08154675457d9953fbced331a">CDCDSerialDriver_RequestHandler</a> (const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:ga494662f08154675457d9953fbced331a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#ga494662f08154675457d9953fbced331a">More...</a><br /></td></tr>
<tr class="separator:ga494662f08154675457d9953fbced331a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1df488de43fb255ae5191c98b3724576"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1df488de43fb255ae5191c98b3724576">_SetLineCodingCallback</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga1df488de43fb255ae5191c98b3724576"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback function which should be invoked after the data of a SetLineCoding request has been retrieved.  <a href="#ga1df488de43fb255ae5191c98b3724576">More...</a><br /></td></tr>
<tr class="separator:ga1df488de43fb255ae5191c98b3724576"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e">_SetLineCoding</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives new line coding information from the USB host.  <a href="#ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e">More...</a><br /></td></tr>
<tr class="separator:ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46f8e4f16c17c08438269d88056ba461"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga46f8e4f16c17c08438269d88056ba461">_GetLineCoding</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga46f8e4f16c17c08438269d88056ba461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends the current line coding information to the host through Control endpoint 0.  <a href="#ga46f8e4f16c17c08438269d88056ba461">More...</a><br /></td></tr>
<tr class="separator:ga46f8e4f16c17c08438269d88056ba461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf48d12a12e146987d9c2c5b7554d7a60"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaf48d12a12e146987d9c2c5b7554d7a60">_SetControlLineState</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gaf48d12a12e146987d9c2c5b7554d7a60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the state of the serial driver according to the information sent by the host via a SetControlLineState request, and acknowledges the request with a zero-length packet.  <a href="#gaf48d12a12e146987d9c2c5b7554d7a60">More...</a><br /></td></tr>
<tr class="separator:gaf48d12a12e146987d9c2c5b7554d7a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38c0b965385d8d07a36e8149a8f446f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga38c0b965385d8d07a36e8149a8f446f2">CDCDSerialPort_Initialize</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, <a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *pUsbd, <a class="el" href="group__usbd__cdc.xhtml#ga3a8bae9f7b3af3e754ce52accef7731c">CDCDSerialPortEventHandler</a> fEventHandler, void *pArg, uint8_t firstInterface, uint8_t numInterface)</td></tr>
<tr class="memdesc:ga38c0b965385d8d07a36e8149a8f446f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the USB Device CDC serial port function.  <a href="#ga38c0b965385d8d07a36e8149a8f446f2">More...</a><br /></td></tr>
<tr class="separator:ga38c0b965385d8d07a36e8149a8f446f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4935aee506e10a71e0f13aad3ab80896"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga4935aee506e10a71e0f13aad3ab80896">CDCDSerialPort_ParseInterfaces</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, <a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *pDescriptors, uint32_t dwLength)</td></tr>
<tr class="memdesc:ga4935aee506e10a71e0f13aad3ab80896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse CDC Serial Port information for CDCDSerialPort instance.  <a href="#ga4935aee506e10a71e0f13aad3ab80896">More...</a><br /></td></tr>
<tr class="separator:ga4935aee506e10a71e0f13aad3ab80896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafccee3269ed6e338919f108286973e40"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gafccee3269ed6e338919f108286973e40">CDCDSerialPort_RequestHandler</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *request)</td></tr>
<tr class="memdesc:gafccee3269ed6e338919f108286973e40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles CDC-specific SETUP requests.  <a href="#gafccee3269ed6e338919f108286973e40">More...</a><br /></td></tr>
<tr class="separator:gafccee3269ed6e338919f108286973e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8999bdf9f9412e4545f777ef2764cca7"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga8999bdf9f9412e4545f777ef2764cca7">CDCDSerialPort_Read</a> (const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, void *pData, uint32_t dwSize, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArg)</td></tr>
<tr class="memdesc:ga8999bdf9f9412e4545f777ef2764cca7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#ga8999bdf9f9412e4545f777ef2764cca7">More...</a><br /></td></tr>
<tr class="separator:ga8999bdf9f9412e4545f777ef2764cca7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ed7e9a484cc297f7a1462a6beeebe9c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga5ed7e9a484cc297f7a1462a6beeebe9c">_UsbDataSent_ZLP</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga5ed7e9a484cc297f7a1462a6beeebe9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback function for USBD_Write to send a zero-length packet.  <a href="#ga5ed7e9a484cc297f7a1462a6beeebe9c">More...</a><br /></td></tr>
<tr class="separator:ga5ed7e9a484cc297f7a1462a6beeebe9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd42b94ec8ef5a8e65f051ce30cb449a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gabd42b94ec8ef5a8e65f051ce30cb449a">CDCDSerialPort_Write</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, void *pData, uint32_t dwSize, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> fCallback, void *pArg)</td></tr>
<tr class="memdesc:gabd42b94ec8ef5a8e65f051ce30cb449a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#gabd42b94ec8ef5a8e65f051ce30cb449a">More...</a><br /></td></tr>
<tr class="separator:gabd42b94ec8ef5a8e65f051ce30cb449a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga777f3bd5a1512c7ef3c765e606617a3d"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga777f3bd5a1512c7ef3c765e606617a3d">CDCDSerialPort_GetControlLineState</a> (const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga777f3bd5a1512c7ef3c765e606617a3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current control line state of the RS-232 line.  <a href="#ga777f3bd5a1512c7ef3c765e606617a3d">More...</a><br /></td></tr>
<tr class="separator:ga777f3bd5a1512c7ef3c765e606617a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d721b3f1307503eb659b86461eb0367"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga3d721b3f1307503eb659b86461eb0367">CDCDSerialPort_GetLineCoding</a> (const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, <a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *pLineCoding)</td></tr>
<tr class="memdesc:ga3d721b3f1307503eb659b86461eb0367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy current line coding settings to appointed space.  <a href="#ga3d721b3f1307503eb659b86461eb0367">More...</a><br /></td></tr>
<tr class="separator:ga3d721b3f1307503eb659b86461eb0367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1116bd4b0eb9908244c01bd0ae3d513d"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1116bd4b0eb9908244c01bd0ae3d513d">CDCDSerialPort_GetSerialState</a> (const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd)</td></tr>
<tr class="memdesc:ga1116bd4b0eb9908244c01bd0ae3d513d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current status of the RS-232 line.  <a href="#ga1116bd4b0eb9908244c01bd0ae3d513d">More...</a><br /></td></tr>
<tr class="separator:ga1116bd4b0eb9908244c01bd0ae3d513d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1e0cdbb71cdbb6615f5e150c054c6ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gaa1e0cdbb71cdbb6615f5e150c054c6ab">CDCDSerialPort_SetSerialState</a> (<a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *pCdcd, uint16_t wSerialState)</td></tr>
<tr class="memdesc:gaa1e0cdbb71cdbb6615f5e150c054c6ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current serial state of the device to the given value.  <a href="#gaa1e0cdbb71cdbb6615f5e150c054c6ab">More...</a><br /></td></tr>
<tr class="separator:gaa1e0cdbb71cdbb6615f5e150c054c6ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7633cef39e7c522288ed6266c691ce7b"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7633cef39e7c522288ed6266c691ce7b">CDCDEEMDriver_Write</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga7633cef39e7c522288ed6266c691ce7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#ga7633cef39e7c522288ed6266c691ce7b">More...</a><br /></td></tr>
<tr class="separator:ga7633cef39e7c522288ed6266c691ce7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f2e61bac64b3e6d80b1a2d23e5c829e"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga2f2e61bac64b3e6d80b1a2d23e5c829e">CDCDEEMDriver_Read</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga2f2e61bac64b3e6d80b1a2d23e5c829e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#ga2f2e61bac64b3e6d80b1a2d23e5c829e">More...</a><br /></td></tr>
<tr class="separator:ga2f2e61bac64b3e6d80b1a2d23e5c829e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7cf34e00ae22edc47abacdb3e67a32c2"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7cf34e00ae22edc47abacdb3e67a32c2">CDCDSerial_LineCodingIsToChange</a> (<a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *pLineCoding)</td></tr>
<tr class="memdesc:ga7cf34e00ae22edc47abacdb3e67a32c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the CDC LineCoding is requested to changed.  <a href="#ga7cf34e00ae22edc47abacdb3e67a32c2">More...</a><br /></td></tr>
<tr class="separator:ga7cf34e00ae22edc47abacdb3e67a32c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac087ca8a6a24c114b50a06f29c50378e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gac087ca8a6a24c114b50a06f29c50378e">CDCDSerial_ControlLineStateChanged</a> (uint8_t DTR, uint8_t RTS)</td></tr>
<tr class="memdesc:gac087ca8a6a24c114b50a06f29c50378e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invoked when the CDC ControlLineState is changed.  <a href="#gac087ca8a6a24c114b50a06f29c50378e">More...</a><br /></td></tr>
<tr class="separator:gac087ca8a6a24c114b50a06f29c50378e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga08a9344113a71e425ad5cba4a9727e8c"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga08a9344113a71e425ad5cba4a9727e8c">CDCDSerialDriver_Write</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga08a9344113a71e425ad5cba4a9727e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a data buffer through the virtual COM port created by the CDC device serial driver.  <a href="#ga08a9344113a71e425ad5cba4a9727e8c">More...</a><br /></td></tr>
<tr class="separator:ga08a9344113a71e425ad5cba4a9727e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga523c240680a3b0f4bc2fb3499c2aae0f"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga523c240680a3b0f4bc2fb3499c2aae0f">CDCDSerialDriver_Read</a> (void *data, uint32_t size, <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> callback, void *argument)</td></tr>
<tr class="memdesc:ga523c240680a3b0f4bc2fb3499c2aae0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receives data from the host through the virtual COM port created by the CDC device serial driver.  <a href="#ga523c240680a3b0f4bc2fb3499c2aae0f">More...</a><br /></td></tr>
<tr class="separator:ga523c240680a3b0f4bc2fb3499c2aae0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1484f0daa5c137003b1da816d7aa6b4e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga1484f0daa5c137003b1da816d7aa6b4e">CDCDSerialDriver_GetLineCoding</a> (<a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *pLineCoding)</td></tr>
<tr class="memdesc:ga1484f0daa5c137003b1da816d7aa6b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy current line coding settings to pointed space.  <a href="#ga1484f0daa5c137003b1da816d7aa6b4e">More...</a><br /></td></tr>
<tr class="separator:ga1484f0daa5c137003b1da816d7aa6b4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27c5569d9f41fdd46a1738ac66ccf464"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga27c5569d9f41fdd46a1738ac66ccf464">CDCDSerialDriver_GetControlLineState</a> (void)</td></tr>
<tr class="memdesc:ga27c5569d9f41fdd46a1738ac66ccf464"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current control line state of the RS-232 line.  <a href="#ga27c5569d9f41fdd46a1738ac66ccf464">More...</a><br /></td></tr>
<tr class="separator:ga27c5569d9f41fdd46a1738ac66ccf464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f70fe3eda5b72738976a08ede7f75fe"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga6f70fe3eda5b72738976a08ede7f75fe">CDCDSerialDriver_GetSerialState</a> (void)</td></tr>
<tr class="memdesc:ga6f70fe3eda5b72738976a08ede7f75fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current status of the RS-232 line.  <a href="#ga6f70fe3eda5b72738976a08ede7f75fe">More...</a><br /></td></tr>
<tr class="separator:ga6f70fe3eda5b72738976a08ede7f75fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc35e62b7e25a378c53c84a865c21aac"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gacc35e62b7e25a378c53c84a865c21aac">CDCDSerialDriver_SetSerialState</a> (uint16_t serialState)</td></tr>
<tr class="memdesc:gacc35e62b7e25a378c53c84a865c21aac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current serial state of the device to the given value.  <a href="#gacc35e62b7e25a378c53c84a865c21aac">More...</a><br /></td></tr>
<tr class="separator:gacc35e62b7e25a378c53c84a865c21aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gac10360b389fba2d199f4cb7dca92c7d3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gac10360b389fba2d199f4cb7dca92c7d3">cdcdEEM</a></td></tr>
<tr class="memdesc:gac10360b389fba2d199f4cb7dca92c7d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">EEM Port instance list.  <a href="#gac10360b389fba2d199f4cb7dca92c7d3">More...</a><br /></td></tr>
<tr class="separator:gac10360b389fba2d199f4cb7dca92c7d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga762c88cf6d1ac79a1e837c7b22d1fce5"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga762c88cf6d1ac79a1e837c7b22d1fce5">gRxBuffer</a> [<a class="el" href="xtio__serial__com_8c.xhtml#aa00f910116b7fca294ce753f2e98c8c0">DATABUFFERSIZE</a>]</td></tr>
<tr class="memdesc:ga762c88cf6d1ac79a1e837c7b22d1fce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer for storing incoming USB data.  <a href="#ga762c88cf6d1ac79a1e837c7b22d1fce5">More...</a><br /></td></tr>
<tr class="separator:ga762c88cf6d1ac79a1e837c7b22d1fce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga203957c4a9056f5192152caf6d5670d3"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga203957c4a9056f5192152caf6d5670d3">gUsbTxBuffers</a> [<a class="el" href="group__usbd__cdc.xhtml#ga7ba2c109a860a75b04095acb7e6834d5">USB_TX_BUFFERS</a> *<a class="el" href="xtio__serial__com_8c.xhtml#a9aad3080ded355abe147d5c60f44168d">DATAPACKETSIZE</a>]</td></tr>
<tr class="memdesc:ga203957c4a9056f5192152caf6d5670d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Buffer for storing outgoing USB data.  <a href="#ga203957c4a9056f5192152caf6d5670d3">More...</a><br /></td></tr>
<tr class="separator:ga203957c4a9056f5192152caf6d5670d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6152bba00ffe67e30a94f03babd5df71"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga6152bba00ffe67e30a94f03babd5df71">gUsbTxBufferSizes</a> [<a class="el" href="group__usbd__cdc.xhtml#ga7ba2c109a860a75b04095acb7e6834d5">USB_TX_BUFFERS</a>]</td></tr>
<tr class="separator:ga6152bba00ffe67e30a94f03babd5df71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga471c7f9b8733185306e75ebda268515c"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga471c7f9b8733185306e75ebda268515c">gUsbTxHeadIdx</a> = 0</td></tr>
<tr class="separator:ga471c7f9b8733185306e75ebda268515c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b565e9fa031f6514d9dee78ea584f37"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7b565e9fa031f6514d9dee78ea584f37">gUsbTxTailIdx</a> = 0</td></tr>
<tr class="separator:ga7b565e9fa031f6514d9dee78ea584f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54b25a883144566d25381d8433061b04"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga54b25a883144566d25381d8433061b04">gUsbTxMutex</a> = 0</td></tr>
<tr class="separator:ga54b25a883144566d25381d8433061b04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga438a0364e5caee03145bb1e619347ad4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga438a0364e5caee03145bb1e619347ad4">gRxCallback</a></td></tr>
<tr class="separator:ga438a0364e5caee03145bb1e619347ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2836064366df5e073e3d0209b07c2e11"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga2836064366df5e073e3d0209b07c2e11">gRxCallbackArg</a></td></tr>
<tr class="separator:ga2836064366df5e073e3d0209b07c2e11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f3dd684312dcadb03231c7cf08f9274"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga0f3dd684312dcadb03231c7cf08f9274">gRxData</a></td></tr>
<tr class="separator:ga0f3dd684312dcadb03231c7cf08f9274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb35c253130a3cca1babee4dc6fda263"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gadb35c253130a3cca1babee4dc6fda263">gRxDataSize</a></td></tr>
<tr class="separator:gadb35c253130a3cca1babee4dc6fda263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cfb56885d40e727caadcdbd69bb45d7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga5cfb56885d40e727caadcdbd69bb45d7">cdcdSerial</a></td></tr>
<tr class="memdesc:ga5cfb56885d40e727caadcdbd69bb45d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serial Port instance list.  <a href="#ga5cfb56885d40e727caadcdbd69bb45d7">More...</a><br /></td></tr>
<tr class="separator:ga5cfb56885d40e727caadcdbd69bb45d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fe0f137207f1f47fd6377ecd75823d4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga8fe0f137207f1f47fd6377ecd75823d4">lineCoding</a></td></tr>
<tr class="memdesc:ga8fe0f137207f1f47fd6377ecd75823d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Line coding values.  <a href="#ga8fe0f137207f1f47fd6377ecd75823d4">More...</a><br /></td></tr>
<tr class="separator:ga8fe0f137207f1f47fd6377ecd75823d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga384638d07384b7d12bfd2ba2f830dff8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a></td></tr>
<tr class="memdesc:ga384638d07384b7d12bfd2ba2f830dff8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard USB device descriptor for the CDC serial driver.  <a href="#ga384638d07384b7d12bfd2ba2f830dff8">More...</a><br /></td></tr>
<tr class="separator:ga384638d07384b7d12bfd2ba2f830dff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7740842e49c598f4c0876e84ced67a1c"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a></td></tr>
<tr class="memdesc:ga7740842e49c598f4c0876e84ced67a1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Device qualifier descriptor (Necessary to pass USB test).  <a href="#ga7740842e49c598f4c0876e84ced67a1c">More...</a><br /></td></tr>
<tr class="separator:ga7740842e49c598f4c0876e84ced67a1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd15c3aa6fce2192be56c41854338f2d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gafd15c3aa6fce2192be56c41854338f2d">configurationDescriptorsFS</a></td></tr>
<tr class="memdesc:gafd15c3aa6fce2192be56c41854338f2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard USB configuration descriptor for the CDC serial driver.  <a href="#gafd15c3aa6fce2192be56c41854338f2d">More...</a><br /></td></tr>
<tr class="separator:gafd15c3aa6fce2192be56c41854338f2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga376315c1b4e003df2dfe18befb9e8194"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga376315c1b4e003df2dfe18befb9e8194">otherSpeedDescriptorsFS</a></td></tr>
<tr class="memdesc:ga376315c1b4e003df2dfe18befb9e8194"><td class="mdescLeft">&#160;</td><td class="mdescRight">Other-speed configuration descriptor (when in full-speed).  <a href="#ga376315c1b4e003df2dfe18befb9e8194">More...</a><br /></td></tr>
<tr class="separator:ga376315c1b4e003df2dfe18befb9e8194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab73f4350883f3572d8ef277b02b6c147"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#gab73f4350883f3572d8ef277b02b6c147">configurationDescriptorsHS</a></td></tr>
<tr class="memdesc:gab73f4350883f3572d8ef277b02b6c147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configuration descriptor (when in high-speed).  <a href="#gab73f4350883f3572d8ef277b02b6c147">More...</a><br /></td></tr>
<tr class="separator:gab73f4350883f3572d8ef277b02b6c147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0055b7cb8679462883c4a3bdf81f170a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga0055b7cb8679462883c4a3bdf81f170a">otherSpeedDescriptorsHS</a></td></tr>
<tr class="memdesc:ga0055b7cb8679462883c4a3bdf81f170a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Other-speed configuration descriptor (when in high-speed).  <a href="#ga0055b7cb8679462883c4a3bdf81f170a">More...</a><br /></td></tr>
<tr class="separator:ga0055b7cb8679462883c4a3bdf81f170a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0673b74acb7181f16520c995908d86b0"><td class="memItemLeft" align="right" valign="top">const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga0673b74acb7181f16520c995908d86b0">languageIdStringDescriptor</a> []</td></tr>
<tr class="memdesc:ga0673b74acb7181f16520c995908d86b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Language ID string descriptor.  <a href="#ga0673b74acb7181f16520c995908d86b0">More...</a><br /></td></tr>
<tr class="separator:ga0673b74acb7181f16520c995908d86b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga24afc4f796a656e70aa521324178cdaf"><td class="memItemLeft" align="right" valign="top">const unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga24afc4f796a656e70aa521324178cdaf">productStringDescriptor</a> []</td></tr>
<tr class="memdesc:ga24afc4f796a656e70aa521324178cdaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Product string descriptor.  <a href="#ga24afc4f796a656e70aa521324178cdaf">More...</a><br /></td></tr>
<tr class="separator:ga24afc4f796a656e70aa521324178cdaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="memItemLeft" align="right" valign="top">const unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a> []</td></tr>
<tr class="memdesc:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of string descriptors used by the device.  <a href="#ga5af83d39e0236d7188ba8e18b3c9a7c6">More...</a><br /></td></tr>
<tr class="separator:ga5af83d39e0236d7188ba8e18b3c9a7c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga202d0841fc95e5611909e689282bd04e"><td class="memItemLeft" align="right" valign="top">WEAK const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__usbd__cdc.xhtml#ga202d0841fc95e5611909e689282bd04e">cdcdSerialDriverDescriptors</a></td></tr>
<tr class="memdesc:ga202d0841fc95e5611909e689282bd04e"><td class="mdescLeft">&#160;</td><td class="mdescRight">List of standard descriptors for the serial driver.  <a href="#ga202d0841fc95e5611909e689282bd04e">More...</a><br /></td></tr>
<tr class="separator:ga202d0841fc95e5611909e689282bd04e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="gaa00f910116b7fca294ce753f2e98c8c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa00f910116b7fca294ce753f2e98c8c0">&sect;&nbsp;</a></span>DATABUFFERSIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATABUFFERSIZE&#160;&#160;&#160;(<a class="el" href="xtio__serial__com_8c.xhtml#a9aad3080ded355abe147d5c60f44168d">DATAPACKETSIZE</a>+2)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Size in bytes of the buffer used for reading data from USB. </p>

</div>
</div>
<a id="ga9aad3080ded355abe147d5c60f44168d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9aad3080ded355abe147d5c60f44168d">&sect;&nbsp;</a></span>DATAPACKETSIZE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DATAPACKETSIZE&#160;&#160;&#160;(1536)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum packet size in bytes. </p>

</div>
</div>
<a id="ga3acffbd305ee72dcd4593c0d8af64a4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3acffbd305ee72dcd4593c0d8af64a4f">&sect;&nbsp;</a></span>MIN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((a &lt; b) ? a : b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the minimum between two values. </p>

</div>
</div>
<a id="ga7ba2c109a860a75b04095acb7e6834d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7ba2c109a860a75b04095acb7e6834d5">&sect;&nbsp;</a></span>USB_TX_BUFFERS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USB_TX_BUFFERS&#160;&#160;&#160;64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of transmit buffers. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga7b056e67e7f26fdb622c5c3b24ec29b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b056e67e7f26fdb622c5c3b24ec29b6">&sect;&nbsp;</a></span>CDCDEEMDriverConfigurationDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#ga7b056e67e7f26fdb622c5c3b24ec29b6">CDCDEEMDriverConfigurationDescriptors</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configuration descriptor list for a device implementing a CDC EEM driver. </p>

</div>
</div>
<a id="gae028431c5278cd03bbe090732133f935"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae028431c5278cd03bbe090732133f935">&sect;&nbsp;</a></span>CDCDEEMDriverConfigurationDescriptorsOTG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#gae028431c5278cd03bbe090732133f935">CDCDEEMDriverConfigurationDescriptorsOTG</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configuration descriptor list for a device implementing a CDC EEM OTG driver. </p>

</div>
</div>
<a id="gad0c64ae9bb36cf998073fa1547cd745a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad0c64ae9bb36cf998073fa1547cd745a">&sect;&nbsp;</a></span>CDCDEEMPort</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___c_d_c_d_e_e_m_port.xhtml">_CDCDEEMPort</a>  <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Struct for USB CDC EEM port function. </p>

</div>
</div>
<a id="ga0b2bcdb11b5672239934d2486bff14c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0b2bcdb11b5672239934d2486bff14c8">&sect;&nbsp;</a></span>CDCDParseData <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___c_d_c_d_parse_data.xhtml">_CDCDParseData</a>  <a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse data extention for descriptor parsing. </p>

</div>
</div>
<a id="ga0b2bcdb11b5672239934d2486bff14c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0b2bcdb11b5672239934d2486bff14c8">&sect;&nbsp;</a></span>CDCDParseData <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___c_d_c_d_parse_data.xhtml">_CDCDParseData</a>  <a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse data extention for descriptor parsing. </p>

</div>
</div>
<a id="ga8c29a23bbdc4d226e2415775a984426a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8c29a23bbdc4d226e2415775a984426a">&sect;&nbsp;</a></span>CDCDSerialDriverConfigurationDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configuration descriptor list for a device implementing a CDC serial driver. </p>

</div>
</div>
<a id="ga317cd7a24cb5af53ecbdaf56f57010a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga317cd7a24cb5af53ecbdaf56f57010a8">&sect;&nbsp;</a></span>CDCDSerialDriverConfigurationDescriptorsOTG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#ga317cd7a24cb5af53ecbdaf56f57010a8">CDCDSerialDriverConfigurationDescriptorsOTG</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configuration descriptor list for a device implementing a CDC serial OTG driver. </p>

</div>
</div>
<a id="ga41d954a5a3c99f857c7c56b0c383b0e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga41d954a5a3c99f857c7c56b0c383b0e6">&sect;&nbsp;</a></span>CDCDSerialPort</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___c_d_c_d_serial_port.xhtml">_CDCDSerialPort</a>  <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Struct for USB CDC virtual COM serial port function. </p>

</div>
</div>
<a id="ga3a8bae9f7b3af3e754ce52accef7731c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3a8bae9f7b3af3e754ce52accef7731c">&sect;&nbsp;</a></span>CDCDSerialPortEventHandler</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t(* CDCDSerialPortEventHandler) (uint32_t dwEvent, uint32_t dwParam, void *pArguments)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Callback function for serial port events. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gadfeadaa787932fc6f8ef50a53fdb2ed0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadfeadaa787932fc6f8ef50a53fdb2ed0">&sect;&nbsp;</a></span>_FlushUsbTxBuffers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _FlushUsbTxBuffers </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>pipe</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gadfeadaa787932fc6f8ef50a53fdb2ed0_cgraph.svg" width="495" height="278"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gadfeadaa787932fc6f8ef50a53fdb2ed0_icgraph.svg" width="356" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga46f8e4f16c17c08438269d88056ba461"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga46f8e4f16c17c08438269d88056ba461">&sect;&nbsp;</a></span>_GetLineCoding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _GetLineCoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends the current line coding information to the host through Control endpoint 0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga46f8e4f16c17c08438269d88056ba461_cgraph.svg" width="280" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga46f8e4f16c17c08438269d88056ba461_icgraph.svg" width="412" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae577f8bd58f037ee1e8cc9c20d4413e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae577f8bd58f037ee1e8cc9c20d4413e0">&sect;&nbsp;</a></span>_Interfaces_Parse()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t _Interfaces_Parse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDesc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga0b2bcdb11b5672239934d2486bff14c8">CDCDParseData</a> *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parse descriptors: Interface, Bulk IN/OUT, Interrupt IN. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">desc</td><td>Pointer to descriptor list. </td></tr>
    <tr><td class="paramname">arg</td><td>Argument, pointer to AUDDParseData instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gae577f8bd58f037ee1e8cc9c20d4413e0_icgraph.svg" width="412" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf48d12a12e146987d9c2c5b7554d7a60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf48d12a12e146987d9c2c5b7554d7a60">&sect;&nbsp;</a></span>_SetControlLineState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _SetControlLineState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes the state of the serial driver according to the information sent by the host via a SetControlLineState request, and acknowledges the request with a zero-length packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf48d12a12e146987d9c2c5b7554d7a60_cgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf48d12a12e146987d9c2c5b7554d7a60_icgraph.svg" width="448" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e">&sect;&nbsp;</a></span>_SetLineCoding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _SetLineCoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Receives new line coding information from the USB host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e_cgraph.svg" width="355" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1f9eb98ba0cfc1cbc1b4ea0559ee0c7e_icgraph.svg" width="411" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1df488de43fb255ae5191c98b3724576"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1df488de43fb255ae5191c98b3724576">&sect;&nbsp;</a></span>_SetLineCodingCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _SetLineCodingCallback </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback function which should be invoked after the data of a SetLineCoding request has been retrieved. </p>
<p>Sends a zero-length packet to the host for acknowledging the request. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1df488de43fb255ae5191c98b3724576_cgraph.svg" width="332" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1df488de43fb255ae5191c98b3724576_icgraph.svg" width="355" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga28acc08820659f041668dd2edf6284da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga28acc08820659f041668dd2edf6284da">&sect;&nbsp;</a></span>_TransferCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _TransferCallback </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>received</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>remaining</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga28acc08820659f041668dd2edf6284da_cgraph.svg" width="342" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga28acc08820659f041668dd2edf6284da_icgraph.svg" width="342" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gab841b1a9dc617afc102ab5badd8ee656"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab841b1a9dc617afc102ab5badd8ee656">&sect;&nbsp;</a></span>_UsbDataSent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _UsbDataSent </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>received</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>remaining</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gab841b1a9dc617afc102ab5badd8ee656_cgraph.svg" width="472" height="227"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gab841b1a9dc617afc102ab5badd8ee656_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga5ed7e9a484cc297f7a1462a6beeebe9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ed7e9a484cc297f7a1462a6beeebe9c">&sect;&nbsp;</a></span>_UsbDataSent_ZLP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void _UsbDataSent_ZLP </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback function for USBD_Write to send a zero-length packet. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga5ed7e9a484cc297f7a1462a6beeebe9c_cgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga5ed7e9a484cc297f7a1462a6beeebe9c_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga127cc185c908343e2c059c61cf6f20b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga127cc185c908343e2c059c61cf6f20b6">&sect;&nbsp;</a></span>_UsbTxBufferPeek()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int _UsbTxBufferPeek </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga127cc185c908343e2c059c61cf6f20b6_cgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga127cc185c908343e2c059c61cf6f20b6_icgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga36a77ddede1ea66a616d1a1ad86a5a39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga36a77ddede1ea66a616d1a1ad86a5a39">&sect;&nbsp;</a></span>_UsbTxBufferPop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int _UsbTxBufferPop </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga36a77ddede1ea66a616d1a1ad86a5a39_icgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga2f89eafbcc1fe2f7ff6600943edbebf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f89eafbcc1fe2f7ff6600943edbebf0">&sect;&nbsp;</a></span>_UsbTxBufferPush()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int _UsbTxBufferPush </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga2f89eafbcc1fe2f7ff6600943edbebf0_icgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf1ed08b27219311a91054848030b7c5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf1ed08b27219311a91054848030b7c5d">&sect;&nbsp;</a></span>CDCDEEM_ConfigureFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEM_ConfigureFunction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked whenever the device is changed by the host. </p>
<p>Pointer to the descriptors for function configure.  Length of descriptors in number of bytes. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf1ed08b27219311a91054848030b7c5d_cgraph.svg" width="486" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf1ed08b27219311a91054848030b7c5d_icgraph.svg" width="484" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1082499b9ce587deca4f132eb39c4e2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1082499b9ce587deca4f132eb39c4e2f">&sect;&nbsp;</a></span>CDCDEEM_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEM_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bInterfaceNb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial driver &amp; USBD Driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">bInterfaceNb</td><td>Interface number for the function. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1082499b9ce587deca4f132eb39c4e2f_cgraph.svg" width="375" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1082499b9ce587deca4f132eb39c4e2f_icgraph.svg" width="387" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac92fa8fd122462732b56fd197477e8fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac92fa8fd122462732b56fd197477e8fd">&sect;&nbsp;</a></span>CDCDEEM_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEM_Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gac92fa8fd122462732b56fd197477e8fd_cgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gac92fa8fd122462732b56fd197477e8fd_icgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga801be6bfd3c037fb453c7e7ffd0f1e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga801be6bfd3c037fb453c7e7ffd0f1e85">&sect;&nbsp;</a></span>CDCDEEM_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEM_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga801be6bfd3c037fb453c7e7ffd0f1e85_cgraph.svg" width="475" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga801be6bfd3c037fb453c7e7ffd0f1e85_icgraph.svg" width="487" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga626636e7fcd1458fabf797f1280bd272"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga626636e7fcd1458fabf797f1280bd272">&sect;&nbsp;</a></span>CDCDEEM_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEM_Write </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga626636e7fcd1458fabf797f1280bd272_cgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga626636e7fcd1458fabf797f1280bd272_icgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf39ba7b7516aa693368fb4bacebcabb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf39ba7b7516aa693368fb4bacebcabb3">&sect;&nbsp;</a></span>CDCDEEMDriver_ConfigurationChangedHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEMDriver_ConfigurationChangedHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked whenever the active configuration of device is changed by the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfgnum</td><td>Configuration number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf39ba7b7516aa693368fb4bacebcabb3_cgraph.svg" width="499" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga474c6e12f50626640933b9400b89b03c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga474c6e12f50626640933b9400b89b03c">&sect;&nbsp;</a></span>CDCDEEMDriver_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEMDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial driver &amp; USBD Driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDescriptors</td><td>Pointer to Descriptors list for CDC EEM Device. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga474c6e12f50626640933b9400b89b03c_cgraph.svg" width="398" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga2f2e61bac64b3e6d80b1a2d23e5c829e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f2e61bac64b3e6d80b1a2d23e5c829e">&sect;&nbsp;</a></span>CDCDEEMDriver_Read()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CDCDEEMDriver_Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga2f2e61bac64b3e6d80b1a2d23e5c829e_cgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaaa153bf1169562e3a7b2249889e95a17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaa153bf1169562e3a7b2249889e95a17">&sect;&nbsp;</a></span>CDCDEEMDriver_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEMDriver_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaaa153bf1169562e3a7b2249889e95a17_cgraph.svg" width="499" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga7633cef39e7c522288ed6266c691ce7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7633cef39e7c522288ed6266c691ce7b">&sect;&nbsp;</a></span>CDCDEEMDriver_Write()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CDCDEEMDriver_Write </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga7633cef39e7c522288ed6266c691ce7b_cgraph.svg" width="347" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga30f82977566cc02b46eaabb879b13958"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga30f82977566cc02b46eaabb879b13958">&sect;&nbsp;</a></span>CDCDEEMPort_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDEEMPort_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>firstInterface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numInterface</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial port function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDEEMPort instance. </td></tr>
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">fEventHandler</td><td>Pointer to event handler function. </td></tr>
    <tr><td class="paramname">firstInterface</td><td>First interface index for the function (0xFF to parse from descriptors). </td></tr>
    <tr><td class="paramname">numInterface</td><td>Number of interfaces for the function. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga30f82977566cc02b46eaabb879b13958_icgraph.svg" width="375" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6c9e140e48ceaa47a7cc57cd4e144553"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6c9e140e48ceaa47a7cc57cd4e144553">&sect;&nbsp;</a></span>CDCDEEMPort_ParseInterfaces()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> * CDCDEEMPort_ParseInterfaces </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse CDC EEM Port information for CDCDEEMPort instance. </p>
<p>Accepted interfaces:</p><ul>
<li>Communication Interface + Data Interface</li>
<li>Data Interface ONLY <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDEEMPort instance. </td></tr>
    <tr><td class="paramname">pDescriptors</td><td>Pointer to descriptor list. </td></tr>
    <tr><td class="paramname">dwLength</td><td>Descriptor list size in bytes. </td></tr>
  </table>
  </dd>
</dl>
</li>
</ul>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6c9e140e48ceaa47a7cc57cd4e144553_cgraph.svg" width="443" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6c9e140e48ceaa47a7cc57cd4e144553_icgraph.svg" width="486" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga96f1ea97b11b0f511e9b470ac1c3c6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga96f1ea97b11b0f511e9b470ac1c3c6bb">&sect;&nbsp;</a></span>CDCDEEMPort_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEMPort_Read </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDEEMPort instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">dwSize</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">pArg</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga96f1ea97b11b0f511e9b470ac1c3c6bb_cgraph.svg" width="342" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga96f1ea97b11b0f511e9b470ac1c3c6bb_icgraph.svg" width="335" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga22689d00e906f48f9d99ae975b6a0ebb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga22689d00e906f48f9d99ae975b6a0ebb">&sect;&nbsp;</a></span>CDCDEEMPort_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEMPort_RequestHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDEEMPort instance. </td></tr>
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBRC_SUCCESS if request handled, otherwise error. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga22689d00e906f48f9d99ae975b6a0ebb_cgraph.svg" width="511" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga22689d00e906f48f9d99ae975b6a0ebb_icgraph.svg" width="475" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1a69b4eba25b161f947805f21e00e1af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1a69b4eba25b161f947805f21e00e1af">&sect;&nbsp;</a></span>CDCDEEMPort_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDEEMPort_Write </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write.</p>
<p>TODO batch packets ?</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDEEMPort instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">dwSize</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">pArg</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1a69b4eba25b161f947805f21e00e1af_cgraph.svg" width="356" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1a69b4eba25b161f947805f21e00e1af_icgraph.svg" width="342" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga2f46147999cac65dacbef7b85dc70dd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f46147999cac65dacbef7b85dc70dd1">&sect;&nbsp;</a></span>CDCDSerial_ConfigureFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerial_ConfigureFunction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked whenever the device is changed by the host. </p>
<p>Pointer to the descriptors for function configure.  Length of descriptors in number of bytes. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga2f46147999cac65dacbef7b85dc70dd1_cgraph.svg" width="503" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga2f46147999cac65dacbef7b85dc70dd1_icgraph.svg" width="503" height="248"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gac087ca8a6a24c114b50a06f29c50378e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac087ca8a6a24c114b50a06f29c50378e">&sect;&nbsp;</a></span>CDCDSerial_ControlLineStateChanged()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerial_ControlLineStateChanged </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>DTR</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>RTS</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the CDC ControlLineState is changed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>Port number. </td></tr>
    <tr><td class="paramname">DTR</td><td>New DTR value. </td></tr>
    <tr><td class="paramname">RTS</td><td>New RTS value. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gac087ca8a6a24c114b50a06f29c50378e_icgraph.svg" width="459" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga32163598f16b8f844c8640af789ac0ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga32163598f16b8f844c8640af789ac0ca">&sect;&nbsp;</a></span>CDCDSerial_EventHandler()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CDCDSerial_EventHandler </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>USB CDC Serial Port Event Handler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>Event code. </td></tr>
    <tr><td class="paramname">param</td><td>Event parameter. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga32163598f16b8f844c8640af789ac0ca_cgraph.svg" width="459" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga32163598f16b8f844c8640af789ac0ca_icgraph.svg" width="403" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga290c8108a4ebd9aa818692da02df52c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga290c8108a4ebd9aa818692da02df52c7">&sect;&nbsp;</a></span>CDCDSerial_GetControlLineState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t CDCDSerial_GetControlLineState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current control line state of the RS-232 line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga290c8108a4ebd9aa818692da02df52c7_cgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga290c8108a4ebd9aa818692da02df52c7_icgraph.svg" width="468" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafc49b8f92d4598aad2573a82674bb8c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafc49b8f92d4598aad2573a82674bb8c5">&sect;&nbsp;</a></span>CDCDSerial_GetLineCoding()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerial_GetLineCoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *&#160;</td>
          <td class="paramname"><em>pLineCoding</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy current line coding settings to pointered space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pLineCoding</td><td>Pointer to CDCLineCoding instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gafc49b8f92d4598aad2573a82674bb8c5_cgraph.svg" width="478" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gafc49b8f92d4598aad2573a82674bb8c5_icgraph.svg" width="446" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6752886ecca7104ed060dc9bd2e0eefa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6752886ecca7104ed060dc9bd2e0eefa">&sect;&nbsp;</a></span>CDCDSerial_GetSerialState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t CDCDSerial_GetSerialState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current status of the RS-232 line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6752886ecca7104ed060dc9bd2e0eefa_cgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6752886ecca7104ed060dc9bd2e0eefa_icgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga61ffa29ba9dde8fb06537dec89b665c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga61ffa29ba9dde8fb06537dec89b665c4">&sect;&nbsp;</a></span>CDCDSerial_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerial_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bInterfaceNb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial driver &amp; USBD Driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">bInterfaceNb</td><td>Interface number for the function. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga61ffa29ba9dde8fb06537dec89b665c4_cgraph.svg" width="403" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga61ffa29ba9dde8fb06537dec89b665c4_icgraph.svg" width="406" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga7cf34e00ae22edc47abacdb3e67a32c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7cf34e00ae22edc47abacdb3e67a32c2">&sect;&nbsp;</a></span>CDCDSerial_LineCodingIsToChange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t CDCDSerial_LineCodingIsToChange </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *&#160;</td>
          <td class="paramname"><em>pLineCoding</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked when the CDC LineCoding is requested to changed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>Port number. </td></tr>
    <tr><td class="paramname">pLineCoding</td><td>Pointer to new LineCoding settings. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBRC_SUCCESS if ready to receive the line coding. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga7cf34e00ae22edc47abacdb3e67a32c2_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gacc5ca8c0214a9e7db56272e0d57c4237"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc5ca8c0214a9e7db56272e0d57c4237">&sect;&nbsp;</a></span>CDCDSerial_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerial_Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gacc5ca8c0214a9e7db56272e0d57c4237_cgraph.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gacc5ca8c0214a9e7db56272e0d57c4237_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gae9ba93a4fe6bb97098e92d54e3aff6a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae9ba93a4fe6bb97098e92d54e3aff6a2">&sect;&nbsp;</a></span>CDCDSerial_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerial_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gae9ba93a4fe6bb97098e92d54e3aff6a2_cgraph.svg" width="494" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gae9ba93a4fe6bb97098e92d54e3aff6a2_icgraph.svg" width="498" height="206"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaf36cc7779a7aa6dc6af6df4e148aebc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf36cc7779a7aa6dc6af6df4e148aebc8">&sect;&nbsp;</a></span>CDCDSerial_SetSerialState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerial_SetSerialState </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>serialState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current serial state of the device to the given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serialState</td><td>New device state. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf36cc7779a7aa6dc6af6df4e148aebc8_cgraph.svg" width="442" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaf36cc7779a7aa6dc6af6df4e148aebc8_icgraph.svg" width="454" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga192075ad673f331b3d4414c40c117bad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga192075ad673f331b3d4414c40c117bad">&sect;&nbsp;</a></span>CDCDSerial_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerial_Write </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga192075ad673f331b3d4414c40c117bad_cgraph.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga192075ad673f331b3d4414c40c117bad_icgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6435498b62ec6c1d4378563f68767120"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6435498b62ec6c1d4378563f68767120">&sect;&nbsp;</a></span>CDCDSerialDriver_ConfigurationChangedHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialDriver_ConfigurationChangedHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cfgnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Invoked whenever the active configuration of device is changed by the host. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfgnum</td><td>Configuration number. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6435498b62ec6c1d4378563f68767120_cgraph.svg" width="508" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6435498b62ec6c1d4378563f68767120_icgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga27c5569d9f41fdd46a1738ac66ccf464"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27c5569d9f41fdd46a1738ac66ccf464">&sect;&nbsp;</a></span>CDCDSerialDriver_GetControlLineState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint8_t CDCDSerialDriver_GetControlLineState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the current control line state of the RS-232 line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga27c5569d9f41fdd46a1738ac66ccf464_cgraph.svg" width="468" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1484f0daa5c137003b1da816d7aa6b4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1484f0daa5c137003b1da816d7aa6b4e">&sect;&nbsp;</a></span>CDCDSerialDriver_GetLineCoding()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CDCDSerialDriver_GetLineCoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *&#160;</td>
          <td class="paramname"><em>pLineCoding</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy current line coding settings to pointed space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pLineCoding</td><td>Pointer to CDCLineCoding instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1484f0daa5c137003b1da816d7aa6b4e_cgraph.svg" width="446" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga6f70fe3eda5b72738976a08ede7f75fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f70fe3eda5b72738976a08ede7f75fe">&sect;&nbsp;</a></span>CDCDSerialDriver_GetSerialState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint16_t CDCDSerialDriver_GetSerialState </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the current status of the RS-232 line. </p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga6f70fe3eda5b72738976a08ede7f75fe_cgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga191a619ddb7cfdac13b7d8f04349e3ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga191a619ddb7cfdac13b7d8f04349e3ef">&sect;&nbsp;</a></span>CDCDSerialDriver_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialDriver_Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial driver &amp; USBD Driver. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pDescriptors</td><td>Pointer to Descriptors list for CDC Serial Device. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga191a619ddb7cfdac13b7d8f04349e3ef_cgraph.svg" width="407" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga191a619ddb7cfdac13b7d8f04349e3ef_icgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga523c240680a3b0f4bc2fb3499c2aae0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga523c240680a3b0f4bc2fb3499c2aae0f">&sect;&nbsp;</a></span>CDCDSerialDriver_Read()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CDCDSerialDriver_Read </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga523c240680a3b0f4bc2fb3499c2aae0f_cgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga523c240680a3b0f4bc2fb3499c2aae0f_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga494662f08154675457d9953fbced331a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga494662f08154675457d9953fbced331a">&sect;&nbsp;</a></span>CDCDSerialDriver_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialDriver_RequestHandler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga494662f08154675457d9953fbced331a_cgraph.svg" width="458" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga494662f08154675457d9953fbced331a_icgraph.svg" width="486" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gacc35e62b7e25a378c53c84a865c21aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc35e62b7e25a378c53c84a865c21aac">&sect;&nbsp;</a></span>CDCDSerialDriver_SetSerialState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CDCDSerialDriver_SetSerialState </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>serialState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the current serial state of the device to the given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">serialState</td><td>New device state. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gacc35e62b7e25a378c53c84a865c21aac_cgraph.svg" width="454" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga08a9344113a71e425ad5cba4a9727e8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga08a9344113a71e425ad5cba4a9727e8c">&sect;&nbsp;</a></span>CDCDSerialDriver_Write()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CDCDSerialDriver_Write </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">size</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">callback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">argument</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga08a9344113a71e425ad5cba4a9727e8c_cgraph.svg" width="366" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga08a9344113a71e425ad5cba4a9727e8c_icgraph.svg" width="336" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga777f3bd5a1512c7ef3c765e606617a3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga777f3bd5a1512c7ef3c765e606617a3d">&sect;&nbsp;</a></span>CDCDSerialPort_GetControlLineState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t CDCDSerialPort_GetControlLineState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current control line state of the RS-232 line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga777f3bd5a1512c7ef3c765e606617a3d_icgraph.svg" width="456" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga3d721b3f1307503eb659b86461eb0367"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d721b3f1307503eb659b86461eb0367">&sect;&nbsp;</a></span>CDCDSerialPort_GetLineCoding()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialPort_GetLineCoding </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> *&#160;</td>
          <td class="paramname"><em>pLineCoding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy current line coding settings to appointed space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">pLineCoding</td><td>Pointer to CDCLineCoding instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga3d721b3f1307503eb659b86461eb0367_icgraph.svg" width="478" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga1116bd4b0eb9908244c01bd0ae3d513d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1116bd4b0eb9908244c01bd0ae3d513d">&sect;&nbsp;</a></span>CDCDSerialPort_GetSerialState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t CDCDSerialPort_GetSerialState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the current status of the RS-232 line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga1116bd4b0eb9908244c01bd0ae3d513d_icgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga38c0b965385d8d07a36e8149a8f446f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga38c0b965385d8d07a36e8149a8f446f2">&sect;&nbsp;</a></span>CDCDSerialPort_Initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialPort_Initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga5bd095355e5ea2fad51841cce4127ff6">USBDDriver</a> *&#160;</td>
          <td class="paramname"><em>pUsbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga3a8bae9f7b3af3e754ce52accef7731c">CDCDSerialPortEventHandler</a>&#160;</td>
          <td class="paramname"><em>fEventHandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>firstInterface</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>numInterface</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the USB Device CDC serial port function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">pUsbd</td><td>Pointer to USBDDriver instance. </td></tr>
    <tr><td class="paramname">fEventHandler</td><td>Pointer to event handler function. </td></tr>
    <tr><td class="paramname">firstInterface</td><td>First interface index for the function (0xFF to parse from descriptors). </td></tr>
    <tr><td class="paramname">numInterface</td><td>Number of interfaces for the function. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga38c0b965385d8d07a36e8149a8f446f2_cgraph.svg" width="418" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga38c0b965385d8d07a36e8149a8f446f2_icgraph.svg" width="431" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga4935aee506e10a71e0f13aad3ab80896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4935aee506e10a71e0f13aad3ab80896">&sect;&nbsp;</a></span>CDCDSerialPort_ParseInterfaces()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> * CDCDSerialPort_ParseInterfaces </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usb__descriptor.xhtml#ga00eb1aa730cd05305141b09794578ebe">USBGenericDescriptor</a> *&#160;</td>
          <td class="paramname"><em>pDescriptors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parse CDC Serial Port information for CDCDSerialPort instance. </p>
<p>Accepted interfaces:</p><ul>
<li>Communication Interface + Data Interface</li>
<li>Data Interface ONLY <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">pDescriptors</td><td>Pointer to descriptor list. </td></tr>
    <tr><td class="paramname">dwLength</td><td>Descriptor list size in bytes. </td></tr>
  </table>
  </dd>
</dl>
</li>
</ul>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga4935aee506e10a71e0f13aad3ab80896_cgraph.svg" width="451" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga4935aee506e10a71e0f13aad3ab80896_icgraph.svg" width="512" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ga8999bdf9f9412e4545f777ef2764cca7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8999bdf9f9412e4545f777ef2764cca7">&sect;&nbsp;</a></span>CDCDSerialPort_Read()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerialPort_Read </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Receives data from the host through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves like USBD_Read. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to the data buffer to put received data. </td></tr>
    <tr><td class="paramname">dwSize</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">pArg</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga8999bdf9f9412e4545f777ef2764cca7_cgraph.svg" width="318" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_ga8999bdf9f9412e4545f777ef2764cca7_icgraph.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gafccee3269ed6e338919f108286973e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafccee3269ed6e338919f108286973e40">&sect;&nbsp;</a></span>CDCDSerialPort_RequestHandler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerialPort_RequestHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="struct_u_s_b_generic_request.xhtml">USBGenericRequest</a> *&#160;</td>
          <td class="paramname"><em>request</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Handles CDC-specific SETUP requests. </p>
<p>Should be called from a re-implementation of <a class="el" href="group__usbd__ccid.xhtml#ga9c59dbbbbf5065ba8da4fbf81d9f65d9" title="Optional callback re-implementation. ">USBDCallbacks_RequestReceived()</a> method. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">request</td><td>Pointer to a <a class="el" href="struct_u_s_b_generic_request.xhtml" title="Generic USB SETUP request sent over Control endpoints. ">USBGenericRequest</a> instance. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBRC_SUCCESS if request handled, otherwise error. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gafccee3269ed6e338919f108286973e40_cgraph.svg" width="520" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gafccee3269ed6e338919f108286973e40_icgraph.svg" width="532" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gaa1e0cdbb71cdbb6615f5e150c054c6ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa1e0cdbb71cdbb6615f5e150c054c6ab">&sect;&nbsp;</a></span>CDCDSerialPort_SetSerialState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CDCDSerialPort_SetSerialState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>wSerialState</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the current serial state of the device to the given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">wSerialState</td><td>New device state. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaa1e0cdbb71cdbb6615f5e150c054c6ab_cgraph.svg" width="344" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gaa1e0cdbb71cdbb6615f5e150c054c6ab_icgraph.svg" width="442" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="gabd42b94ec8ef5a8e65f051ce30cb449a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabd42b94ec8ef5a8e65f051ce30cb449a">&sect;&nbsp;</a></span>CDCDSerialPort_Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t CDCDSerialPort_Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> *&#160;</td>
          <td class="paramname"><em>pCdcd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dwSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a>&#160;</td>
          <td class="paramname"><em>fCallback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a data buffer through the virtual COM port created by the CDC device serial driver. </p>
<p>This function behaves exactly like USBD_Write. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCdcd</td><td>Pointer to CDCDSerialPort instance. </td></tr>
    <tr><td class="paramname">pData</td><td>Pointer to the data buffer to send. </td></tr>
    <tr><td class="paramname">dwSize</td><td>Size of the data buffer in bytes. </td></tr>
    <tr><td class="paramname">fCallback</td><td>Optional callback function to invoke when the transfer finishes. </td></tr>
    <tr><td class="paramname">pArg</td><td>Optional argument to the callback function. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>USBD_STATUS_SUCCESS if the read operation has been started normally; otherwise, the corresponding error code. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>The user can ensure finishing transmission before next transmission through a flag in fCallback in application layer. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gabd42b94ec8ef5a8e65f051ce30cb449a_cgraph.svg" width="512" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__usbd__cdc_gabd42b94ec8ef5a8e65f051ce30cb449a_icgraph.svg" width="354" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="gac10360b389fba2d199f4cb7dca92c7d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac10360b389fba2d199f4cb7dca92c7d3">&sect;&nbsp;</a></span>cdcdEEM</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#gad0c64ae9bb36cf998073fa1547cd745a">CDCDEEMPort</a> cdcdEEM</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>EEM Port instance list. </p>

</div>
</div>
<a id="ga5cfb56885d40e727caadcdbd69bb45d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5cfb56885d40e727caadcdbd69bb45d7">&sect;&nbsp;</a></span>cdcdSerial</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__cdc.xhtml#ga41d954a5a3c99f857c7c56b0c383b0e6">CDCDSerialPort</a> cdcdSerial</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Serial Port instance list. </p>

</div>
</div>
<a id="ga202d0841fc95e5611909e689282bd04e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga202d0841fc95e5611909e689282bd04e">&sect;&nbsp;</a></span>cdcdSerialDriverDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WEAK const <a class="el" href="group__usbd__interface.xhtml#gaacf969faf7bd4bc362fd3c5fc4391ad0">USBDDriverDescriptors</a> cdcdSerialDriverDescriptors</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    &amp;<a class="code" href="group__usbd__cdc.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;(<a class="code" href="group__usbd__cdc.xhtml#gafd15c3aa6fce2192be56c41854338f2d">configurationDescriptorsFS</a>),</div><div class="line">    &amp;<a class="code" href="group__usbd__cdc.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;(<a class="code" href="group__usbd__cdc.xhtml#ga376315c1b4e003df2dfe18befb9e8194">otherSpeedDescriptorsFS</a>),</div><div class="line">    0, </div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;(<a class="code" href="group__usbd__cdc.xhtml#gab73f4350883f3572d8ef277b02b6c147">configurationDescriptorsHS</a>),</div><div class="line">    &amp;<a class="code" href="group__usbd__cdc.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a>,</div><div class="line">    (<a class="code" href="struct___u_s_b_configuration_descriptor.xhtml">USBConfigurationDescriptor</a> *) &amp;(<a class="code" href="group__usbd__cdc.xhtml#ga0055b7cb8679462883c4a3bdf81f170a">otherSpeedDescriptorsHS</a>),</div><div class="line">    <a class="code" href="group__usbd__cdc.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a>,</div><div class="line">    2 </div><div class="line">}</div><div class="ttc" id="group__usbd__cdc_xhtml_ga7740842e49c598f4c0876e84ced67a1c"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga7740842e49c598f4c0876e84ced67a1c">qualifierDescriptor</a></div><div class="ttdeci">static const USBDeviceQualifierDescriptor qualifierDescriptor</div><div class="ttdoc">Device qualifier descriptor (Necessary to pass USB test). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:98</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_gafd15c3aa6fce2192be56c41854338f2d"><div class="ttname"><a href="group__usbd__cdc.xhtml#gafd15c3aa6fce2192be56c41854338f2d">configurationDescriptorsFS</a></div><div class="ttdeci">const CDCDSerialDriverConfigurationDescriptors configurationDescriptorsFS</div><div class="ttdoc">Standard USB configuration descriptor for the CDC serial driver. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:111</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_ga0055b7cb8679462883c4a3bdf81f170a"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga0055b7cb8679462883c4a3bdf81f170a">otherSpeedDescriptorsHS</a></div><div class="ttdeci">const CDCDSerialDriverConfigurationDescriptors otherSpeedDescriptorsHS</div><div class="ttdoc">Other-speed configuration descriptor (when in high-speed). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:420</div></div>
<div class="ttc" id="struct___u_s_b_configuration_descriptor_xhtml"><div class="ttname"><a href="struct___u_s_b_configuration_descriptor.xhtml">_USBConfigurationDescriptor</a></div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:575</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_ga384638d07384b7d12bfd2ba2f830dff8"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga384638d07384b7d12bfd2ba2f830dff8">deviceDescriptor</a></div><div class="ttdeci">const USBDeviceDescriptor deviceDescriptor</div><div class="ttdoc">Standard USB device descriptor for the CDC serial driver. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:78</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_ga5af83d39e0236d7188ba8e18b3c9a7c6"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga5af83d39e0236d7188ba8e18b3c9a7c6">stringDescriptors</a></div><div class="ttdeci">const unsigned char * stringDescriptors[]</div><div class="ttdoc">List of string descriptors used by the device. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:554</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_gab73f4350883f3572d8ef277b02b6c147"><div class="ttname"><a href="group__usbd__cdc.xhtml#gab73f4350883f3572d8ef277b02b6c147">configurationDescriptorsHS</a></div><div class="ttdeci">const CDCDSerialDriverConfigurationDescriptors configurationDescriptorsHS</div><div class="ttdoc">Configuration descriptor (when in high-speed). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:317</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_ga376315c1b4e003df2dfe18befb9e8194"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga376315c1b4e003df2dfe18befb9e8194">otherSpeedDescriptorsFS</a></div><div class="ttdeci">const CDCDSerialDriverConfigurationDescriptors otherSpeedDescriptorsFS</div><div class="ttdoc">Other-speed configuration descriptor (when in full-speed). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:214</div></div>
</div><!-- fragment -->
<p>List of standard descriptors for the serial driver. </p>

</div>
</div>
<a id="gafd15c3aa6fce2192be56c41854338f2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd15c3aa6fce2192be56c41854338f2d">&sect;&nbsp;</a></span>configurationDescriptorsFS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a> configurationDescriptorsFS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard USB configuration descriptor for the CDC serial driver. </p>

</div>
</div>
<a id="gab73f4350883f3572d8ef277b02b6c147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab73f4350883f3572d8ef277b02b6c147">&sect;&nbsp;</a></span>configurationDescriptorsHS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a> configurationDescriptorsHS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configuration descriptor (when in high-speed). </p>

</div>
</div>
<a id="ga384638d07384b7d12bfd2ba2f830dff8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga384638d07384b7d12bfd2ba2f830dff8">&sect;&nbsp;</a></span>deviceDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a> deviceDescriptor</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <span class="keyword">sizeof</span>(<a class="code" href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a>),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#ga6363c61655b33b6312f0de0f317528e3">USBGenericDescriptor_DEVICE</a>,</div><div class="line">    <a class="code" href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#gab0dd6987037107f8ef4874ca6e835f66">CDCDeviceDescriptor_CLASS</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#ga3a6957165f21857e3b0cf5cc612084cc">CDCDeviceDescriptor_SUBCLASS</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#ga53f7df3bb8bdaee50ad6ca6eeda4ebe8">CDCDeviceDescriptor_PROTOCOL</a>,</div><div class="line">    <a class="code" href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(0),</div><div class="line">    <a class="code" href="group__usbd__cdc__serial__device__ids.xhtml#gaf65b67541817f4faa53d44404f154c71">CDCDSerialDriverDescriptors_VENDORID</a>,</div><div class="line">    <a class="code" href="group__usbd__cdc__serial__device__ids.xhtml#ga1881fabc5201798cab55ae43cab4ac53">CDCDSerialDriverDescriptors_PRODUCTID</a>,</div><div class="line">    <a class="code" href="group__usbd__cdc__serial__device__ids.xhtml#ga80e25cbfd07add636784506eeb087b1f">CDCDSerialDriverDescriptors_RELEASE</a>,</div><div class="line">    0, </div><div class="line">    1, </div><div class="line">    0, </div><div class="line">    1 </div><div class="line">}</div><div class="ttc" id="group__usb__cdc__descriptor_xhtml_ga53f7df3bb8bdaee50ad6ca6eeda4ebe8"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#ga53f7df3bb8bdaee50ad6ca6eeda4ebe8">CDCDeviceDescriptor_PROTOCOL</a></div><div class="ttdeci">#define CDCDeviceDescriptor_PROTOCOL</div><div class="ttdoc">Device protocol code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:104</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_ga6363c61655b33b6312f0de0f317528e3"><div class="ttname"><a href="group__usb__desc__type.xhtml#ga6363c61655b33b6312f0de0f317528e3">USBGenericDescriptor_DEVICE</a></div><div class="ttdeci">#define USBGenericDescriptor_DEVICE</div><div class="ttdoc">Device descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:79</div></div>
<div class="ttc" id="group__usbd__cdc__serial__device__ids_xhtml_ga1881fabc5201798cab55ae43cab4ac53"><div class="ttname"><a href="group__usbd__cdc__serial__device__ids.xhtml#ga1881fabc5201798cab55ae43cab4ac53">CDCDSerialDriverDescriptors_PRODUCTID</a></div><div class="ttdeci">#define CDCDSerialDriverDescriptors_PRODUCTID</div><div class="ttdoc">Device product ID. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:59</div></div>
<div class="ttc" id="usbhs_8h_xhtml_a5865e5e766958f78b10bee61f42abd44"><div class="ttname"><a href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a></div><div class="ttdeci">#define CHIP_USB_ENDPOINTS_MAXPACKETSIZE(ep)</div><div class="ttdoc">Endpoints max packet size. </div><div class="ttdef"><b>Definition:</b> usbhs.h:53</div></div>
<div class="ttc" id="group__usb__release__number_xhtml_ga69167f83b560d92391cf222d9d3690de"><div class="ttname"><a href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a></div><div class="ttdeci">#define USBDeviceDescriptor_USB2_00</div><div class="ttdoc">The device supports USB 2.00. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:220</div></div>
<div class="ttc" id="group__usbd__cdc__serial__device__ids_xhtml_gaf65b67541817f4faa53d44404f154c71"><div class="ttname"><a href="group__usbd__cdc__serial__device__ids.xhtml#gaf65b67541817f4faa53d44404f154c71">CDCDSerialDriverDescriptors_VENDORID</a></div><div class="ttdeci">#define CDCDSerialDriverDescriptors_VENDORID</div><div class="ttdoc">Device vendor ID (Atmel). </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:61</div></div>
<div class="ttc" id="group__usb__descriptor_xhtml_ga31689ddfc9d000dc0ea039dbe58732ed"><div class="ttname"><a href="group__usb__descriptor.xhtml#ga31689ddfc9d000dc0ea039dbe58732ed">USBDeviceDescriptor</a></div><div class="ttdeci">struct _USBDeviceDescriptor USBDeviceDescriptor</div><div class="ttdoc">USB standard device descriptor structure. </div></div>
<div class="ttc" id="group__usb__cdc__descriptor_xhtml_ga3a6957165f21857e3b0cf5cc612084cc"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#ga3a6957165f21857e3b0cf5cc612084cc">CDCDeviceDescriptor_SUBCLASS</a></div><div class="ttdeci">#define CDCDeviceDescriptor_SUBCLASS</div><div class="ttdoc">Device subclass code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:102</div></div>
<div class="ttc" id="group__usbd__cdc__serial__device__ids_xhtml_ga80e25cbfd07add636784506eeb087b1f"><div class="ttname"><a href="group__usbd__cdc__serial__device__ids.xhtml#ga80e25cbfd07add636784506eeb087b1f">CDCDSerialDriverDescriptors_RELEASE</a></div><div class="ttdeci">#define CDCDSerialDriverDescriptors_RELEASE</div><div class="ttdoc">Device release number. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:63</div></div>
<div class="ttc" id="group__usb__cdc__descriptor_xhtml_gab0dd6987037107f8ef4874ca6e835f66"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#gab0dd6987037107f8ef4874ca6e835f66">CDCDeviceDescriptor_CLASS</a></div><div class="ttdeci">#define CDCDeviceDescriptor_CLASS</div><div class="ttdoc">Device class code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:100</div></div>
</div><!-- fragment -->
<p>Standard USB device descriptor for the CDC serial driver. </p>

</div>
</div>
<a id="ga762c88cf6d1ac79a1e837c7b22d1fce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga762c88cf6d1ac79a1e837c7b22d1fce5">&sect;&nbsp;</a></span>gRxBuffer</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t gRxBuffer[<a class="el" href="xtio__serial__com_8c.xhtml#aa00f910116b7fca294ce753f2e98c8c0">DATABUFFERSIZE</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Buffer for storing incoming USB data. </p>

</div>
</div>
<a id="ga438a0364e5caee03145bb1e619347ad4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga438a0364e5caee03145bb1e619347ad4">&sect;&nbsp;</a></span>gRxCallback</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usbd__interface.xhtml#ga366a570f5d3d658362dbf52b68982bed">TransferCallback</a> gRxCallback</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2836064366df5e073e3d0209b07c2e11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2836064366df5e073e3d0209b07c2e11">&sect;&nbsp;</a></span>gRxCallbackArg</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* gRxCallbackArg</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga0f3dd684312dcadb03231c7cf08f9274"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0f3dd684312dcadb03231c7cf08f9274">&sect;&nbsp;</a></span>gRxData</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* gRxData</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="gadb35c253130a3cca1babee4dc6fda263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb35c253130a3cca1babee4dc6fda263">&sect;&nbsp;</a></span>gRxDataSize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t gRxDataSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga203957c4a9056f5192152caf6d5670d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga203957c4a9056f5192152caf6d5670d3">&sect;&nbsp;</a></span>gUsbTxBuffers</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t gUsbTxBuffers[<a class="el" href="group__usbd__cdc.xhtml#ga7ba2c109a860a75b04095acb7e6834d5">USB_TX_BUFFERS</a> *<a class="el" href="xtio__serial__com_8c.xhtml#a9aad3080ded355abe147d5c60f44168d">DATAPACKETSIZE</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Buffer for storing outgoing USB data. </p>

</div>
</div>
<a id="ga6152bba00ffe67e30a94f03babd5df71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6152bba00ffe67e30a94f03babd5df71">&sect;&nbsp;</a></span>gUsbTxBufferSizes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t gUsbTxBufferSizes[<a class="el" href="group__usbd__cdc.xhtml#ga7ba2c109a860a75b04095acb7e6834d5">USB_TX_BUFFERS</a>]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga471c7f9b8733185306e75ebda268515c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga471c7f9b8733185306e75ebda268515c">&sect;&nbsp;</a></span>gUsbTxHeadIdx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gUsbTxHeadIdx = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga54b25a883144566d25381d8433061b04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54b25a883144566d25381d8433061b04">&sect;&nbsp;</a></span>gUsbTxMutex</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t gUsbTxMutex = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga7b565e9fa031f6514d9dee78ea584f37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b565e9fa031f6514d9dee78ea584f37">&sect;&nbsp;</a></span>gUsbTxTailIdx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gUsbTxTailIdx = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga0673b74acb7181f16520c995908d86b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0673b74acb7181f16520c995908d86b0">&sect;&nbsp;</a></span>languageIdStringDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char languageIdStringDescriptor[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(1),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gac777104a81b956c4249ccd3b80a8305b">USBStringDescriptor_ENGLISH_US</a></div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gac777104a81b956c4249ccd3b80a8305b"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gac777104a81b956c4249ccd3b80a8305b">USBStringDescriptor_ENGLISH_US</a></div><div class="ttdeci">#define USBStringDescriptor_ENGLISH_US</div><div class="ttdoc">Language ID for US English. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:437</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Language ID string descriptor. </p>

</div>
</div>
<a id="ga8fe0f137207f1f47fd6377ecd75823d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8fe0f137207f1f47fd6377ecd75823d4">&sect;&nbsp;</a></span>lineCoding</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__usb__cdc.xhtml#ga86583049ea2155e3f8e49ecdff24b36d">CDCLineCoding</a> lineCoding</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Line coding values. </p>

</div>
</div>
<a id="ga376315c1b4e003df2dfe18befb9e8194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga376315c1b4e003df2dfe18befb9e8194">&sect;&nbsp;</a></span>otherSpeedDescriptorsFS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a> otherSpeedDescriptorsFS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Other-speed configuration descriptor (when in full-speed). </p>

</div>
</div>
<a id="ga0055b7cb8679462883c4a3bdf81f170a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0055b7cb8679462883c4a3bdf81f170a">&sect;&nbsp;</a></span>otherSpeedDescriptorsHS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usbd__cdc.xhtml#ga8c29a23bbdc4d226e2415775a984426a">CDCDSerialDriverConfigurationDescriptors</a> otherSpeedDescriptorsHS</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Other-speed configuration descriptor (when in high-speed). </p>

</div>
</div>
<a id="ga24afc4f796a656e70aa521324178cdaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga24afc4f796a656e70aa521324178cdaf">&sect;&nbsp;</a></span>productStringDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char productStringDescriptor[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a>(13),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a>,</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;X&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;e&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;T&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;h&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;r&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;u&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39; &#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;S&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;e&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;r&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;i&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;a&#39;</span>),</div><div class="line">    <a class="code" href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a>(<span class="charliteral">&#39;l&#39;</span>)</div><div class="line">}</div><div class="ttc" id="group__usb__string__descriptor_xhtml_gaeb88815065f5604f77697445b63b08a0"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#gaeb88815065f5604f77697445b63b08a0">USBStringDescriptor_LENGTH</a></div><div class="ttdeci">#define USBStringDescriptor_LENGTH(length)</div><div class="ttdoc">Calculates the length of a string descriptor given the number of ascii characters/language IDs in it...</div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:444</div></div>
<div class="ttc" id="group__usb__string__descriptor_xhtml_ga3946105b41f7a799367c0d35fea2048c"><div class="ttname"><a href="group__usb__string__descriptor.xhtml#ga3946105b41f7a799367c0d35fea2048c">USBStringDescriptor_UNICODE</a></div><div class="ttdeci">#define USBStringDescriptor_UNICODE(ascii)</div><div class="ttdoc">Converts an ascii character to its unicode representation. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:450</div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_gad34fd63abaedf8cc5f88e679a20ca8c4"><div class="ttname"><a href="group__usb__desc__type.xhtml#gad34fd63abaedf8cc5f88e679a20ca8c4">USBGenericDescriptor_STRING</a></div><div class="ttdeci">#define USBGenericDescriptor_STRING</div><div class="ttdoc">String descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:83</div></div>
</div><!-- fragment -->
<p>Product string descriptor. </p>

</div>
</div>
<a id="ga7740842e49c598f4c0876e84ced67a1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7740842e49c598f4c0876e84ced67a1c">&sect;&nbsp;</a></span>qualifierDescriptor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a> qualifierDescriptor</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <span class="keyword">sizeof</span>(<a class="code" href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a>),</div><div class="line">    <a class="code" href="group__usb__desc__type.xhtml#ga180ff764ab5a66c3e02861e7c0ee516f">USBGenericDescriptor_DEVICEQUALIFIER</a>,</div><div class="line">    <a class="code" href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#gab0dd6987037107f8ef4874ca6e835f66">CDCDeviceDescriptor_CLASS</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#ga3a6957165f21857e3b0cf5cc612084cc">CDCDeviceDescriptor_SUBCLASS</a>,</div><div class="line">    <a class="code" href="group__usb__cdc__descriptor.xhtml#ga53f7df3bb8bdaee50ad6ca6eeda4ebe8">CDCDeviceDescriptor_PROTOCOL</a>,</div><div class="line">    <a class="code" href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a>(0),</div><div class="line">    1, </div><div class="line">    0x00</div><div class="line">}</div><div class="ttc" id="group__usb__cdc__descriptor_xhtml_ga53f7df3bb8bdaee50ad6ca6eeda4ebe8"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#ga53f7df3bb8bdaee50ad6ca6eeda4ebe8">CDCDeviceDescriptor_PROTOCOL</a></div><div class="ttdeci">#define CDCDeviceDescriptor_PROTOCOL</div><div class="ttdoc">Device protocol code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:104</div></div>
<div class="ttc" id="group__usb__descriptor_xhtml_ga36d6934c0b8cca0609bd98de0037aecf"><div class="ttname"><a href="group__usb__descriptor.xhtml#ga36d6934c0b8cca0609bd98de0037aecf">USBDeviceQualifierDescriptor</a></div><div class="ttdeci">struct _USBDeviceQualifierDescriptor USBDeviceQualifierDescriptor</div><div class="ttdoc">Alternate device descriptor indicating the capabilities of the device in full-speed, if currently in high-speed; or in high-speed, if it is currently in full-speed. </div></div>
<div class="ttc" id="group__usb__desc__type_xhtml_ga180ff764ab5a66c3e02861e7c0ee516f"><div class="ttname"><a href="group__usb__desc__type.xhtml#ga180ff764ab5a66c3e02861e7c0ee516f">USBGenericDescriptor_DEVICEQUALIFIER</a></div><div class="ttdeci">#define USBGenericDescriptor_DEVICEQUALIFIER</div><div class="ttdoc">Device qualifier descriptor type. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:89</div></div>
<div class="ttc" id="usbhs_8h_xhtml_a5865e5e766958f78b10bee61f42abd44"><div class="ttname"><a href="usbhs_8h.xhtml#a5865e5e766958f78b10bee61f42abd44">CHIP_USB_ENDPOINTS_MAXPACKETSIZE</a></div><div class="ttdeci">#define CHIP_USB_ENDPOINTS_MAXPACKETSIZE(ep)</div><div class="ttdoc">Endpoints max packet size. </div><div class="ttdef"><b>Definition:</b> usbhs.h:53</div></div>
<div class="ttc" id="group__usb__release__number_xhtml_ga69167f83b560d92391cf222d9d3690de"><div class="ttname"><a href="group__usb__release__number.xhtml#ga69167f83b560d92391cf222d9d3690de">USBDeviceDescriptor_USB2_00</a></div><div class="ttdeci">#define USBDeviceDescriptor_USB2_00</div><div class="ttdoc">The device supports USB 2.00. </div><div class="ttdef"><b>Definition:</b> USBDescriptors.h:220</div></div>
<div class="ttc" id="group__usb__cdc__descriptor_xhtml_ga3a6957165f21857e3b0cf5cc612084cc"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#ga3a6957165f21857e3b0cf5cc612084cc">CDCDeviceDescriptor_SUBCLASS</a></div><div class="ttdeci">#define CDCDeviceDescriptor_SUBCLASS</div><div class="ttdoc">Device subclass code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:102</div></div>
<div class="ttc" id="group__usb__cdc__descriptor_xhtml_gab0dd6987037107f8ef4874ca6e835f66"><div class="ttname"><a href="group__usb__cdc__descriptor.xhtml#gab0dd6987037107f8ef4874ca6e835f66">CDCDeviceDescriptor_CLASS</a></div><div class="ttdeci">#define CDCDeviceDescriptor_CLASS</div><div class="ttdoc">Device class code when using the CDC class. </div><div class="ttdef"><b>Definition:</b> CDCDescriptors.h:100</div></div>
</div><!-- fragment -->
<p>Device qualifier descriptor (Necessary to pass USB test). </p>

</div>
</div>
<a id="ga5af83d39e0236d7188ba8e18b3c9a7c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5af83d39e0236d7188ba8e18b3c9a7c6">&sect;&nbsp;</a></span>stringDescriptors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const unsigned char* stringDescriptors[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div><div class="line"></div><div class="line">    <a class="code" href="group__usbd__cdc.xhtml#ga0673b74acb7181f16520c995908d86b0">languageIdStringDescriptor</a>,</div><div class="line">    <a class="code" href="group__usbd__cdc.xhtml#ga24afc4f796a656e70aa521324178cdaf">productStringDescriptor</a>,</div><div class="line">}</div><div class="ttc" id="group__usbd__cdc_xhtml_ga24afc4f796a656e70aa521324178cdaf"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga24afc4f796a656e70aa521324178cdaf">productStringDescriptor</a></div><div class="ttdeci">const unsigned char productStringDescriptor[]</div><div class="ttdoc">Product string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:534</div></div>
<div class="ttc" id="group__usbd__cdc_xhtml_ga0673b74acb7181f16520c995908d86b0"><div class="ttname"><a href="group__usbd__cdc.xhtml#ga0673b74acb7181f16520c995908d86b0">languageIdStringDescriptor</a></div><div class="ttdeci">const unsigned char languageIdStringDescriptor[]</div><div class="ttdoc">Language ID string descriptor. </div><div class="ttdef"><b>Definition:</b> USBDDriverDescriptors.c:526</div></div>
</div><!-- fragment -->
<p>List of string descriptors used by the device. </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
