<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: examples/atmel_samg55/src/ASF/common/services/sleepmgr/sleepmgr.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="dir_0e96b936377161858012b6f31c3bd790.xhtml">atmel_samg55</a></li><li class="navelem"><a class="el" href="dir_0ae219bfaa679f3dbaaacda5fb614d9c.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_67951177d7f5e66661a526635115739c.xhtml">ASF</a></li><li class="navelem"><a class="el" href="dir_a10c1905b5eb133c53d9054314a624ae.xhtml">common</a></li><li class="navelem"><a class="el" href="dir_750d948f77cd7b437f4a691eb098f5d6.xhtml">services</a></li><li class="navelem"><a class="el" href="dir_38fbe5e88d786e61b9a019ac920170fe.xhtml">sleepmgr</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sleepmgr.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sleepmgr_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * Support and FAQ: visit &lt;a href=&quot;http://www.atmel.com/design-support/&quot;&gt;Atmel Support&lt;/a&gt;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#ifndef SLEEPMGR_H</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#define SLEEPMGR_H</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="compiler_8h.xhtml">compiler.h</a>&gt;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="parts_8h.xhtml">parts.h</a>&gt;</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#if (SAM3S || SAM3U || SAM3N || SAM3XA || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAMS70 || SAME70)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor"># include &quot;<a class="code" href="sam_2sleepmgr_8h.xhtml">sam/sleepmgr.h</a>&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#elif XMEGA</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor"># include &quot;xmega/sleepmgr.h&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#elif UC3</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor"># include &quot;uc3/sleepmgr.h&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#elif SAM4L</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"># include &quot;sam4l/sleepmgr.h&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#elif MEGA</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor"># include &quot;mega/sleepmgr.h&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#elif (SAMD20 || SAMD21 || SAMR21 || SAMD11 || SAMDA1)</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor"># include &quot;samd/sleepmgr.h&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#elif (SAML21 || SAML22)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor"># include &quot;saml/sleepmgr.h&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#elif (SAMC21)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor"># include &quot;samc/sleepmgr.h&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor"># error Unsupported device.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#if defined(__DOXYGEN__) &amp;&amp; !defined(CONFIG_SLEEPMGR_ENABLE)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#  define CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="group__sleepmgr__group.xhtml#ga50ee2a93f579e3ab0919576546d90dc6">  127</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__sleepmgr__group.xhtml#ga50ee2a93f579e3ab0919576546d90dc6">sleepmgr_init</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#ifdef CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    uint8_t i;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">for</span> (i = 0; i &lt; <a class="code" href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a02fd0aaf6162fa103be2aa0b2593a984">SLEEPMGR_NR_OF_MODES</a> - 1; i++) {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        sleepmgr_locks[i] = 0;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CONFIG_SLEEPMGR_ENABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="group__sleepmgr__group.xhtml#gac1a7002fd7879c57cc22ccab48be7114">  147</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__sleepmgr__group.xhtml#gac1a7002fd7879c57cc22ccab48be7114">sleepmgr_lock_mode</a>(<span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a> mode)</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#ifdef CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a> flags;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">if</span>(sleepmgr_locks[mode] &gt;= 0xff) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="comment">// Warning: maximum value of sleepmgr_locks buffer is no more than 255.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="comment">// Check APP or change the data type to uint16_t.</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// Enter a critical section</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    flags = <a class="code" href="group__interrupt__group.xhtml#ga5992cb015c55a0f4ed563e66a8793771">cpu_irq_save</a>();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    ++sleepmgr_locks[mode];</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// Leave the critical section</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#ga428178bc346431936fddf52ad1ebd6fa">cpu_irq_restore</a>(flags);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="group__group__sam__utils.xhtml#gada67c62b1c57e07efa04431bc40b9238">UNUSED</a>(mode);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CONFIG_SLEEPMGR_ENABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="group__sleepmgr__group.xhtml#ga0c3c8087f46b2332f8a274c6651afe3f">  179</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__sleepmgr__group.xhtml#ga0c3c8087f46b2332f8a274c6651afe3f">sleepmgr_unlock_mode</a>(<span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a> mode)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#ifdef CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a> flags;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span>(sleepmgr_locks[mode] == 0) {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="comment">// Warning: minimum value of sleepmgr_locks buffer is no less than 0.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="comment">// Check APP.</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="comment">// Enter a critical section</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    flags = <a class="code" href="group__interrupt__group.xhtml#ga5992cb015c55a0f4ed563e66a8793771">cpu_irq_save</a>();</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    --sleepmgr_locks[mode];</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">// Leave the critical section</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#ga428178bc346431936fddf52ad1ebd6fa">cpu_irq_restore</a>(flags);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="group__group__sam__utils.xhtml#gada67c62b1c57e07efa04431bc40b9238">UNUSED</a>(mode);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CONFIG_SLEEPMGR_ENABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="group__sleepmgr__group.xhtml#ga1e76c74375e2e4fb9c90dcaf3f46e2aa">  210</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a> <a class="code" href="group__sleepmgr__group.xhtml#ga1e76c74375e2e4fb9c90dcaf3f46e2aa">sleepmgr_get_sleep_mode</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a> sleep_mode = <a class="code" href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a04a2ceb6fc138cae84e9334cfa90d89f">SLEEPMGR_ACTIVE</a>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#ifdef CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    uint8_t *lock_ptr = sleepmgr_locks;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="comment">// Find first non-zero lock count, starting with the shallowest modes.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">while</span> (!(*lock_ptr)) {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        lock_ptr++;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        sleep_mode = (<span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a>)(sleep_mode + 1);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="comment">// Catch the case where one too many sleepmgr_unlock_mode() call has been</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="comment">// performed on the deepest sleep mode.</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="group__group__sam__utils.xhtml#gaab1e54dcc40192f9704e8b252635450f">Assert</a>((uintptr_t)(lock_ptr - sleepmgr_locks) &lt; <a class="code" href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a02fd0aaf6162fa103be2aa0b2593a984">SLEEPMGR_NR_OF_MODES</a>);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CONFIG_SLEEPMGR_ENABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">return</span> sleep_mode;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="group__sleepmgr__group.xhtml#ga811af9f6521834096283c12f4d7603e9">  245</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__sleepmgr__group.xhtml#ga811af9f6521834096283c12f4d7603e9">sleepmgr_enter_sleep</a>(<span class="keywordtype">void</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#ifdef CONFIG_SLEEPMGR_ENABLE</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">enum</span> <a class="code" href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a> sleep_mode;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#ga7b77391ed86e2e027f9ee1dd99a06980">cpu_irq_disable</a>();</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Find the deepest allowable sleep mode</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    sleep_mode = <a class="code" href="group__sleepmgr__group.xhtml#ga1e76c74375e2e4fb9c90dcaf3f46e2aa">sleepmgr_get_sleep_mode</a>();</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">// Return right away if first mode (ACTIVE) is locked.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">if</span> (sleep_mode==<a class="code" href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a04a2ceb6fc138cae84e9334cfa90d89f">SLEEPMGR_ACTIVE</a>) {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <a class="code" href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a>();</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">// Enter the deepest allowable sleep mode with interrupts enabled</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="sam_2sleepmgr_8h.xhtml#a4d50ea4ed9b0c8788f8a6b0c816559d4">sleepmgr_sleep</a>(sleep_mode);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a>();</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CONFIG_SLEEPMGR_ENABLE */</span><span class="preprocessor"></span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SLEEPMGR_H */</span><span class="preprocessor"></span></div><div class="ttc" id="group__sleepmgr__group_xhtml_ga50ee2a93f579e3ab0919576546d90dc6"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ga50ee2a93f579e3ab0919576546d90dc6">sleepmgr_init</a></div><div class="ttdeci">static void sleepmgr_init(void)</div><div class="ttdoc">Initialize the lock counts. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:127</div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_ga0c3c8087f46b2332f8a274c6651afe3f"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ga0c3c8087f46b2332f8a274c6651afe3f">sleepmgr_unlock_mode</a></div><div class="ttdeci">static void sleepmgr_unlock_mode(enum sleepmgr_mode mode)</div><div class="ttdoc">Decrease lock count for a sleep mode. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:179</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gaab1e54dcc40192f9704e8b252635450f"><div class="ttname"><a href="group__group__sam__utils.xhtml#gaab1e54dcc40192f9704e8b252635450f">Assert</a></div><div class="ttdeci">#define Assert(expr)</div><div class="ttdoc">This macro is used to test fatal errors. </div><div class="ttdef"><b>Definition:</b> compiler.h:206</div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_ga1e76c74375e2e4fb9c90dcaf3f46e2aa"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ga1e76c74375e2e4fb9c90dcaf3f46e2aa">sleepmgr_get_sleep_mode</a></div><div class="ttdeci">static enum sleepmgr_mode sleepmgr_get_sleep_mode(void)</div><div class="ttdoc">Retrieves the deepest allowable sleep mode. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:210</div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_ggaa990bc3ea16fcad09009cdc70dbc38c6a04a2ceb6fc138cae84e9334cfa90d89f"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a04a2ceb6fc138cae84e9334cfa90d89f">SLEEPMGR_ACTIVE</a></div><div class="ttdoc">Active mode. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:80</div></div>
<div class="ttc" id="compiler_8h_xhtml"><div class="ttname"><a href="compiler_8h.xhtml">compiler.h</a></div><div class="ttdoc">Commonly used includes, types and macros. </div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_ggaa990bc3ea16fcad09009cdc70dbc38c6a02fd0aaf6162fa103be2aa0b2593a984"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ggaa990bc3ea16fcad09009cdc70dbc38c6a02fd0aaf6162fa103be2aa0b2593a984">SLEEPMGR_NR_OF_MODES</a></div><div class="ttdef"><b>Definition:</b> sleepmgr.h:99</div></div>
<div class="ttc" id="group__interrupt__group_xhtml_ga7b77391ed86e2e027f9ee1dd99a06980"><div class="ttname"><a href="group__interrupt__group.xhtml#ga7b77391ed86e2e027f9ee1dd99a06980">cpu_irq_disable</a></div><div class="ttdeci">#define cpu_irq_disable()</div><div class="ttdoc">Disable interrupts globally. </div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_gaa990bc3ea16fcad09009cdc70dbc38c6"><div class="ttname"><a href="group__sleepmgr__group.xhtml#gaa990bc3ea16fcad09009cdc70dbc38c6">sleepmgr_mode</a></div><div class="ttdeci">sleepmgr_mode</div><div class="ttdoc">Sleep mode locks. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:78</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gada67c62b1c57e07efa04431bc40b9238"><div class="ttname"><a href="group__group__sam__utils.xhtml#gada67c62b1c57e07efa04431bc40b9238">UNUSED</a></div><div class="ttdeci">#define UNUSED(v)</div><div class="ttdoc">Marking v as a unused parameter or value. </div><div class="ttdef"><b>Definition:</b> compiler.h:96</div></div>
<div class="ttc" id="parts_8h_xhtml"><div class="ttname"><a href="parts_8h.xhtml">parts.h</a></div><div class="ttdoc">Atmel part identification macros. </div></div>
<div class="ttc" id="sam_2sleepmgr_8h_xhtml"><div class="ttname"><a href="sam_2sleepmgr_8h.xhtml">sleepmgr.h</a></div><div class="ttdoc">SAM3/SAM4 Sleep manager implementation. </div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_gac1a7002fd7879c57cc22ccab48be7114"><div class="ttname"><a href="group__sleepmgr__group.xhtml#gac1a7002fd7879c57cc22ccab48be7114">sleepmgr_lock_mode</a></div><div class="ttdeci">static void sleepmgr_lock_mode(enum sleepmgr_mode mode)</div><div class="ttdoc">Increase lock count for a sleep mode. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:147</div></div>
<div class="ttc" id="group__sleepmgr__group_xhtml_ga811af9f6521834096283c12f4d7603e9"><div class="ttname"><a href="group__sleepmgr__group.xhtml#ga811af9f6521834096283c12f4d7603e9">sleepmgr_enter_sleep</a></div><div class="ttdeci">static void sleepmgr_enter_sleep(void)</div><div class="ttdoc">Go to sleep in the deepest allowed mode. </div><div class="ttdef"><b>Definition:</b> sleepmgr.h:245</div></div>
<div class="ttc" id="sam_2sleepmgr_8h_xhtml_a4d50ea4ed9b0c8788f8a6b0c816559d4"><div class="ttname"><a href="sam_2sleepmgr_8h.xhtml#a4d50ea4ed9b0c8788f8a6b0c816559d4">sleepmgr_sleep</a></div><div class="ttdeci">static void sleepmgr_sleep(const enum sleepmgr_mode sleep_mode)</div><div class="ttdef"><b>Definition:</b> sleepmgr.h:115</div></div>
<div class="ttc" id="group__interrupt__group_xhtml_gae4922a4bd8ba4150211fbc7f2302403c"><div class="ttname"><a href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a></div><div class="ttdeci">#define cpu_irq_enable()</div><div class="ttdoc">Enable interrupts globally. </div></div>
<div class="ttc" id="group__interrupt__group_xhtml_ga9aa1f52defc97531b6343233abeea613"><div class="ttname"><a href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a></div><div class="ttdeci">uint32_t irqflags_t</div><div class="ttdoc">Type used for holding state of interrupt flag. </div><div class="ttdef"><b>Definition:</b> interrupt_sam_nvic.h:140</div></div>
<div class="ttc" id="group__interrupt__group_xhtml_ga428178bc346431936fddf52ad1ebd6fa"><div class="ttname"><a href="group__interrupt__group.xhtml#ga428178bc346431936fddf52ad1ebd6fa">cpu_irq_restore</a></div><div class="ttdeci">static void cpu_irq_restore(irqflags_t flags)</div><div class="ttdoc">Restore global interrupt flags. </div><div class="ttdef"><b>Definition:</b> interrupt_sam_nvic.h:163</div></div>
<div class="ttc" id="group__interrupt__group_xhtml_ga5992cb015c55a0f4ed563e66a8793771"><div class="ttname"><a href="group__interrupt__group.xhtml#ga5992cb015c55a0f4ed563e66a8793771">cpu_irq_save</a></div><div class="ttdeci">static irqflags_t cpu_irq_save(void)</div><div class="ttdoc">Get and clear the global interrupt flags. </div><div class="ttdef"><b>Definition:</b> interrupt_sam_nvic.h:151</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
