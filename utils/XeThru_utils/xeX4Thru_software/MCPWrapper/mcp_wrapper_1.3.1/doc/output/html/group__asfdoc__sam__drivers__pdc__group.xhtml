<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: SAM3A/3N/3S/3U/3X/4E/4N/4S/G Peripheral DMA Controller (PDC) Driver</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">SAM3A/3N/3S/3U/3X/4E/4N/4S/G Peripheral DMA Controller (PDC) Driver</div>  </div>
</div><!--header-->
<div class="contents">

<p>This driver for Atmel&reg; | SMART ARM&reg;-based microcontrollers provides an interface for the configuration and management of the the Peripheral Direct Memory Access (DMA) Controller (PDC) module.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpdc__packet.xhtml">pdc_packet</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">PDC data packet for transfer.  <a href="structpdc__packet.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga557bf9f3364155c32b15224f2293a153"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structpdc__packet.xhtml">pdc_packet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a></td></tr>
<tr class="memdesc:ga557bf9f3364155c32b15224f2293a153"><td class="mdescLeft">&#160;</td><td class="mdescRight">PDC data packet for transfer.  <a href="#ga557bf9f3364155c32b15224f2293a153">More...</a><br /></td></tr>
<tr class="separator:ga557bf9f3364155c32b15224f2293a153"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac8d975c0084a459475a5c4bf07a5d3de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gac8d975c0084a459475a5c4bf07a5d3de">pdc_tx_init</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc, <a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *p_packet, <a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *p_next_packet)</td></tr>
<tr class="memdesc:gac8d975c0084a459475a5c4bf07a5d3de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure PDC for data transmit.  <a href="#gac8d975c0084a459475a5c4bf07a5d3de">More...</a><br /></td></tr>
<tr class="separator:gac8d975c0084a459475a5c4bf07a5d3de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8">pdc_rx_init</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc, <a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *p_packet, <a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *p_next_packet)</td></tr>
<tr class="memdesc:ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configure PDC for data receive.  <a href="#ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8">More...</a><br /></td></tr>
<tr class="separator:ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa80971f8355c417045fb564fccad3176"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gaa80971f8355c417045fb564fccad3176">pdc_rx_clear_cnt</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:gaa80971f8355c417045fb564fccad3176"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear PDC buffer receive counter.  <a href="#gaa80971f8355c417045fb564fccad3176">More...</a><br /></td></tr>
<tr class="separator:gaa80971f8355c417045fb564fccad3176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb600d48347212bcf1d0229951b036cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gadb600d48347212bcf1d0229951b036cd">pdc_enable_transfer</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc, uint32_t ul_controls)</td></tr>
<tr class="memdesc:gadb600d48347212bcf1d0229951b036cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable PDC transfers (TX and/or RX).  <a href="#gadb600d48347212bcf1d0229951b036cd">More...</a><br /></td></tr>
<tr class="separator:gadb600d48347212bcf1d0229951b036cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2cb32e92dc393fd7031cb3a2983a12a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga2cb32e92dc393fd7031cb3a2983a12a5">pdc_disable_transfer</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc, uint32_t ul_controls)</td></tr>
<tr class="memdesc:ga2cb32e92dc393fd7031cb3a2983a12a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable PDC transfers (TX and/or RX).  <a href="#ga2cb32e92dc393fd7031cb3a2983a12a5">More...</a><br /></td></tr>
<tr class="separator:ga2cb32e92dc393fd7031cb3a2983a12a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99aadeff5cccb641495d5341ce56311b"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga99aadeff5cccb641495d5341ce56311b">pdc_read_status</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:ga99aadeff5cccb641495d5341ce56311b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read PDC status.  <a href="#ga99aadeff5cccb641495d5341ce56311b">More...</a><br /></td></tr>
<tr class="separator:ga99aadeff5cccb641495d5341ce56311b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadac365776187bd41047efd51272b7a0f"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gadac365776187bd41047efd51272b7a0f">pdc_read_rx_ptr</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:gadac365776187bd41047efd51272b7a0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Receive Pointer Register (RPR) value.  <a href="#gadac365776187bd41047efd51272b7a0f">More...</a><br /></td></tr>
<tr class="separator:gadac365776187bd41047efd51272b7a0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6721b3b9a81bc17e7f14e4237c6ec6e4"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga6721b3b9a81bc17e7f14e4237c6ec6e4">pdc_read_rx_counter</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:ga6721b3b9a81bc17e7f14e4237c6ec6e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Receive Counter Register (RCR) value.  <a href="#ga6721b3b9a81bc17e7f14e4237c6ec6e4">More...</a><br /></td></tr>
<tr class="separator:ga6721b3b9a81bc17e7f14e4237c6ec6e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e5d670ec28a0c582c408128d40c3d83"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga0e5d670ec28a0c582c408128d40c3d83">pdc_read_tx_ptr</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:ga0e5d670ec28a0c582c408128d40c3d83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Transmit Pointer Register (TPR) value.  <a href="#ga0e5d670ec28a0c582c408128d40c3d83">More...</a><br /></td></tr>
<tr class="separator:ga0e5d670ec28a0c582c408128d40c3d83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee7b9d662157ef7117288889db3dfe3e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gaee7b9d662157ef7117288889db3dfe3e">pdc_read_tx_counter</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:gaee7b9d662157ef7117288889db3dfe3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Transmit Counter Register (TCR) value.  <a href="#gaee7b9d662157ef7117288889db3dfe3e">More...</a><br /></td></tr>
<tr class="separator:gaee7b9d662157ef7117288889db3dfe3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab3c831df4b5b5d239d15860968332332"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gab3c831df4b5b5d239d15860968332332">pdc_read_rx_next_ptr</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:gab3c831df4b5b5d239d15860968332332"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Receive Next Pointer Register (RNPR) value.  <a href="#gab3c831df4b5b5d239d15860968332332">More...</a><br /></td></tr>
<tr class="separator:gab3c831df4b5b5d239d15860968332332"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0dfb48f3bdf2b4ace6c46ff15a775478"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga0dfb48f3bdf2b4ace6c46ff15a775478">pdc_read_rx_next_counter</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:ga0dfb48f3bdf2b4ace6c46ff15a775478"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Receive Next Counter Register (RNCR) value.  <a href="#ga0dfb48f3bdf2b4ace6c46ff15a775478">More...</a><br /></td></tr>
<tr class="separator:ga0dfb48f3bdf2b4ace6c46ff15a775478"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac529c6ae2a63a0f8f3911802d129a3c7"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#gac529c6ae2a63a0f8f3911802d129a3c7">pdc_read_tx_next_ptr</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:gac529c6ae2a63a0f8f3911802d129a3c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Transmit Next Pointer Register (TNPR) value.  <a href="#gac529c6ae2a63a0f8f3911802d129a3c7">More...</a><br /></td></tr>
<tr class="separator:gac529c6ae2a63a0f8f3911802d129a3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ba1e33860cccd1ab545303a9efe9ce5"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga8ba1e33860cccd1ab545303a9efe9ce5">pdc_read_tx_next_counter</a> (<a class="el" href="struct_pdc.xhtml">Pdc</a> *p_pdc)</td></tr>
<tr class="memdesc:ga8ba1e33860cccd1ab545303a9efe9ce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return Transmit Next Counter Register (TNCR) value.  <a href="#ga8ba1e33860cccd1ab545303a9efe9ce5">More...</a><br /></td></tr>
<tr class="separator:ga8ba1e33860cccd1ab545303a9efe9ce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This driver for Atmel&reg; | SMART ARM&reg;-based microcontrollers provides an interface for the configuration and management of the the Peripheral Direct Memory Access (DMA) Controller (PDC) module. </p>
<p>The PDC transfers data between on-chip serial peripherals and the on and/or off-chip memories. The link between the PDC and a serial peripheral is operated by the AHB to ABP bridge.</p>
<p>This module:</p><ul>
<li>Performs transfers to/from APB communication serial peripherals</li>
<li>Supports half-duplex and full-duplex peripherals</li>
</ul>
<p>Devices from the following series can use this module:</p><ul>
<li>Atmel | SMART SAM3A</li>
<li>Atmel | SMART SAM3N</li>
<li>Atmel | SMART SAM3S</li>
<li>Atmel | SMART SAM3U</li>
<li>Atmel | SMART SAM3X</li>
<li>Atmel | SMART SAM4E</li>
<li>Atmel | SMART SAM4N</li>
<li>Atmel | SMART SAM4S</li>
<li>Atmel | SMART SAM G</li>
</ul>
<p>The outline of this documentation is as follows:</p><ul>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_prerequisites">Prerequisites</a></li>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_module_overview">Module Overview</a></li>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_special_considerations">Special Considerations</a></li>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_extra_info">Extra Information</a></li>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_examples">Examples</a></li>
<li><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#asfdoc_sam_drivers_pdc_api_overview">API Overview</a></li>
</ul>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_prerequisites"></a>
Prerequisites</h1>
<p>There are no prerequisites for this module.</p>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_module_overview"></a>
Module Overview</h1>
<p>The user interface of each PDC channel is integrated into the user interface of the peripheral it serves. The user interface of unidirectional channels (receive only or transmit only), contains two 32-bit memory pointers and two 16-bit counters, one set (pointer, counter) for current transfer and one set (pointer, counter) for next transfer. The bidirectional channel user interface contains four 32-bit memory pointers and four 16-bit counters. Each set (pointer, counter) is used by current transmit, next transmit, current receive and next receive. Using the PDC removes processor overhead by reducing its intervention during the transfer. This significantly reduces the number of clock cycles required for a data transfer, which improves microcontroller performance. To launch a transfer, the peripheral triggers its associated PDC channels by using transmit and receive signals. When the programmed data is transferred, an end of transfer interrupt is generated by the peripheral itself.</p>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_special_considerations"></a>
Special Considerations</h1>
<p>There are no special considerations for this module.</p>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_extra_info"></a>
Extra Information</h1>
<p>For extra information, see <a class="el" href="asfdoc_sam_drivers_pdc_extra.xhtml">Extra Information for Peripheral DMA Controller</a>. This includes:</p><ul>
<li><a class="el" href="asfdoc_sam_drivers_pdc_extra.xhtml#asfdoc_sam_drivers_pdc_extra_acronyms">Acronyms</a></li>
<li><a class="el" href="asfdoc_sam_drivers_pdc_extra.xhtml#asfdoc_sam_drivers_pdc_extra_dependencies">Dependencies</a></li>
<li><a class="el" href="asfdoc_sam_drivers_pdc_extra.xhtml#asfdoc_sam_drivers_pdc_extra_errata">Errata</a></li>
<li><a class="el" href="asfdoc_sam_drivers_pdc_extra.xhtml#asfdoc_sam_drivers_pdc_extra_history">Module History</a></li>
</ul>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_examples"></a>
Examples</h1>
<p>For a list of examples related to this driver, see <a class="el" href="asfdoc_sam_drivers_pdc_exqsg.xhtml">Examples for Peripheral DMA Controller</a>.</p>
<h1><a class="anchor" id="asfdoc_sam_drivers_pdc_api_overview"></a>
API Overview</h1>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga557bf9f3364155c32b15224f2293a153"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga557bf9f3364155c32b15224f2293a153">&sect;&nbsp;</a></span>pdc_packet_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structpdc__packet.xhtml">pdc_packet</a>  <a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>PDC data packet for transfer. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga2cb32e92dc393fd7031cb3a2983a12a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2cb32e92dc393fd7031cb3a2983a12a5">&sect;&nbsp;</a></span>pdc_disable_transfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pdc_disable_transfer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_controls</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable PDC transfers (TX and/or RX). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">p_pdc</td><td>Device structure pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ul_controls</td><td>Transfer directions (bit PERIPH_PTCR_TXTDIS, bit PERIPH_PTCR_TXTDIS) </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__asfdoc__sam__drivers__pdc__group_ga2cb32e92dc393fd7031cb3a2983a12a5_icgraph.svg" width="363" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gadb600d48347212bcf1d0229951b036cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb600d48347212bcf1d0229951b036cd">&sect;&nbsp;</a></span>pdc_enable_transfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pdc_enable_transfer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_controls</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable PDC transfers (TX and/or RX). </p>
<dl class="section note"><dt>Note</dt><dd>It is forbidden to set both TXTEN and RXTEN for a half duplex peripheral.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">p_pdc</td><td>Device structure pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ul_controls</td><td>Transfer directions (bit PERIPH_PTCR_RXTEN and bit PERIPH_PTCR_TXTEN) </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__asfdoc__sam__drivers__pdc__group_gadb600d48347212bcf1d0229951b036cd_icgraph.svg" width="360" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga6721b3b9a81bc17e7f14e4237c6ec6e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6721b3b9a81bc17e7f14e4237c6ec6e4">&sect;&nbsp;</a></span>pdc_read_rx_counter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_rx_counter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Receive Counter Register (RCR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive Counter Register value. </dd></dl>

</div>
</div>
<a id="ga0dfb48f3bdf2b4ace6c46ff15a775478"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0dfb48f3bdf2b4ace6c46ff15a775478">&sect;&nbsp;</a></span>pdc_read_rx_next_counter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_rx_next_counter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Receive Next Counter Register (RNCR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive Next Counter Register value. </dd></dl>

</div>
</div>
<a id="gab3c831df4b5b5d239d15860968332332"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab3c831df4b5b5d239d15860968332332">&sect;&nbsp;</a></span>pdc_read_rx_next_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_rx_next_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Receive Next Pointer Register (RNPR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive Next Pointer Register value. </dd></dl>

</div>
</div>
<a id="gadac365776187bd41047efd51272b7a0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadac365776187bd41047efd51272b7a0f">&sect;&nbsp;</a></span>pdc_read_rx_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_rx_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Receive Pointer Register (RPR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive Pointer Register value. </dd></dl>

</div>
</div>
<a id="ga99aadeff5cccb641495d5341ce56311b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga99aadeff5cccb641495d5341ce56311b">&sect;&nbsp;</a></span>pdc_read_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read PDC status. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PDC status register bit map.</dd></dl>
<table class="doxtable">
<tr>
<th>Name </th><th>Description </th><th>Bit  </th></tr>
<tr>
<td>RXTEN </td><td>Receiver Transfer Enabled </td><td>8  </td></tr>
<tr>
<td>TXTEN </td><td>Transmitter Transfer Enabled </td><td>1  </td></tr>
</table>

</div>
</div>
<a id="gaee7b9d662157ef7117288889db3dfe3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaee7b9d662157ef7117288889db3dfe3e">&sect;&nbsp;</a></span>pdc_read_tx_counter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_tx_counter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Transmit Counter Register (TCR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit Counter Register value. </dd></dl>

</div>
</div>
<a id="ga8ba1e33860cccd1ab545303a9efe9ce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8ba1e33860cccd1ab545303a9efe9ce5">&sect;&nbsp;</a></span>pdc_read_tx_next_counter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_tx_next_counter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Transmit Next Counter Register (TNCR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit Next Counter Register value. </dd></dl>

</div>
</div>
<a id="gac529c6ae2a63a0f8f3911802d129a3c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac529c6ae2a63a0f8f3911802d129a3c7">&sect;&nbsp;</a></span>pdc_read_tx_next_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_tx_next_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Transmit Next Pointer Register (TNPR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit Next Pointer Register value. </dd></dl>

</div>
</div>
<a id="ga0e5d670ec28a0c582c408128d40c3d83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0e5d670ec28a0c582c408128d40c3d83">&sect;&nbsp;</a></span>pdc_read_tx_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pdc_read_tx_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return Transmit Pointer Register (TPR) value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p_pdc</td><td>Device structure pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transmit Pointer Register value. </dd></dl>

</div>
</div>
<a id="gaa80971f8355c417045fb564fccad3176"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa80971f8355c417045fb564fccad3176">&sect;&nbsp;</a></span>pdc_rx_clear_cnt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pdc_rx_clear_cnt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear PDC buffer receive counter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">p_pdc</td><td>Device structure pointer </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8">&sect;&nbsp;</a></span>pdc_rx_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pdc_rx_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *&#160;</td>
          <td class="paramname"><em>p_packet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *&#160;</td>
          <td class="paramname"><em>p_next_packet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure PDC for data receive. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">p_pdc</td><td>Device structure pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p_packet</td><td>Pointer to packet information for current buffer register set. Use NULL to leave unaltered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p_next_packet</td><td>Pointer to packet information for next buffer register set. Use NULL to leave unaltered. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__asfdoc__sam__drivers__pdc__group_ga8cbc8c88b0b1d636ff9f0b5b42fbd9e8_icgraph.svg" width="307" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gac8d975c0084a459475a5c4bf07a5d3de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac8d975c0084a459475a5c4bf07a5d3de">&sect;&nbsp;</a></span>pdc_tx_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pdc_tx_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_pdc.xhtml">Pdc</a> *&#160;</td>
          <td class="paramname"><em>p_pdc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *&#160;</td>
          <td class="paramname"><em>p_packet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__asfdoc__sam__drivers__pdc__group.xhtml#ga557bf9f3364155c32b15224f2293a153">pdc_packet_t</a> *&#160;</td>
          <td class="paramname"><em>p_next_packet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configure PDC for data transmit. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">p_pdc</td><td>Device structure pointer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p_packet</td><td>Pointer to packet information for current buffer register set. Use NULL to leave unaltered. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p_next_packet</td><td>Pointer to packet information for next buffer register set. Use NULL to leave unaltered. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__asfdoc__sam__drivers__pdc__group_gac8d975c0084a459475a5c4bf07a5d3de_icgraph.svg" width="271" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
