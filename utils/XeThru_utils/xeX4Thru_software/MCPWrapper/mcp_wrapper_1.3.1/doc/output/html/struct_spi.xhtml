<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Spi Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_spi-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Spi Struct Reference<div class="ingroups"><a class="el" href="group___s_a_m_g55___s_p_i.xhtml">Serial Peripheral Interface</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> hardware registers.  
 <a href="struct_spi.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="spi_8h_source.xhtml">spi.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad734fbd4fd26168d4677c0620e5efc02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#ad734fbd4fd26168d4677c0620e5efc02">SPI_CR</a></td></tr>
<tr class="memdesc:ad734fbd4fd26168d4677c0620e5efc02"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x000) SPI Control Register  <a href="#ad734fbd4fd26168d4677c0620e5efc02">More...</a><br /></td></tr>
<tr class="separator:ad734fbd4fd26168d4677c0620e5efc02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a648508291f5d4893e6e85546bcf153db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a648508291f5d4893e6e85546bcf153db">SPI_MR</a></td></tr>
<tr class="memdesc:a648508291f5d4893e6e85546bcf153db"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x004) SPI Mode Register  <a href="#a648508291f5d4893e6e85546bcf153db">More...</a><br /></td></tr>
<tr class="separator:a648508291f5d4893e6e85546bcf153db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9e9f674383afb8c517e99b44a4fc9eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#af9e9f674383afb8c517e99b44a4fc9eb">SPI_RDR</a></td></tr>
<tr class="memdesc:af9e9f674383afb8c517e99b44a4fc9eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x008) SPI Receive Data Register  <a href="#af9e9f674383afb8c517e99b44a4fc9eb">More...</a><br /></td></tr>
<tr class="separator:af9e9f674383afb8c517e99b44a4fc9eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8f55ee122f6b0ad33d438a4f1ff1ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a8c8f55ee122f6b0ad33d438a4f1ff1ef">SPI_TDR</a></td></tr>
<tr class="memdesc:a8c8f55ee122f6b0ad33d438a4f1ff1ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x00C) SPI Transmit Data Register  <a href="#a8c8f55ee122f6b0ad33d438a4f1ff1ef">More...</a><br /></td></tr>
<tr class="separator:a8c8f55ee122f6b0ad33d438a4f1ff1ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1f91a373e95428f2e2b1d6bfab333b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#ae1f91a373e95428f2e2b1d6bfab333b2">SPI_SR</a></td></tr>
<tr class="memdesc:ae1f91a373e95428f2e2b1d6bfab333b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x010) SPI Status Register  <a href="#ae1f91a373e95428f2e2b1d6bfab333b2">More...</a><br /></td></tr>
<tr class="separator:ae1f91a373e95428f2e2b1d6bfab333b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cde5578804cb090b599fe07eeaa04d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a2cde5578804cb090b599fe07eeaa04d4">SPI_IER</a></td></tr>
<tr class="memdesc:a2cde5578804cb090b599fe07eeaa04d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x014) SPI Interrupt Enable Register  <a href="#a2cde5578804cb090b599fe07eeaa04d4">More...</a><br /></td></tr>
<tr class="separator:a2cde5578804cb090b599fe07eeaa04d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8575c6d9cf819ce6aff62ea79276eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a8c8575c6d9cf819ce6aff62ea79276eb">SPI_IDR</a></td></tr>
<tr class="memdesc:a8c8575c6d9cf819ce6aff62ea79276eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x018) SPI Interrupt Disable Register  <a href="#a8c8575c6d9cf819ce6aff62ea79276eb">More...</a><br /></td></tr>
<tr class="separator:a8c8575c6d9cf819ce6aff62ea79276eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b25e67749c807004595f3301c65b9ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a9b25e67749c807004595f3301c65b9ad">SPI_IMR</a></td></tr>
<tr class="memdesc:a9b25e67749c807004595f3301c65b9ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x01C) SPI Interrupt Mask Register  <a href="#a9b25e67749c807004595f3301c65b9ad">More...</a><br /></td></tr>
<tr class="separator:a9b25e67749c807004595f3301c65b9ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25020c28d26d3ffec0c2a8dea5432172"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a25020c28d26d3ffec0c2a8dea5432172">Reserved1</a> [4]</td></tr>
<tr class="separator:a25020c28d26d3ffec0c2a8dea5432172"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9b25d8e566638e1ae193b804c09c52f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#ac9b25d8e566638e1ae193b804c09c52f">SPI_CSR</a> [2]</td></tr>
<tr class="memdesc:ac9b25d8e566638e1ae193b804c09c52f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x030) SPI Chip Select Register  <a href="#ac9b25d8e566638e1ae193b804c09c52f">More...</a><br /></td></tr>
<tr class="separator:ac9b25d8e566638e1ae193b804c09c52f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09ad808523a8dd72dccdba9fa633ab8b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a09ad808523a8dd72dccdba9fa633ab8b">Reserved2</a> [4]</td></tr>
<tr class="separator:a09ad808523a8dd72dccdba9fa633ab8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2684ff9e064589ee52aee8e30bf8046f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a2684ff9e064589ee52aee8e30bf8046f">SPI_CMPR</a></td></tr>
<tr class="memdesc:a2684ff9e064589ee52aee8e30bf8046f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x048) SPI Comparison Register  <a href="#a2684ff9e064589ee52aee8e30bf8046f">More...</a><br /></td></tr>
<tr class="separator:a2684ff9e064589ee52aee8e30bf8046f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a935787c9de80accf154c36cd9f04859c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a935787c9de80accf154c36cd9f04859c">Reserved3</a> [38]</td></tr>
<tr class="separator:a935787c9de80accf154c36cd9f04859c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa50a6b8d402cbb0f75e48cdbfd3a077c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#aa50a6b8d402cbb0f75e48cdbfd3a077c">SPI_WPMR</a></td></tr>
<tr class="memdesc:aa50a6b8d402cbb0f75e48cdbfd3a077c"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x0E4) SPI Write Protection Mode Register  <a href="#aa50a6b8d402cbb0f75e48cdbfd3a077c">More...</a><br /></td></tr>
<tr class="separator:aa50a6b8d402cbb0f75e48cdbfd3a077c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc4d26963ecf8db62fc9fea6e8841c33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#adc4d26963ecf8db62fc9fea6e8841c33">SPI_WPSR</a></td></tr>
<tr class="memdesc:adc4d26963ecf8db62fc9fea6e8841c33"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x0E8) SPI Write Protection Status Register  <a href="#adc4d26963ecf8db62fc9fea6e8841c33">More...</a><br /></td></tr>
<tr class="separator:adc4d26963ecf8db62fc9fea6e8841c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7507d1d921981fe6c0035be411a49ba4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a7507d1d921981fe6c0035be411a49ba4">Reserved4</a> [5]</td></tr>
<tr class="separator:a7507d1d921981fe6c0035be411a49ba4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec47f23d215a6fc82f3d44c950552f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a5ec47f23d215a6fc82f3d44c950552f5">SPI_RPR</a></td></tr>
<tr class="memdesc:a5ec47f23d215a6fc82f3d44c950552f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x100) Receive Pointer Register  <a href="#a5ec47f23d215a6fc82f3d44c950552f5">More...</a><br /></td></tr>
<tr class="separator:a5ec47f23d215a6fc82f3d44c950552f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b11fc9faced58701e29cdc21764e2a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a62b11fc9faced58701e29cdc21764e2a">SPI_RCR</a></td></tr>
<tr class="memdesc:a62b11fc9faced58701e29cdc21764e2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x104) Receive Counter Register  <a href="#a62b11fc9faced58701e29cdc21764e2a">More...</a><br /></td></tr>
<tr class="separator:a62b11fc9faced58701e29cdc21764e2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35d241545a51c84508a8db5cb2cdbaec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a35d241545a51c84508a8db5cb2cdbaec">SPI_TPR</a></td></tr>
<tr class="memdesc:a35d241545a51c84508a8db5cb2cdbaec"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x108) Transmit Pointer Register  <a href="#a35d241545a51c84508a8db5cb2cdbaec">More...</a><br /></td></tr>
<tr class="separator:a35d241545a51c84508a8db5cb2cdbaec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af953d2ec0baa5194f7eac96f6ef6d02e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#af953d2ec0baa5194f7eac96f6ef6d02e">SPI_TCR</a></td></tr>
<tr class="memdesc:af953d2ec0baa5194f7eac96f6ef6d02e"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x10C) Transmit Counter Register  <a href="#af953d2ec0baa5194f7eac96f6ef6d02e">More...</a><br /></td></tr>
<tr class="separator:af953d2ec0baa5194f7eac96f6ef6d02e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1998c4f1270d51750e20340cf36c6d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#ad1998c4f1270d51750e20340cf36c6d2">SPI_RNPR</a></td></tr>
<tr class="memdesc:ad1998c4f1270d51750e20340cf36c6d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x110) Receive Next Pointer Register  <a href="#ad1998c4f1270d51750e20340cf36c6d2">More...</a><br /></td></tr>
<tr class="separator:ad1998c4f1270d51750e20340cf36c6d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae48688fc320b68028e3188394697d10a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#ae48688fc320b68028e3188394697d10a">SPI_RNCR</a></td></tr>
<tr class="memdesc:ae48688fc320b68028e3188394697d10a"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x114) Receive Next Counter Register  <a href="#ae48688fc320b68028e3188394697d10a">More...</a><br /></td></tr>
<tr class="separator:ae48688fc320b68028e3188394697d10a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a007152d97e8784f378265b5b9b5bd2d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a007152d97e8784f378265b5b9b5bd2d7">SPI_TNPR</a></td></tr>
<tr class="memdesc:a007152d97e8784f378265b5b9b5bd2d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x118) Transmit Next Pointer Register  <a href="#a007152d97e8784f378265b5b9b5bd2d7">More...</a><br /></td></tr>
<tr class="separator:a007152d97e8784f378265b5b9b5bd2d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eac84429daa7277e68a62208efd38c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a0eac84429daa7277e68a62208efd38c3">SPI_TNCR</a></td></tr>
<tr class="memdesc:a0eac84429daa7277e68a62208efd38c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x11C) Transmit Next Counter Register  <a href="#a0eac84429daa7277e68a62208efd38c3">More...</a><br /></td></tr>
<tr class="separator:a0eac84429daa7277e68a62208efd38c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07382c5151d462f6cfd70335d7e01a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a07382c5151d462f6cfd70335d7e01a8d">SPI_PTCR</a></td></tr>
<tr class="memdesc:a07382c5151d462f6cfd70335d7e01a8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x120) Transfer Control Register  <a href="#a07382c5151d462f6cfd70335d7e01a8d">More...</a><br /></td></tr>
<tr class="separator:a07382c5151d462f6cfd70335d7e01a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d3b9be834aa8108416e67ddd8cb6008"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_spi.xhtml#a2d3b9be834aa8108416e67ddd8cb6008">SPI_PTSR</a></td></tr>
<tr class="memdesc:a2d3b9be834aa8108416e67ddd8cb6008"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x124) Transfer Status Register  <a href="#a2d3b9be834aa8108416e67ddd8cb6008">More...</a><br /></td></tr>
<tr class="separator:a2d3b9be834aa8108416e67ddd8cb6008"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> hardware registers. </p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="a25020c28d26d3ffec0c2a8dea5432172"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25020c28d26d3ffec0c2a8dea5432172">&sect;&nbsp;</a></span>Reserved1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::Reserved1[4]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a09ad808523a8dd72dccdba9fa633ab8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09ad808523a8dd72dccdba9fa633ab8b">&sect;&nbsp;</a></span>Reserved2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::Reserved2[4]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a935787c9de80accf154c36cd9f04859c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a935787c9de80accf154c36cd9f04859c">&sect;&nbsp;</a></span>Reserved3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::Reserved3[38]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7507d1d921981fe6c0035be411a49ba4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7507d1d921981fe6c0035be411a49ba4">&sect;&nbsp;</a></span>Reserved4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::Reserved4[5]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2684ff9e064589ee52aee8e30bf8046f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2684ff9e064589ee52aee8e30bf8046f">&sect;&nbsp;</a></span>SPI_CMPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_CMPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x048) SPI Comparison Register </p>

</div>
</div>
<a id="ad734fbd4fd26168d4677c0620e5efc02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad734fbd4fd26168d4677c0620e5efc02">&sect;&nbsp;</a></span>SPI_CR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Spi::SPI_CR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x000) SPI Control Register </p>

</div>
</div>
<a id="ac9b25d8e566638e1ae193b804c09c52f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9b25d8e566638e1ae193b804c09c52f">&sect;&nbsp;</a></span>SPI_CSR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_CSR[2]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x030) SPI Chip Select Register </p>

</div>
</div>
<a id="a8c8575c6d9cf819ce6aff62ea79276eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c8575c6d9cf819ce6aff62ea79276eb">&sect;&nbsp;</a></span>SPI_IDR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Spi::SPI_IDR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x018) SPI Interrupt Disable Register </p>

</div>
</div>
<a id="a2cde5578804cb090b599fe07eeaa04d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cde5578804cb090b599fe07eeaa04d4">&sect;&nbsp;</a></span>SPI_IER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Spi::SPI_IER</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x014) SPI Interrupt Enable Register </p>

</div>
</div>
<a id="a9b25e67749c807004595f3301c65b9ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b25e67749c807004595f3301c65b9ad">&sect;&nbsp;</a></span>SPI_IMR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::SPI_IMR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x01C) SPI Interrupt Mask Register </p>

</div>
</div>
<a id="a648508291f5d4893e6e85546bcf153db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a648508291f5d4893e6e85546bcf153db">&sect;&nbsp;</a></span>SPI_MR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_MR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x004) SPI Mode Register </p>

</div>
</div>
<a id="a07382c5151d462f6cfd70335d7e01a8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07382c5151d462f6cfd70335d7e01a8d">&sect;&nbsp;</a></span>SPI_PTCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Spi::SPI_PTCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x120) Transfer Control Register </p>

</div>
</div>
<a id="a2d3b9be834aa8108416e67ddd8cb6008"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d3b9be834aa8108416e67ddd8cb6008">&sect;&nbsp;</a></span>SPI_PTSR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::SPI_PTSR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x124) Transfer Status Register </p>

</div>
</div>
<a id="a62b11fc9faced58701e29cdc21764e2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62b11fc9faced58701e29cdc21764e2a">&sect;&nbsp;</a></span>SPI_RCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_RCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x104) Receive Counter Register </p>

</div>
</div>
<a id="af9e9f674383afb8c517e99b44a4fc9eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9e9f674383afb8c517e99b44a4fc9eb">&sect;&nbsp;</a></span>SPI_RDR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::SPI_RDR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x008) SPI Receive Data Register </p>

</div>
</div>
<a id="ae48688fc320b68028e3188394697d10a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae48688fc320b68028e3188394697d10a">&sect;&nbsp;</a></span>SPI_RNCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_RNCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x114) Receive Next Counter Register </p>

</div>
</div>
<a id="ad1998c4f1270d51750e20340cf36c6d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1998c4f1270d51750e20340cf36c6d2">&sect;&nbsp;</a></span>SPI_RNPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_RNPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x110) Receive Next Pointer Register </p>

</div>
</div>
<a id="a5ec47f23d215a6fc82f3d44c950552f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ec47f23d215a6fc82f3d44c950552f5">&sect;&nbsp;</a></span>SPI_RPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_RPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x100) Receive Pointer Register </p>

</div>
</div>
<a id="ae1f91a373e95428f2e2b1d6bfab333b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1f91a373e95428f2e2b1d6bfab333b2">&sect;&nbsp;</a></span>SPI_SR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::SPI_SR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x010) SPI Status Register </p>

</div>
</div>
<a id="af953d2ec0baa5194f7eac96f6ef6d02e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af953d2ec0baa5194f7eac96f6ef6d02e">&sect;&nbsp;</a></span>SPI_TCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_TCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x10C) Transmit Counter Register </p>

</div>
</div>
<a id="a8c8f55ee122f6b0ad33d438a4f1ff1ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c8f55ee122f6b0ad33d438a4f1ff1ef">&sect;&nbsp;</a></span>SPI_TDR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Spi::SPI_TDR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x00C) SPI Transmit Data Register </p>

</div>
</div>
<a id="a0eac84429daa7277e68a62208efd38c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eac84429daa7277e68a62208efd38c3">&sect;&nbsp;</a></span>SPI_TNCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_TNCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x11C) Transmit Next Counter Register </p>

</div>
</div>
<a id="a007152d97e8784f378265b5b9b5bd2d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a007152d97e8784f378265b5b9b5bd2d7">&sect;&nbsp;</a></span>SPI_TNPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_TNPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x118) Transmit Next Pointer Register </p>

</div>
</div>
<a id="a35d241545a51c84508a8db5cb2cdbaec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35d241545a51c84508a8db5cb2cdbaec">&sect;&nbsp;</a></span>SPI_TPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_TPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x108) Transmit Pointer Register </p>

</div>
</div>
<a id="aa50a6b8d402cbb0f75e48cdbfd3a077c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa50a6b8d402cbb0f75e48cdbfd3a077c">&sect;&nbsp;</a></span>SPI_WPMR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Spi::SPI_WPMR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x0E4) SPI Write Protection Mode Register </p>

</div>
</div>
<a id="adc4d26963ecf8db62fc9fea6e8841c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc4d26963ecf8db62fc9fea6e8841c33">&sect;&nbsp;</a></span>SPI_WPSR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Spi::SPI_WPSR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_spi.xhtml" title="Spi hardware registers. ">Spi</a> Offset: 0x0E8) SPI Write Protection Status Register </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>examples/atmel_samg55/src/ASF/sam/utils/cmsis/samg/samg55/include/component/<a class="el" href="spi_8h_source.xhtml">spi.h</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
