<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Transmitting using the FreeRTOS USART driver in</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="freertos_usart_peripheral_control_quick_start.xhtml">Quick start guide for</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Transmitting using the FreeRTOS USART driver in </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>standard mode</p>
<p>This example demonstrates using the FreeRTOS USART API to send data using the standard operation mode. * See <a class="el" href="freertos_usart_initialization_sync.xhtml">Initializing the FreeRTOS USART</a></p>
<p>The example below implements a function that transmits two strings, and then returns.</p>
<p>Refer to the FreeRTOS peripheral control projects in the Atmel ASF distribution for complete working examples, and the <a href="http://www.FreeRTOS.org" target="_blank">FreeRTOS web site</a> for information on getting started with FreeRTOS.</p>
<div class="fragment"><div class="line"><span class="comment">// This examples assumes freertos_usart has already been set by a successful</span></div><div class="line"><span class="comment">// call to freertos_usart_serial_init(), and that freertos_usart_serial_init()</span></div><div class="line"><span class="comment">// configured the FreeRTOS USART driver to use the standard operation mode.</span></div><div class="line"></div><div class="line"><a class="code" href="status__codes_8h.xhtml#a1f12e07903f974729de22ebe2f52273e">status_code_t</a> write_two_strings(<a class="code" href="group__freertos__usart__peripheral__control__group.xhtml#gaa09713e6ef0f41982d6fee5168d6fc93">freertos_usart_if</a> freertos_usart){</div><div class="line">    uint8_t write_buffer[5];</div><div class="line">    <a class="code" href="status__codes_8h.xhtml#a1f12e07903f974729de22ebe2f52273e">status_code_t</a> result;</div><div class="line"></div><div class="line">    <span class="comment">// Send a string to the USART.  The string must be in RAM, so copy it into</span></div><div class="line">    <span class="comment">// an array.</span></div><div class="line">    strcpy(write_buffer, <span class="stringliteral">&quot;one&quot;</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Using a block time of 10 / portTICK_RATE_MS means &quot;don&#39;t block any</span></div><div class="line">    <span class="comment">// longer than 10ms&quot; to wait for access to the USART.  Other FreeRTOS tasks</span></div><div class="line">    <span class="comment">// will execute during the wait period.</span></div><div class="line">    result = <a class="code" href="group__freertos__usart__peripheral__control__group.xhtml#ga2925311f072889cff22626013ef87310">freertos_usart_write_packet</a>(freertos_usart, write_buffer,</div><div class="line">                       strlen(<span class="stringliteral">&quot;one&quot;</span>), 10 / <a class="code" href="portmacro_8h.xhtml#a8689cad2afb0c5f65d866e2c356378bf">portTICK_RATE_MS</a>);</div><div class="line"></div><div class="line">    <span class="keywordflow">if</span>(result == <a class="code" href="status__codes_8h.xhtml#a751c892e5a46b8e7d282085a5a5bf151a7e4a42e3b6dd63708c64cf3db6f69566">STATUS_OK</a>) {</div><div class="line">        <span class="comment">// freertos_usart_write_packet() does not return until transmission</span></div><div class="line">        <span class="comment">// of the string has completed (other FreeRTOS tasks will execute</span></div><div class="line">        <span class="comment">// while the transmission is in progress), meaning the write_buffer</span></div><div class="line">        <span class="comment">// array can be re-used immediately without any risk of corrupting</span></div><div class="line">        <span class="comment">// the original transmission.  Copy the second string to be</span></div><div class="line">        <span class="comment">// transmitted into the RAM buffer.</span></div><div class="line">        strcpy(write_buffer, <span class="stringliteral">&quot;two&quot;</span>);</div><div class="line">        result = <a class="code" href="group__freertos__usart__peripheral__control__group.xhtml#ga2925311f072889cff22626013ef87310">freertos_usart_write_packet</a>(freertos_usart, write_buffer,</div><div class="line">                                    strlen(<span class="stringliteral">&quot;two&quot;</span>), 10 / <a class="code" href="portmacro_8h.xhtml#a8689cad2afb0c5f65d866e2c356378bf">portTICK_RATE_MS</a>);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="comment">// freertos_usart_write_packet() does not return until transmission of</span></div><div class="line">    <span class="comment">// the string has completed (other FreeRTOS task will execute while the</span></div><div class="line">    <span class="comment">// transmission is in progress), meaning the function can exit even</span></div><div class="line">    <span class="comment">// though the buffer being transmitted is declared on the function&#39;s</span></div><div class="line">    <span class="comment">// stack because it is guaranteed that nothing is still using the data</span></div><div class="line">    <span class="comment">// the buffer contains.</span></div><div class="line">    <span class="keywordflow">return</span> result;</div><div class="line">}</div></div><!-- fragment --> </div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
