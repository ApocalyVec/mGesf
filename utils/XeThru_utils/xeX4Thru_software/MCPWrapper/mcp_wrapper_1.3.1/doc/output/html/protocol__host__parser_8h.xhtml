<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: src/mcp/protocol_host_parser.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_ce4c810be13e606bdd57650e1ea2a14c.xhtml">mcp</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">protocol_host_parser.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="xtserial__definitions_8h_source.xhtml">xtserial_definitions.h</a>&quot;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for protocol_host_parser.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h__incl.svg" width="240" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h__dep__incl.svg" width="162" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<p><a href="protocol__host__parser_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_error.xhtml">Error</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_ack.xhtml">Ack</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_reply.xhtml">Reply</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_float_data__.xhtml">FloatData_</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_respiration_data.xhtml">RespirationData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_sleep_data.xhtml">SleepData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_baseband_ap_data.xhtml">BasebandApData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_baseband_iq_data.xhtml">BasebandIqData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_system_status.xhtml">SystemStatus</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_presence_single_data.xhtml">PresenceSingleData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_host_parser.xhtml">HostParser</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a69db8eb68ff782ce5a59f1b3ac34dc37"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct_float_data__.xhtml">FloatData_</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a></td></tr>
<tr class="separator:a69db8eb68ff782ce5a59f1b3ac34dc37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80810e682ea79392587186e35b50b3fb"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a80810e682ea79392587186e35b50b3fb">McpPongCallback</a>) (uint32_t pong, void *user_data)</td></tr>
<tr class="separator:a80810e682ea79392587186e35b50b3fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af218e95105cb9f80b781b2c160341833"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#af218e95105cb9f80b781b2c160341833">McpErrorCallback</a>) (uint32_t data, void *user_data)</td></tr>
<tr class="separator:af218e95105cb9f80b781b2c160341833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5464b52e316a86c02a361c18bb1e2acb"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a5464b52e316a86c02a361c18bb1e2acb">McpDataFloatCallback</a>) (<a class="el" href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a> data, void *user_data)</td></tr>
<tr class="separator:a5464b52e316a86c02a361c18bb1e2acb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3963d12dedea925e1a5824f90a60fae"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ac3963d12dedea925e1a5824f90a60fae">McpAckCallback</a>) (<a class="el" href="struct_ack.xhtml">Ack</a> data, void *user_data)</td></tr>
<tr class="separator:ac3963d12dedea925e1a5824f90a60fae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe7a79957e6c5b46e654ead9b33f1d77"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#abe7a79957e6c5b46e654ead9b33f1d77">McpReplyCallback</a>) (<a class="el" href="struct_reply.xhtml">Reply</a> data, void *user_data)</td></tr>
<tr class="separator:abe7a79957e6c5b46e654ead9b33f1d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c2c6646c474d6d02b1dd10699f7d04c"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a9c2c6646c474d6d02b1dd10699f7d04c">McpRespirationDataCallback</a>) (<a class="el" href="struct_respiration_data.xhtml">RespirationData</a> data, void *user_data)</td></tr>
<tr class="separator:a9c2c6646c474d6d02b1dd10699f7d04c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb2f5d3689032fab7112d4143ee676f"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a2cb2f5d3689032fab7112d4143ee676f">McpSleepDataCallback</a>) (<a class="el" href="struct_sleep_data.xhtml">SleepData</a> data, void *user_data)</td></tr>
<tr class="separator:a2cb2f5d3689032fab7112d4143ee676f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7d5925360da064c20ec9ab53156942d"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ad7d5925360da064c20ec9ab53156942d">McpBasebandApDataCallback</a>) (<a class="el" href="struct_baseband_ap_data.xhtml">BasebandApData</a> data, void *user_data)</td></tr>
<tr class="separator:ad7d5925360da064c20ec9ab53156942d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31d0f4e0f27d7bc7fa386665f4d7e225"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a31d0f4e0f27d7bc7fa386665f4d7e225">McpBasebandIqDataCallback</a>) (<a class="el" href="struct_baseband_iq_data.xhtml">BasebandIqData</a> data, void *user_data)</td></tr>
<tr class="separator:a31d0f4e0f27d7bc7fa386665f4d7e225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe85ff7d8054885787c15e2b4dbd03a4"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#abe85ff7d8054885787c15e2b4dbd03a4">McpPresenceSingleCallback</a>) (<a class="el" href="struct_presence_single_data.xhtml">PresenceSingleData</a> data, void *user_data)</td></tr>
<tr class="separator:abe85ff7d8054885787c15e2b4dbd03a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcd79c5ff8816c34849e176a4432b30a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#adcd79c5ff8816c34849e176a4432b30a">McpPresenceMovingListCallback</a>) (<a class="el" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a> data, void *user_data)</td></tr>
<tr class="separator:adcd79c5ff8816c34849e176a4432b30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd5784cb5c77815ac7a4412448190cf"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a7dd5784cb5c77815ac7a4412448190cf">McpSystemStatusCallback</a>) (<a class="el" href="struct_system_status.xhtml">SystemStatus</a> ss, void *user_data)</td></tr>
<tr class="separator:a7dd5784cb5c77815ac7a4412448190cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d5860c42b7ce9de9897206b7ee8055"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a76d5860c42b7ce9de9897206b7ee8055">McpRespirationMovingListCallback</a>) (<a class="el" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a> data, void *user_data)</td></tr>
<tr class="separator:a76d5860c42b7ce9de9897206b7ee8055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeef4b5aecf28e9f8c81882f6e7cdaf8"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#adeef4b5aecf28e9f8c81882f6e7cdaf8">McpRespirationDetectionListCallback</a>) (<a class="el" href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a> data, void *user_data)</td></tr>
<tr class="separator:adeef4b5aecf28e9f8c81882f6e7cdaf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a021a1230fb55217f2a2557aa06dc7eb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a021a1230fb55217f2a2557aa06dc7eb4">init_host_parser</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser)</td></tr>
<tr class="separator:a021a1230fb55217f2a2557aa06dc7eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5643fd0436b763ffe4bea3aa04cf7f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a0b5643fd0436b763ffe4bea3aa04cf7f">parse</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a0b5643fd0436b763ffe4bea3aa04cf7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab42e614cd70a7fccebc588a0a76d6a5f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ab42e614cd70a7fccebc588a0a76d6a5f">parse_error</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:ab42e614cd70a7fccebc588a0a76d6a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51f8047652585b173cb71a6ad0c42f03"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a51f8047652585b173cb71a6ad0c42f03">parse_system_status</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a51f8047652585b173cb71a6ad0c42f03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7203ea3951462b2d1b41d65f67e8615a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a7203ea3951462b2d1b41d65f67e8615a">parse_baseband_ap</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a7203ea3951462b2d1b41d65f67e8615a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49dc96ded8bdab7fa0c66df331f7dce3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a49dc96ded8bdab7fa0c66df331f7dce3">parse_baseband_iq</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a49dc96ded8bdab7fa0c66df331f7dce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5664de178367c7faa1ee945dbc71761"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#aa5664de178367c7faa1ee945dbc71761">parse_respiration_status</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:aa5664de178367c7faa1ee945dbc71761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d7a9c5ebdff244e0aeda763a574f2c6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a1d7a9c5ebdff244e0aeda763a574f2c6">parse_sleep_status</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a1d7a9c5ebdff244e0aeda763a574f2c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cb524c783a12d4f511964c575a448e7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a5cb524c783a12d4f511964c575a448e7">parse_data_float</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a5cb524c783a12d4f511964c575a448e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0449ccfb97711fa6182fbbe9b973c9c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ab0449ccfb97711fa6182fbbe9b973c9c">parse_data</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:ab0449ccfb97711fa6182fbbe9b973c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a723819df191ca88b9817334617f00"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a64a723819df191ca88b9817334617f00">parse_appdata</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a64a723819df191ca88b9817334617f00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3abc1513380e55752613579094dd0e6c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a3abc1513380e55752613579094dd0e6c">parse_ack</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a3abc1513380e55752613579094dd0e6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc0786463a2d56827181aa2df7eb5cd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a4dc0786463a2d56827181aa2df7eb5cd">parse_reply</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a4dc0786463a2d56827181aa2df7eb5cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83f756678f447cc05bf25b980ad960e9"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a83f756678f447cc05bf25b980ad960e9">parse_pong</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a83f756678f447cc05bf25b980ad960e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43f3732f9f5adc9b7fe409391edb9749"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a43f3732f9f5adc9b7fe409391edb9749">parse_presence_single</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *p, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a43f3732f9f5adc9b7fe409391edb9749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad924540c85994179fc947cd380114366"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ad924540c85994179fc947cd380114366">parse_presence_movinglist</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:ad924540c85994179fc947cd380114366"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d71237f11a46b84563dd3552ac10f01"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a8d71237f11a46b84563dd3552ac10f01">parse_respiration_movinglist</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a8d71237f11a46b84563dd3552ac10f01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29fc9ab5dcf4f3fbe947c31370311945"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a29fc9ab5dcf4f3fbe947c31370311945">parse_respiration_detectionlist</a> (<a class="el" href="struct_host_parser.xhtml">HostParser</a> *parser, const unsigned char *data, unsigned int length, void *user_data)</td></tr>
<tr class="separator:a29fc9ab5dcf4f3fbe947c31370311945"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ac0cc87fd8baf5f9e3e54b669fad7bd4e"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#ac0cc87fd8baf5f9e3e54b669fad7bd4e">UNINITILIZED_ERROR_CODE</a> = 0xdeadbeef</td></tr>
<tr class="separator:ac0cc87fd8baf5f9e3e54b669fad7bd4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa85035c227e2eda46435019ace68e95"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#afa85035c227e2eda46435019ace68e95">PARSE_OK</a> = 0</td></tr>
<tr class="separator:afa85035c227e2eda46435019ace68e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a0ab50a6441399ec3240c81a97a9b8"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a70a0ab50a6441399ec3240c81a97a9b8">ERROR</a> = 1</td></tr>
<tr class="separator:a70a0ab50a6441399ec3240c81a97a9b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e9fbf2426b2475632a8a1341d431ac3"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a8e9fbf2426b2475632a8a1341d431ac3">ERROR_SHORT_DATA</a> = 2</td></tr>
<tr class="separator:a8e9fbf2426b2475632a8a1341d431ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bfad4ac1f790406b0689f3acdbf0714"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a2bfad4ac1f790406b0689f3acdbf0714">ERROR_WRONG_CONTENT</a> = 3</td></tr>
<tr class="separator:a2bfad4ac1f790406b0689f3acdbf0714"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa22b1e0ab9b47187c9f1fd64c8283c22"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#aa22b1e0ab9b47187c9f1fd64c8283c22">ERROR_UNKNOWN_PACKET</a> = 4</td></tr>
<tr class="separator:aa22b1e0ab9b47187c9f1fd64c8283c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eb904d7bb08a08310828d953f505b0d"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__host__parser_8h.xhtml#a1eb904d7bb08a08310828d953f505b0d">ERROR_NO_DATA</a> = 5</td></tr>
<tr class="separator:a1eb904d7bb08a08310828d953f505b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a69db8eb68ff782ce5a59f1b3ac34dc37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69db8eb68ff782ce5a59f1b3ac34dc37">&sect;&nbsp;</a></span>FloatData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct_float_data__.xhtml">FloatData_</a> <a class="el" href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac3963d12dedea925e1a5824f90a60fae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3963d12dedea925e1a5824f90a60fae">&sect;&nbsp;</a></span>McpAckCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpAckCallback) (<a class="el" href="struct_ack.xhtml">Ack</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad7d5925360da064c20ec9ab53156942d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7d5925360da064c20ec9ab53156942d">&sect;&nbsp;</a></span>McpBasebandApDataCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpBasebandApDataCallback) (<a class="el" href="struct_baseband_ap_data.xhtml">BasebandApData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a31d0f4e0f27d7bc7fa386665f4d7e225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31d0f4e0f27d7bc7fa386665f4d7e225">&sect;&nbsp;</a></span>McpBasebandIqDataCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpBasebandIqDataCallback) (<a class="el" href="struct_baseband_iq_data.xhtml">BasebandIqData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5464b52e316a86c02a361c18bb1e2acb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5464b52e316a86c02a361c18bb1e2acb">&sect;&nbsp;</a></span>McpDataFloatCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpDataFloatCallback) (<a class="el" href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af218e95105cb9f80b781b2c160341833"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af218e95105cb9f80b781b2c160341833">&sect;&nbsp;</a></span>McpErrorCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpErrorCallback) (uint32_t data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a80810e682ea79392587186e35b50b3fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80810e682ea79392587186e35b50b3fb">&sect;&nbsp;</a></span>McpPongCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpPongCallback) (uint32_t pong, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adcd79c5ff8816c34849e176a4432b30a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcd79c5ff8816c34849e176a4432b30a">&sect;&nbsp;</a></span>McpPresenceMovingListCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpPresenceMovingListCallback) (<a class="el" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abe85ff7d8054885787c15e2b4dbd03a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe85ff7d8054885787c15e2b4dbd03a4">&sect;&nbsp;</a></span>McpPresenceSingleCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpPresenceSingleCallback) (<a class="el" href="struct_presence_single_data.xhtml">PresenceSingleData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abe7a79957e6c5b46e654ead9b33f1d77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe7a79957e6c5b46e654ead9b33f1d77">&sect;&nbsp;</a></span>McpReplyCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpReplyCallback) (<a class="el" href="struct_reply.xhtml">Reply</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c2c6646c474d6d02b1dd10699f7d04c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c2c6646c474d6d02b1dd10699f7d04c">&sect;&nbsp;</a></span>McpRespirationDataCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpRespirationDataCallback) (<a class="el" href="struct_respiration_data.xhtml">RespirationData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adeef4b5aecf28e9f8c81882f6e7cdaf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adeef4b5aecf28e9f8c81882f6e7cdaf8">&sect;&nbsp;</a></span>McpRespirationDetectionListCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpRespirationDetectionListCallback) (<a class="el" href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a76d5860c42b7ce9de9897206b7ee8055"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d5860c42b7ce9de9897206b7ee8055">&sect;&nbsp;</a></span>McpRespirationMovingListCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpRespirationMovingListCallback) (<a class="el" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2cb2f5d3689032fab7112d4143ee676f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cb2f5d3689032fab7112d4143ee676f">&sect;&nbsp;</a></span>McpSleepDataCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSleepDataCallback) (<a class="el" href="struct_sleep_data.xhtml">SleepData</a> data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dd5784cb5c77815ac7a4412448190cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dd5784cb5c77815ac7a4412448190cf">&sect;&nbsp;</a></span>McpSystemStatusCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSystemStatusCallback) (<a class="el" href="struct_system_status.xhtml">SystemStatus</a> ss, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a021a1230fb55217f2a2557aa06dc7eb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a021a1230fb55217f2a2557aa06dc7eb4">&sect;&nbsp;</a></span>init_host_parser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init_host_parser </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a021a1230fb55217f2a2557aa06dc7eb4_cgraph.svg" width="358" height="774"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a021a1230fb55217f2a2557aa06dc7eb4_icgraph.svg" width="254" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0b5643fd0436b763ffe4bea3aa04cf7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b5643fd0436b763ffe4bea3aa04cf7f">&sect;&nbsp;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a0b5643fd0436b763ffe4bea3aa04cf7f_cgraph.svg" width="355" height="266"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a0b5643fd0436b763ffe4bea3aa04cf7f_icgraph.svg" width="300" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3abc1513380e55752613579094dd0e6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3abc1513380e55752613579094dd0e6c">&sect;&nbsp;</a></span>parse_ack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_ack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a3abc1513380e55752613579094dd0e6c_cgraph.svg" width="228" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a3abc1513380e55752613579094dd0e6c_icgraph.svg" width="196" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a64a723819df191ca88b9817334617f00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64a723819df191ca88b9817334617f00">&sect;&nbsp;</a></span>parse_appdata()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_appdata </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a64a723819df191ca88b9817334617f00_cgraph.svg" width="514" height="383"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a64a723819df191ca88b9817334617f00_icgraph.svg" width="220" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7203ea3951462b2d1b41d65f67e8615a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7203ea3951462b2d1b41d65f67e8615a">&sect;&nbsp;</a></span>parse_baseband_ap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_baseband_ap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a7203ea3951462b2d1b41d65f67e8615a_cgraph.svg" width="312" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a7203ea3951462b2d1b41d65f67e8615a_icgraph.svg" width="304" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a49dc96ded8bdab7fa0c66df331f7dce3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49dc96ded8bdab7fa0c66df331f7dce3">&sect;&nbsp;</a></span>parse_baseband_iq()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_baseband_iq </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a49dc96ded8bdab7fa0c66df331f7dce3_cgraph.svg" width="308" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a49dc96ded8bdab7fa0c66df331f7dce3_icgraph.svg" width="300" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab0449ccfb97711fa6182fbbe9b973c9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0449ccfb97711fa6182fbbe9b973c9c">&sect;&nbsp;</a></span>parse_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_data </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ab0449ccfb97711fa6182fbbe9b973c9c_cgraph.svg" width="263" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ab0449ccfb97711fa6182fbbe9b973c9c_icgraph.svg" width="200" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a5cb524c783a12d4f511964c575a448e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cb524c783a12d4f511964c575a448e7">&sect;&nbsp;</a></span>parse_data_float()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_data_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a5cb524c783a12d4f511964c575a448e7_cgraph.svg" width="263" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a5cb524c783a12d4f511964c575a448e7_icgraph.svg" width="263" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab42e614cd70a7fccebc588a0a76d6a5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab42e614cd70a7fccebc588a0a76d6a5f">&sect;&nbsp;</a></span>parse_error()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_error </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ab42e614cd70a7fccebc588a0a76d6a5f_cgraph.svg" width="260" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ab42e614cd70a7fccebc588a0a76d6a5f_icgraph.svg" width="395" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a83f756678f447cc05bf25b980ad960e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83f756678f447cc05bf25b980ad960e9">&sect;&nbsp;</a></span>parse_pong()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_pong </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a83f756678f447cc05bf25b980ad960e9_cgraph.svg" width="398" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a83f756678f447cc05bf25b980ad960e9_icgraph.svg" width="203" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad924540c85994179fc947cd380114366"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad924540c85994179fc947cd380114366">&sect;&nbsp;</a></span>parse_presence_movinglist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_presence_movinglist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ad924540c85994179fc947cd380114366_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_ad924540c85994179fc947cd380114366_icgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a43f3732f9f5adc9b7fe409391edb9749"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43f3732f9f5adc9b7fe409391edb9749">&sect;&nbsp;</a></span>parse_presence_single()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_presence_single </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a43f3732f9f5adc9b7fe409391edb9749_cgraph.svg" width="328" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a43f3732f9f5adc9b7fe409391edb9749_icgraph.svg" width="320" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a4dc0786463a2d56827181aa2df7eb5cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4dc0786463a2d56827181aa2df7eb5cd">&sect;&nbsp;</a></span>parse_reply()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_reply </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a4dc0786463a2d56827181aa2df7eb5cd_cgraph.svg" width="398" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a4dc0786463a2d56827181aa2df7eb5cd_icgraph.svg" width="203" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a29fc9ab5dcf4f3fbe947c31370311945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29fc9ab5dcf4f3fbe947c31370311945">&sect;&nbsp;</a></span>parse_respiration_detectionlist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_respiration_detectionlist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a29fc9ab5dcf4f3fbe947c31370311945_cgraph.svg" width="372" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a8d71237f11a46b84563dd3552ac10f01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d71237f11a46b84563dd3552ac10f01">&sect;&nbsp;</a></span>parse_respiration_movinglist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_respiration_movinglist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a8d71237f11a46b84563dd3552ac10f01_cgraph.svg" width="359" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a8d71237f11a46b84563dd3552ac10f01_icgraph.svg" width="351" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa5664de178367c7faa1ee945dbc71761"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5664de178367c7faa1ee945dbc71761">&sect;&nbsp;</a></span>parse_respiration_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_respiration_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_aa5664de178367c7faa1ee945dbc71761_cgraph.svg" width="338" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_aa5664de178367c7faa1ee945dbc71761_icgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1d7a9c5ebdff244e0aeda763a574f2c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d7a9c5ebdff244e0aeda763a574f2c6">&sect;&nbsp;</a></span>parse_sleep_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_sleep_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a1d7a9c5ebdff244e0aeda763a574f2c6_cgraph.svg" width="308" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a1d7a9c5ebdff244e0aeda763a574f2c6_icgraph.svg" width="300" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a51f8047652585b173cb71a6ad0c42f03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51f8047652585b173cb71a6ad0c42f03">&sect;&nbsp;</a></span>parse_system_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_system_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_host_parser.xhtml">HostParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__host__parser_8h_a51f8047652585b173cb71a6ad0c42f03_cgraph.svg" width="292" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a70a0ab50a6441399ec3240c81a97a9b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a0ab50a6441399ec3240c81a97a9b8">&sect;&nbsp;</a></span>ERROR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t ERROR = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1eb904d7bb08a08310828d953f505b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1eb904d7bb08a08310828d953f505b0d">&sect;&nbsp;</a></span>ERROR_NO_DATA</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t ERROR_NO_DATA = 5</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8e9fbf2426b2475632a8a1341d431ac3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e9fbf2426b2475632a8a1341d431ac3">&sect;&nbsp;</a></span>ERROR_SHORT_DATA</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t ERROR_SHORT_DATA = 2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa22b1e0ab9b47187c9f1fd64c8283c22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa22b1e0ab9b47187c9f1fd64c8283c22">&sect;&nbsp;</a></span>ERROR_UNKNOWN_PACKET</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t ERROR_UNKNOWN_PACKET = 4</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bfad4ac1f790406b0689f3acdbf0714"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bfad4ac1f790406b0689f3acdbf0714">&sect;&nbsp;</a></span>ERROR_WRONG_CONTENT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t ERROR_WRONG_CONTENT = 3</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afa85035c227e2eda46435019ace68e95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa85035c227e2eda46435019ace68e95">&sect;&nbsp;</a></span>PARSE_OK</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t PARSE_OK = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0cc87fd8baf5f9e3e54b669fad7bd4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0cc87fd8baf5f9e3e54b669fad7bd4e">&sect;&nbsp;</a></span>UNINITILIZED_ERROR_CODE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t UNINITILIZED_ERROR_CODE = 0xdeadbeef</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
