<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Quick start guide for the SAM PMC module</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Quick start guide for the SAM PMC module </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>This is the quick start guide for the <a class="el" href="group__sam__drivers__pmc__group.xhtml">PMC module</a>, with step-by-step instructions on how to configure and use the driver in a selection of use cases.</p>
<p>The use cases contain several code fragments. The code fragments in the steps for setup can be copied into a custom initialization function, while the steps for usage can be copied into, e.g., the main application function.</p>
<h1><a class="anchor" id="pmc_use_cases"></a>
PMC use cases</h1>
<ul>
<li><a class="el" href="sam_pmc_quickstart.xhtml#pmc_basic_use_case">Basic use case - Switch Main Clock sources</a> Basic use case - Switch Main Clock sources</li>
<li><a class="el" href="sam_pmc_quickstart.xhtml#pmc_use_case_2">Use case #2 - Configure Programmable Clocks</a> Advanced use case - Configure Programmable Clocks</li>
</ul>
<h1><a class="anchor" id="pmc_basic_use_case"></a>
Basic use case - Switch Main Clock sources</h1>
<p>In this use case, the PMC module is configured for a variety of system clock sources and speeds. A LED is used to visually indicate the current clock speed as the source is switched.</p>
<h1><a class="anchor" id="pmc_basic_use_case_setup"></a>
Setup</h1>
<h2><a class="anchor" id="pmc_basic_use_case_setup_prereq"></a>
Prerequisites</h2>
<ol type="1">
<li>General Purpose I/O Management (gpio)</li>
</ol>
<h2><a class="anchor" id="pmc_basic_use_case_setup_code"></a>
Code</h2>
<p>The following function needs to be added to the user application, to flash a board LED a variable number of times at a rate given in CPU ticks.</p>
<div class="fragment"><div class="line"><span class="preprocessor">#define FLASH_TICK_COUNT   0x00012345</span></div><div class="line"></div><div class="line"><span class="keywordtype">void</span> flash_led(uint32_t tick_count, uint8_t flash_count)</div><div class="line">{</div><div class="line">    <a class="code" href="group___c_m_s_i_s__core__base.xhtml#gacd96c53beeaff8f603fcda425eb295de">SysTick</a>-&gt;CTRL = <a class="code" href="group___c_m_s_i_s___sys_tick.xhtml#ga16c9fee0ed0235524bdeb38af328fd1f">SysTick_CTRL_ENABLE_Msk</a>;</div><div class="line">    <a class="code" href="group___c_m_s_i_s__core__base.xhtml#gacd96c53beeaff8f603fcda425eb295de">SysTick</a>-&gt;LOAD = tick_count;</div><div class="line"></div><div class="line">    <span class="keywordflow">while</span> (flash_count--)</div><div class="line">    {</div><div class="line">        gpio_toggle_pin(<a class="code" href="group__samg55__xplained__pro__features__group.xhtml#gab6dc1ebd13b429afb03cfc49728cc896">LED0_GPIO</a>);</div><div class="line">        <span class="keywordflow">while</span> (!(<a class="code" href="group___c_m_s_i_s__core__base.xhtml#gacd96c53beeaff8f603fcda425eb295de">SysTick</a>-&gt;CTRL &amp; <a class="code" href="group___c_m_s_i_s___sys_tick.xhtml#ga1bf3033ecccf200f59baefe15dbb367c">SysTick_CTRL_COUNTFLAG_Msk</a>));</div><div class="line">        gpio_toggle_pin(<a class="code" href="group__samg55__xplained__pro__features__group.xhtml#gab6dc1ebd13b429afb03cfc49728cc896">LED0_GPIO</a>);</div><div class="line">        <span class="keywordflow">while</span> (!(<a class="code" href="group___c_m_s_i_s__core__base.xhtml#gacd96c53beeaff8f603fcda425eb295de">SysTick</a>-&gt;CTRL &amp; <a class="code" href="group___c_m_s_i_s___sys_tick.xhtml#ga1bf3033ecccf200f59baefe15dbb367c">SysTick_CTRL_COUNTFLAG_Msk</a>));</div><div class="line">    }</div><div class="line">}</div></div><!-- fragment --><h1><a class="anchor" id="pmc_basic_use_case_usage"></a>
Use case</h1>
<h2><a class="anchor" id="pmc_basic_use_case_usage_code"></a>
Example code</h2>
<p>Add to application C-file: </p><div class="fragment"><div class="line"><span class="keywordflow">for</span> (;;)</div><div class="line">{</div><div class="line">    <a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(CKGR_MOR_MOSCRCF_12_MHz);</div><div class="line">    flash_led(FLASH_TICK_COUNT, 5);</div><div class="line">    <a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(<a class="code" href="group___s_a_m_g55___p_m_c.xhtml#ga1f689250243e92d6e635f265e6ff1951">CKGR_MOR_MOSCRCF_8_MHz</a>);</div><div class="line">    flash_led(FLASH_TICK_COUNT, 5);</div><div class="line">    <a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(CKGR_MOR_MOSCRCF_4_MHz);</div><div class="line">    flash_led(FLASH_TICK_COUNT, 5);</div><div class="line">    <a class="code" href="group__sam__drivers__pmc__group.xhtml#ga14a6910f902d5838ac1efdb29d933c45">pmc_switch_mainck_to_xtal</a>(0);</div><div class="line">    flash_led(FLASH_TICK_COUNT, 5);</div><div class="line">}</div></div><!-- fragment --><h2><a class="anchor" id="pmc_basic_use_case_usage_flow"></a>
Workflow</h2>
<ol type="1">
<li>Wrap the code in an infinite loop: <div class="fragment"><div class="line"><span class="keywordflow">for</span> (;;)</div></div><!-- fragment --></li>
<li>Switch the Master CPU frequency to the internal 12MHz RC oscillator, flash a LED on the board several times: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(CKGR_MOR_MOSCRCF_12_MHz);</div><div class="line">flash_led(FLASH_TICK_COUNT, 5);</div></div><!-- fragment --></li>
<li>Switch the Master CPU frequency to the internal 8MHz RC oscillator, flash a LED on the board several times: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(<a class="code" href="group___s_a_m_g55___p_m_c.xhtml#ga1f689250243e92d6e635f265e6ff1951">CKGR_MOR_MOSCRCF_8_MHz</a>);</div><div class="line">flash_led(FLASH_TICK_COUNT, 5);</div></div><!-- fragment --></li>
<li>Switch the Master CPU frequency to the internal 4MHz RC oscillator, flash a LED on the board several times: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a>(CKGR_MOR_MOSCRCF_4_MHz);</div><div class="line">flash_led(FLASH_TICK_COUNT, 5);</div></div><!-- fragment --></li>
<li>Switch the Master CPU frequency to the external crystal oscillator, flash a LED on the board several times: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga14a6910f902d5838ac1efdb29d933c45">pmc_switch_mainck_to_xtal</a>(0, <a class="code" href="group__samg55__xplained__pro__features__group.xhtml#ga72c1c5d05c0eee527f680ead3d7c3f09">BOARD_OSC_STARTUP_US</a>);</div><div class="line">flash_led(FLASH_TICK_COUNT, 5);</div></div><!-- fragment --></li>
</ol>
<h1><a class="anchor" id="pmc_use_case_2"></a>
Use case #2 - Configure Programmable Clocks</h1>
<p>In this use case, the PMC module is configured to start the Slow Clock from an attached 32KHz crystal, and start one of the Programmable Clock modules sourced from the Slow Clock divided down with a prescale factor of 64.</p>
<h1><a class="anchor" id="pmc_use_case_2_setup"></a>
Setup</h1>
<h2><a class="anchor" id="pmc_use_case_2_setup_prereq"></a>
Prerequisites</h2>
<ol type="1">
<li>Parallel Input/Output Controller (pio)</li>
</ol>
<h2><a class="anchor" id="pmc_use_case_2_setup_code"></a>
Code</h2>
<p>The following code must be added to the user application: </p><div class="fragment"><div class="line">pio_set_peripheral(<a class="code" href="group___s_a_m_g55_g18__base.xhtml#ga1692c0510a8ab56be133b9693ec14267">PIOA</a>, PIO_PERIPH_B, <a class="code" href="pio_2samg55g18_8h.xhtml#aeb58a6e8b1f949b134684df3a71ec371">PIO_PA17</a>);</div></div><!-- fragment --><h2><a class="anchor" id="pmc_use_case_2_setup_code_workflow"></a>
Workflow</h2>
<ol type="1">
<li>Configure the PCK1 pin to output on a specific port pin (in this case, PIOA pin 17) of the microcontroller. <div class="fragment"><div class="line">pio_set_peripheral(<a class="code" href="group___s_a_m_g55_g18__base.xhtml#ga1692c0510a8ab56be133b9693ec14267">PIOA</a>, PIO_PERIPH_B, <a class="code" href="pio_2samg55g18_8h.xhtml#aeb58a6e8b1f949b134684df3a71ec371">PIO_PA17</a>);</div></div><!-- fragment --> <dl class="section note"><dt>Note</dt><dd>The peripheral selection and pin will vary according to your selected SAM device model. Refer to the "Peripheral Signal Multiplexing on I/O
         Lines" of your device's datasheet.</dd></dl>
</li>
</ol>
<h1><a class="anchor" id="pmc_use_case_2_usage"></a>
Use case</h1>
<p>The generated PCK1 clock output can be viewed on an oscilloscope attached to the correct pin of the microcontroller.</p>
<h2><a class="anchor" id="pmc_use_case_2_usage_code"></a>
Example code</h2>
<p>Add to application C-file: </p><div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#gaf0bfe7345422ac59a95b4df85ed5c140">pmc_switch_sclk_to_32kxtal</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#af580741e8e1b9fc3766ab25b105feccf">PMC_OSC_XTAL</a>);</div><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#gae9749eb62855eb66f55f43758bb9f219">pmc_switch_pck_to_sclk</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#a375e131fa6959bcf1322d11c0804d053">PMC_PCK_1</a>, <a class="code" href="group___s_a_m_g55___p_m_c.xhtml#ga463d8a0aaf69b933e114599799b4fda4">PMC_PCK_PRES_CLK_64</a>);</div><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga1c092ebde01d9748165bf3f556d82a57">pmc_enable_pck</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#a375e131fa6959bcf1322d11c0804d053">PMC_PCK_1</a>);</div><div class="line"></div><div class="line"><span class="keywordflow">for</span> (;;)</div><div class="line">{</div><div class="line">    <span class="comment">// Do Nothing</span></div><div class="line">}</div></div><!-- fragment --><h2><a class="anchor" id="pmc_use_case_2_usage_flow"></a>
Workflow</h2>
<ol type="1">
<li>Switch the Slow Clock source input to an external 32KHz crystal: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#gaf0bfe7345422ac59a95b4df85ed5c140">pmc_switch_sclk_to_32kxtal</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#af580741e8e1b9fc3766ab25b105feccf">PMC_OSC_XTAL</a>);</div></div><!-- fragment --></li>
<li>Switch the Programmable Clock module PCK1 source clock to the Slow Clock, with a prescaler of 64: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#gae9749eb62855eb66f55f43758bb9f219">pmc_switch_pck_to_sclk</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#a375e131fa6959bcf1322d11c0804d053">PMC_PCK_1</a>, <a class="code" href="group___s_a_m_g55___p_m_c.xhtml#ga463d8a0aaf69b933e114599799b4fda4">PMC_PCK_PRES_CLK_64</a>);</div></div><!-- fragment --></li>
<li>Enable Programmable Clock module PCK1: <div class="fragment"><div class="line"><a class="code" href="group__sam__drivers__pmc__group.xhtml#ga1c092ebde01d9748165bf3f556d82a57">pmc_enable_pck</a>(<a class="code" href="drivers_2pmc_2pmc_8h.xhtml#a375e131fa6959bcf1322d11c0804d053">PMC_PCK_1</a>);</div></div><!-- fragment --></li>
<li>Enter an infinite loop: <div class="fragment"><div class="line"><span class="keywordflow">for</span> (;;)</div><div class="line">{</div><div class="line">   <span class="comment">// Do Nothing</span></div><div class="line">}</div></div><!-- fragment --> </li>
</ol>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
