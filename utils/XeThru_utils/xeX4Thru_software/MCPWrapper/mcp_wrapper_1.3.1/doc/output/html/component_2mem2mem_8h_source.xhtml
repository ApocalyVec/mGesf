<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: examples/atmel_samg55/src/ASF/sam/utils/cmsis/samg/samg55/include/component/mem2mem.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="dir_0e96b936377161858012b6f31c3bd790.xhtml">atmel_samg55</a></li><li class="navelem"><a class="el" href="dir_0ae219bfaa679f3dbaaacda5fb614d9c.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_67951177d7f5e66661a526635115739c.xhtml">ASF</a></li><li class="navelem"><a class="el" href="dir_48be2503ae6ae6de0698f11fb632640c.xhtml">sam</a></li><li class="navelem"><a class="el" href="dir_7f529e4fc6ea7f44596b5de9bf0437d9.xhtml">utils</a></li><li class="navelem"><a class="el" href="dir_ac7f1bd40a4e1acdd23b3d2004ea04d6.xhtml">cmsis</a></li><li class="navelem"><a class="el" href="dir_e52153a309e79ea7ef542584943148af.xhtml">samg</a></li><li class="navelem"><a class="el" href="dir_295dc956b22fd3b5130153261f8e1cfd.xhtml">samg55</a></li><li class="navelem"><a class="el" href="dir_0cbb778e238e84dc6f6e8469495480cc.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_6b2c1e3aae921ca15ccf6ff784661eea.xhtml">component</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mem2mem.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="component_2mem2mem_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"> * Support and FAQ: visit &lt;a href=&quot;http://www.atmel.com/design-support/&quot;&gt;Atmel Support&lt;/a&gt;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#ifndef _SAMG55_MEM2MEM_COMPONENT_</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#define _SAMG55_MEM2MEM_COMPONENT_</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">/* ============================================================================= */</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">/* ============================================================================= */</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if !(defined(__ASSEMBLY__) || defined(__IAR_SYSTEMS_ASM__))</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml">   56</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a966a7af0089500081c6ebb438b49b903">   57</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a966a7af0089500081c6ebb438b49b903">MEM2MEM_THR</a>;   </div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a1ed32c26d04096d15f4a60423c8134df">   58</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a1ed32c26d04096d15f4a60423c8134df">MEM2MEM_MR</a>;    </div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a84025cc2d1fc516d9c5670a79ff04d44">   59</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a84025cc2d1fc516d9c5670a79ff04d44">MEM2MEM_IER</a>;   </div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a4f478317d8ede8dd689281a71dc2194b">   60</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a4f478317d8ede8dd689281a71dc2194b">MEM2MEM_IDR</a>;   </div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a42f835758ca19c2968ba31f11d65cd37">   61</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a42f835758ca19c2968ba31f11d65cd37">MEM2MEM_IMR</a>;   </div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a7dc45404e318c8963d06b986644b4d30">   62</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a7dc45404e318c8963d06b986644b4d30">MEM2MEM_ISR</a>;   </div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a53572952776aea6127af32ec1e620d56">   63</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a>  uint32_t Reserved1[58];</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a6857b872176d5534c4109180d42450ed">   64</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a6857b872176d5534c4109180d42450ed">MEM2MEM_RPR</a>;   </div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a52e57e44d2e64667ada11214f699932d">   65</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a52e57e44d2e64667ada11214f699932d">MEM2MEM_RCR</a>;   </div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#aa9fae6a670c593e2f9bac9485ff9dc5b">   66</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#aa9fae6a670c593e2f9bac9485ff9dc5b">MEM2MEM_TPR</a>;   </div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#abc4581bc1cf28ee5ad4a1b0eac633006">   67</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#abc4581bc1cf28ee5ad4a1b0eac633006">MEM2MEM_TCR</a>;   </div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a521315cb82a0b257a34f12b9e3b8f580">   68</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a521315cb82a0b257a34f12b9e3b8f580">MEM2MEM_RNPR</a>;  </div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a2e4706a8d550ce64c60a2ee050cc6e5d">   69</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a2e4706a8d550ce64c60a2ee050cc6e5d">MEM2MEM_RNCR</a>;  </div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a5f3bfae9b4b170e250bb297862c6ca66">   70</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a5f3bfae9b4b170e250bb297862c6ca66">MEM2MEM_TNPR</a>;  </div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a37d1457b65b9cd5f9c913e5751a31cd5">   71</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t <a class="code" href="struct_mem2mem.xhtml#a37d1457b65b9cd5f9c913e5751a31cd5">MEM2MEM_TNCR</a>;  </div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a0efd98b13597b2ad9b0741cf9bb36b0e">   72</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a0efd98b13597b2ad9b0741cf9bb36b0e">MEM2MEM_PTCR</a>;  </div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="struct_mem2mem.xhtml#a3a3a96202393dc0bf705a9fad71c78bc">   73</a></span>&#160;  <a class="code" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a>  uint32_t <a class="code" href="struct_mem2mem.xhtml#a3a3a96202393dc0bf705a9fad71c78bc">MEM2MEM_PTSR</a>;  </div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;} <a class="code" href="struct_mem2mem.xhtml">Mem2mem</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* !(defined(__ASSEMBLY__) || defined(__IAR_SYSTEMS_ASM__)) */</span><span class="preprocessor"></span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">/* -------- MEM2MEM_THR : (MEM2MEM Offset: 0x00) Memory to Memory Transfer Holding Register -------- */</span></div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga1cb6f99dbbf2f2c432b513ae75be0141">   77</a></span>&#160;<span class="preprocessor">#define MEM2MEM_THR_THDATA_Pos 0</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga7d63d552f31463069e287be34f6f2c86">   78</a></span>&#160;<span class="preprocessor">#define MEM2MEM_THR_THDATA_Msk (0xffffffffu &lt;&lt; MEM2MEM_THR_THDATA_Pos) </span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga0378c113549b8915c273830030789ac1">   79</a></span>&#160;<span class="preprocessor">#define MEM2MEM_THR_THDATA(value) ((MEM2MEM_THR_THDATA_Msk &amp; ((value) &lt;&lt; MEM2MEM_THR_THDATA_Pos)))</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">/* -------- MEM2MEM_MR : (MEM2MEM Offset: 0x04) Memory to Memory Mode Register -------- */</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga0dd36481d5c0544ef95b0a94a722ff91">   81</a></span>&#160;<span class="preprocessor">#define MEM2MEM_MR_TSIZE_Pos 0</span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gaa489729443a2b34aece73e660c08ffdd">   82</a></span>&#160;<span class="preprocessor">#define MEM2MEM_MR_TSIZE_Msk (0x3u &lt;&lt; MEM2MEM_MR_TSIZE_Pos) </span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga6a88e49f47b4772f2ba65afd1d5bea77">   83</a></span>&#160;<span class="preprocessor">#define   MEM2MEM_MR_TSIZE_T_8BIT (0x0u &lt;&lt; 0) </span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga62497c096a9c8ebbbee2ffd6025ea4d7">   84</a></span>&#160;<span class="preprocessor">#define   MEM2MEM_MR_TSIZE_T_16BIT (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga03d7c824c0572960627af2eb6b92586a">   85</a></span>&#160;<span class="preprocessor">#define   MEM2MEM_MR_TSIZE_T_32BIT (0x2u &lt;&lt; 0) </span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_IER : (MEM2MEM Offset: 0x08) Memory to Memory Interrupt Enable Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gaa75f61afcb2d8b844a1e8f6ada878693">   87</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IER_RXEND (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga68cccb61cba39172feedbdbeac978efb">   88</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IER_RXBUFF (0x1u &lt;&lt; 1) </span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_IDR : (MEM2MEM Offset: 0x0C) Memory to Memory Interrupt Disable Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5ef984f0e31f89fcb8236c7255e4eac9">   90</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IDR_RXEND (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga694fa4ee18bdeb736c37e2e5b01099b0">   91</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IDR_RXBUFF (0x1u &lt;&lt; 1) </span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_IMR : (MEM2MEM Offset: 0x10) Memory to Memory Interrupt Mask Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga0e16c1e8deee16928cc0da6feeaa5bf7">   93</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IMR_RXEND (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga2fd1f65293177a4b4fd4748d8317c922">   94</a></span>&#160;<span class="preprocessor">#define MEM2MEM_IMR_RXBUFF (0x1u &lt;&lt; 1) </span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_ISR : (MEM2MEM Offset: 0x14) Memory to Memory Interrupt Status Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gabfe4b768868496d5158a1b70fff531a2">   96</a></span>&#160;<span class="preprocessor">#define MEM2MEM_ISR_RXEND (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gafb0fdb6aac39243d137b04a28c1dbcd5">   97</a></span>&#160;<span class="preprocessor">#define MEM2MEM_ISR_RXBUFF (0x1u &lt;&lt; 1) </span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_RPR : (MEM2MEM Offset: 0x100) Receive Pointer Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gacd3a4d687cbf9a655c53f2c47147d8b7">   99</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RPR_RXPTR_Pos 0</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5f726577050b62afb7c601e1fbcf4553">  100</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RPR_RXPTR_Msk (0xffffffffu &lt;&lt; MEM2MEM_RPR_RXPTR_Pos) </span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gaa9213355f1341d0ee2355f0607f8d8ff">  101</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RPR_RXPTR(value) ((MEM2MEM_RPR_RXPTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_RPR_RXPTR_Pos)))</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">/* -------- MEM2MEM_RCR : (MEM2MEM Offset: 0x104) Receive Counter Register -------- */</span></div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gaed41b28f5526a323c4c13ca6e2e8da96">  103</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RCR_RXCTR_Pos 0</span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga80cef54cdff32bb0b61bb5ae37605850">  104</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RCR_RXCTR_Msk (0xffffu &lt;&lt; MEM2MEM_RCR_RXCTR_Pos) </span></div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga68b391242ef65a4ceccb574d84a76e35">  105</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RCR_RXCTR(value) ((MEM2MEM_RCR_RXCTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_RCR_RXCTR_Pos)))</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">/* -------- MEM2MEM_TPR : (MEM2MEM Offset: 0x108) Transmit Pointer Register -------- */</span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga9ccdd04d2dd4345934ccc291fbc03eda">  107</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TPR_TXPTR_Pos 0</span></div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga601527a65bfd53e6565068a87712f89c">  108</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TPR_TXPTR_Msk (0xffffffffu &lt;&lt; MEM2MEM_TPR_TXPTR_Pos) </span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga0e3cbcedcc5ef5e059997153dfaaf702">  109</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TPR_TXPTR(value) ((MEM2MEM_TPR_TXPTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_TPR_TXPTR_Pos)))</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">/* -------- MEM2MEM_TCR : (MEM2MEM Offset: 0x10C) Transmit Counter Register -------- */</span></div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga41c5be391f7831bdd96be50f94d5c809">  111</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TCR_TXCTR_Pos 0</span></div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gab87e908f2fd997a5504e372d82b622ad">  112</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TCR_TXCTR_Msk (0xffffu &lt;&lt; MEM2MEM_TCR_TXCTR_Pos) </span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gad8373c9b9be7ad6204252a053357ff2f">  113</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TCR_TXCTR(value) ((MEM2MEM_TCR_TXCTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_TCR_TXCTR_Pos)))</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">/* -------- MEM2MEM_RNPR : (MEM2MEM Offset: 0x110) Receive Next Pointer Register -------- */</span></div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5befd70b3d46d57cd3e8b459c9ae675b">  115</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNPR_RXNPTR_Pos 0</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga7ac103b2bd276f40b3f18063d70d00dc">  116</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNPR_RXNPTR_Msk (0xffffffffu &lt;&lt; MEM2MEM_RNPR_RXNPTR_Pos) </span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga40b30a4da42c7c1fd0ed40eb6d24d166">  117</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNPR_RXNPTR(value) ((MEM2MEM_RNPR_RXNPTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_RNPR_RXNPTR_Pos)))</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">/* -------- MEM2MEM_RNCR : (MEM2MEM Offset: 0x114) Receive Next Counter Register -------- */</span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga9ff523b3b6792108e637335e7cb50bf1">  119</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNCR_RXNCTR_Pos 0</span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga0cef1110b5513a652cee6a2c46b32b92">  120</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNCR_RXNCTR_Msk (0xffffu &lt;&lt; MEM2MEM_RNCR_RXNCTR_Pos) </span></div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga6678fb36e7c39f07771c2b4a79a98bc7">  121</a></span>&#160;<span class="preprocessor">#define MEM2MEM_RNCR_RXNCTR(value) ((MEM2MEM_RNCR_RXNCTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_RNCR_RXNCTR_Pos)))</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">/* -------- MEM2MEM_TNPR : (MEM2MEM Offset: 0x118) Transmit Next Pointer Register -------- */</span></div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga516a99594967aa9fd68cd9b6abd4a13d">  123</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNPR_TXNPTR_Pos 0</span></div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gaa514d1a8460b9e62f1964ae5c24f99ce">  124</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNPR_TXNPTR_Msk (0xffffffffu &lt;&lt; MEM2MEM_TNPR_TXNPTR_Pos) </span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gae5e96891a9aaa6a4a150be08b0e41301">  125</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNPR_TXNPTR(value) ((MEM2MEM_TNPR_TXNPTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_TNPR_TXNPTR_Pos)))</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">/* -------- MEM2MEM_TNCR : (MEM2MEM Offset: 0x11C) Transmit Next Counter Register -------- */</span></div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5957a041ac308181c745b7c2f7a65c8b">  127</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNCR_TXNCTR_Pos 0</span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga7cce15060efb453498388260cc06fb32">  128</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNCR_TXNCTR_Msk (0xffffu &lt;&lt; MEM2MEM_TNCR_TXNCTR_Pos) </span></div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gab17d13b05b535892d7a620533d092322">  129</a></span>&#160;<span class="preprocessor">#define MEM2MEM_TNCR_TXNCTR(value) ((MEM2MEM_TNCR_TXNCTR_Msk &amp; ((value) &lt;&lt; MEM2MEM_TNCR_TXNCTR_Pos)))</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">/* -------- MEM2MEM_PTCR : (MEM2MEM Offset: 0x120) Transfer Control Register -------- */</span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gae30fb1df0fa2b260d1b2efa90d7167e6">  131</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_RXTEN (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gab461fb9f88d3a7aebdbd65a2fba44dd2">  132</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_RXTDIS (0x1u &lt;&lt; 1) </span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gae5ad6e155fcde3b6a7e0a61b53b2fd4e">  133</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_TXTEN (0x1u &lt;&lt; 8) </span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga4bd96cbd4c2c6a1114125394bfa5df39">  134</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_TXTDIS (0x1u &lt;&lt; 9) </span></div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5443bc9209071f49f4222af5ced3f13a">  135</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_RXCBEN (0x1u &lt;&lt; 16) </span></div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga314f45266d8f376a7b2f29bd46272efa">  136</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_RXCBDIS (0x1u &lt;&lt; 17) </span></div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5be375be3bfd1dc0707d7c457fbbae60">  137</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_TXCBEN (0x1u &lt;&lt; 18) </span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gac6a0cab8a6d5a0b149b333a28001f855">  138</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_TXCBDIS (0x1u &lt;&lt; 19) </span></div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga5615fb792aca614604b067c00c365476">  139</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTCR_ERRCLR (0x1u &lt;&lt; 24) </span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor"></span><span class="comment">/* -------- MEM2MEM_PTSR : (MEM2MEM Offset: 0x124) Transfer Status Register -------- */</span><span class="preprocessor"></span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gadf943a54a21873883505edde1a5df6ae">  141</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTSR_RXTEN (0x1u &lt;&lt; 0) </span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga01faf9d626c88a25c2eed97ce7527ddd">  142</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTSR_TXTEN (0x1u &lt;&lt; 8) </span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga8a07b192e549b16449e6509d9d27cdbe">  143</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTSR_RXCBEN (0x1u &lt;&lt; 16) </span></div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#ga1cab9559b9c580420600738024a41403">  144</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTSR_TXCBEN (0x1u &lt;&lt; 18) </span></div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml#gadaafafb749519205077c945fa9620d89">  145</a></span>&#160;<span class="preprocessor">#define MEM2MEM_PTSR_ERR (0x1u &lt;&lt; 24) </span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* _SAMG55_MEM2MEM_COMPONENT_ */</span><span class="preprocessor"></span></div><div class="ttc" id="struct_mem2mem_xhtml_a84025cc2d1fc516d9c5670a79ff04d44"><div class="ttname"><a href="struct_mem2mem.xhtml#a84025cc2d1fc516d9c5670a79ff04d44">Mem2mem::MEM2MEM_IER</a></div><div class="ttdeci">__O uint32_t MEM2MEM_IER</div><div class="ttdoc">(Mem2mem Offset: 0x08) Memory to Memory Interrupt Enable Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:59</div></div>
<div class="ttc" id="core__cm4_8h_xhtml_a7e25d9380f9ef903923964322e71f2f6"><div class="ttname"><a href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a></div><div class="ttdeci">#define __O</div><div class="ttdef"><b>Definition:</b> core_cm4.h:248</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a6857b872176d5534c4109180d42450ed"><div class="ttname"><a href="struct_mem2mem.xhtml#a6857b872176d5534c4109180d42450ed">Mem2mem::MEM2MEM_RPR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_RPR</div><div class="ttdoc">(Mem2mem Offset: 0x100) Receive Pointer Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:64</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a1ed32c26d04096d15f4a60423c8134df"><div class="ttname"><a href="struct_mem2mem.xhtml#a1ed32c26d04096d15f4a60423c8134df">Mem2mem::MEM2MEM_MR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_MR</div><div class="ttdoc">(Mem2mem Offset: 0x04) Memory to Memory Mode Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:58</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a42f835758ca19c2968ba31f11d65cd37"><div class="ttname"><a href="struct_mem2mem.xhtml#a42f835758ca19c2968ba31f11d65cd37">Mem2mem::MEM2MEM_IMR</a></div><div class="ttdeci">__I uint32_t MEM2MEM_IMR</div><div class="ttdoc">(Mem2mem Offset: 0x10) Memory to Memory Interrupt Mask Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:61</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_abc4581bc1cf28ee5ad4a1b0eac633006"><div class="ttname"><a href="struct_mem2mem.xhtml#abc4581bc1cf28ee5ad4a1b0eac633006">Mem2mem::MEM2MEM_TCR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_TCR</div><div class="ttdoc">(Mem2mem Offset: 0x10C) Transmit Counter Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:67</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a4f478317d8ede8dd689281a71dc2194b"><div class="ttname"><a href="struct_mem2mem.xhtml#a4f478317d8ede8dd689281a71dc2194b">Mem2mem::MEM2MEM_IDR</a></div><div class="ttdeci">__O uint32_t MEM2MEM_IDR</div><div class="ttdoc">(Mem2mem Offset: 0x0C) Memory to Memory Interrupt Disable Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:60</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a966a7af0089500081c6ebb438b49b903"><div class="ttname"><a href="struct_mem2mem.xhtml#a966a7af0089500081c6ebb438b49b903">Mem2mem::MEM2MEM_THR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_THR</div><div class="ttdoc">(Mem2mem Offset: 0x00) Memory to Memory Transfer Holding Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:57</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a7dc45404e318c8963d06b986644b4d30"><div class="ttname"><a href="struct_mem2mem.xhtml#a7dc45404e318c8963d06b986644b4d30">Mem2mem::MEM2MEM_ISR</a></div><div class="ttdeci">__I uint32_t MEM2MEM_ISR</div><div class="ttdoc">(Mem2mem Offset: 0x14) Memory to Memory Interrupt Status Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:62</div></div>
<div class="ttc" id="struct_mem2mem_xhtml"><div class="ttname"><a href="struct_mem2mem.xhtml">Mem2mem</a></div><div class="ttdoc">Mem2mem hardware registers. </div><div class="ttdef"><b>Definition:</b> mem2mem.h:56</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a5f3bfae9b4b170e250bb297862c6ca66"><div class="ttname"><a href="struct_mem2mem.xhtml#a5f3bfae9b4b170e250bb297862c6ca66">Mem2mem::MEM2MEM_TNPR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_TNPR</div><div class="ttdoc">(Mem2mem Offset: 0x118) Transmit Next Pointer Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:70</div></div>
<div class="ttc" id="core__cm4_8h_xhtml_aec43007d9998a0a0e01faede4133d6be"><div class="ttname"><a href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a></div><div class="ttdeci">#define __IO</div><div class="ttdef"><b>Definition:</b> core_cm4.h:249</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a52e57e44d2e64667ada11214f699932d"><div class="ttname"><a href="struct_mem2mem.xhtml#a52e57e44d2e64667ada11214f699932d">Mem2mem::MEM2MEM_RCR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_RCR</div><div class="ttdoc">(Mem2mem Offset: 0x104) Receive Counter Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:65</div></div>
<div class="ttc" id="core__cm4_8h_xhtml_af63697ed9952cc71e1225efe205f6cd3"><div class="ttname"><a href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a></div><div class="ttdeci">#define __I</div><div class="ttdef"><b>Definition:</b> core_cm4.h:246</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a37d1457b65b9cd5f9c913e5751a31cd5"><div class="ttname"><a href="struct_mem2mem.xhtml#a37d1457b65b9cd5f9c913e5751a31cd5">Mem2mem::MEM2MEM_TNCR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_TNCR</div><div class="ttdoc">(Mem2mem Offset: 0x11C) Transmit Next Counter Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:71</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a3a3a96202393dc0bf705a9fad71c78bc"><div class="ttname"><a href="struct_mem2mem.xhtml#a3a3a96202393dc0bf705a9fad71c78bc">Mem2mem::MEM2MEM_PTSR</a></div><div class="ttdeci">__I uint32_t MEM2MEM_PTSR</div><div class="ttdoc">(Mem2mem Offset: 0x124) Transfer Status Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:73</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a521315cb82a0b257a34f12b9e3b8f580"><div class="ttname"><a href="struct_mem2mem.xhtml#a521315cb82a0b257a34f12b9e3b8f580">Mem2mem::MEM2MEM_RNPR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_RNPR</div><div class="ttdoc">(Mem2mem Offset: 0x110) Receive Next Pointer Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:68</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a2e4706a8d550ce64c60a2ee050cc6e5d"><div class="ttname"><a href="struct_mem2mem.xhtml#a2e4706a8d550ce64c60a2ee050cc6e5d">Mem2mem::MEM2MEM_RNCR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_RNCR</div><div class="ttdoc">(Mem2mem Offset: 0x114) Receive Next Counter Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:69</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_aa9fae6a670c593e2f9bac9485ff9dc5b"><div class="ttname"><a href="struct_mem2mem.xhtml#aa9fae6a670c593e2f9bac9485ff9dc5b">Mem2mem::MEM2MEM_TPR</a></div><div class="ttdeci">__IO uint32_t MEM2MEM_TPR</div><div class="ttdoc">(Mem2mem Offset: 0x108) Transmit Pointer Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:66</div></div>
<div class="ttc" id="struct_mem2mem_xhtml_a0efd98b13597b2ad9b0741cf9bb36b0e"><div class="ttname"><a href="struct_mem2mem.xhtml#a0efd98b13597b2ad9b0741cf9bb36b0e">Mem2mem::MEM2MEM_PTCR</a></div><div class="ttdeci">__O uint32_t MEM2MEM_PTCR</div><div class="ttdoc">(Mem2mem Offset: 0x120) Transfer Control Register </div><div class="ttdef"><b>Definition:</b> mem2mem.h:72</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
