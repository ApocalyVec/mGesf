<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: src/mcp/protocol_parser.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_ce4c810be13e606bdd57650e1ea2a14c.xhtml">mcp</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">protocol_parser.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdint.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for protocol_parser.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__parser_8h__incl.svg" width="184" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__parser_8h__dep__incl.svg" width="184" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<p><a href="protocol__parser_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mcp_parser__t.xhtml">McpParser_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aea9979cb4107792dfa09eb8b22365c0a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aea9979cb4107792dfa09eb8b22365c0a">McpPingCallback</a>) (uint32_t pongval, void *user_data)</td></tr>
<tr class="separator:aea9979cb4107792dfa09eb8b22365c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f8659427251e22b75dad2bef35ce23"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a67f8659427251e22b75dad2bef35ce23">McpStartBootloaderCallback</a>) (uint32_t key, void *user_data)</td></tr>
<tr class="separator:a67f8659427251e22b75dad2bef35ce23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c74a4e851b45b9018f7bd598c1ee304"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a7c74a4e851b45b9018f7bd598c1ee304">McpSetLedControlCallback</a>) (uint8_t mode, uint8_t intensity, void *user_data)</td></tr>
<tr class="separator:a7c74a4e851b45b9018f7bd598c1ee304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5daa4cba7515edf86af59651f1e4530a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a5daa4cba7515edf86af59651f1e4530a">McpModuleResetCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a5daa4cba7515edf86af59651f1e4530a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20db52c22c56e55e65749af5a276415d"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a20db52c22c56e55e65749af5a276415d">McpResetToFactoryPresetCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a20db52c22c56e55e65749af5a276415d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedb398efe8b01a94de931f573a8df15a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aedb398efe8b01a94de931f573a8df15a">McpSystemRunTestCallback</a>) (uint8_t testcode, void *user_data)</td></tr>
<tr class="separator:aedb398efe8b01a94de931f573a8df15a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab68117e62fd5d76cadfc6f24bc594b7d"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ab68117e62fd5d76cadfc6f24bc594b7d">McpGetSystemInfoCallback</a>) (uint32_t contentid, uint8_t infocode, void *user_data)</td></tr>
<tr class="separator:ab68117e62fd5d76cadfc6f24bc594b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a232facee8cec32c80d0c596e7128908b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a232facee8cec32c80d0c596e7128908b">McpSetDebugLevelCallback</a>) (uint8_t debug_level, void *user_data)</td></tr>
<tr class="separator:a232facee8cec32c80d0c596e7128908b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a1441e189a5473318a33d038244b9f"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ae5a1441e189a5473318a33d038244b9f">McpGetSystemDebugDataCallback</a>) (uint32_t contentid, uint8_t infocode, void *user_data)</td></tr>
<tr class="separator:ae5a1441e189a5473318a33d038244b9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acffd2aa9483a1fa8632d84420f1de13b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#acffd2aa9483a1fa8632d84420f1de13b">McpSetSensorModeCallback</a>) (uint8_t mode, uint8_t param, void *user_data)</td></tr>
<tr class="separator:acffd2aa9483a1fa8632d84420f1de13b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63dea2cec148c32423113f545a7d43c0"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a63dea2cec148c32423113f545a7d43c0">McpLoadProfileCallback</a>) (uint32_t profileid, void *user_data)</td></tr>
<tr class="separator:a63dea2cec148c32423113f545a7d43c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cfb668efe8f840d70c626b625b5fe5e"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a2cfb668efe8f840d70c626b625b5fe5e">McpProfileSetDetectionZoneCallback</a>) (float start, float end, void *user_data)</td></tr>
<tr class="separator:a2cfb668efe8f840d70c626b625b5fe5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55f648471571fc7600a318bbb591a229"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a55f648471571fc7600a318bbb591a229">McpProfileGetDetectionZoneCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a55f648471571fc7600a318bbb591a229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7af628c27246c3a0efaa85a99072f84f"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a7af628c27246c3a0efaa85a99072f84f">McpProfileGetDetectionZoneLimitsCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a7af628c27246c3a0efaa85a99072f84f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43422ff746bcc5fa1c4476810419a066"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a43422ff746bcc5fa1c4476810419a066">McpProfileSetSensitivityCallback</a>) (uint32_t sensitivity, void *user_data)</td></tr>
<tr class="separator:a43422ff746bcc5fa1c4476810419a066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f9401986965b347bd6c8e325736de90"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a3f9401986965b347bd6c8e325736de90">McpProfileSetParameterFileCallback</a>) (uint32_t filename_length, uint32_t data_length, const char *filename, const char *data, void *user_data)</td></tr>
<tr class="separator:a3f9401986965b347bd6c8e325736de90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4fddf15fe9970c324be3d8d87c9b0c3"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aa4fddf15fe9970c324be3d8d87c9b0c3">McpProfileGetParameterFileCallback</a>) (uint32_t filename_length, const char *filename, void *user_data)</td></tr>
<tr class="separator:aa4fddf15fe9970c324be3d8d87c9b0c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322c8e42f0fbbf743e8287ff000b769c"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a322c8e42f0fbbf743e8287ff000b769c">McpSetOutputControlCallback</a>) (uint32_t output_feature, uint32_t output_control, void *user_data)</td></tr>
<tr class="separator:a322c8e42f0fbbf743e8287ff000b769c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a4ba635564e8cd2bea9c808e9434210"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a2a4ba635564e8cd2bea9c808e9434210">McpSetNoisemapControlCallback</a>) (uint32_t noisemap_control, void *user_data)</td></tr>
<tr class="separator:a2a4ba635564e8cd2bea9c808e9434210"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a779e58d6e8b5bacbfe3d216ac9cd5d75"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a779e58d6e8b5bacbfe3d216ac9cd5d75">McpGetNoisemapControlCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a779e58d6e8b5bacbfe3d216ac9cd5d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae96e12eef00b0f9274a684e7fcd743a4"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ae96e12eef00b0f9274a684e7fcd743a4">McpSetIOPinControlCallback</a>) (uint32_t pin_id, uint32_t pin_setup, uint32_t pin_feature, void *user_data)</td></tr>
<tr class="separator:ae96e12eef00b0f9274a684e7fcd743a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4738d111d5b5944b37663b4f9210c44"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ae4738d111d5b5944b37663b4f9210c44">McpSetIOPinValueCallback</a>) (uint32_t pin_id, uint32_t pin_value, void *user_data)</td></tr>
<tr class="separator:ae4738d111d5b5944b37663b4f9210c44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee4a66e11a80fc60e6f5bab16adb5f73"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aee4a66e11a80fc60e6f5bab16adb5f73">McpGetIOPinValueCallback</a>) (uint32_t pin_id, void *user_data)</td></tr>
<tr class="separator:aee4a66e11a80fc60e6f5bab16adb5f73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b92d965e52b0fc1ee8da985e4b758d"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ac2b92d965e52b0fc1ee8da985e4b758d">McpX4DriverSetFpsCallback</a>) (float fps, void *user_data)</td></tr>
<tr class="separator:ac2b92d965e52b0fc1ee8da985e4b758d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04d41f365dab3f1321b9277df33e0fc8"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a04d41f365dab3f1321b9277df33e0fc8">McpX4DriverSetIterationsCallback</a>) (uint32_t iterations, void *user_data)</td></tr>
<tr class="separator:a04d41f365dab3f1321b9277df33e0fc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41c9f43ac9439132fb83ab299702e9b7"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a41c9f43ac9439132fb83ab299702e9b7">McpX4DriverSetPulsesPerStepCallback</a>) (uint32_t pps, void *user_data)</td></tr>
<tr class="separator:a41c9f43ac9439132fb83ab299702e9b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54c33a0df1c7bd0cf0dc91a1e961a859"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a54c33a0df1c7bd0cf0dc91a1e961a859">McpX4DriverSetDownconversionCallback</a>) (uint8_t downconversion, void *user_data)</td></tr>
<tr class="separator:a54c33a0df1c7bd0cf0dc91a1e961a859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2539b71cdb0ea2d61ec50e4b7efaa29"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ac2539b71cdb0ea2d61ec50e4b7efaa29">McpX4DriverSetFrameAreaCallback</a>) (float start, float end, void *user_data)</td></tr>
<tr class="separator:ac2539b71cdb0ea2d61ec50e4b7efaa29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa5dcd8e23826a38fcb59a2cfaee9c9e"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aaa5dcd8e23826a38fcb59a2cfaee9c9e">McpX4DriverInitCallback</a>) (void *user_data)</td></tr>
<tr class="separator:aaa5dcd8e23826a38fcb59a2cfaee9c9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3d5b34c35d8b4858353bdced3684b6a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ac3d5b34c35d8b4858353bdced3684b6a">McpX4DriverSetDacStepCallback</a>) (uint8_t dac_step, void *user_data)</td></tr>
<tr class="separator:ac3d5b34c35d8b4858353bdced3684b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c9caeea975d138c8f77e837952cbbd6"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a6c9caeea975d138c8f77e837952cbbd6">McpX4DriverSetDacMinCallback</a>) (uint32_t dac_min, void *user_data)</td></tr>
<tr class="separator:a6c9caeea975d138c8f77e837952cbbd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43d0089adf34ab25520e625c04cfad7e"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a43d0089adf34ab25520e625c04cfad7e">McpX4DriverSetDacMaxCallback</a>) (uint32_t dac_max, void *user_data)</td></tr>
<tr class="separator:a43d0089adf34ab25520e625c04cfad7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2642f4ec271d2c7e814371343483b608"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a2642f4ec271d2c7e814371343483b608">McpX4DriverSetFrameAreaOffsetCallback</a>) (float offset, void *user_data)</td></tr>
<tr class="separator:a2642f4ec271d2c7e814371343483b608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228db312090f9920bc556578ab1e0cd9"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a228db312090f9920bc556578ab1e0cd9">McpX4DriverSetEnableCallback</a>) (uint8_t enable, void *user_data)</td></tr>
<tr class="separator:a228db312090f9920bc556578ab1e0cd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e74c34c18cdacff3783d42b7e3a78d7"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a6e74c34c18cdacff3783d42b7e3a78d7">McpX4DriverSetTxCenterFrequencyCallback</a>) (uint8_t tx_center_frequency, void *user_data)</td></tr>
<tr class="separator:a6e74c34c18cdacff3783d42b7e3a78d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777109ef080f291a6106b6be2ef0bb7d"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a777109ef080f291a6106b6be2ef0bb7d">McpX4DriverSetTxPowerCallback</a>) (uint8_t tx_power, void *user_data)</td></tr>
<tr class="separator:a777109ef080f291a6106b6be2ef0bb7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26e6599a9fa3f55bc3d748451370046a"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a26e6599a9fa3f55bc3d748451370046a">McpX4DriverGetFpsCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a26e6599a9fa3f55bc3d748451370046a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ca205a4d84b2376f876c8e2855a6f05"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a0ca205a4d84b2376f876c8e2855a6f05">McpX4DriverSetSpiRegisterCallback</a>) (uint8_t address, uint8_t value, void *user_data)</td></tr>
<tr class="separator:a0ca205a4d84b2376f876c8e2855a6f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9695ab0e0f9679709edfb748d9b5a37b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a9695ab0e0f9679709edfb748d9b5a37b">McpX4DriverGetSpiRegisterCallback</a>) (uint8_t address, void *user_data)</td></tr>
<tr class="separator:a9695ab0e0f9679709edfb748d9b5a37b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a224e3bff8cbf524043d9fe024b6e40e2"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a224e3bff8cbf524043d9fe024b6e40e2">McpX4DriverWriteToSpiRegisterCallback</a>) (uint8_t address, const uint8_t *values, uint32_t length, void *user_data)</td></tr>
<tr class="separator:a224e3bff8cbf524043d9fe024b6e40e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab06a7a889e7897a21f29a28c43651075"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ab06a7a889e7897a21f29a28c43651075">McpX4DriverReadFromSpiRegisterCallback</a>) (uint8_t address, uint32_t length, void *user_data)</td></tr>
<tr class="separator:ab06a7a889e7897a21f29a28c43651075"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7fc5558d45263b56d63660afd907b8b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ad7fc5558d45263b56d63660afd907b8b">McpX4DriverSetPifRegisterCallback</a>) (uint8_t address, uint8_t value, void *user_data)</td></tr>
<tr class="separator:ad7fc5558d45263b56d63660afd907b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d7df0b630719254b5150ce953ebbaf9"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a0d7df0b630719254b5150ce953ebbaf9">McpX4DriverGetPifRegisterCallback</a>) (uint8_t address, void *user_data)</td></tr>
<tr class="separator:a0d7df0b630719254b5150ce953ebbaf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fb1910ae238bdf730e6c6a1b8932e9b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a5fb1910ae238bdf730e6c6a1b8932e9b">McpX4DriverSetXifRegisterCallback</a>) (uint8_t address, uint8_t value, void *user_data)</td></tr>
<tr class="separator:a5fb1910ae238bdf730e6c6a1b8932e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a677beb63daaded5f4ecfd8368c75155e"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a677beb63daaded5f4ecfd8368c75155e">McpX4DriverGetXifRegisterCallback</a>) (uint8_t address, void *user_data)</td></tr>
<tr class="separator:a677beb63daaded5f4ecfd8368c75155e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e82626e5d60a8a73849b1e8ae37d554"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a6e82626e5d60a8a73849b1e8ae37d554">McpX4DriverSetPrfDivCallback</a>) (uint8_t prf_div, void *user_data)</td></tr>
<tr class="separator:a6e82626e5d60a8a73849b1e8ae37d554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d8838456afac1d80adb5b4af9a6ec76"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a3d8838456afac1d80adb5b4af9a6ec76">McpX4DriverGetPrfDivCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a3d8838456afac1d80adb5b4af9a6ec76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae68dc80cba71209a11a99d277491b5fe"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ae68dc80cba71209a11a99d277491b5fe">McpX4DriverGetFrameAreaCallback</a>) (void *user_data)</td></tr>
<tr class="separator:ae68dc80cba71209a11a99d277491b5fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c4474fd2529d2e062e3781c8efb671"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a43c4474fd2529d2e062e3781c8efb671">McpX4DriverGetFrameAreaOffsetCallback</a>) (void *user_data)</td></tr>
<tr class="separator:a43c4474fd2529d2e062e3781c8efb671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42502a6860c1500e7d34c8a00b5eaa6b"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a42502a6860c1500e7d34c8a00b5eaa6b">McpSetBaudRateCallback</a>) (uint32_t, void *user_data)</td></tr>
<tr class="separator:a42502a6860c1500e7d34c8a00b5eaa6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab01ee03c46239b87229593fe415335c0"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#ab01ee03c46239b87229593fe415335c0">McpStoreNoiseMap</a>) (void *user_data)</td></tr>
<tr class="separator:ab01ee03c46239b87229593fe415335c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accfe9f426e17ebdab9502ea06db3b0a5"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#accfe9f426e17ebdab9502ea06db3b0a5">McpLoadNoiseMap</a>) (void *user_data)</td></tr>
<tr class="separator:accfe9f426e17ebdab9502ea06db3b0a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad8fd0ee319f0cb1364dfb7766a60a64"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#aad8fd0ee319f0cb1364dfb7766a60a64">McpGetProfileIdCallback</a>) (void *user_data)</td></tr>
<tr class="separator:aad8fd0ee319f0cb1364dfb7766a60a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05cc3d69bcb1b3c826c889df4754f739"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a05cc3d69bcb1b3c826c889df4754f739">McpUnknownCallback</a>) (const uint8_t *data, uint32_t length, void *user_data)</td></tr>
<tr class="separator:a05cc3d69bcb1b3c826c889df4754f739"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a46c65c001976702e9bb41ddc4fb0d643"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a46c65c001976702e9bb41ddc4fb0d643">getMcpParserInstanceSize</a> (void)</td></tr>
<tr class="separator:a46c65c001976702e9bb41ddc4fb0d643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aa0d9d6ad4327c0eed8e1b5a3cdd790"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_mcp_parser__t.xhtml">McpParser_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a7aa0d9d6ad4327c0eed8e1b5a3cdd790">createMcpParser</a> (void *user_data, void *instance_memory)</td></tr>
<tr class="separator:a7aa0d9d6ad4327c0eed8e1b5a3cdd790"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31a30ea82726e6da710922c96641248c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="protocol__parser_8h.xhtml#a31a30ea82726e6da710922c96641248c">mcpParseMessage</a> (<a class="el" href="struct_mcp_parser__t.xhtml">McpParser_t</a> *mcp_parser, const uint8_t *data, uint32_t length)</td></tr>
<tr class="separator:a31a30ea82726e6da710922c96641248c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aee4a66e11a80fc60e6f5bab16adb5f73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee4a66e11a80fc60e6f5bab16adb5f73">&sect;&nbsp;</a></span>McpGetIOPinValueCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpGetIOPinValueCallback) (uint32_t pin_id, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a779e58d6e8b5bacbfe3d216ac9cd5d75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a779e58d6e8b5bacbfe3d216ac9cd5d75">&sect;&nbsp;</a></span>McpGetNoisemapControlCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpGetNoisemapControlCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aad8fd0ee319f0cb1364dfb7766a60a64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad8fd0ee319f0cb1364dfb7766a60a64">&sect;&nbsp;</a></span>McpGetProfileIdCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpGetProfileIdCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5a1441e189a5473318a33d038244b9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5a1441e189a5473318a33d038244b9f">&sect;&nbsp;</a></span>McpGetSystemDebugDataCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpGetSystemDebugDataCallback) (uint32_t contentid, uint8_t infocode, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab68117e62fd5d76cadfc6f24bc594b7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab68117e62fd5d76cadfc6f24bc594b7d">&sect;&nbsp;</a></span>McpGetSystemInfoCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpGetSystemInfoCallback) (uint32_t contentid, uint8_t infocode, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="accfe9f426e17ebdab9502ea06db3b0a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accfe9f426e17ebdab9502ea06db3b0a5">&sect;&nbsp;</a></span>McpLoadNoiseMap</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpLoadNoiseMap) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a63dea2cec148c32423113f545a7d43c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63dea2cec148c32423113f545a7d43c0">&sect;&nbsp;</a></span>McpLoadProfileCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpLoadProfileCallback) (uint32_t profileid, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5daa4cba7515edf86af59651f1e4530a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5daa4cba7515edf86af59651f1e4530a">&sect;&nbsp;</a></span>McpModuleResetCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpModuleResetCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea9979cb4107792dfa09eb8b22365c0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea9979cb4107792dfa09eb8b22365c0a">&sect;&nbsp;</a></span>McpPingCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpPingCallback) (uint32_t pongval, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55f648471571fc7600a318bbb591a229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55f648471571fc7600a318bbb591a229">&sect;&nbsp;</a></span>McpProfileGetDetectionZoneCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileGetDetectionZoneCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7af628c27246c3a0efaa85a99072f84f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7af628c27246c3a0efaa85a99072f84f">&sect;&nbsp;</a></span>McpProfileGetDetectionZoneLimitsCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileGetDetectionZoneLimitsCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4fddf15fe9970c324be3d8d87c9b0c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4fddf15fe9970c324be3d8d87c9b0c3">&sect;&nbsp;</a></span>McpProfileGetParameterFileCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileGetParameterFileCallback) (uint32_t filename_length, const char *filename, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2cfb668efe8f840d70c626b625b5fe5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cfb668efe8f840d70c626b625b5fe5e">&sect;&nbsp;</a></span>McpProfileSetDetectionZoneCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileSetDetectionZoneCallback) (float start, float end, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3f9401986965b347bd6c8e325736de90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f9401986965b347bd6c8e325736de90">&sect;&nbsp;</a></span>McpProfileSetParameterFileCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileSetParameterFileCallback) (uint32_t filename_length, uint32_t data_length, const char *filename, const char *data, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a43422ff746bcc5fa1c4476810419a066"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43422ff746bcc5fa1c4476810419a066">&sect;&nbsp;</a></span>McpProfileSetSensitivityCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpProfileSetSensitivityCallback) (uint32_t sensitivity, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a20db52c22c56e55e65749af5a276415d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20db52c22c56e55e65749af5a276415d">&sect;&nbsp;</a></span>McpResetToFactoryPresetCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpResetToFactoryPresetCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a42502a6860c1500e7d34c8a00b5eaa6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42502a6860c1500e7d34c8a00b5eaa6b">&sect;&nbsp;</a></span>McpSetBaudRateCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetBaudRateCallback) (uint32_t, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a232facee8cec32c80d0c596e7128908b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a232facee8cec32c80d0c596e7128908b">&sect;&nbsp;</a></span>McpSetDebugLevelCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetDebugLevelCallback) (uint8_t debug_level, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae96e12eef00b0f9274a684e7fcd743a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae96e12eef00b0f9274a684e7fcd743a4">&sect;&nbsp;</a></span>McpSetIOPinControlCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetIOPinControlCallback) (uint32_t pin_id, uint32_t pin_setup, uint32_t pin_feature, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae4738d111d5b5944b37663b4f9210c44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4738d111d5b5944b37663b4f9210c44">&sect;&nbsp;</a></span>McpSetIOPinValueCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetIOPinValueCallback) (uint32_t pin_id, uint32_t pin_value, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7c74a4e851b45b9018f7bd598c1ee304"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c74a4e851b45b9018f7bd598c1ee304">&sect;&nbsp;</a></span>McpSetLedControlCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetLedControlCallback) (uint8_t mode, uint8_t intensity, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a4ba635564e8cd2bea9c808e9434210"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a4ba635564e8cd2bea9c808e9434210">&sect;&nbsp;</a></span>McpSetNoisemapControlCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetNoisemapControlCallback) (uint32_t noisemap_control, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a322c8e42f0fbbf743e8287ff000b769c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a322c8e42f0fbbf743e8287ff000b769c">&sect;&nbsp;</a></span>McpSetOutputControlCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetOutputControlCallback) (uint32_t output_feature, uint32_t output_control, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acffd2aa9483a1fa8632d84420f1de13b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acffd2aa9483a1fa8632d84420f1de13b">&sect;&nbsp;</a></span>McpSetSensorModeCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSetSensorModeCallback) (uint8_t mode, uint8_t param, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a67f8659427251e22b75dad2bef35ce23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67f8659427251e22b75dad2bef35ce23">&sect;&nbsp;</a></span>McpStartBootloaderCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpStartBootloaderCallback) (uint32_t key, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab01ee03c46239b87229593fe415335c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab01ee03c46239b87229593fe415335c0">&sect;&nbsp;</a></span>McpStoreNoiseMap</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpStoreNoiseMap) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aedb398efe8b01a94de931f573a8df15a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedb398efe8b01a94de931f573a8df15a">&sect;&nbsp;</a></span>McpSystemRunTestCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpSystemRunTestCallback) (uint8_t testcode, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a05cc3d69bcb1b3c826c889df4754f739"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05cc3d69bcb1b3c826c889df4754f739">&sect;&nbsp;</a></span>McpUnknownCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpUnknownCallback) (const uint8_t *data, uint32_t length, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a26e6599a9fa3f55bc3d748451370046a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26e6599a9fa3f55bc3d748451370046a">&sect;&nbsp;</a></span>McpX4DriverGetFpsCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetFpsCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae68dc80cba71209a11a99d277491b5fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae68dc80cba71209a11a99d277491b5fe">&sect;&nbsp;</a></span>McpX4DriverGetFrameAreaCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetFrameAreaCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a43c4474fd2529d2e062e3781c8efb671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43c4474fd2529d2e062e3781c8efb671">&sect;&nbsp;</a></span>McpX4DriverGetFrameAreaOffsetCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetFrameAreaOffsetCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d7df0b630719254b5150ce953ebbaf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d7df0b630719254b5150ce953ebbaf9">&sect;&nbsp;</a></span>McpX4DriverGetPifRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetPifRegisterCallback) (uint8_t address, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d8838456afac1d80adb5b4af9a6ec76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d8838456afac1d80adb5b4af9a6ec76">&sect;&nbsp;</a></span>McpX4DriverGetPrfDivCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetPrfDivCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9695ab0e0f9679709edfb748d9b5a37b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9695ab0e0f9679709edfb748d9b5a37b">&sect;&nbsp;</a></span>McpX4DriverGetSpiRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetSpiRegisterCallback) (uint8_t address, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a677beb63daaded5f4ecfd8368c75155e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a677beb63daaded5f4ecfd8368c75155e">&sect;&nbsp;</a></span>McpX4DriverGetXifRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverGetXifRegisterCallback) (uint8_t address, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa5dcd8e23826a38fcb59a2cfaee9c9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa5dcd8e23826a38fcb59a2cfaee9c9e">&sect;&nbsp;</a></span>McpX4DriverInitCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverInitCallback) (void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab06a7a889e7897a21f29a28c43651075"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab06a7a889e7897a21f29a28c43651075">&sect;&nbsp;</a></span>McpX4DriverReadFromSpiRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverReadFromSpiRegisterCallback) (uint8_t address, uint32_t length, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a43d0089adf34ab25520e625c04cfad7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43d0089adf34ab25520e625c04cfad7e">&sect;&nbsp;</a></span>McpX4DriverSetDacMaxCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetDacMaxCallback) (uint32_t dac_max, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6c9caeea975d138c8f77e837952cbbd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c9caeea975d138c8f77e837952cbbd6">&sect;&nbsp;</a></span>McpX4DriverSetDacMinCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetDacMinCallback) (uint32_t dac_min, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac3d5b34c35d8b4858353bdced3684b6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3d5b34c35d8b4858353bdced3684b6a">&sect;&nbsp;</a></span>McpX4DriverSetDacStepCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetDacStepCallback) (uint8_t dac_step, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a54c33a0df1c7bd0cf0dc91a1e961a859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54c33a0df1c7bd0cf0dc91a1e961a859">&sect;&nbsp;</a></span>McpX4DriverSetDownconversionCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetDownconversionCallback) (uint8_t downconversion, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a228db312090f9920bc556578ab1e0cd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a228db312090f9920bc556578ab1e0cd9">&sect;&nbsp;</a></span>McpX4DriverSetEnableCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetEnableCallback) (uint8_t enable, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2b92d965e52b0fc1ee8da985e4b758d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2b92d965e52b0fc1ee8da985e4b758d">&sect;&nbsp;</a></span>McpX4DriverSetFpsCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetFpsCallback) (float fps, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2539b71cdb0ea2d61ec50e4b7efaa29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2539b71cdb0ea2d61ec50e4b7efaa29">&sect;&nbsp;</a></span>McpX4DriverSetFrameAreaCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetFrameAreaCallback) (float start, float end, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2642f4ec271d2c7e814371343483b608"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2642f4ec271d2c7e814371343483b608">&sect;&nbsp;</a></span>McpX4DriverSetFrameAreaOffsetCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetFrameAreaOffsetCallback) (float offset, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a04d41f365dab3f1321b9277df33e0fc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04d41f365dab3f1321b9277df33e0fc8">&sect;&nbsp;</a></span>McpX4DriverSetIterationsCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetIterationsCallback) (uint32_t iterations, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad7fc5558d45263b56d63660afd907b8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7fc5558d45263b56d63660afd907b8b">&sect;&nbsp;</a></span>McpX4DriverSetPifRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetPifRegisterCallback) (uint8_t address, uint8_t value, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e82626e5d60a8a73849b1e8ae37d554"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e82626e5d60a8a73849b1e8ae37d554">&sect;&nbsp;</a></span>McpX4DriverSetPrfDivCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetPrfDivCallback) (uint8_t prf_div, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a41c9f43ac9439132fb83ab299702e9b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41c9f43ac9439132fb83ab299702e9b7">&sect;&nbsp;</a></span>McpX4DriverSetPulsesPerStepCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetPulsesPerStepCallback) (uint32_t pps, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0ca205a4d84b2376f876c8e2855a6f05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ca205a4d84b2376f876c8e2855a6f05">&sect;&nbsp;</a></span>McpX4DriverSetSpiRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetSpiRegisterCallback) (uint8_t address, uint8_t value, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e74c34c18cdacff3783d42b7e3a78d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e74c34c18cdacff3783d42b7e3a78d7">&sect;&nbsp;</a></span>McpX4DriverSetTxCenterFrequencyCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetTxCenterFrequencyCallback) (uint8_t tx_center_frequency, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a777109ef080f291a6106b6be2ef0bb7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a777109ef080f291a6106b6be2ef0bb7d">&sect;&nbsp;</a></span>McpX4DriverSetTxPowerCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetTxPowerCallback) (uint8_t tx_power, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5fb1910ae238bdf730e6c6a1b8932e9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fb1910ae238bdf730e6c6a1b8932e9b">&sect;&nbsp;</a></span>McpX4DriverSetXifRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverSetXifRegisterCallback) (uint8_t address, uint8_t value, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a224e3bff8cbf524043d9fe024b6e40e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a224e3bff8cbf524043d9fe024b6e40e2">&sect;&nbsp;</a></span>McpX4DriverWriteToSpiRegisterCallback</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* McpX4DriverWriteToSpiRegisterCallback) (uint8_t address, const uint8_t *values, uint32_t length, void *user_data)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a7aa0d9d6ad4327c0eed8e1b5a3cdd790"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aa0d9d6ad4327c0eed8e1b5a3cdd790">&sect;&nbsp;</a></span>createMcpParser()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_mcp_parser__t.xhtml">McpParser_t</a>* createMcpParser </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>instance_memory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a46c65c001976702e9bb41ddc4fb0d643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46c65c001976702e9bb41ddc4fb0d643">&sect;&nbsp;</a></span>getMcpParserInstanceSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int getMcpParserInstanceSize </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a31a30ea82726e6da710922c96641248c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31a30ea82726e6da710922c96641248c">&sect;&nbsp;</a></span>mcpParseMessage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int mcpParseMessage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_mcp_parser__t.xhtml">McpParser_t</a> *&#160;</td>
          <td class="paramname"><em>mcp_parser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="protocol__parser_8h_a31a30ea82726e6da710922c96641248c_cgraph.svg" width="298" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
