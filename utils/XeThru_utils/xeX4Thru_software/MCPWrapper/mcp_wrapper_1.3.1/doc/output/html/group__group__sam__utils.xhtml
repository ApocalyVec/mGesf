<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Compiler abstraction layer and code utilities</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Compiler abstraction layer and code utilities</div>  </div>
</div><!--header-->
<div class="contents">

<p>Compiler abstraction layer and code utilities for AT91SAM.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for Compiler abstraction layer and code utilities:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__group__sam__utils.svg" width="378" height="170"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__group__sam__utils__mrepeat"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils__mrepeat.xhtml">Preprocessor - Macro Repeat</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__group__sam__utils__stringz"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils__stringz.xhtml">Preprocessor - Stringize</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:group__group__sam__utils__tpaste"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils__tpaste.xhtml">Preprocessor - Token Paste</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union16.xhtml">Union16</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">16-bit union.  <a href="union_union16.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union32.xhtml">Union32</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit union.  <a href="union_union32.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union64.xhtml">Union64</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit union.  <a href="union_union64.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union_ptr.xhtml">UnionPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Union of pointers to 64-, 32-, 16- and 8-bit unsigned integers.  <a href="union_union_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union_v_ptr.xhtml">UnionVPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Union of pointers to volatile 64-, 32-, 16- and 8-bit unsigned integers.  <a href="union_union_v_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union_c_ptr.xhtml">UnionCPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Union of pointers to constant 64-, 32-, 16- and 8-bit unsigned integers.  <a href="union_union_c_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="union_union_c_v_ptr.xhtml">UnionCVPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Union of pointers to constant volatile 64-, 32-, 16- and 8-bit unsigned integers.  <a href="union_union_c_v_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_struct_ptr.xhtml">StructPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure of pointers to 64-, 32-, 16- and 8-bit unsigned integers.  <a href="struct_struct_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_struct_v_ptr.xhtml">StructVPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure of pointers to volatile 64-, 32-, 16- and 8-bit unsigned integers.  <a href="struct_struct_v_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_struct_c_ptr.xhtml">StructCPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure of pointers to constant 64-, 32-, 16- and 8-bit unsigned integers.  <a href="struct_struct_c_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_struct_c_v_ptr.xhtml">StructCVPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure of pointers to constant volatile 64-, 32-, 16- and 8-bit unsigned integers.  <a href="struct_struct_c_v_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gacce64924b686dd08a83042b35d0d1480"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gacce64924b686dd08a83042b35d0d1480">FUNC_PTR</a>&#160;&#160;&#160;void *</td></tr>
<tr class="separator:gacce64924b686dd08a83042b35d0d1480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada67c62b1c57e07efa04431bc40b9238"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gada67c62b1c57e07efa04431bc40b9238">UNUSED</a>(v)&#160;&#160;&#160;(void)(v)</td></tr>
<tr class="memdesc:gada67c62b1c57e07efa04431bc40b9238"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marking <em>v</em> as a unused parameter or value.  <a href="#gada67c62b1c57e07efa04431bc40b9238">More...</a><br /></td></tr>
<tr class="separator:gada67c62b1c57e07efa04431bc40b9238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga417dba7f63dde98dbebd6336d8af9d91"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga417dba7f63dde98dbebd6336d8af9d91">unused</a>(v)&#160;&#160;&#160;do { (void)(v); } while(0)</td></tr>
<tr class="memdesc:ga417dba7f63dde98dbebd6336d8af9d91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marking <em>v</em> as a unused parameter or value.  <a href="#ga417dba7f63dde98dbebd6336d8af9d91">More...</a><br /></td></tr>
<tr class="separator:ga417dba7f63dde98dbebd6336d8af9d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53290ac2df2384738b8769c76622f803"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga53290ac2df2384738b8769c76622f803">barrier</a>()&#160;&#160;&#160;__DMB()</td></tr>
<tr class="memdesc:ga53290ac2df2384738b8769c76622f803"><td class="mdescLeft">&#160;</td><td class="mdescRight">Memory barrier.  <a href="#ga53290ac2df2384738b8769c76622f803">More...</a><br /></td></tr>
<tr class="separator:ga53290ac2df2384738b8769c76622f803"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga85a3ab5701281268521f109ed0078668"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(arg)&#160;&#160;&#160;_Pragma(#arg)</td></tr>
<tr class="memdesc:ga85a3ab5701281268521f109ed0078668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Emit the compiler pragma <em>arg</em>.  <a href="#ga85a3ab5701281268521f109ed0078668">More...</a><br /></td></tr>
<tr class="separator:ga85a3ab5701281268521f109ed0078668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae2c02ff865ca6538b4b1bddbf2a6876c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gae2c02ff865ca6538b4b1bddbf2a6876c">COMPILER_PACK_SET</a>(alignment)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack(alignment))</td></tr>
<tr class="memdesc:gae2c02ff865ca6538b4b1bddbf2a6876c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set maximum alignment for subsequent struct and union definitions to <em>alignment</em>.  <a href="#gae2c02ff865ca6538b4b1bddbf2a6876c">More...</a><br /></td></tr>
<tr class="separator:gae2c02ff865ca6538b4b1bddbf2a6876c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga38d28b622a4bc7b0f3fb2be2ef1e0086">COMPILER_PACK_RESET</a>()&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack())</td></tr>
<tr class="memdesc:ga38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set default alignment for subsequent struct and union definitions.  <a href="#ga38d28b622a4bc7b0f3fb2be2ef1e0086">More...</a><br /></td></tr>
<tr class="separator:ga38d28b622a4bc7b0f3fb2be2ef1e0086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab1e54dcc40192f9704e8b252635450f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaab1e54dcc40192f9704e8b252635450f">Assert</a>(expr)&#160;&#160;&#160;((void) 0)</td></tr>
<tr class="memdesc:gaab1e54dcc40192f9704e8b252635450f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This macro is used to test fatal errors.  <a href="#gaab1e54dcc40192f9704e8b252635450f">More...</a><br /></td></tr>
<tr class="separator:gaab1e54dcc40192f9704e8b252635450f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b759626f343cc1af9159cc02b763837"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5b759626f343cc1af9159cc02b763837">Long_call</a>(addr)&#160;&#160;&#160;((*(void (*)(void))(addr))())</td></tr>
<tr class="memdesc:ga5b759626f343cc1af9159cc02b763837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls the routine at address <em>addr</em>.  <a href="#ga5b759626f343cc1af9159cc02b763837">More...</a><br /></td></tr>
<tr class="separator:ga5b759626f343cc1af9159cc02b763837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d4ebd841bc96041a7f3a61e227c1fb2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga6d4ebd841bc96041a7f3a61e227c1fb2">div_ceil</a>(a,  b)&#160;&#160;&#160;(((a) + (b) - 1) / (b))</td></tr>
<tr class="memdesc:ga6d4ebd841bc96041a7f3a61e227c1fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate <img class="formulaInl" alt="$ \left\lceil \frac{a}{b} \right\rceil $" src="form_3.png"/> using integer arithmetic.  <a href="#ga6d4ebd841bc96041a7f3a61e227c1fb2">More...</a><br /></td></tr>
<tr class="separator:ga6d4ebd841bc96041a7f3a61e227c1fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b84ecc6b34a71f797ceb8b8f7b8d384"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga9b84ecc6b34a71f797ceb8b8f7b8d384">FLASH_DECLARE</a>(x)&#160;&#160;&#160;const x</td></tr>
<tr class="separator:ga9b84ecc6b34a71f797ceb8b8f7b8d384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaef0fd990bb5bd9cdf11334f7c689fd7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaaef0fd990bb5bd9cdf11334f7c689fd7">FLASH_EXTERN</a>(x)&#160;&#160;&#160;extern const x</td></tr>
<tr class="separator:gaaef0fd990bb5bd9cdf11334f7c689fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe9b83c73d4840986478ec67d3eb7718"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gafe9b83c73d4840986478ec67d3eb7718">PGM_READ_BYTE</a>(x)&#160;&#160;&#160;*(x)</td></tr>
<tr class="separator:gafe9b83c73d4840986478ec67d3eb7718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga92576bffe51090dcb6d5c67e07b9eec7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga92576bffe51090dcb6d5c67e07b9eec7">PGM_READ_WORD</a>(x)&#160;&#160;&#160;*(x)</td></tr>
<tr class="separator:ga92576bffe51090dcb6d5c67e07b9eec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75d06f2874e7e44289c05cfadb0940fd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga75d06f2874e7e44289c05cfadb0940fd">PGM_READ_DWORD</a>(x)&#160;&#160;&#160;*(x)</td></tr>
<tr class="separator:ga75d06f2874e7e44289c05cfadb0940fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga85a7d71a016789b1766f9b27d0530347"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga85a7d71a016789b1766f9b27d0530347">MEMCPY_ENDIAN</a>&#160;&#160;&#160;memcpy</td></tr>
<tr class="separator:ga85a7d71a016789b1766f9b27d0530347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8900e4615b7d7143a6c38e2a39087538"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga8900e4615b7d7143a6c38e2a39087538">PGM_READ_BLOCK</a>(dst,  src,  len)&#160;&#160;&#160;memcpy((dst), (src), (len))</td></tr>
<tr class="separator:ga8900e4615b7d7143a6c38e2a39087538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf2b95fa77301377cdcf79eb615551db"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabf2b95fa77301377cdcf79eb615551db">CMD_ID_OCTET</a>&#160;&#160;&#160;(0)</td></tr>
<tr class="separator:gabf2b95fa77301377cdcf79eb615551db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c15ca0f3159182efc4b80a00768c2c0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga7c15ca0f3159182efc4b80a00768c2c0">CPU_ENDIAN_TO_LE16</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga7c15ca0f3159182efc4b80a00768c2c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2fd4bfb7af44220ce4205e2aa371017"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa2fd4bfb7af44220ce4205e2aa371017">CPU_ENDIAN_TO_LE32</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gaa2fd4bfb7af44220ce4205e2aa371017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6f1e86f452c8f327f9ca96cbf6a65c81"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga6f1e86f452c8f327f9ca96cbf6a65c81">CPU_ENDIAN_TO_LE64</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga6f1e86f452c8f327f9ca96cbf6a65c81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaceb02fdef243c22d2559e260185fb579"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaceb02fdef243c22d2559e260185fb579">LE16_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gaceb02fdef243c22d2559e260185fb579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2df63369ef525ba98832132ce5a43346"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2df63369ef525ba98832132ce5a43346">LE32_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga2df63369ef525ba98832132ce5a43346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab675071ce5a4644b205cdbc858417ccd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab675071ce5a4644b205cdbc858417ccd">LE64_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gab675071ce5a4644b205cdbc858417ccd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ac6e032d1ce0ae6d2e460da93ce8732"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga4ac6e032d1ce0ae6d2e460da93ce8732">CLE16_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga4ac6e032d1ce0ae6d2e460da93ce8732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3ff07a7496222efe8bc7d7b7b0342b0d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga3ff07a7496222efe8bc7d7b7b0342b0d">CLE32_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga3ff07a7496222efe8bc7d7b7b0342b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacbbba93256e2d892c748d56a42f00f9b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gacbbba93256e2d892c748d56a42f00f9b">CLE64_TO_CPU_ENDIAN</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gacbbba93256e2d892c748d56a42f00f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fd2d3ed2fc9234277b659b67d33bc64"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5fd2d3ed2fc9234277b659b67d33bc64">CCPU_ENDIAN_TO_LE16</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga5fd2d3ed2fc9234277b659b67d33bc64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e3290451e5c7b98175911c9219b5123"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1e3290451e5c7b98175911c9219b5123">CCPU_ENDIAN_TO_LE32</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga1e3290451e5c7b98175911c9219b5123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00483bf27ea1e8a2143c6baf22b31f16"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga00483bf27ea1e8a2143c6baf22b31f16">CCPU_ENDIAN_TO_LE64</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga00483bf27ea1e8a2143c6baf22b31f16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac4609178e5c825e815f44fa123dcaaf7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac4609178e5c825e815f44fa123dcaaf7">ADDR_COPY_DST_SRC_16</a>(dst,  src)&#160;&#160;&#160;((dst) = (src))</td></tr>
<tr class="separator:gac4609178e5c825e815f44fa123dcaaf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0454afa80924c2183c8c672c043440cc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0454afa80924c2183c8c672c043440cc">ADDR_COPY_DST_SRC_64</a>(dst,  src)&#160;&#160;&#160;((dst) = (src))</td></tr>
<tr class="separator:ga0454afa80924c2183c8c672c043440cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gadca7cebb159c7ed180d3d07cccb74245"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadca7cebb159c7ed180d3d07cccb74245">convert_64_bit_to_byte_array</a> (uint64_t value, uint8_t *data)</td></tr>
<tr class="memdesc:gadca7cebb159c7ed180d3d07cccb74245"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a 64-Bit value into a 8 Byte array.  <a href="#gadca7cebb159c7ed180d3d07cccb74245">More...</a><br /></td></tr>
<tr class="separator:gadca7cebb159c7ed180d3d07cccb74245"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2de8d131d6afca8b368486f56c911e75"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2de8d131d6afca8b368486f56c911e75">convert_16_bit_to_byte_array</a> (uint16_t value, uint8_t *data)</td></tr>
<tr class="memdesc:ga2de8d131d6afca8b368486f56c911e75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a 16-Bit value into a 2 Byte array.  <a href="#ga2de8d131d6afca8b368486f56c911e75">More...</a><br /></td></tr>
<tr class="separator:ga2de8d131d6afca8b368486f56c911e75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9724d81bfe44a06b0372d144cd98e36"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa9724d81bfe44a06b0372d144cd98e36">convert_spec_16_bit_to_byte_array</a> (uint16_t value, uint8_t *data)</td></tr>
<tr class="separator:gaa9724d81bfe44a06b0372d144cd98e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9634f2d7292e1209fe3b83254a66c450"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga9634f2d7292e1209fe3b83254a66c450">convert_16_bit_to_byte_address</a> (uint16_t value, uint8_t *data)</td></tr>
<tr class="separator:ga9634f2d7292e1209fe3b83254a66c450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3726f56d0820acc7bae83993bd8897c"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad3726f56d0820acc7bae83993bd8897c">convert_byte_array_to_16_bit</a> (uint8_t *data)</td></tr>
<tr class="separator:gad3726f56d0820acc7bae83993bd8897c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e01ed4a4718b439d295b5124ede09e3"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga6e01ed4a4718b439d295b5124ede09e3">convert_byte_array_to_32_bit</a> (uint8_t *data)</td></tr>
<tr class="separator:ga6e01ed4a4718b439d295b5124ede09e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga45ffdbdc2d7a6d1dbf91b2fe8d880347"><td class="memItemLeft" align="right" valign="top">static uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga45ffdbdc2d7a6d1dbf91b2fe8d880347">convert_byte_array_to_64_bit</a> (uint8_t *data)</td></tr>
<tr class="memdesc:ga45ffdbdc2d7a6d1dbf91b2fe8d880347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a 8 Byte array into a 64-Bit value.  <a href="#ga45ffdbdc2d7a6d1dbf91b2fe8d880347">More...</a><br /></td></tr>
<tr class="separator:ga45ffdbdc2d7a6d1dbf91b2fe8d880347"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Usual Types</h2></td></tr>
<tr class="memitem:ga253b248072cfc8bd812c69acd0046eed"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga253b248072cfc8bd812c69acd0046eed">Bool</a></td></tr>
<tr class="memdesc:ga253b248072cfc8bd812c69acd0046eed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean.  <a href="#ga253b248072cfc8bd812c69acd0046eed">More...</a><br /></td></tr>
<tr class="separator:ga253b248072cfc8bd812c69acd0046eed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97a80ca1602ebf2303258971a2c938e2"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a></td></tr>
<tr class="memdesc:ga97a80ca1602ebf2303258971a2c938e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean.  <a href="#ga97a80ca1602ebf2303258971a2c938e2">More...</a><br /></td></tr>
<tr class="separator:ga97a80ca1602ebf2303258971a2c938e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf1475a0bb1962ef08dd1f78bd5dba87a"><td class="memItemLeft" align="right" valign="top">typedef int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a></td></tr>
<tr class="memdesc:gaf1475a0bb1962ef08dd1f78bd5dba87a"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-bit signed integer.  <a href="#gaf1475a0bb1962ef08dd1f78bd5dba87a">More...</a><br /></td></tr>
<tr class="separator:gaf1475a0bb1962ef08dd1f78bd5dba87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa63ef7b996d5487ce35a5a66601f3e73"><td class="memItemLeft" align="right" valign="top">typedef uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a></td></tr>
<tr class="memdesc:gaa63ef7b996d5487ce35a5a66601f3e73"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-bit unsigned integer.  <a href="#gaa63ef7b996d5487ce35a5a66601f3e73">More...</a><br /></td></tr>
<tr class="separator:gaa63ef7b996d5487ce35a5a66601f3e73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d241ad21a823c90d4835380787db5d4"><td class="memItemLeft" align="right" valign="top">typedef int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a></td></tr>
<tr class="memdesc:ga6d241ad21a823c90d4835380787db5d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">16-bit signed integer.  <a href="#ga6d241ad21a823c90d4835380787db5d4">More...</a><br /></td></tr>
<tr class="separator:ga6d241ad21a823c90d4835380787db5d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0a0a322d5fa4a546d293a77ba8b4a71f"><td class="memItemLeft" align="right" valign="top">typedef uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a></td></tr>
<tr class="memdesc:ga0a0a322d5fa4a546d293a77ba8b4a71f"><td class="mdescLeft">&#160;</td><td class="mdescRight">16-bit unsigned integer.  <a href="#ga0a0a322d5fa4a546d293a77ba8b4a71f">More...</a><br /></td></tr>
<tr class="separator:ga0a0a322d5fa4a546d293a77ba8b4a71f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb35b8c1c002c23dcc87bdd8f520dd5f"><td class="memItemLeft" align="right" valign="top">typedef uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadb35b8c1c002c23dcc87bdd8f520dd5f">le16_t</a></td></tr>
<tr class="separator:gadb35b8c1c002c23dcc87bdd8f520dd5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadafc3ed99e530f27d0d954334c389748"><td class="memItemLeft" align="right" valign="top">typedef uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadafc3ed99e530f27d0d954334c389748">be16_t</a></td></tr>
<tr class="separator:gadafc3ed99e530f27d0d954334c389748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39c786017723555afb9e8b85accec0de"><td class="memItemLeft" align="right" valign="top">typedef int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a></td></tr>
<tr class="memdesc:ga39c786017723555afb9e8b85accec0de"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit signed integer.  <a href="#ga39c786017723555afb9e8b85accec0de">More...</a><br /></td></tr>
<tr class="separator:ga39c786017723555afb9e8b85accec0de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga696390429f2f3b644bde8d0322a24124"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a></td></tr>
<tr class="memdesc:ga696390429f2f3b644bde8d0322a24124"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit unsigned integer.  <a href="#ga696390429f2f3b644bde8d0322a24124">More...</a><br /></td></tr>
<tr class="separator:ga696390429f2f3b644bde8d0322a24124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14351c68ce47837d05ce857cfff07c92"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga14351c68ce47837d05ce857cfff07c92">le32_t</a></td></tr>
<tr class="separator:ga14351c68ce47837d05ce857cfff07c92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3410b85f2a5afdf8b35f5c7c3414fe2d"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga3410b85f2a5afdf8b35f5c7c3414fe2d">be32_t</a></td></tr>
<tr class="separator:ga3410b85f2a5afdf8b35f5c7c3414fe2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d293e5c494dd6826239b02f5fe98e7f"><td class="memItemLeft" align="right" valign="top">typedef int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a></td></tr>
<tr class="memdesc:ga1d293e5c494dd6826239b02f5fe98e7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit signed integer.  <a href="#ga1d293e5c494dd6826239b02f5fe98e7f">More...</a><br /></td></tr>
<tr class="separator:ga1d293e5c494dd6826239b02f5fe98e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25809e0734a149248fcf5831efa4e33d"><td class="memItemLeft" align="right" valign="top">typedef uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></td></tr>
<tr class="memdesc:ga25809e0734a149248fcf5831efa4e33d"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit unsigned integer.  <a href="#ga25809e0734a149248fcf5831efa4e33d">More...</a><br /></td></tr>
<tr class="separator:ga25809e0734a149248fcf5831efa4e33d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga841d3674577a1e86afdc2f4845f46c4b"><td class="memItemLeft" align="right" valign="top">typedef float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga841d3674577a1e86afdc2f4845f46c4b">F32</a></td></tr>
<tr class="memdesc:ga841d3674577a1e86afdc2f4845f46c4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit floating-point number.  <a href="#ga841d3674577a1e86afdc2f4845f46c4b">More...</a><br /></td></tr>
<tr class="separator:ga841d3674577a1e86afdc2f4845f46c4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadc9896ee12db3bb116fc63b3464c72c7"><td class="memItemLeft" align="right" valign="top">typedef double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadc9896ee12db3bb116fc63b3464c72c7">F64</a></td></tr>
<tr class="memdesc:gadc9896ee12db3bb116fc63b3464c72c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">64-bit floating-point number.  <a href="#gadc9896ee12db3bb116fc63b3464c72c7">More...</a><br /></td></tr>
<tr class="separator:gadc9896ee12db3bb116fc63b3464c72c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2aa1108d10dcbee73bb35aefe25287c1"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2aa1108d10dcbee73bb35aefe25287c1">iram_size_t</a></td></tr>
<tr class="separator:ga2aa1108d10dcbee73bb35aefe25287c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Status Types</h2></td></tr>
<tr class="memitem:ga971c8994d25f93d700ec2737c8c5f82e"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga971c8994d25f93d700ec2737c8c5f82e">Status_bool_t</a></td></tr>
<tr class="memdesc:ga971c8994d25f93d700ec2737c8c5f82e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean status.  <a href="#ga971c8994d25f93d700ec2737c8c5f82e">More...</a><br /></td></tr>
<tr class="separator:ga971c8994d25f93d700ec2737c8c5f82e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65a9dca1465decb9b96bb02fde36b2b8"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga65a9dca1465decb9b96bb02fde36b2b8">Status_t</a></td></tr>
<tr class="memdesc:ga65a9dca1465decb9b96bb02fde36b2b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-bit-coded status.  <a href="#ga65a9dca1465decb9b96bb02fde36b2b8">More...</a><br /></td></tr>
<tr class="separator:ga65a9dca1465decb9b96bb02fde36b2b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Usual Constants</h2></td></tr>
<tr class="memitem:ga99496f7308834e8b220f7894efa0b6ab"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga99496f7308834e8b220f7894efa0b6ab">DISABLE</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga99496f7308834e8b220f7894efa0b6ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga514ad415fb6125ba296793df7d1a468a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga514ad415fb6125ba296793df7d1a468a">ENABLE</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga514ad415fb6125ba296793df7d1a468a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65e9886d74aaee76545e83dd09011727"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga65e9886d74aaee76545e83dd09011727">false</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:ga65e9886d74aaee76545e83dd09011727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41f9c5fb8b08eb5dc3edce4dcb37fee7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga41f9c5fb8b08eb5dc3edce4dcb37fee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba5c54fadff8d880b1945dde87496e31"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaba5c54fadff8d880b1945dde87496e31">PASS</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gaba5c54fadff8d880b1945dde87496e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb508ea8227673f419e9fe3a86c30d8e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabb508ea8227673f419e9fe3a86c30d8e">FAIL</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gabb508ea8227673f419e9fe3a86c30d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab811d8c6ff3a505312d3276590444289"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab811d8c6ff3a505312d3276590444289">LOW</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gab811d8c6ff3a505312d3276590444289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5bb885982ff66a2e0a0a45a8ee9c35e2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5bb885982ff66a2e0a0a45a8ee9c35e2">HIGH</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:ga5bb885982ff66a2e0a0a45a8ee9c35e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Optimization Control</h2></td></tr>
<tr class="memitem:gac082df2dd9a1024f6e8d16a61855d989"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac082df2dd9a1024f6e8d16a61855d989">likely</a>(exp)&#160;&#160;&#160;(exp)</td></tr>
<tr class="memdesc:gac082df2dd9a1024f6e8d16a61855d989"><td class="mdescLeft">&#160;</td><td class="mdescRight">The expression <em>exp</em> is likely to be true.  <a href="#gac082df2dd9a1024f6e8d16a61855d989">More...</a><br /></td></tr>
<tr class="separator:gac082df2dd9a1024f6e8d16a61855d989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c0c89beb84d05c5ba0bc7ce527a3925"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1c0c89beb84d05c5ba0bc7ce527a3925">unlikely</a>(exp)&#160;&#160;&#160;(exp)</td></tr>
<tr class="memdesc:ga1c0c89beb84d05c5ba0bc7ce527a3925"><td class="mdescLeft">&#160;</td><td class="mdescRight">The expression <em>exp</em> is unlikely to be true.  <a href="#ga1c0c89beb84d05c5ba0bc7ce527a3925">More...</a><br /></td></tr>
<tr class="separator:ga1c0c89beb84d05c5ba0bc7ce527a3925"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15892ad6884af110e5eaaa96994ebaa9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga15892ad6884af110e5eaaa96994ebaa9">is_constant</a>(exp)&#160;&#160;&#160;(0)</td></tr>
<tr class="memdesc:ga15892ad6884af110e5eaaa96994ebaa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine if an expression evaluates to a constant value.  <a href="#ga15892ad6884af110e5eaaa96994ebaa9">More...</a><br /></td></tr>
<tr class="separator:ga15892ad6884af110e5eaaa96994ebaa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Bit-Field Handling</h2></td></tr>
<tr class="memitem:ga53d9294b7065346ffa04d7991d2bc31e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>(value,  mask)&#160;&#160;&#160;((value) &amp; (mask))</td></tr>
<tr class="memdesc:ga53d9294b7065346ffa04d7991d2bc31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the bits of a value specified by a given bit-mask.  <a href="#ga53d9294b7065346ffa04d7991d2bc31e">More...</a><br /></td></tr>
<tr class="separator:ga53d9294b7065346ffa04d7991d2bc31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97b2bc0b5cdc7ec5293b7a5304cee0f0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">Wr_bits</a>(lvalue,  mask,  bits)</td></tr>
<tr class="memdesc:ga97b2bc0b5cdc7ec5293b7a5304cee0f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the bits of a C lvalue specified by a given bit-mask.  <a href="#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">More...</a><br /></td></tr>
<tr class="separator:ga97b2bc0b5cdc7ec5293b7a5304cee0f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1e92741077b101e6b2df74880e71e96"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab1e92741077b101e6b2df74880e71e96">Tst_bits</a>(value,  mask)&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>(value, mask) != 0)</td></tr>
<tr class="memdesc:gab1e92741077b101e6b2df74880e71e96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests the bits of a value specified by a given bit-mask.  <a href="#gab1e92741077b101e6b2df74880e71e96">More...</a><br /></td></tr>
<tr class="separator:gab1e92741077b101e6b2df74880e71e96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffbccbb234075f838e181522c864605f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaffbccbb234075f838e181522c864605f">Clr_bits</a>(lvalue,  mask)&#160;&#160;&#160;((lvalue) &amp;= ~(mask))</td></tr>
<tr class="memdesc:gaffbccbb234075f838e181522c864605f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the bits of a C lvalue specified by a given bit-mask.  <a href="#gaffbccbb234075f838e181522c864605f">More...</a><br /></td></tr>
<tr class="separator:gaffbccbb234075f838e181522c864605f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga589436fa123e32e1063488ebd7fdc923"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga589436fa123e32e1063488ebd7fdc923">Set_bits</a>(lvalue,  mask)&#160;&#160;&#160;((lvalue) |=  (mask))</td></tr>
<tr class="memdesc:ga589436fa123e32e1063488ebd7fdc923"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the bits of a C lvalue specified by a given bit-mask.  <a href="#ga589436fa123e32e1063488ebd7fdc923">More...</a><br /></td></tr>
<tr class="separator:ga589436fa123e32e1063488ebd7fdc923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9f29d1e990286322697ae8d0f4e365e0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga9f29d1e990286322697ae8d0f4e365e0">Tgl_bits</a>(lvalue,  mask)&#160;&#160;&#160;((lvalue) ^=  (mask))</td></tr>
<tr class="memdesc:ga9f29d1e990286322697ae8d0f4e365e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the bits of a C lvalue specified by a given bit-mask.  <a href="#ga9f29d1e990286322697ae8d0f4e365e0">More...</a><br /></td></tr>
<tr class="separator:ga9f29d1e990286322697ae8d0f4e365e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7ee388a5bd843e5e0ba3d194bc1d8a4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa7ee388a5bd843e5e0ba3d194bc1d8a4">Rd_bitfield</a>(value,  mask)&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>( value, mask) &gt;&gt; <a class="el" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(mask))</td></tr>
<tr class="memdesc:gaa7ee388a5bd843e5e0ba3d194bc1d8a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the bit-field of a value specified by a given bit-mask.  <a href="#gaa7ee388a5bd843e5e0ba3d194bc1d8a4">More...</a><br /></td></tr>
<tr class="separator:gaa7ee388a5bd843e5e0ba3d194bc1d8a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2ede64db1455ec339cd8a3303647644"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa2ede64db1455ec339cd8a3303647644">Wr_bitfield</a>(lvalue,  mask,  bitfield)&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">Wr_bits</a>(lvalue, mask, (<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)(bitfield) &lt;&lt; <a class="el" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(mask)))</td></tr>
<tr class="memdesc:gaa2ede64db1455ec339cd8a3303647644"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the bit-field of a C lvalue specified by a given bit-mask.  <a href="#gaa2ede64db1455ec339cd8a3303647644">More...</a><br /></td></tr>
<tr class="separator:gaa2ede64db1455ec339cd8a3303647644"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Zero-Bit Counting</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpd7e64f1bf7ad6347e17b23a92fc56d83"></a>Under GCC, __builtin_clz and __builtin_ctz behave like macros when applied to constant expressions (values known at compile time), so they are more optimized than the use of the corresponding assembly instructions and they can be used as constant expressions e.g. to initialize objects having static storage duration, and like the corresponding assembly instructions when applied to non-constant expressions (values unknown at compile time), so they are more optimized than an assembly periphrasis. Hence, clz and ctz ensure a possible and optimized behavior for both constant and non-constant expressions. </p>
</td></tr>
<tr class="memitem:ga004f88903a09b9c23017e697eaf5a845"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga004f88903a09b9c23017e697eaf5a845">clz</a>(u)</td></tr>
<tr class="memdesc:ga004f88903a09b9c23017e697eaf5a845"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the leading zero bits of the given value considered as a 32-bit integer.  <a href="#ga004f88903a09b9c23017e697eaf5a845">More...</a><br /></td></tr>
<tr class="separator:ga004f88903a09b9c23017e697eaf5a845"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab069bfec305db5213465d3b689836404"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(u)</td></tr>
<tr class="memdesc:gab069bfec305db5213465d3b689836404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the trailing zero bits of the given value considered as a 32-bit integer.  <a href="#gab069bfec305db5213465d3b689836404">More...</a><br /></td></tr>
<tr class="separator:gab069bfec305db5213465d3b689836404"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Bit Reversing</h2></td></tr>
<tr class="memitem:gaef8832dcae9aaac78c5ebe91fc33084b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaef8832dcae9aaac78c5ebe91fc33084b">bit_reverse8</a>(u8)&#160;&#160;&#160;((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>)(<a class="el" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>)(u8)) &gt;&gt; 24))</td></tr>
<tr class="memdesc:gaef8832dcae9aaac78c5ebe91fc33084b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverses the bits of <em>u8</em>.  <a href="#gaef8832dcae9aaac78c5ebe91fc33084b">More...</a><br /></td></tr>
<tr class="separator:gaef8832dcae9aaac78c5ebe91fc33084b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabab01124189eab03857671c05abfe377"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabab01124189eab03857671c05abfe377">bit_reverse16</a>(u16)&#160;&#160;&#160;((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(<a class="el" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(u16)) &gt;&gt; 16))</td></tr>
<tr class="memdesc:gabab01124189eab03857671c05abfe377"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverses the bits of <em>u16</em>.  <a href="#gabab01124189eab03857671c05abfe377">More...</a><br /></td></tr>
<tr class="separator:gabab01124189eab03857671c05abfe377"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff755a5c107b5e28e5b846c5f122e69f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>(u32)&#160;&#160;&#160;__RBIT(u32)</td></tr>
<tr class="memdesc:gaff755a5c107b5e28e5b846c5f122e69f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverses the bits of <em>u32</em>.  <a href="#gaff755a5c107b5e28e5b846c5f122e69f">More...</a><br /></td></tr>
<tr class="separator:gaff755a5c107b5e28e5b846c5f122e69f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7f3f2d786440776bab3f688cbd1e8030"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga7f3f2d786440776bab3f688cbd1e8030">bit_reverse64</a>(u64)</td></tr>
<tr class="memdesc:ga7f3f2d786440776bab3f688cbd1e8030"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverses the bits of <em>u64</em>.  <a href="#ga7f3f2d786440776bab3f688cbd1e8030">More...</a><br /></td></tr>
<tr class="separator:ga7f3f2d786440776bab3f688cbd1e8030"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Alignment</h2></td></tr>
<tr class="memitem:gad490b657cb147d3d1773f6559559b98b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad490b657cb147d3d1773f6559559b98b">Test_align</a>(val,  n)&#160;&#160;&#160;(!<a class="el" href="group__group__sam__utils.xhtml#gab1e92741077b101e6b2df74880e71e96">Tst_bits</a>( val, (n) - 1     )   )</td></tr>
<tr class="memdesc:gad490b657cb147d3d1773f6559559b98b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests alignment of the number <em>val</em> with the <em>n</em> boundary.  <a href="#gad490b657cb147d3d1773f6559559b98b">More...</a><br /></td></tr>
<tr class="separator:gad490b657cb147d3d1773f6559559b98b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga526bddb313be14057f5d65e199f6d814"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga526bddb313be14057f5d65e199f6d814">Get_align</a>(val,  n)&#160;&#160;&#160;(  <a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>( val, (n) - 1     )   )</td></tr>
<tr class="memdesc:ga526bddb313be14057f5d65e199f6d814"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets alignment of the number <em>val</em> with respect to the <em>n</em> boundary.  <a href="#ga526bddb313be14057f5d65e199f6d814">More...</a><br /></td></tr>
<tr class="separator:ga526bddb313be14057f5d65e199f6d814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad607b0e4ad3cf4cb5bd7a3619742f092"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad607b0e4ad3cf4cb5bd7a3619742f092">Set_align</a>(lval,  n,  alg)&#160;&#160;&#160;(  <a class="el" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">Wr_bits</a>(lval, (n) - 1, alg)   )</td></tr>
<tr class="memdesc:gad607b0e4ad3cf4cb5bd7a3619742f092"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets alignment of the lvalue number <em>lval</em> to <em>alg</em> with respect to the <em>n</em> boundary.  <a href="#gad607b0e4ad3cf4cb5bd7a3619742f092">More...</a><br /></td></tr>
<tr class="separator:gad607b0e4ad3cf4cb5bd7a3619742f092"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2bac987572902a9a7b69442541d78c42"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2bac987572902a9a7b69442541d78c42">Align_up</a>( val,  n)&#160;&#160;&#160;(((val) + ((n) - 1)) &amp; ~((n) - 1))</td></tr>
<tr class="memdesc:ga2bac987572902a9a7b69442541d78c42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aligns the number <em>val</em> with the upper <em>n</em> boundary.  <a href="#ga2bac987572902a9a7b69442541d78c42">More...</a><br /></td></tr>
<tr class="separator:ga2bac987572902a9a7b69442541d78c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1070d94a69b4e1955ac1723b4f382095"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1070d94a69b4e1955ac1723b4f382095">Align_down</a>(val,  n)&#160;&#160;&#160;( (val)              &amp; ~((n) - 1))</td></tr>
<tr class="memdesc:ga1070d94a69b4e1955ac1723b4f382095"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aligns the number <em>val</em> with the lower <em>n</em> boundary.  <a href="#ga1070d94a69b4e1955ac1723b4f382095">More...</a><br /></td></tr>
<tr class="separator:ga1070d94a69b4e1955ac1723b4f382095"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Mathematics</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp540b21ecdb276f5087ee585cedd6d5d0"></a>The same considerations as for clz and ctz apply here but GCC does not provide built-in functions to access the assembly instructions abs, min and max and it does not produce them by itself in most cases, so two sets of macros are defined here:</p><ul>
<li>Abs, Min and Max to apply to constant expressions (values known at compile time);</li>
<li>abs, min and max to apply to non-constant expressions (values unknown at compile time), abs is found in stdlib.h. </li>
</ul>
</td></tr>
<tr class="memitem:gae56b0282c58a65969c092e1eeeedd6f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gae56b0282c58a65969c092e1eeeedd6f5">Abs</a>(a)&#160;&#160;&#160;(((a) &lt;  0 ) ? -(a) : (a))</td></tr>
<tr class="memdesc:gae56b0282c58a65969c092e1eeeedd6f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the absolute value of <em>a</em>.  <a href="#gae56b0282c58a65969c092e1eeeedd6f5">More...</a><br /></td></tr>
<tr class="separator:gae56b0282c58a65969c092e1eeeedd6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e04209162ea72f9985338596262b657"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga9e04209162ea72f9985338596262b657">Min</a>(a,  b)&#160;&#160;&#160;(((a) &lt; (b)) ?  (a) : (b))</td></tr>
<tr class="memdesc:ga9e04209162ea72f9985338596262b657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the minimal value of <em>a</em> and <em>b</em>.  <a href="#ga9e04209162ea72f9985338596262b657">More...</a><br /></td></tr>
<tr class="separator:ga9e04209162ea72f9985338596262b657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4886a8f966a69949cefc46a6a3468006"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga4886a8f966a69949cefc46a6a3468006">Max</a>(a,  b)&#160;&#160;&#160;(((a) &gt; (b)) ?  (a) : (b))</td></tr>
<tr class="memdesc:ga4886a8f966a69949cefc46a6a3468006"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the maximal value of <em>a</em> and <em>b</em>.  <a href="#ga4886a8f966a69949cefc46a6a3468006">More...</a><br /></td></tr>
<tr class="separator:ga4886a8f966a69949cefc46a6a3468006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac6afabdc09a49a433ee19d8a9486056d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac6afabdc09a49a433ee19d8a9486056d">min</a>(a,  b)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga9e04209162ea72f9985338596262b657">Min</a>(a, b)</td></tr>
<tr class="memdesc:gac6afabdc09a49a433ee19d8a9486056d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the minimal value of <em>a</em> and <em>b</em>.  <a href="#gac6afabdc09a49a433ee19d8a9486056d">More...</a><br /></td></tr>
<tr class="separator:gac6afabdc09a49a433ee19d8a9486056d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffe776513b24d84b39af8ab0930fef7f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaffe776513b24d84b39af8ab0930fef7f">max</a>(a,  b)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga4886a8f966a69949cefc46a6a3468006">Max</a>(a, b)</td></tr>
<tr class="memdesc:gaffe776513b24d84b39af8ab0930fef7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Takes the maximal value of <em>a</em> and <em>b</em>.  <a href="#gaffe776513b24d84b39af8ab0930fef7f">More...</a><br /></td></tr>
<tr class="separator:gaffe776513b24d84b39af8ab0930fef7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
MCU Endianism Handling</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpc36c0117ea92446a6a59adb04c50c165"></a>ARM is MCU little endianism. </p>
</td></tr>
<tr class="memitem:gabee1b74eceef5a0cf26efbf3ff87ccbf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabee1b74eceef5a0cf26efbf3ff87ccbf">MSB</a>(u16)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u16))[1])</td></tr>
<tr class="memdesc:gabee1b74eceef5a0cf26efbf3ff87ccbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of <em>u16</em>.  <a href="#gabee1b74eceef5a0cf26efbf3ff87ccbf">More...</a><br /></td></tr>
<tr class="separator:gabee1b74eceef5a0cf26efbf3ff87ccbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd2fa7b756342ae251e3a7a66670c2fe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabd2fa7b756342ae251e3a7a66670c2fe">LSB</a>(u16)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u16))[0])</td></tr>
<tr class="memdesc:gabd2fa7b756342ae251e3a7a66670c2fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of <em>u16</em>.  <a href="#gabd2fa7b756342ae251e3a7a66670c2fe">More...</a><br /></td></tr>
<tr class="separator:gabd2fa7b756342ae251e3a7a66670c2fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e9046f49816ad27148660f5ba993696"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2e9046f49816ad27148660f5ba993696">MSH</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u32))[1])</td></tr>
<tr class="memdesc:ga2e9046f49816ad27148660f5ba993696"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant half-word of <em>u32</em>.  <a href="#ga2e9046f49816ad27148660f5ba993696">More...</a><br /></td></tr>
<tr class="separator:ga2e9046f49816ad27148660f5ba993696"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae79954742b5a668ce83ab79ac9d9804b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gae79954742b5a668ce83ab79ac9d9804b">LSH</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u32))[0])</td></tr>
<tr class="memdesc:gae79954742b5a668ce83ab79ac9d9804b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant half-word of <em>u32</em>.  <a href="#gae79954742b5a668ce83ab79ac9d9804b">More...</a><br /></td></tr>
<tr class="separator:gae79954742b5a668ce83ab79ac9d9804b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25110f05bdb5b5ea3fcb2854a1a07d7a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">MSB0W</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[3])</td></tr>
<tr class="memdesc:ga25110f05bdb5b5ea3fcb2854a1a07d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 1st rank of <em>u32</em>.  <a href="#ga25110f05bdb5b5ea3fcb2854a1a07d7a">More...</a><br /></td></tr>
<tr class="separator:ga25110f05bdb5b5ea3fcb2854a1a07d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0f90ecd0b0f0e15608a95b8367b77ece"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">MSB1W</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[2])</td></tr>
<tr class="memdesc:ga0f90ecd0b0f0e15608a95b8367b77ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 2nd rank of <em>u32</em>.  <a href="#ga0f90ecd0b0f0e15608a95b8367b77ece">More...</a><br /></td></tr>
<tr class="separator:ga0f90ecd0b0f0e15608a95b8367b77ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0207e10a3c4bcca172463cd5e3ebd865"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">MSB2W</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[1])</td></tr>
<tr class="memdesc:ga0207e10a3c4bcca172463cd5e3ebd865"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 3rd rank of <em>u32</em>.  <a href="#ga0207e10a3c4bcca172463cd5e3ebd865">More...</a><br /></td></tr>
<tr class="separator:ga0207e10a3c4bcca172463cd5e3ebd865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6ab5ac6e3e95525d56d757c9718e352"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">MSB3W</a>(u32)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[0])</td></tr>
<tr class="memdesc:gad6ab5ac6e3e95525d56d757c9718e352"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 4th rank of <em>u32</em>.  <a href="#gad6ab5ac6e3e95525d56d757c9718e352">More...</a><br /></td></tr>
<tr class="separator:gad6ab5ac6e3e95525d56d757c9718e352"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04e75e548b33b9cc22699b4249ff6c64"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga04e75e548b33b9cc22699b4249ff6c64">LSB3W</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">MSB0W</a>(u32)</td></tr>
<tr class="memdesc:ga04e75e548b33b9cc22699b4249ff6c64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 4th rank of <em>u32</em>.  <a href="#ga04e75e548b33b9cc22699b4249ff6c64">More...</a><br /></td></tr>
<tr class="separator:ga04e75e548b33b9cc22699b4249ff6c64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8fda97f8caa00fcfa84f712ee7627d6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad8fda97f8caa00fcfa84f712ee7627d6">LSB2W</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">MSB1W</a>(u32)</td></tr>
<tr class="memdesc:gad8fda97f8caa00fcfa84f712ee7627d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 3rd rank of <em>u32</em>.  <a href="#gad8fda97f8caa00fcfa84f712ee7627d6">More...</a><br /></td></tr>
<tr class="separator:gad8fda97f8caa00fcfa84f712ee7627d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga84cbbcad1971cdb2987418e6ae6cb4ff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga84cbbcad1971cdb2987418e6ae6cb4ff">LSB1W</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">MSB2W</a>(u32)</td></tr>
<tr class="memdesc:ga84cbbcad1971cdb2987418e6ae6cb4ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 2nd rank of <em>u32</em>.  <a href="#ga84cbbcad1971cdb2987418e6ae6cb4ff">More...</a><br /></td></tr>
<tr class="separator:ga84cbbcad1971cdb2987418e6ae6cb4ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ca8582260a8ada6cdd457cf37ba37a7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2ca8582260a8ada6cdd457cf37ba37a7">LSB0W</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">MSB3W</a>(u32)</td></tr>
<tr class="memdesc:ga2ca8582260a8ada6cdd457cf37ba37a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 1st rank of <em>u32</em>.  <a href="#ga2ca8582260a8ada6cdd457cf37ba37a7">More...</a><br /></td></tr>
<tr class="separator:ga2ca8582260a8ada6cdd457cf37ba37a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad71e5e84d2cec4387415a55f5c62b01b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad71e5e84d2cec4387415a55f5c62b01b">MSW</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *)&amp;(u64))[1])</td></tr>
<tr class="memdesc:gad71e5e84d2cec4387415a55f5c62b01b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant word of <em>u64</em>.  <a href="#gad71e5e84d2cec4387415a55f5c62b01b">More...</a><br /></td></tr>
<tr class="separator:gad71e5e84d2cec4387415a55f5c62b01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0633993fb1f2d96a56385f09beed7bc7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0633993fb1f2d96a56385f09beed7bc7">LSW</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *)&amp;(u64))[0])</td></tr>
<tr class="memdesc:ga0633993fb1f2d96a56385f09beed7bc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant word of <em>u64</em>.  <a href="#ga0633993fb1f2d96a56385f09beed7bc7">More...</a><br /></td></tr>
<tr class="separator:ga0633993fb1f2d96a56385f09beed7bc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga280d6a94884872f6a5be80c873e8adc1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga280d6a94884872f6a5be80c873e8adc1">MSH0</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[3])</td></tr>
<tr class="memdesc:ga280d6a94884872f6a5be80c873e8adc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant half-word of 1st rank of <em>u64</em>.  <a href="#ga280d6a94884872f6a5be80c873e8adc1">More...</a><br /></td></tr>
<tr class="separator:ga280d6a94884872f6a5be80c873e8adc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43de4fac62f938ff4eb448a87522ec0e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga43de4fac62f938ff4eb448a87522ec0e">MSH1</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[2])</td></tr>
<tr class="memdesc:ga43de4fac62f938ff4eb448a87522ec0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant half-word of 2nd rank of <em>u64</em>.  <a href="#ga43de4fac62f938ff4eb448a87522ec0e">More...</a><br /></td></tr>
<tr class="separator:ga43de4fac62f938ff4eb448a87522ec0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d32ec744212194c8106c51b89a5dfe9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5d32ec744212194c8106c51b89a5dfe9">MSH2</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[1])</td></tr>
<tr class="memdesc:ga5d32ec744212194c8106c51b89a5dfe9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant half-word of 3rd rank of <em>u64</em>.  <a href="#ga5d32ec744212194c8106c51b89a5dfe9">More...</a><br /></td></tr>
<tr class="separator:ga5d32ec744212194c8106c51b89a5dfe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabb233f238b63c12d2ff361d9ddb3114b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabb233f238b63c12d2ff361d9ddb3114b">MSH3</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[0])</td></tr>
<tr class="memdesc:gabb233f238b63c12d2ff361d9ddb3114b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant half-word of 4th rank of <em>u64</em>.  <a href="#gabb233f238b63c12d2ff361d9ddb3114b">More...</a><br /></td></tr>
<tr class="separator:gabb233f238b63c12d2ff361d9ddb3114b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1ec33d340ef17c91cb0530d00ccb0ea8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1ec33d340ef17c91cb0530d00ccb0ea8">LSH3</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga280d6a94884872f6a5be80c873e8adc1">MSH0</a>(u64)</td></tr>
<tr class="memdesc:ga1ec33d340ef17c91cb0530d00ccb0ea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant half-word of 4th rank of <em>u64</em>.  <a href="#ga1ec33d340ef17c91cb0530d00ccb0ea8">More...</a><br /></td></tr>
<tr class="separator:ga1ec33d340ef17c91cb0530d00ccb0ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2efccfe683ebf7d89a972fbbdea2c26d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2efccfe683ebf7d89a972fbbdea2c26d">LSH2</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga43de4fac62f938ff4eb448a87522ec0e">MSH1</a>(u64)</td></tr>
<tr class="memdesc:ga2efccfe683ebf7d89a972fbbdea2c26d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant half-word of 3rd rank of <em>u64</em>.  <a href="#ga2efccfe683ebf7d89a972fbbdea2c26d">More...</a><br /></td></tr>
<tr class="separator:ga2efccfe683ebf7d89a972fbbdea2c26d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac593b0be4555d883b4297b45cffc4168"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac593b0be4555d883b4297b45cffc4168">LSH1</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5d32ec744212194c8106c51b89a5dfe9">MSH2</a>(u64)</td></tr>
<tr class="memdesc:gac593b0be4555d883b4297b45cffc4168"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant half-word of 2nd rank of <em>u64</em>.  <a href="#gac593b0be4555d883b4297b45cffc4168">More...</a><br /></td></tr>
<tr class="separator:gac593b0be4555d883b4297b45cffc4168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3026b9288b45a9794fd3eb585cbe10bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga3026b9288b45a9794fd3eb585cbe10bc">LSH0</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gabb233f238b63c12d2ff361d9ddb3114b">MSH3</a>(u64)</td></tr>
<tr class="memdesc:ga3026b9288b45a9794fd3eb585cbe10bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant half-word of 1st rank of <em>u64</em>.  <a href="#ga3026b9288b45a9794fd3eb585cbe10bc">More...</a><br /></td></tr>
<tr class="separator:ga3026b9288b45a9794fd3eb585cbe10bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f24ecf381776ee415991a545a05e4c7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5f24ecf381776ee415991a545a05e4c7">MSB0D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[7])</td></tr>
<tr class="memdesc:ga5f24ecf381776ee415991a545a05e4c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 1st rank of <em>u64</em>.  <a href="#ga5f24ecf381776ee415991a545a05e4c7">More...</a><br /></td></tr>
<tr class="separator:ga5f24ecf381776ee415991a545a05e4c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97a0ab6790df95cb4d8021d8850487f8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga97a0ab6790df95cb4d8021d8850487f8">MSB1D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[6])</td></tr>
<tr class="memdesc:ga97a0ab6790df95cb4d8021d8850487f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 2nd rank of <em>u64</em>.  <a href="#ga97a0ab6790df95cb4d8021d8850487f8">More...</a><br /></td></tr>
<tr class="separator:ga97a0ab6790df95cb4d8021d8850487f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4ceacba543e7b8617ca4bd075abb146"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad4ceacba543e7b8617ca4bd075abb146">MSB2D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[5])</td></tr>
<tr class="memdesc:gad4ceacba543e7b8617ca4bd075abb146"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 3rd rank of <em>u64</em>.  <a href="#gad4ceacba543e7b8617ca4bd075abb146">More...</a><br /></td></tr>
<tr class="separator:gad4ceacba543e7b8617ca4bd075abb146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7972d3282ec9ecb97afa34e848ede2c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaf7972d3282ec9ecb97afa34e848ede2c">MSB3D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[4])</td></tr>
<tr class="memdesc:gaf7972d3282ec9ecb97afa34e848ede2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 4th rank of <em>u64</em>.  <a href="#gaf7972d3282ec9ecb97afa34e848ede2c">More...</a><br /></td></tr>
<tr class="separator:gaf7972d3282ec9ecb97afa34e848ede2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c891624c33b13808633af8dbcaafa5f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1c891624c33b13808633af8dbcaafa5f">MSB4D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[3])</td></tr>
<tr class="memdesc:ga1c891624c33b13808633af8dbcaafa5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 5th rank of <em>u64</em>.  <a href="#ga1c891624c33b13808633af8dbcaafa5f">More...</a><br /></td></tr>
<tr class="separator:ga1c891624c33b13808633af8dbcaafa5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e61db58aaf5cbb3051240cdcb1b5147"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5e61db58aaf5cbb3051240cdcb1b5147">MSB5D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[2])</td></tr>
<tr class="memdesc:ga5e61db58aaf5cbb3051240cdcb1b5147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 6th rank of <em>u64</em>.  <a href="#ga5e61db58aaf5cbb3051240cdcb1b5147">More...</a><br /></td></tr>
<tr class="separator:ga5e61db58aaf5cbb3051240cdcb1b5147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb8062d046ca06f5c28c9a015997494b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gacb8062d046ca06f5c28c9a015997494b">MSB6D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[1])</td></tr>
<tr class="memdesc:gacb8062d046ca06f5c28c9a015997494b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 7th rank of <em>u64</em>.  <a href="#gacb8062d046ca06f5c28c9a015997494b">More...</a><br /></td></tr>
<tr class="separator:gacb8062d046ca06f5c28c9a015997494b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0cbce69964fa2dd7bf05911d0b99b014"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga0cbce69964fa2dd7bf05911d0b99b014">MSB7D</a>(u64)&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[0])</td></tr>
<tr class="memdesc:ga0cbce69964fa2dd7bf05911d0b99b014"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 8th rank of <em>u64</em>.  <a href="#ga0cbce69964fa2dd7bf05911d0b99b014">More...</a><br /></td></tr>
<tr class="separator:ga0cbce69964fa2dd7bf05911d0b99b014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga79fb849e13082fdd4adb02debbad7f1a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga79fb849e13082fdd4adb02debbad7f1a">LSB7D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5f24ecf381776ee415991a545a05e4c7">MSB0D</a>(u64)</td></tr>
<tr class="memdesc:ga79fb849e13082fdd4adb02debbad7f1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 8th rank of <em>u64</em>.  <a href="#ga79fb849e13082fdd4adb02debbad7f1a">More...</a><br /></td></tr>
<tr class="separator:ga79fb849e13082fdd4adb02debbad7f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab90afefaf3b5cb2507ab3c496d8f643c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab90afefaf3b5cb2507ab3c496d8f643c">LSB6D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga97a0ab6790df95cb4d8021d8850487f8">MSB1D</a>(u64)</td></tr>
<tr class="memdesc:gab90afefaf3b5cb2507ab3c496d8f643c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 7th rank of <em>u64</em>.  <a href="#gab90afefaf3b5cb2507ab3c496d8f643c">More...</a><br /></td></tr>
<tr class="separator:gab90afefaf3b5cb2507ab3c496d8f643c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac379acb246797736332fa1b8ae481b34"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac379acb246797736332fa1b8ae481b34">LSB5D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad4ceacba543e7b8617ca4bd075abb146">MSB2D</a>(u64)</td></tr>
<tr class="memdesc:gac379acb246797736332fa1b8ae481b34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 6th rank of <em>u64</em>.  <a href="#gac379acb246797736332fa1b8ae481b34">More...</a><br /></td></tr>
<tr class="separator:gac379acb246797736332fa1b8ae481b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaab745f30b9b841f9ccd9ace0a5a1a9e5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaab745f30b9b841f9ccd9ace0a5a1a9e5">LSB4D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gaf7972d3282ec9ecb97afa34e848ede2c">MSB3D</a>(u64)</td></tr>
<tr class="memdesc:gaab745f30b9b841f9ccd9ace0a5a1a9e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 5th rank of <em>u64</em>.  <a href="#gaab745f30b9b841f9ccd9ace0a5a1a9e5">More...</a><br /></td></tr>
<tr class="separator:gaab745f30b9b841f9ccd9ace0a5a1a9e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99213c01b979c347950eba4277f0499a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga99213c01b979c347950eba4277f0499a">LSB3D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga1c891624c33b13808633af8dbcaafa5f">MSB4D</a>(u64)</td></tr>
<tr class="memdesc:ga99213c01b979c347950eba4277f0499a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 4th rank of <em>u64</em>.  <a href="#ga99213c01b979c347950eba4277f0499a">More...</a><br /></td></tr>
<tr class="separator:ga99213c01b979c347950eba4277f0499a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba3bea07dcc4a37039b7effd4da03b9e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaba3bea07dcc4a37039b7effd4da03b9e">LSB2D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5e61db58aaf5cbb3051240cdcb1b5147">MSB5D</a>(u64)</td></tr>
<tr class="memdesc:gaba3bea07dcc4a37039b7effd4da03b9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 3rd rank of <em>u64</em>.  <a href="#gaba3bea07dcc4a37039b7effd4da03b9e">More...</a><br /></td></tr>
<tr class="separator:gaba3bea07dcc4a37039b7effd4da03b9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga42179f159b798116eb615102a549aa85"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga42179f159b798116eb615102a549aa85">LSB1D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gacb8062d046ca06f5c28c9a015997494b">MSB6D</a>(u64)</td></tr>
<tr class="memdesc:ga42179f159b798116eb615102a549aa85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 2nd rank of <em>u64</em>.  <a href="#ga42179f159b798116eb615102a549aa85">More...</a><br /></td></tr>
<tr class="separator:ga42179f159b798116eb615102a549aa85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e20f5ef87ccf0ad44c1d49d6ffd80a3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2e20f5ef87ccf0ad44c1d49d6ffd80a3">LSB0D</a>(u64)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0cbce69964fa2dd7bf05911d0b99b014">MSB7D</a>(u64)</td></tr>
<tr class="memdesc:ga2e20f5ef87ccf0ad44c1d49d6ffd80a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 1st rank of <em>u64</em>.  <a href="#ga2e20f5ef87ccf0ad44c1d49d6ffd80a3">More...</a><br /></td></tr>
<tr class="separator:ga2e20f5ef87ccf0ad44c1d49d6ffd80a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga34c0ccbaef341c224a18eb4dcaf44407"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga34c0ccbaef341c224a18eb4dcaf44407">BE16</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td></tr>
<tr class="separator:ga34c0ccbaef341c224a18eb4dcaf44407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga54d648861a1120a3f8d6255e9cf54125"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga54d648861a1120a3f8d6255e9cf54125">LE16</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga54d648861a1120a3f8d6255e9cf54125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga65e9510f535c1ee2f826d447471289fa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga65e9510f535c1ee2f826d447471289fa">le16_to_cpu</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga65e9510f535c1ee2f826d447471289fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeda3065f344779edb9023e22d84d5f92"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaeda3065f344779edb9023e22d84d5f92">cpu_to_le16</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gaeda3065f344779edb9023e22d84d5f92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0da5576d76569d3a7452897a91ea0e6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa0da5576d76569d3a7452897a91ea0e6">LE16_TO_CPU</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gaa0da5576d76569d3a7452897a91ea0e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa3d310efe7cd6126823b8721852d7e56"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaa3d310efe7cd6126823b8721852d7e56">CPU_TO_LE16</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gaa3d310efe7cd6126823b8721852d7e56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48f33ad7b3de0010e5c802ced48f8a7b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga48f33ad7b3de0010e5c802ced48f8a7b">be16_to_cpu</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td></tr>
<tr class="separator:ga48f33ad7b3de0010e5c802ced48f8a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf42a6506135fe9e671c40973bacc849f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaf42a6506135fe9e671c40973bacc849f">cpu_to_be16</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td></tr>
<tr class="separator:gaf42a6506135fe9e671c40973bacc849f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1d027e9e570b4714b2e7e7fbd4b1e9e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac1d027e9e570b4714b2e7e7fbd4b1e9e">BE16_TO_CPU</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td></tr>
<tr class="separator:gac1d027e9e570b4714b2e7e7fbd4b1e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea91d96b724b4a83b28c7c91cd920db4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaea91d96b724b4a83b28c7c91cd920db4">CPU_TO_BE16</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td></tr>
<tr class="separator:gaea91d96b724b4a83b28c7c91cd920db4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48f527b00bc1d5e46366d720280a1039"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga48f527b00bc1d5e46366d720280a1039">le32_to_cpu</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga48f527b00bc1d5e46366d720280a1039"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d5ae0c36d519a1b0a789db69a598f28"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga1d5ae0c36d519a1b0a789db69a598f28">cpu_to_le32</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga1d5ae0c36d519a1b0a789db69a598f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga488a93b151ee4920c0a117fe66cc2efb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga488a93b151ee4920c0a117fe66cc2efb">LE32_TO_CPU</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:ga488a93b151ee4920c0a117fe66cc2efb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac904d01eec66efc89dba5a687749d5f5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gac904d01eec66efc89dba5a687749d5f5">CPU_TO_LE32</a>(x)&#160;&#160;&#160;(x)</td></tr>
<tr class="separator:gac904d01eec66efc89dba5a687749d5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga650ecb20996a13e0c0bc530ba83fe5dc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga650ecb20996a13e0c0bc530ba83fe5dc">be32_to_cpu</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td></tr>
<tr class="separator:ga650ecb20996a13e0c0bc530ba83fe5dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafd3274bb70aea7cf9be403940e001cc7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gafd3274bb70aea7cf9be403940e001cc7">cpu_to_be32</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td></tr>
<tr class="separator:gafd3274bb70aea7cf9be403940e001cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad6fd2e5e0a54fb6300fe98868141175e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad6fd2e5e0a54fb6300fe98868141175e">BE32_TO_CPU</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td></tr>
<tr class="separator:gad6fd2e5e0a54fb6300fe98868141175e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabe5b68e77b7f6870895076278368d201"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabe5b68e77b7f6870895076278368d201">CPU_TO_BE32</a>(x)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td></tr>
<tr class="separator:gabe5b68e77b7f6870895076278368d201"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Endianism Conversion</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrpdbefbc0e3fd569bb2d3a4f2dd9915efb"></a>The same considerations as for clz and ctz apply here but GCC's __builtin_bswap_32 and __builtin_bswap_64 do not behave like macros when applied to constant expressions, so two sets of macros are defined here:</p><ul>
<li>Swap16, Swap32 and Swap64 to apply to constant expressions (values known at compile time);</li>
<li>swap16, swap32 and swap64 to apply to non-constant expressions (values unknown at compile time). </li>
</ul>
</td></tr>
<tr class="memitem:gadc9a009f53db3e7c3294ee6bc1027dca"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(u16)</td></tr>
<tr class="memdesc:gadc9a009f53db3e7c3294ee6bc1027dca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u16</em> (by swapping its bytes).  <a href="#gadc9a009f53db3e7c3294ee6bc1027dca">More...</a><br /></td></tr>
<tr class="separator:gadc9a009f53db3e7c3294ee6bc1027dca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5e9bc2e3b3e43eadc3210b02cab6ac64"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a>(u32)</td></tr>
<tr class="memdesc:ga5e9bc2e3b3e43eadc3210b02cab6ac64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u32</em> (by swapping its bytes).  <a href="#ga5e9bc2e3b3e43eadc3210b02cab6ac64">More...</a><br /></td></tr>
<tr class="separator:ga5e9bc2e3b3e43eadc3210b02cab6ac64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga33f3049d9b8374e8b93d5642bfe7f426"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga33f3049d9b8374e8b93d5642bfe7f426">Swap64</a>(u64)</td></tr>
<tr class="memdesc:ga33f3049d9b8374e8b93d5642bfe7f426"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u64</em> (by swapping its bytes).  <a href="#ga33f3049d9b8374e8b93d5642bfe7f426">More...</a><br /></td></tr>
<tr class="separator:ga33f3049d9b8374e8b93d5642bfe7f426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3067f71c33a89726a107430050253045"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga3067f71c33a89726a107430050253045">swap16</a>(u16)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(u16)</td></tr>
<tr class="memdesc:ga3067f71c33a89726a107430050253045"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u16</em> (by swapping its bytes).  <a href="#ga3067f71c33a89726a107430050253045">More...</a><br /></td></tr>
<tr class="separator:ga3067f71c33a89726a107430050253045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga46025d8a12ccc9f4268c84e56c457416"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a>(u32)</td></tr>
<tr class="memdesc:ga46025d8a12ccc9f4268c84e56c457416"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u32</em> (by swapping its bytes).  <a href="#ga46025d8a12ccc9f4268c84e56c457416">More...</a><br /></td></tr>
<tr class="separator:ga46025d8a12ccc9f4268c84e56c457416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga78484801bd5bea7d382b34a4ed1f345d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga78484801bd5bea7d382b34a4ed1f345d">swap64</a>(u64)</td></tr>
<tr class="memdesc:ga78484801bd5bea7d382b34a4ed1f345d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the endianism of <em>u64</em> (by swapping its bytes).  <a href="#ga78484801bd5bea7d382b34a4ed1f345d">More...</a><br /></td></tr>
<tr class="separator:ga78484801bd5bea7d382b34a4ed1f345d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Target Abstraction</h2></td></tr>
<tr class="memitem:ga5b4c52e7ace584fa8e8f079801831d29"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5b4c52e7ace584fa8e8f079801831d29">Byte</a></td></tr>
<tr class="memdesc:ga5b4c52e7ace584fa8e8f079801831d29"><td class="mdescLeft">&#160;</td><td class="mdescRight">8-bit unsigned integer.  <a href="#ga5b4c52e7ace584fa8e8f079801831d29">More...</a><br /></td></tr>
<tr class="separator:ga5b4c52e7ace584fa8e8f079801831d29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4d03be3b8f3d15ed804170a1311ec98"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gad4d03be3b8f3d15ed804170a1311ec98">_GLOBEXT_</a>&#160;&#160;&#160;extern</td></tr>
<tr class="memdesc:gad4d03be3b8f3d15ed804170a1311ec98"><td class="mdescLeft">&#160;</td><td class="mdescRight">extern storage-class specifier.  <a href="#gad4d03be3b8f3d15ed804170a1311ec98">More...</a><br /></td></tr>
<tr class="separator:gad4d03be3b8f3d15ed804170a1311ec98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e0d79d43ad9295d5193ca29f109a762"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga8e0d79d43ad9295d5193ca29f109a762">_CONST_TYPE_</a>&#160;&#160;&#160;const</td></tr>
<tr class="memdesc:ga8e0d79d43ad9295d5193ca29f109a762"><td class="mdescLeft">&#160;</td><td class="mdescRight">const type qualifier.  <a href="#ga8e0d79d43ad9295d5193ca29f109a762">More...</a><br /></td></tr>
<tr class="separator:ga8e0d79d43ad9295d5193ca29f109a762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga35d552e8456cfb2b810baa0a9212c98e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga35d552e8456cfb2b810baa0a9212c98e">_MEM_TYPE_SLOW_</a></td></tr>
<tr class="memdesc:ga35d552e8456cfb2b810baa0a9212c98e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Slow memory type.  <a href="#ga35d552e8456cfb2b810baa0a9212c98e">More...</a><br /></td></tr>
<tr class="separator:ga35d552e8456cfb2b810baa0a9212c98e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadcd997c76f95854090b17513c4ef3891"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gadcd997c76f95854090b17513c4ef3891">_MEM_TYPE_MEDFAST_</a></td></tr>
<tr class="memdesc:gadcd997c76f95854090b17513c4ef3891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fairly fast memory type.  <a href="#gadcd997c76f95854090b17513c4ef3891">More...</a><br /></td></tr>
<tr class="separator:gadcd997c76f95854090b17513c4ef3891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf669e579471cadcf68d9ffc440e68b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gabf669e579471cadcf68d9ffc440e68b1">_MEM_TYPE_FAST_</a></td></tr>
<tr class="memdesc:gabf669e579471cadcf68d9ffc440e68b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fast memory type.  <a href="#gabf669e579471cadcf68d9ffc440e68b1">More...</a><br /></td></tr>
<tr class="separator:gabf669e579471cadcf68d9ffc440e68b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga27819e952caa0a535a5901d2857834b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga27819e952caa0a535a5901d2857834b7">memcmp_ram2ram</a>&#160;&#160;&#160;memcmp</td></tr>
<tr class="memdesc:ga27819e952caa0a535a5901d2857834b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target-specific memcmp of RAM to RAM.  <a href="#ga27819e952caa0a535a5901d2857834b7">More...</a><br /></td></tr>
<tr class="separator:ga27819e952caa0a535a5901d2857834b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab914bad47205a9b7afb9ac53ec71cb55"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gab914bad47205a9b7afb9ac53ec71cb55">memcmp_code2ram</a>&#160;&#160;&#160;memcmp</td></tr>
<tr class="memdesc:gab914bad47205a9b7afb9ac53ec71cb55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target-specific memcmp of RAM to NVRAM.  <a href="#gab914bad47205a9b7afb9ac53ec71cb55">More...</a><br /></td></tr>
<tr class="separator:gab914bad47205a9b7afb9ac53ec71cb55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9a4ff08e7c4cf79135a3bcbab68472b7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga9a4ff08e7c4cf79135a3bcbab68472b7">memcpy_ram2ram</a>&#160;&#160;&#160;memcpy</td></tr>
<tr class="memdesc:ga9a4ff08e7c4cf79135a3bcbab68472b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target-specific memcpy from RAM to RAM.  <a href="#ga9a4ff08e7c4cf79135a3bcbab68472b7">More...</a><br /></td></tr>
<tr class="separator:ga9a4ff08e7c4cf79135a3bcbab68472b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55724cc8f7d42eba122dac5bffa00024"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga55724cc8f7d42eba122dac5bffa00024">memcpy_code2ram</a>&#160;&#160;&#160;memcpy</td></tr>
<tr class="memdesc:ga55724cc8f7d42eba122dac5bffa00024"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target-specific memcpy from NVRAM to RAM.  <a href="#ga55724cc8f7d42eba122dac5bffa00024">More...</a><br /></td></tr>
<tr class="separator:ga55724cc8f7d42eba122dac5bffa00024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga844ec34df36feb927dc92007af14674a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga844ec34df36feb927dc92007af14674a">LSB0</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga2ca8582260a8ada6cdd457cf37ba37a7">LSB0W</a>(u32)</td></tr>
<tr class="memdesc:ga844ec34df36feb927dc92007af14674a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 1st rank of <em>u32</em>.  <a href="#ga844ec34df36feb927dc92007af14674a">More...</a><br /></td></tr>
<tr class="separator:ga844ec34df36feb927dc92007af14674a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2d1e45154b07481f0579ecc725e4edff"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga2d1e45154b07481f0579ecc725e4edff">LSB1</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga84cbbcad1971cdb2987418e6ae6cb4ff">LSB1W</a>(u32)</td></tr>
<tr class="memdesc:ga2d1e45154b07481f0579ecc725e4edff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 2nd rank of <em>u32</em>.  <a href="#ga2d1e45154b07481f0579ecc725e4edff">More...</a><br /></td></tr>
<tr class="separator:ga2d1e45154b07481f0579ecc725e4edff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8967f5ae0174b01ce44c502ebd14035a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga8967f5ae0174b01ce44c502ebd14035a">LSB2</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad8fda97f8caa00fcfa84f712ee7627d6">LSB2W</a>(u32)</td></tr>
<tr class="memdesc:ga8967f5ae0174b01ce44c502ebd14035a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 3rd rank of <em>u32</em>.  <a href="#ga8967f5ae0174b01ce44c502ebd14035a">More...</a><br /></td></tr>
<tr class="separator:ga8967f5ae0174b01ce44c502ebd14035a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d9ff393e7c8764112a1167db19b16b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga5d9ff393e7c8764112a1167db19b16b1">LSB3</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga04e75e548b33b9cc22699b4249ff6c64">LSB3W</a>(u32)</td></tr>
<tr class="memdesc:ga5d9ff393e7c8764112a1167db19b16b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Least significant byte of 4th rank of <em>u32</em>.  <a href="#ga5d9ff393e7c8764112a1167db19b16b1">More...</a><br /></td></tr>
<tr class="separator:ga5d9ff393e7c8764112a1167db19b16b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeeb8918fc580ce01d45f71863eebff90"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gaeeb8918fc580ce01d45f71863eebff90">MSB3</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">MSB3W</a>(u32)</td></tr>
<tr class="memdesc:gaeeb8918fc580ce01d45f71863eebff90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 4th rank of <em>u32</em>.  <a href="#gaeeb8918fc580ce01d45f71863eebff90">More...</a><br /></td></tr>
<tr class="separator:gaeeb8918fc580ce01d45f71863eebff90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8683254be29bcfe3cf2fa646890d3942"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga8683254be29bcfe3cf2fa646890d3942">MSB2</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">MSB2W</a>(u32)</td></tr>
<tr class="memdesc:ga8683254be29bcfe3cf2fa646890d3942"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 3rd rank of <em>u32</em>.  <a href="#ga8683254be29bcfe3cf2fa646890d3942">More...</a><br /></td></tr>
<tr class="separator:ga8683254be29bcfe3cf2fa646890d3942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3facab9f8ebf70ad6e16038465e2bedc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#ga3facab9f8ebf70ad6e16038465e2bedc">MSB1</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">MSB1W</a>(u32)</td></tr>
<tr class="memdesc:ga3facab9f8ebf70ad6e16038465e2bedc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 2nd rank of <em>u32</em>.  <a href="#ga3facab9f8ebf70ad6e16038465e2bedc">More...</a><br /></td></tr>
<tr class="separator:ga3facab9f8ebf70ad6e16038465e2bedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb81783b8186acd7182a971048b0c6b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__group__sam__utils.xhtml#gafb81783b8186acd7182a971048b0c6b3">MSB0</a>(u32)&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">MSB0W</a>(u32)</td></tr>
<tr class="memdesc:gafb81783b8186acd7182a971048b0c6b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Most significant byte of 1st rank of <em>u32</em>.  <a href="#gafb81783b8186acd7182a971048b0c6b3">More...</a><br /></td></tr>
<tr class="separator:gafb81783b8186acd7182a971048b0c6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Compiler abstraction layer and code utilities for AT91SAM. </p>
<p>This module provides various abstraction layers and utilities to make code compatible between different compilers. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga8e0d79d43ad9295d5193ca29f109a762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8e0d79d43ad9295d5193ca29f109a762">&sect;&nbsp;</a></span>_CONST_TYPE_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _CONST_TYPE_&#160;&#160;&#160;const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>const type qualifier. </p>

</div>
</div>
<a id="gad4d03be3b8f3d15ed804170a1311ec98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4d03be3b8f3d15ed804170a1311ec98">&sect;&nbsp;</a></span>_GLOBEXT_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _GLOBEXT_&#160;&#160;&#160;extern</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>extern storage-class specifier. </p>

</div>
</div>
<a id="gabf669e579471cadcf68d9ffc440e68b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf669e579471cadcf68d9ffc440e68b1">&sect;&nbsp;</a></span>_MEM_TYPE_FAST_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _MEM_TYPE_FAST_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fast memory type. </p>

</div>
</div>
<a id="gadcd997c76f95854090b17513c4ef3891"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadcd997c76f95854090b17513c4ef3891">&sect;&nbsp;</a></span>_MEM_TYPE_MEDFAST_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _MEM_TYPE_MEDFAST_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fairly fast memory type. </p>

</div>
</div>
<a id="ga35d552e8456cfb2b810baa0a9212c98e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga35d552e8456cfb2b810baa0a9212c98e">&sect;&nbsp;</a></span>_MEM_TYPE_SLOW_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _MEM_TYPE_SLOW_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Slow memory type. </p>

</div>
</div>
<a id="gae56b0282c58a65969c092e1eeeedd6f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae56b0282c58a65969c092e1eeeedd6f5">&sect;&nbsp;</a></span>Abs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Abs</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a</td><td>)</td>
          <td>&#160;&#160;&#160;(((a) &lt;  0 ) ? -(a) : (a))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the absolute value of <em>a</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Absolute value of <em>a</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="gac4609178e5c825e815f44fa123dcaaf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac4609178e5c825e815f44fa123dcaaf7">&sect;&nbsp;</a></span>ADDR_COPY_DST_SRC_16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ADDR_COPY_DST_SRC_16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">dst, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">src&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((dst) = (src))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga0454afa80924c2183c8c672c043440cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0454afa80924c2183c8c672c043440cc">&sect;&nbsp;</a></span>ADDR_COPY_DST_SRC_64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ADDR_COPY_DST_SRC_64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">dst, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">src&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((dst) = (src))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga1070d94a69b4e1955ac1723b4f382095"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1070d94a69b4e1955ac1723b4f382095">&sect;&nbsp;</a></span>Align_down</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Align_down</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (val)              &amp; ~((n) - 1))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Aligns the number <em>val</em> with the lower <em>n</em> boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>Input value. </td></tr>
    <tr><td class="paramname">n</td><td>Boundary.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from the number <em>val</em> aligned with the lower <em>n</em> boundary. </dd></dl>

</div>
</div>
<a id="ga2bac987572902a9a7b69442541d78c42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2bac987572902a9a7b69442541d78c42">&sect;&nbsp;</a></span>Align_up</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Align_up</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((val) + ((n) - 1)) &amp; ~((n) - 1))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Aligns the number <em>val</em> with the upper <em>n</em> boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>Input value. </td></tr>
    <tr><td class="paramname">n</td><td>Boundary.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from the number <em>val</em> aligned with the upper <em>n</em> boundary. </dd></dl>

</div>
</div>
<a id="gaab1e54dcc40192f9704e8b252635450f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab1e54dcc40192f9704e8b252635450f">&sect;&nbsp;</a></span>Assert</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Assert</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">expr</td><td>)</td>
          <td>&#160;&#160;&#160;((void) 0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This macro is used to test fatal errors. </p>
<p>The macro tests if the expression is false. If it is, a fatal error is detected and the application hangs up. If TEST_SUITE_DEFINE_ASSERT_MACRO is defined, a unit test version of the macro is used, to allow execution of further tests after a false expression.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">expr</td><td>Expression to evaluate and supposed to be nonzero. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga53290ac2df2384738b8769c76622f803"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga53290ac2df2384738b8769c76622f803">&sect;&nbsp;</a></span>barrier</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define barrier</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;__DMB()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Memory barrier. </p>

</div>
</div>
<a id="ga34c0ccbaef341c224a18eb4dcaf44407"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga34c0ccbaef341c224a18eb4dcaf44407">&sect;&nbsp;</a></span>BE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga48f33ad7b3de0010e5c802ced48f8a7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga48f33ad7b3de0010e5c802ced48f8a7b">&sect;&nbsp;</a></span>be16_to_cpu</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define be16_to_cpu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac1d027e9e570b4714b2e7e7fbd4b1e9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac1d027e9e570b4714b2e7e7fbd4b1e9e">&sect;&nbsp;</a></span>BE16_TO_CPU</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BE16_TO_CPU</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga650ecb20996a13e0c0bc530ba83fe5dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga650ecb20996a13e0c0bc530ba83fe5dc">&sect;&nbsp;</a></span>be32_to_cpu</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define be32_to_cpu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gad6fd2e5e0a54fb6300fe98868141175e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad6fd2e5e0a54fb6300fe98868141175e">&sect;&nbsp;</a></span>BE32_TO_CPU</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BE32_TO_CPU</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabab01124189eab03857671c05abfe377"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabab01124189eab03857671c05abfe377">&sect;&nbsp;</a></span>bit_reverse16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define bit_reverse16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u16</td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(<a class="el" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(u16)) &gt;&gt; 16))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reverses the bits of <em>u16</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u16</td><td>U16 of which to reverse the bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u16</em> with reversed bits. </dd></dl>

</div>
</div>
<a id="gaff755a5c107b5e28e5b846c5f122e69f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaff755a5c107b5e28e5b846c5f122e69f">&sect;&nbsp;</a></span>bit_reverse32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define bit_reverse32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;__RBIT(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reverses the bits of <em>u32</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u32</td><td>U32 of which to reverse the bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u32</em> with reversed bits. </dd></dl>

</div>
</div>
<a id="ga7f3f2d786440776bab3f688cbd1e8030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7f3f2d786440776bab3f688cbd1e8030">&sect;&nbsp;</a></span>bit_reverse64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define bit_reverse64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64) &gt;&gt; 32)) |\</div><div class="line">                                   ((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64)) &lt;&lt; 32)))</div><div class="ttc" id="group__group__sam__utils_xhtml_gaff755a5c107b5e28e5b846c5f122e69f"><div class="ttname"><a href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a></div><div class="ttdeci">#define bit_reverse32(u32)</div><div class="ttdoc">Reverses the bits of u32. </div><div class="ttdef"><b>Definition:</b> compiler.h:697</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga25809e0734a149248fcf5831efa4e33d"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></div><div class="ttdeci">uint64_t U64</div><div class="ttdoc">64-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:267</div></div>
</div><!-- fragment -->
<p>Reverses the bits of <em>u64</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u64</td><td>U64 of which to reverse the bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u64</em> with reversed bits. </dd></dl>

</div>
</div>
<a id="gaef8832dcae9aaac78c5ebe91fc33084b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaef8832dcae9aaac78c5ebe91fc33084b">&sect;&nbsp;</a></span>bit_reverse8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define bit_reverse8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u8</td><td>)</td>
          <td>&#160;&#160;&#160;((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>)(<a class="el" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">bit_reverse32</a>((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>)(u8)) &gt;&gt; 24))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reverses the bits of <em>u8</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u8</td><td>U8 of which to reverse the bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u8</em> with reversed bits. </dd></dl>

</div>
</div>
<a id="ga5fd2d3ed2fc9234277b659b67d33bc64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5fd2d3ed2fc9234277b659b67d33bc64">&sect;&nbsp;</a></span>CCPU_ENDIAN_TO_LE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CCPU_ENDIAN_TO_LE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga1e3290451e5c7b98175911c9219b5123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1e3290451e5c7b98175911c9219b5123">&sect;&nbsp;</a></span>CCPU_ENDIAN_TO_LE32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CCPU_ENDIAN_TO_LE32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga00483bf27ea1e8a2143c6baf22b31f16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00483bf27ea1e8a2143c6baf22b31f16">&sect;&nbsp;</a></span>CCPU_ENDIAN_TO_LE64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CCPU_ENDIAN_TO_LE64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga4ac6e032d1ce0ae6d2e460da93ce8732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ac6e032d1ce0ae6d2e460da93ce8732">&sect;&nbsp;</a></span>CLE16_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CLE16_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3ff07a7496222efe8bc7d7b7b0342b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3ff07a7496222efe8bc7d7b7b0342b0d">&sect;&nbsp;</a></span>CLE32_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CLE32_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gacbbba93256e2d892c748d56a42f00f9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacbbba93256e2d892c748d56a42f00f9b">&sect;&nbsp;</a></span>CLE64_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CLE64_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaffbccbb234075f838e181522c864605f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaffbccbb234075f838e181522c864605f">&sect;&nbsp;</a></span>Clr_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Clr_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lvalue, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((lvalue) &amp;= ~(mask))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the bits of a C lvalue specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lvalue</td><td>C lvalue of which to clear bits. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to clear.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Resulting value with cleared bits. </dd></dl>

</div>
</div>
<a id="ga004f88903a09b9c23017e697eaf5a845"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga004f88903a09b9c23017e697eaf5a845">&sect;&nbsp;</a></span>clz</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define clz</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Counts the leading zero bits of the given value considered as a 32-bit integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>Value of which to count the leading zero bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The count of leading zero bits in <em>u</em>. </dd></dl>

</div>
</div>
<a id="gabf2b95fa77301377cdcf79eb615551db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf2b95fa77301377cdcf79eb615551db">&sect;&nbsp;</a></span>CMD_ID_OCTET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMD_ID_OCTET&#160;&#160;&#160;(0)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga38d28b622a4bc7b0f3fb2be2ef1e0086"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga38d28b622a4bc7b0f3fb2be2ef1e0086">&sect;&nbsp;</a></span>COMPILER_PACK_RESET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PACK_RESET</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack())</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set default alignment for subsequent struct and union definitions. </p>

</div>
</div>
<a id="gae2c02ff865ca6538b4b1bddbf2a6876c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae2c02ff865ca6538b4b1bddbf2a6876c">&sect;&nbsp;</a></span>COMPILER_PACK_SET</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PACK_SET</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">alignment</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">COMPILER_PRAGMA</a>(pack(alignment))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set maximum alignment for subsequent struct and union definitions to <em>alignment</em>. </p>

</div>
</div>
<a id="ga85a3ab5701281268521f109ed0078668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga85a3ab5701281268521f109ed0078668">&sect;&nbsp;</a></span>COMPILER_PRAGMA</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define COMPILER_PRAGMA</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arg</td><td>)</td>
          <td>&#160;&#160;&#160;_Pragma(#arg)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Emit the compiler pragma <em>arg</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arg</td><td>The pragma directive as it would appear after <em>#pragma</em> (i.e. not stringified). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga7c15ca0f3159182efc4b80a00768c2c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7c15ca0f3159182efc4b80a00768c2c0">&sect;&nbsp;</a></span>CPU_ENDIAN_TO_LE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_ENDIAN_TO_LE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa2fd4bfb7af44220ce4205e2aa371017"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2fd4bfb7af44220ce4205e2aa371017">&sect;&nbsp;</a></span>CPU_ENDIAN_TO_LE32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_ENDIAN_TO_LE32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga6f1e86f452c8f327f9ca96cbf6a65c81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6f1e86f452c8f327f9ca96cbf6a65c81">&sect;&nbsp;</a></span>CPU_ENDIAN_TO_LE64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_ENDIAN_TO_LE64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaf42a6506135fe9e671c40973bacc849f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf42a6506135fe9e671c40973bacc849f">&sect;&nbsp;</a></span>cpu_to_be16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_to_be16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaea91d96b724b4a83b28c7c91cd920db4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaea91d96b724b4a83b28c7c91cd920db4">&sect;&nbsp;</a></span>CPU_TO_BE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_TO_BE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gafd3274bb70aea7cf9be403940e001cc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafd3274bb70aea7cf9be403940e001cc7">&sect;&nbsp;</a></span>cpu_to_be32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_to_be32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabe5b68e77b7f6870895076278368d201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabe5b68e77b7f6870895076278368d201">&sect;&nbsp;</a></span>CPU_TO_BE32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_TO_BE32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaeda3065f344779edb9023e22d84d5f92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeda3065f344779edb9023e22d84d5f92">&sect;&nbsp;</a></span>cpu_to_le16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_to_le16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa3d310efe7cd6126823b8721852d7e56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa3d310efe7cd6126823b8721852d7e56">&sect;&nbsp;</a></span>CPU_TO_LE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_TO_LE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga1d5ae0c36d519a1b0a789db69a598f28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d5ae0c36d519a1b0a789db69a598f28">&sect;&nbsp;</a></span>cpu_to_le32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_to_le32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac904d01eec66efc89dba5a687749d5f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac904d01eec66efc89dba5a687749d5f5">&sect;&nbsp;</a></span>CPU_TO_LE32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_TO_LE32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab069bfec305db5213465d3b689836404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab069bfec305db5213465d3b689836404">&sect;&nbsp;</a></span>ctz</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ctz</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Counts the trailing zero bits of the given value considered as a 32-bit integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>Value of which to count the trailing zero bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The count of trailing zero bits in <em>u</em>. </dd></dl>

</div>
</div>
<a id="ga99496f7308834e8b220f7894efa0b6ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga99496f7308834e8b220f7894efa0b6ab">&sect;&nbsp;</a></span>DISABLE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DISABLE&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga6d4ebd841bc96041a7f3a61e227c1fb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d4ebd841bc96041a7f3a61e227c1fb2">&sect;&nbsp;</a></span>div_ceil</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define div_ceil</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((a) + (b) - 1) / (b))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate <img class="formulaInl" alt="$ \left\lceil \frac{a}{b} \right\rceil $" src="form_3.png"/> using integer arithmetic. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>An integer </td></tr>
    <tr><td class="paramname">b</td><td>Another integer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>(<em>a</em> / <em>b</em>) rounded up to the nearest integer. </dd></dl>

</div>
</div>
<a id="ga514ad415fb6125ba296793df7d1a468a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga514ad415fb6125ba296793df7d1a468a">&sect;&nbsp;</a></span>ENABLE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ENABLE&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabb508ea8227673f419e9fe3a86c30d8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabb508ea8227673f419e9fe3a86c30d8e">&sect;&nbsp;</a></span>FAIL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FAIL&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga65e9886d74aaee76545e83dd09011727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65e9886d74aaee76545e83dd09011727">&sect;&nbsp;</a></span>false</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define false&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga9b84ecc6b34a71f797ceb8b8f7b8d384"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9b84ecc6b34a71f797ceb8b8f7b8d384">&sect;&nbsp;</a></span>FLASH_DECLARE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FLASH_DECLARE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;const x</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaaef0fd990bb5bd9cdf11334f7c689fd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaef0fd990bb5bd9cdf11334f7c689fd7">&sect;&nbsp;</a></span>FLASH_EXTERN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FLASH_EXTERN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;extern const x</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gacce64924b686dd08a83042b35d0d1480"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacce64924b686dd08a83042b35d0d1480">&sect;&nbsp;</a></span>FUNC_PTR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FUNC_PTR&#160;&#160;&#160;void *</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga526bddb313be14057f5d65e199f6d814"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga526bddb313be14057f5d65e199f6d814">&sect;&nbsp;</a></span>Get_align</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Get_align</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(  <a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>( val, (n) - 1     )   )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets alignment of the number <em>val</em> with respect to the <em>n</em> boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>Input value. </td></tr>
    <tr><td class="paramname">n</td><td>Boundary.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Alignment of the number <em>val</em> with respect to the <em>n</em> boundary. </dd></dl>

</div>
</div>
<a id="ga5bb885982ff66a2e0a0a45a8ee9c35e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5bb885982ff66a2e0a0a45a8ee9c35e2">&sect;&nbsp;</a></span>HIGH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define HIGH&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga15892ad6884af110e5eaaa96994ebaa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga15892ad6884af110e5eaaa96994ebaa9">&sect;&nbsp;</a></span>is_constant</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define is_constant</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">exp</td><td>)</td>
          <td>&#160;&#160;&#160;(0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determine if an expression evaluates to a constant value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">exp</td><td>Any expression</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if <em>exp</em> is constant, false otherwise. </dd></dl>

</div>
</div>
<a id="ga54d648861a1120a3f8d6255e9cf54125"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga54d648861a1120a3f8d6255e9cf54125">&sect;&nbsp;</a></span>LE16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga65e9510f535c1ee2f826d447471289fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65e9510f535c1ee2f826d447471289fa">&sect;&nbsp;</a></span>le16_to_cpu</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define le16_to_cpu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa0da5576d76569d3a7452897a91ea0e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa0da5576d76569d3a7452897a91ea0e6">&sect;&nbsp;</a></span>LE16_TO_CPU</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE16_TO_CPU</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaceb02fdef243c22d2559e260185fb579"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaceb02fdef243c22d2559e260185fb579">&sect;&nbsp;</a></span>LE16_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE16_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga48f527b00bc1d5e46366d720280a1039"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga48f527b00bc1d5e46366d720280a1039">&sect;&nbsp;</a></span>le32_to_cpu</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define le32_to_cpu</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga488a93b151ee4920c0a117fe66cc2efb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga488a93b151ee4920c0a117fe66cc2efb">&sect;&nbsp;</a></span>LE32_TO_CPU</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE32_TO_CPU</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2df63369ef525ba98832132ce5a43346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2df63369ef525ba98832132ce5a43346">&sect;&nbsp;</a></span>LE32_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE32_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab675071ce5a4644b205cdbc858417ccd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab675071ce5a4644b205cdbc858417ccd">&sect;&nbsp;</a></span>LE64_TO_CPU_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LE64_TO_CPU_ENDIAN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gac082df2dd9a1024f6e8d16a61855d989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac082df2dd9a1024f6e8d16a61855d989">&sect;&nbsp;</a></span>likely</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define likely</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">exp</td><td>)</td>
          <td>&#160;&#160;&#160;(exp)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The expression <em>exp</em> is likely to be true. </p>

</div>
</div>
<a id="ga5b759626f343cc1af9159cc02b763837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b759626f343cc1af9159cc02b763837">&sect;&nbsp;</a></span>Long_call</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Long_call</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">addr</td><td>)</td>
          <td>&#160;&#160;&#160;((*(void (*)(void))(addr))())</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls the routine at address <em>addr</em>. </p>
<p>It generates a long call opcode.</p>
<p>For example, `Long_call(0x80000000)' generates a software reset on a UC3 if it is invoked from the CPU supervisor mode.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addr</td><td>Address of the routine to call.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>It may be used as a long jump opcode in some special cases. </dd></dl>

</div>
</div>
<a id="gab811d8c6ff3a505312d3276590444289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab811d8c6ff3a505312d3276590444289">&sect;&nbsp;</a></span>LOW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LOW&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gabd2fa7b756342ae251e3a7a66670c2fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabd2fa7b756342ae251e3a7a66670c2fe">&sect;&nbsp;</a></span>LSB</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u16</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u16))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of <em>u16</em>. </p>

</div>
</div>
<a id="ga844ec34df36feb927dc92007af14674a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga844ec34df36feb927dc92007af14674a">&sect;&nbsp;</a></span>LSB0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB0</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga2ca8582260a8ada6cdd457cf37ba37a7">LSB0W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 1st rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga2e20f5ef87ccf0ad44c1d49d6ffd80a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e20f5ef87ccf0ad44c1d49d6ffd80a3">&sect;&nbsp;</a></span>LSB0D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB0D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0cbce69964fa2dd7bf05911d0b99b014">MSB7D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 1st rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga2ca8582260a8ada6cdd457cf37ba37a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2ca8582260a8ada6cdd457cf37ba37a7">&sect;&nbsp;</a></span>LSB0W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB0W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">MSB3W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 1st rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga2d1e45154b07481f0579ecc725e4edff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2d1e45154b07481f0579ecc725e4edff">&sect;&nbsp;</a></span>LSB1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga84cbbcad1971cdb2987418e6ae6cb4ff">LSB1W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 2nd rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga42179f159b798116eb615102a549aa85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga42179f159b798116eb615102a549aa85">&sect;&nbsp;</a></span>LSB1D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB1D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gacb8062d046ca06f5c28c9a015997494b">MSB6D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 2nd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga84cbbcad1971cdb2987418e6ae6cb4ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga84cbbcad1971cdb2987418e6ae6cb4ff">&sect;&nbsp;</a></span>LSB1W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB1W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">MSB2W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 2nd rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga8967f5ae0174b01ce44c502ebd14035a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8967f5ae0174b01ce44c502ebd14035a">&sect;&nbsp;</a></span>LSB2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad8fda97f8caa00fcfa84f712ee7627d6">LSB2W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 3rd rank of <em>u32</em>. </p>

</div>
</div>
<a id="gaba3bea07dcc4a37039b7effd4da03b9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaba3bea07dcc4a37039b7effd4da03b9e">&sect;&nbsp;</a></span>LSB2D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB2D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5e61db58aaf5cbb3051240cdcb1b5147">MSB5D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 3rd rank of <em>u64</em>. </p>

</div>
</div>
<a id="gad8fda97f8caa00fcfa84f712ee7627d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad8fda97f8caa00fcfa84f712ee7627d6">&sect;&nbsp;</a></span>LSB2W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB2W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">MSB1W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 3rd rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga5d9ff393e7c8764112a1167db19b16b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d9ff393e7c8764112a1167db19b16b1">&sect;&nbsp;</a></span>LSB3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga04e75e548b33b9cc22699b4249ff6c64">LSB3W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 4th rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga99213c01b979c347950eba4277f0499a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga99213c01b979c347950eba4277f0499a">&sect;&nbsp;</a></span>LSB3D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB3D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga1c891624c33b13808633af8dbcaafa5f">MSB4D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 4th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga04e75e548b33b9cc22699b4249ff6c64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04e75e548b33b9cc22699b4249ff6c64">&sect;&nbsp;</a></span>LSB3W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB3W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">MSB0W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 4th rank of <em>u32</em>. </p>

</div>
</div>
<a id="gaab745f30b9b841f9ccd9ace0a5a1a9e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaab745f30b9b841f9ccd9ace0a5a1a9e5">&sect;&nbsp;</a></span>LSB4D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB4D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gaf7972d3282ec9ecb97afa34e848ede2c">MSB3D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 5th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gac379acb246797736332fa1b8ae481b34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac379acb246797736332fa1b8ae481b34">&sect;&nbsp;</a></span>LSB5D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB5D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad4ceacba543e7b8617ca4bd075abb146">MSB2D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 6th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gab90afefaf3b5cb2507ab3c496d8f643c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab90afefaf3b5cb2507ab3c496d8f643c">&sect;&nbsp;</a></span>LSB6D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB6D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga97a0ab6790df95cb4d8021d8850487f8">MSB1D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 7th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga79fb849e13082fdd4adb02debbad7f1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga79fb849e13082fdd4adb02debbad7f1a">&sect;&nbsp;</a></span>LSB7D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSB7D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5f24ecf381776ee415991a545a05e4c7">MSB0D</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant byte of 8th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gae79954742b5a668ce83ab79ac9d9804b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae79954742b5a668ce83ab79ac9d9804b">&sect;&nbsp;</a></span>LSH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSH</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u32))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant half-word of <em>u32</em>. </p>

</div>
</div>
<a id="ga3026b9288b45a9794fd3eb585cbe10bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3026b9288b45a9794fd3eb585cbe10bc">&sect;&nbsp;</a></span>LSH0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSH0</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gabb233f238b63c12d2ff361d9ddb3114b">MSH3</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant half-word of 1st rank of <em>u64</em>. </p>

</div>
</div>
<a id="gac593b0be4555d883b4297b45cffc4168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac593b0be4555d883b4297b45cffc4168">&sect;&nbsp;</a></span>LSH1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSH1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5d32ec744212194c8106c51b89a5dfe9">MSH2</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant half-word of 2nd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga2efccfe683ebf7d89a972fbbdea2c26d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2efccfe683ebf7d89a972fbbdea2c26d">&sect;&nbsp;</a></span>LSH2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSH2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga43de4fac62f938ff4eb448a87522ec0e">MSH1</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant half-word of 3rd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga1ec33d340ef17c91cb0530d00ccb0ea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1ec33d340ef17c91cb0530d00ccb0ea8">&sect;&nbsp;</a></span>LSH3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSH3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga280d6a94884872f6a5be80c873e8adc1">MSH0</a>(u64)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant half-word of 4th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga0633993fb1f2d96a56385f09beed7bc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0633993fb1f2d96a56385f09beed7bc7">&sect;&nbsp;</a></span>LSW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define LSW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *)&amp;(u64))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Least significant word of <em>u64</em>. </p>

</div>
</div>
<a id="ga4886a8f966a69949cefc46a6a3468006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4886a8f966a69949cefc46a6a3468006">&sect;&nbsp;</a></span>Max</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((a) &gt; (b)) ?  (a) : (b))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the maximal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Maximal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="gaffe776513b24d84b39af8ab0930fef7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaffe776513b24d84b39af8ab0930fef7f">&sect;&nbsp;</a></span>max</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define max</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga4886a8f966a69949cefc46a6a3468006">Max</a>(a, b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the maximal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Maximal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="gab914bad47205a9b7afb9ac53ec71cb55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab914bad47205a9b7afb9ac53ec71cb55">&sect;&nbsp;</a></span>memcmp_code2ram</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define memcmp_code2ram&#160;&#160;&#160;memcmp</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Target-specific memcmp of RAM to NVRAM. </p>

</div>
</div>
<a id="ga27819e952caa0a535a5901d2857834b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga27819e952caa0a535a5901d2857834b7">&sect;&nbsp;</a></span>memcmp_ram2ram</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define memcmp_ram2ram&#160;&#160;&#160;memcmp</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Target-specific memcmp of RAM to RAM. </p>

</div>
</div>
<a id="ga55724cc8f7d42eba122dac5bffa00024"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga55724cc8f7d42eba122dac5bffa00024">&sect;&nbsp;</a></span>memcpy_code2ram</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define memcpy_code2ram&#160;&#160;&#160;memcpy</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Target-specific memcpy from NVRAM to RAM. </p>

</div>
</div>
<a id="ga85a7d71a016789b1766f9b27d0530347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga85a7d71a016789b1766f9b27d0530347">&sect;&nbsp;</a></span>MEMCPY_ENDIAN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MEMCPY_ENDIAN&#160;&#160;&#160;memcpy</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga9a4ff08e7c4cf79135a3bcbab68472b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9a4ff08e7c4cf79135a3bcbab68472b7">&sect;&nbsp;</a></span>memcpy_ram2ram</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define memcpy_ram2ram&#160;&#160;&#160;memcpy</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Target-specific memcpy from RAM to RAM. </p>

</div>
</div>
<a id="ga9e04209162ea72f9985338596262b657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9e04209162ea72f9985338596262b657">&sect;&nbsp;</a></span>Min</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Min</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(((a) &lt; (b)) ?  (a) : (b))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the minimal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Minimal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="gac6afabdc09a49a433ee19d8a9486056d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac6afabdc09a49a433ee19d8a9486056d">&sect;&nbsp;</a></span>min</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define min</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga9e04209162ea72f9985338596262b657">Min</a>(a, b)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Takes the minimal value of <em>a</em> and <em>b</em>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Input value. </td></tr>
    <tr><td class="paramname">b</td><td>Input value.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Minimal value of <em>a</em> and <em>b</em>.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="gabee1b74eceef5a0cf26efbf3ff87ccbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabee1b74eceef5a0cf26efbf3ff87ccbf">&sect;&nbsp;</a></span>MSB</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u16</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u16))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of <em>u16</em>. </p>

</div>
</div>
<a id="gafb81783b8186acd7182a971048b0c6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb81783b8186acd7182a971048b0c6b3">&sect;&nbsp;</a></span>MSB0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB0</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">MSB0W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 1st rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga5f24ecf381776ee415991a545a05e4c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5f24ecf381776ee415991a545a05e4c7">&sect;&nbsp;</a></span>MSB0D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB0D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[7])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 1st rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga25110f05bdb5b5ea3fcb2854a1a07d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga25110f05bdb5b5ea3fcb2854a1a07d7a">&sect;&nbsp;</a></span>MSB0W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB0W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[3])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 1st rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga3facab9f8ebf70ad6e16038465e2bedc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3facab9f8ebf70ad6e16038465e2bedc">&sect;&nbsp;</a></span>MSB1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">MSB1W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 2nd rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga97a0ab6790df95cb4d8021d8850487f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97a0ab6790df95cb4d8021d8850487f8">&sect;&nbsp;</a></span>MSB1D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB1D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[6])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 2nd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga0f90ecd0b0f0e15608a95b8367b77ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0f90ecd0b0f0e15608a95b8367b77ece">&sect;&nbsp;</a></span>MSB1W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB1W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[2])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 2nd rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga8683254be29bcfe3cf2fa646890d3942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8683254be29bcfe3cf2fa646890d3942">&sect;&nbsp;</a></span>MSB2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">MSB2W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 3rd rank of <em>u32</em>. </p>

</div>
</div>
<a id="gad4ceacba543e7b8617ca4bd075abb146"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4ceacba543e7b8617ca4bd075abb146">&sect;&nbsp;</a></span>MSB2D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB2D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[5])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 3rd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga0207e10a3c4bcca172463cd5e3ebd865"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0207e10a3c4bcca172463cd5e3ebd865">&sect;&nbsp;</a></span>MSB2W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB2W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 3rd rank of <em>u32</em>. </p>

</div>
</div>
<a id="gaeeb8918fc580ce01d45f71863eebff90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeeb8918fc580ce01d45f71863eebff90">&sect;&nbsp;</a></span>MSB3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">MSB3W</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 4th rank of <em>u32</em>. </p>

</div>
</div>
<a id="gaf7972d3282ec9ecb97afa34e848ede2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf7972d3282ec9ecb97afa34e848ede2c">&sect;&nbsp;</a></span>MSB3D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB3D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[4])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 4th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gad6ab5ac6e3e95525d56d757c9718e352"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad6ab5ac6e3e95525d56d757c9718e352">&sect;&nbsp;</a></span>MSB3W</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB3W</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u32))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 4th rank of <em>u32</em>. </p>

</div>
</div>
<a id="ga1c891624c33b13808633af8dbcaafa5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1c891624c33b13808633af8dbcaafa5f">&sect;&nbsp;</a></span>MSB4D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB4D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[3])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 5th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga5e61db58aaf5cbb3051240cdcb1b5147"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5e61db58aaf5cbb3051240cdcb1b5147">&sect;&nbsp;</a></span>MSB5D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB5D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[2])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 6th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gacb8062d046ca06f5c28c9a015997494b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacb8062d046ca06f5c28c9a015997494b">&sect;&nbsp;</a></span>MSB6D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB6D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 7th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga0cbce69964fa2dd7bf05911d0b99b014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0cbce69964fa2dd7bf05911d0b99b014">&sect;&nbsp;</a></span>MSB7D</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSB7D</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *)&amp;(u64))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant byte of 8th rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga2e9046f49816ad27148660f5ba993696"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2e9046f49816ad27148660f5ba993696">&sect;&nbsp;</a></span>MSH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSH</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u32))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant half-word of <em>u32</em>. </p>

</div>
</div>
<a id="ga280d6a94884872f6a5be80c873e8adc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga280d6a94884872f6a5be80c873e8adc1">&sect;&nbsp;</a></span>MSH0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSH0</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[3])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant half-word of 1st rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga43de4fac62f938ff4eb448a87522ec0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga43de4fac62f938ff4eb448a87522ec0e">&sect;&nbsp;</a></span>MSH1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSH1</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[2])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant half-word of 2nd rank of <em>u64</em>. </p>

</div>
</div>
<a id="ga5d32ec744212194c8106c51b89a5dfe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d32ec744212194c8106c51b89a5dfe9">&sect;&nbsp;</a></span>MSH2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSH2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant half-word of 3rd rank of <em>u64</em>. </p>

</div>
</div>
<a id="gabb233f238b63c12d2ff361d9ddb3114b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabb233f238b63c12d2ff361d9ddb3114b">&sect;&nbsp;</a></span>MSH3</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSH3</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *)&amp;(u64))[0])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant half-word of 4th rank of <em>u64</em>. </p>

</div>
</div>
<a id="gad71e5e84d2cec4387415a55f5c62b01b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad71e5e84d2cec4387415a55f5c62b01b">&sect;&nbsp;</a></span>MSW</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MSW</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td>&#160;&#160;&#160;(((<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *)&amp;(u64))[1])</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Most significant word of <em>u64</em>. </p>

</div>
</div>
<a id="gaba5c54fadff8d880b1945dde87496e31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaba5c54fadff8d880b1945dde87496e31">&sect;&nbsp;</a></span>PASS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PASS&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga8900e4615b7d7143a6c38e2a39087538"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8900e4615b7d7143a6c38e2a39087538">&sect;&nbsp;</a></span>PGM_READ_BLOCK</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_READ_BLOCK</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">dst, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">src, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">len&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;memcpy((dst), (src), (len))</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gafe9b83c73d4840986478ec67d3eb7718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe9b83c73d4840986478ec67d3eb7718">&sect;&nbsp;</a></span>PGM_READ_BYTE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_READ_BYTE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;*(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga75d06f2874e7e44289c05cfadb0940fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75d06f2874e7e44289c05cfadb0940fd">&sect;&nbsp;</a></span>PGM_READ_DWORD</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_READ_DWORD</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;*(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga92576bffe51090dcb6d5c67e07b9eec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga92576bffe51090dcb6d5c67e07b9eec7">&sect;&nbsp;</a></span>PGM_READ_WORD</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_READ_WORD</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;*(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gaa7ee388a5bd843e5e0ba3d194bc1d8a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa7ee388a5bd843e5e0ba3d194bc1d8a4">&sect;&nbsp;</a></span>Rd_bitfield</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Rd_bitfield</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">value, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>( value, mask) &gt;&gt; <a class="el" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(mask))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads the bit-field of a value specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>Value to read a bit-field from. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating the bit-field to read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Read bit-field. </dd></dl>

</div>
</div>
<a id="ga53d9294b7065346ffa04d7991d2bc31e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga53d9294b7065346ffa04d7991d2bc31e">&sect;&nbsp;</a></span>Rd_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Rd_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">value, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((value) &amp; (mask))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads the bits of a value specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>Value to read bits from. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Read bits. </dd></dl>

</div>
</div>
<a id="gad607b0e4ad3cf4cb5bd7a3619742f092"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad607b0e4ad3cf4cb5bd7a3619742f092">&sect;&nbsp;</a></span>Set_align</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Set_align</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lval, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">alg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(  <a class="el" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">Wr_bits</a>(lval, (n) - 1, alg)   )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets alignment of the lvalue number <em>lval</em> to <em>alg</em> with respect to the <em>n</em> boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lval</td><td>Input/output lvalue. </td></tr>
    <tr><td class="paramname">n</td><td>Boundary. </td></tr>
    <tr><td class="paramname">alg</td><td>Alignment.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>New value of <em>lval</em> resulting from its alignment set to <em>alg</em> with respect to the <em>n</em> boundary. </dd></dl>

</div>
</div>
<a id="ga589436fa123e32e1063488ebd7fdc923"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga589436fa123e32e1063488ebd7fdc923">&sect;&nbsp;</a></span>Set_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Set_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lvalue, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((lvalue) |=  (mask))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the bits of a C lvalue specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lvalue</td><td>C lvalue of which to set bits. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Resulting value with set bits. </dd></dl>

</div>
</div>
<a id="gadc9a009f53db3e7c3294ee6bc1027dca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc9a009f53db3e7c3294ee6bc1027dca">&sect;&nbsp;</a></span>Swap16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Swap16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u16</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(((<a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(u16) &gt;&gt; 8) |\</div><div class="line">                           ((<a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>)(u16) &lt;&lt; 8)))</div><div class="ttc" id="group__group__sam__utils_xhtml_ga0a0a322d5fa4a546d293a77ba8b4a71f"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a></div><div class="ttdeci">uint16_t U16</div><div class="ttdoc">16-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:259</div></div>
</div><!-- fragment -->
<p>Toggles the endianism of <em>u16</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u16</td><td>U16 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u16</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="ga3067f71c33a89726a107430050253045"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3067f71c33a89726a107430050253045">&sect;&nbsp;</a></span>swap16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define swap16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u16</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>(u16)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggles the endianism of <em>u16</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u16</td><td>U16 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u16</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="ga5e9bc2e3b3e43eadc3210b02cab6ac64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5e9bc2e3b3e43eadc3210b02cab6ac64">&sect;&nbsp;</a></span>Swap32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Swap32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)(((<a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)<a class="code" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>((<a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)(u32) &gt;&gt; 16)) |\</div><div class="line">                           ((<a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)<a class="code" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a>((<a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)(u32)) &lt;&lt; 16)))</div><div class="ttc" id="group__group__sam__utils_xhtml_gadc9a009f53db3e7c3294ee6bc1027dca"><div class="ttname"><a href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">Swap16</a></div><div class="ttdeci">#define Swap16(u16)</div><div class="ttdoc">Toggles the endianism of u16 (by swapping its bytes). </div><div class="ttdef"><b>Definition:</b> compiler.h:940</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga696390429f2f3b644bde8d0322a24124"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a></div><div class="ttdeci">uint32_t U32</div><div class="ttdoc">32-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:263</div></div>
</div><!-- fragment -->
<p>Toggles the endianism of <em>u32</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u32</td><td>U32 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u32</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="ga46025d8a12ccc9f4268c84e56c457416"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga46025d8a12ccc9f4268c84e56c457416">&sect;&nbsp;</a></span>swap32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define swap32</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a>(u32)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggles the endianism of <em>u32</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u32</td><td>U32 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u32</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="ga33f3049d9b8374e8b93d5642bfe7f426"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga33f3049d9b8374e8b93d5642bfe7f426">&sect;&nbsp;</a></span>Swap64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Swap64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64) &gt;&gt; 32)) |\</div><div class="line">                           ((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64)) &lt;&lt; 32)))</div><div class="ttc" id="group__group__sam__utils_xhtml_ga5e9bc2e3b3e43eadc3210b02cab6ac64"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">Swap32</a></div><div class="ttdeci">#define Swap32(u32)</div><div class="ttdoc">Toggles the endianism of u32 (by swapping its bytes). </div><div class="ttdef"><b>Definition:</b> compiler.h:951</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga25809e0734a149248fcf5831efa4e33d"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></div><div class="ttdeci">uint64_t U64</div><div class="ttdoc">64-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:267</div></div>
</div><!-- fragment -->
<p>Toggles the endianism of <em>u64</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u64</td><td>U64 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u64</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values known at compile time. </dd></dl>

</div>
</div>
<a id="ga78484801bd5bea7d382b34a4ed1f345d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga78484801bd5bea7d382b34a4ed1f345d">&sect;&nbsp;</a></span>swap64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define swap64</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u64</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64) &gt;&gt; 32)) |\</div><div class="line">                           ((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)<a class="code" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a>((<a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>)(u64)) &lt;&lt; 32)))</div><div class="ttc" id="group__group__sam__utils_xhtml_ga46025d8a12ccc9f4268c84e56c457416"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">swap32</a></div><div class="ttdeci">#define swap32(u32)</div><div class="ttdoc">Toggles the endianism of u32 (by swapping its bytes). </div><div class="ttdef"><b>Definition:</b> compiler.h:986</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga25809e0734a149248fcf5831efa4e33d"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></div><div class="ttdeci">uint64_t U64</div><div class="ttdoc">64-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:267</div></div>
</div><!-- fragment -->
<p>Toggles the endianism of <em>u64</em> (by swapping its bytes). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u64</td><td>U64 of which to toggle the endianism.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Value resulting from <em>u64</em> with toggled endianism.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>More optimized if only used with values unknown at compile time. </dd></dl>

</div>
</div>
<a id="gad490b657cb147d3d1773f6559559b98b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad490b657cb147d3d1773f6559559b98b">&sect;&nbsp;</a></span>Test_align</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Test_align</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(!<a class="el" href="group__group__sam__utils.xhtml#gab1e92741077b101e6b2df74880e71e96">Tst_bits</a>( val, (n) - 1     )   )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tests alignment of the number <em>val</em> with the <em>n</em> boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>Input value. </td></tr>
    <tr><td class="paramname">n</td><td>Boundary.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>1</code> if the number <em>val</em> is aligned with the <em>n</em> boundary, else <code>0</code>. </dd></dl>

</div>
</div>
<a id="ga9f29d1e990286322697ae8d0f4e365e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f29d1e990286322697ae8d0f4e365e0">&sect;&nbsp;</a></span>Tgl_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Tgl_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lvalue, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;((lvalue) ^=  (mask))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Toggles the bits of a C lvalue specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lvalue</td><td>C lvalue of which to toggle bits. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to toggle.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Resulting value with toggled bits. </dd></dl>

</div>
</div>
<a id="ga41f9c5fb8b08eb5dc3edce4dcb37fee7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">&sect;&nbsp;</a></span>true</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define true&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gab1e92741077b101e6b2df74880e71e96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab1e92741077b101e6b2df74880e71e96">&sect;&nbsp;</a></span>Tst_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Tst_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">value, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">Rd_bits</a>(value, mask) != 0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tests the bits of a value specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>Value of which to test bits. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to test.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>1</code> if at least one of the tested bits is set, else <code>0</code>. </dd></dl>

</div>
</div>
<a id="ga1c0c89beb84d05c5ba0bc7ce527a3925"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1c0c89beb84d05c5ba0bc7ce527a3925">&sect;&nbsp;</a></span>unlikely</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define unlikely</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">exp</td><td>)</td>
          <td>&#160;&#160;&#160;(exp)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The expression <em>exp</em> is unlikely to be true. </p>

</div>
</div>
<a id="gada67c62b1c57e07efa04431bc40b9238"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gada67c62b1c57e07efa04431bc40b9238">&sect;&nbsp;</a></span>UNUSED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UNUSED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v</td><td>)</td>
          <td>&#160;&#160;&#160;(void)(v)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marking <em>v</em> as a unused parameter or value. </p>

</div>
</div>
<a id="ga417dba7f63dde98dbebd6336d8af9d91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga417dba7f63dde98dbebd6336d8af9d91">&sect;&nbsp;</a></span>unused</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define unused</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">v</td><td>)</td>
          <td>&#160;&#160;&#160;do { (void)(v); } while(0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Marking <em>v</em> as a unused parameter or value. </p>

</div>
</div>
<a id="gaa2ede64db1455ec339cd8a3303647644"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa2ede64db1455ec339cd8a3303647644">&sect;&nbsp;</a></span>Wr_bitfield</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Wr_bitfield</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lvalue, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">bitfield&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;(<a class="el" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">Wr_bits</a>(lvalue, mask, (<a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>)(bitfield) &lt;&lt; <a class="el" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">ctz</a>(mask)))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes the bit-field of a C lvalue specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lvalue</td><td>C lvalue to write a bit-field to. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating the bit-field to write. </td></tr>
    <tr><td class="paramname">bitfield</td><td>Bit-field to write.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Resulting value with written bit-field. </dd></dl>

</div>
</div>
<a id="ga97b2bc0b5cdc7ec5293b7a5304cee0f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">&sect;&nbsp;</a></span>Wr_bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define Wr_bits</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lvalue, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">mask, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">bits&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((lvalue) = ((lvalue) &amp; ~(mask)) |\</div><div class="line">                                                 ((bits  ) &amp;  (mask)))</div></div><!-- fragment -->
<p>Writes the bits of a C lvalue specified by a given bit-mask. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lvalue</td><td>C lvalue to write bits to. </td></tr>
    <tr><td class="paramname">mask</td><td>Bit-mask indicating bits to write. </td></tr>
    <tr><td class="paramname">bits</td><td>Bits to write.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Resulting value with written bits. </dd></dl>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gadafc3ed99e530f27d0d954334c389748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadafc3ed99e530f27d0d954334c389748">&sect;&nbsp;</a></span>be16_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint16_t <a class="el" href="group__group__sam__utils.xhtml#gadafc3ed99e530f27d0d954334c389748">be16_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga3410b85f2a5afdf8b35f5c7c3414fe2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3410b85f2a5afdf8b35f5c7c3414fe2d">&sect;&nbsp;</a></span>be32_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t <a class="el" href="group__group__sam__utils.xhtml#ga3410b85f2a5afdf8b35f5c7c3414fe2d">be32_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga253b248072cfc8bd812c69acd0046eed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga253b248072cfc8bd812c69acd0046eed">&sect;&nbsp;</a></span>Bool</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned char <a class="el" href="group__group__sam__utils.xhtml#ga253b248072cfc8bd812c69acd0046eed">Bool</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Boolean. </p>

</div>
</div>
<a id="ga97a80ca1602ebf2303258971a2c938e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga97a80ca1602ebf2303258971a2c938e2">&sect;&nbsp;</a></span>bool</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned char <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Boolean. </p>

</div>
</div>
<a id="ga5b4c52e7ace584fa8e8f079801831d29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b4c52e7ace584fa8e8f079801831d29">&sect;&nbsp;</a></span>Byte</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a> <a class="el" href="group__group__sam__utils.xhtml#ga5b4c52e7ace584fa8e8f079801831d29">Byte</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>8-bit unsigned integer. </p>

</div>
</div>
<a id="ga841d3674577a1e86afdc2f4845f46c4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga841d3674577a1e86afdc2f4845f46c4b">&sect;&nbsp;</a></span>F32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef float <a class="el" href="group__group__sam__utils.xhtml#ga841d3674577a1e86afdc2f4845f46c4b">F32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit floating-point number. </p>

</div>
</div>
<a id="gadc9896ee12db3bb116fc63b3464c72c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadc9896ee12db3bb116fc63b3464c72c7">&sect;&nbsp;</a></span>F64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef double <a class="el" href="group__group__sam__utils.xhtml#gadc9896ee12db3bb116fc63b3464c72c7">F64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>64-bit floating-point number. </p>

</div>
</div>
<a id="ga2aa1108d10dcbee73bb35aefe25287c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2aa1108d10dcbee73bb35aefe25287c1">&sect;&nbsp;</a></span>iram_size_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t <a class="el" href="group__group__sam__utils.xhtml#ga2aa1108d10dcbee73bb35aefe25287c1">iram_size_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gadb35b8c1c002c23dcc87bdd8f520dd5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb35b8c1c002c23dcc87bdd8f520dd5f">&sect;&nbsp;</a></span>le16_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint16_t <a class="el" href="group__group__sam__utils.xhtml#gadb35b8c1c002c23dcc87bdd8f520dd5f">le16_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga14351c68ce47837d05ce857cfff07c92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga14351c68ce47837d05ce857cfff07c92">&sect;&nbsp;</a></span>le32_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t <a class="el" href="group__group__sam__utils.xhtml#ga14351c68ce47837d05ce857cfff07c92">le32_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga6d241ad21a823c90d4835380787db5d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d241ad21a823c90d4835380787db5d4">&sect;&nbsp;</a></span>S16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int16_t <a class="el" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>16-bit signed integer. </p>

</div>
</div>
<a id="ga39c786017723555afb9e8b85accec0de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga39c786017723555afb9e8b85accec0de">&sect;&nbsp;</a></span>S32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int32_t <a class="el" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit signed integer. </p>

</div>
</div>
<a id="ga1d293e5c494dd6826239b02f5fe98e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d293e5c494dd6826239b02f5fe98e7f">&sect;&nbsp;</a></span>S64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int64_t <a class="el" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>64-bit signed integer. </p>

</div>
</div>
<a id="gaf1475a0bb1962ef08dd1f78bd5dba87a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf1475a0bb1962ef08dd1f78bd5dba87a">&sect;&nbsp;</a></span>S8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int8_t <a class="el" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>8-bit signed integer. </p>

</div>
</div>
<a id="ga971c8994d25f93d700ec2737c8c5f82e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga971c8994d25f93d700ec2737c8c5f82e">&sect;&nbsp;</a></span>Status_bool_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a> <a class="el" href="group__group__sam__utils.xhtml#ga971c8994d25f93d700ec2737c8c5f82e">Status_bool_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Boolean status. </p>

</div>
</div>
<a id="ga65a9dca1465decb9b96bb02fde36b2b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga65a9dca1465decb9b96bb02fde36b2b8">&sect;&nbsp;</a></span>Status_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a> <a class="el" href="group__group__sam__utils.xhtml#ga65a9dca1465decb9b96bb02fde36b2b8">Status_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>8-bit-coded status. </p>

</div>
</div>
<a id="ga0a0a322d5fa4a546d293a77ba8b4a71f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0a0a322d5fa4a546d293a77ba8b4a71f">&sect;&nbsp;</a></span>U16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint16_t <a class="el" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>16-bit unsigned integer. </p>

</div>
</div>
<a id="ga696390429f2f3b644bde8d0322a24124"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga696390429f2f3b644bde8d0322a24124">&sect;&nbsp;</a></span>U32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t <a class="el" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>32-bit unsigned integer. </p>

</div>
</div>
<a id="ga25809e0734a149248fcf5831efa4e33d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga25809e0734a149248fcf5831efa4e33d">&sect;&nbsp;</a></span>U64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint64_t <a class="el" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>64-bit unsigned integer. </p>

</div>
</div>
<a id="gaa63ef7b996d5487ce35a5a66601f3e73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa63ef7b996d5487ce35a5a66601f3e73">&sect;&nbsp;</a></span>U8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint8_t <a class="el" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>8-bit unsigned integer. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga9634f2d7292e1209fe3b83254a66c450"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9634f2d7292e1209fe3b83254a66c450">&sect;&nbsp;</a></span>convert_16_bit_to_byte_address()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_16_bit_to_byte_address </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2de8d131d6afca8b368486f56c911e75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2de8d131d6afca8b368486f56c911e75">&sect;&nbsp;</a></span>convert_16_bit_to_byte_array()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_16_bit_to_byte_array </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts a 16-Bit value into a 2 Byte array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>16-Bit value </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>Pointer to the 2 Byte array to be updated with 16-Bit value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gadca7cebb159c7ed180d3d07cccb74245"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadca7cebb159c7ed180d3d07cccb74245">&sect;&nbsp;</a></span>convert_64_bit_to_byte_array()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_64_bit_to_byte_array </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts a 64-Bit value into a 8 Byte array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>64-Bit value </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>Pointer to the 8 Byte array to be updated with 64-Bit value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gad3726f56d0820acc7bae83993bd8897c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad3726f56d0820acc7bae83993bd8897c">&sect;&nbsp;</a></span>convert_byte_array_to_16_bit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint16_t convert_byte_array_to_16_bit </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga6e01ed4a4718b439d295b5124ede09e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6e01ed4a4718b439d295b5124ede09e3">&sect;&nbsp;</a></span>convert_byte_array_to_32_bit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t convert_byte_array_to_32_bit </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga45ffdbdc2d7a6d1dbf91b2fe8d880347"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga45ffdbdc2d7a6d1dbf91b2fe8d880347">&sect;&nbsp;</a></span>convert_byte_array_to_64_bit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint64_t convert_byte_array_to_64_bit </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts a 8 Byte array into a 64-Bit value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Specifies the pointer to the 8 Byte array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>64-Bit value </dd></dl>

</div>
</div>
<a id="gaa9724d81bfe44a06b0372d144cd98e36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa9724d81bfe44a06b0372d144cd98e36">&sect;&nbsp;</a></span>convert_spec_16_bit_to_byte_array()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_spec_16_bit_to_byte_array </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
