<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Module Communication Protocol Wrapper - MCPW</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Module Communication Protocol Wrapper - MCPW </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h1>Introduction</h1>
<p>Module Communication Protocol (MCP) is the lowest level communication protocol implementation for the XeThru modules, used on the module FW and XeThru host components, e.g. Module Connector.</p>
<p>For details on MCP format and implementation, look at the <a class="el" href="mcp.xhtml">XeThru Module Communication Protocol document</a>.</p>
<p>Building on MCP, MCP Wrapper (MCPW) goes one step further for embedded host implementation adding a wrapper with convenience methods around the MCP. Compared to Module Connector, which is a more feature rich component with logging and buffering capabilities, MCWP offers a similar interface with only the basic transport methods wrapped in a more easy-to-use interface.</p>
<p>Typical use for MCPW is when implementing a host application communicating with a XeThru module on an embedded target that does not need or have available the Module Connector.</p>
<p>MCPW needs some platform dependent / ported methods, that provide some basic features:</p><ul>
<li>serial port transport layer</li>
<li>mutex / synchronization</li>
<li>data ready callbacks</li>
<li>delay</li>
</ul>
<p>Here are the methods that need to be implemented on the target platform: </p><div class="fragment"><div class="line"><span class="keywordtype">bool</span> <a class="code" href="task__xethru_8c.xhtml#aaee208ebf2b292e2ee902fc38f03e6d3">mcpw_send_bytes</a>(<span class="keywordtype">void</span>* mcpw_void); <span class="comment">// Send bytes over serial port</span></div><div class="line"><span class="keywordtype">bool</span> <a class="code" href="task__xethru_8c.xhtml#a52b9d69168805fb3152bb63f74bd4bde">mcpw_wait_for_response</a>(uint32_t timeout); <span class="comment">// Task synchronization, wait for response</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#a096853bdfdec199c03de9b0933397a3c">mcpw_response_ready</a>(<span class="keywordtype">void</span>); <span class="comment">// Task synchronization, response ready</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#a0961e6647507bdf05de36c253e814ed5">mcpw_delay</a>(uint32_t delay_ms); <span class="comment">// System delay, given in ms.</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#ab7b621e6b0a11ab7647762d91f554793">mcpw_on_host_parser_sleep</a>(<a class="code" href="struct_sleep_data.xhtml">SleepData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: Sleep message</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#a539e9c99b70d1c9933dfae0ce672acc0">mcpw_on_host_parser_respiration</a>(<a class="code" href="struct_respiration_data.xhtml">RespirationData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: Respiration message</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#ac16c15ae1525fa123c03ae9609b0526d">mcpw_on_host_parser_respiration_moving_list</a>(<a class="code" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a> data, <span class="keywordtype">void</span> * user_data);  <span class="comment">// Data parsed: Respiration MovingList message</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#a273665b1dc773da28ea33615af1ba57f">mcpw_on_host_parser_presence_single</a>(<a class="code" href="struct_presence_single_data.xhtml">PresenceSingleData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: PresenceSingle message</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#ae7ef98041a23d07c679201f09db94a81">mcpw_on_host_parser_presence_moving_list</a>(<a class="code" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: Presence MovingList message</span></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="task__xethru_8c.xhtml#acb0abc99f3c7ab56eff1f77480d16d2c">mcpw_on_host_parser_baseband_ap</a>(<a class="code" href="struct_baseband_ap_data.xhtml">BasebandApData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: Baseband AP</span></div><div class="line"></div><div class="line"><span class="keywordtype">void</span> <a class="code" href="main_8cpp.xhtml#a33c573df63809fb5548e4593152e17f3">mcpw_on_host_parser_data_float</a>(<a class="code" href="struct_float_data__.xhtml">FloatData</a> data, <span class="keywordtype">void</span> * user_data); <span class="comment">// Data parsed: Float array</span></div></div><!-- fragment --><p> In addition, this method must be called when host receives bytes from the XeThru module: <a class="el" href="mcp__wrapper_8c.xhtml#a8ecdd9878728971613009da765f48cd7">mcpw_process_rx_data()</a>.</p>
<h1>Example</h1>
<p>In the examples folder, there is an example mcpw_demo on how to use MCPW. This example has two modes, one that uses an X4M300 module to provide Presence output, and one that uses an X2M200 module to provide Sleep and Respiration output.</p>
<p>Take a look at <a class="el" href="main_8cpp.xhtml">generic/src/main.cpp</a> for more details.</p>
<p>Typical console output:</p>
<div class="fragment"><div class="line">$ ./mcpw_demo.exe COM15 X4M300</div><div class="line">Starting mcpw_demo_x4m300.</div><div class="line">Connecting to XeThru module on COM15.</div><div class="line">Starting serial port read thread.</div><div class="line">...</div><div class="line">Counter=1938, State=Initializing</div><div class="line">Counter=1955, State=Initializing</div><div class="line">Counter=1972, State=Initializing</div><div class="line">Counter=1989, State=Initializing</div><div class="line">Counter=2006, State=Initializing</div><div class="line">Counter=2023, State=Initializing</div><div class="line">Counter=2040, State=Initializing</div><div class="line">Counter=2057, State=Initializing</div><div class="line">...</div><div class="line">Counter=5967, State=No presence</div><div class="line">Counter=5984, State=No presence</div><div class="line">Counter=6001, State=No presence</div><div class="line">Counter=6018, State=No presence</div><div class="line">Counter=6035, State=No presence</div><div class="line">Counter=6052, State=No presence</div><div class="line">Counter=6086, State=Presence, Distance=1.2677</div><div class="line">Counter=6103, State=Presence, Distance=0.697288</div><div class="line">Counter=6120, State=Presence, Distance=0.713739</div><div class="line">Counter=6137, State=Presence, Distance=0.726641</div><div class="line">Counter=6154, State=Presence, Distance=0.693994</div><div class="line">Counter=6171, State=Presence, Distance=0.679309</div></div><!-- fragment --><p>The following targets are supported.</p>
<h2>Generic</h2>
<p>Generic project and makefile, supporting (at least) the following targets:</p><ul>
<li>Windows</li>
<li>Raspberry Pi (Raspbian Jessie)</li>
</ul>
<p>Implemented in <a class="el" href="main_8cpp.xhtml">generic/src/main.cpp</a>.</p>
<p>To start demo, enter:</p>
<p><code>mcpw_demo COM1 x4m300</code> or <code>mcpw_demo COM1 x2m200</code> on Windows</p>
<p>or</p>
<p><code>./mcpw_demo /dev/ttyAMA0 x4m300</code> or <code>./mcpw_demo /dev/ttyAMA0 x2m200</code> on Linux</p>
<p>This project also contains serial port implementation for Windows and Linux. These are included for the purpose of example.</p>
<h2>Atmel SAMG55</h2>
<p>Atmel Studio project set up for Atmel SAMG55 XPlained Pro. Provides console output through the EDBG serial port from the XPlained USB connector.</p>
<ul>
<li>Connect the X4M300 module to the Atmel XPlained board according to connection table</li>
<li>Open the Atmel Studio project at examples/atmel_samg55/mcpw_demo.cproj</li>
<li>Build and run the project on an Atmel SAMG55 XPlained board</li>
<li>To change between X4M300 and X2M200 example, look for switch in <code><a class="el" href="task__xethru_8c.xhtml#ab838415e708ffc71189fcdceb057dac5">xethru_task()</a></code>.</li>
</ul>
<table class="doxtable">
<tr>
<th align="left">Function </th><th align="left">X4M300 pin </th><th align="left">XPlained pin  </th></tr>
<tr>
<td align="left">VCC (3.3V) </td><td align="left">1 </td><td align="left">VCC </td></tr>
<tr>
<td align="left">GND </td><td align="left">2 </td><td align="left">GND </td></tr>
<tr>
<td align="left">Uart </td><td align="left">3 </td><td align="left">PA03 </td></tr>
<tr>
<td align="left">Uart </td><td align="left">4 </td><td align="left">PA04 </td></tr>
</table>
<p>Implemented in <a class="el" href="task__xethru_8c.xhtml">atmel_samg55/src/task_xethru.c</a>. </p>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
