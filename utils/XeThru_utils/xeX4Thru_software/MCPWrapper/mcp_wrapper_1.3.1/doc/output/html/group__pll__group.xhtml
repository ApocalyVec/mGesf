<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: PLL Management</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">PLL Management<div class="ingroups"><a class="el" href="group__clk__group.xhtml">Clock Management</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>This group contains functions and definitions related to configuring and enabling/disabling on-chip PLLs.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for PLL Management:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group.svg" width="318" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpll__config.xhtml">pll_config</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hardware-specific representation of PLL configuration.  <a href="structpll__config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga363da838b48c30d86579684b1e168542"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga363da838b48c30d86579684b1e168542">PLL_OUTPUT_MIN_HZ</a>&#160;&#160;&#160;24000000</td></tr>
<tr class="separator:ga363da838b48c30d86579684b1e168542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga791a6d2cb20a3eadb744baab7ff94663"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga791a6d2cb20a3eadb744baab7ff94663">PLL_INPUT_HZ</a>&#160;&#160;&#160;32768</td></tr>
<tr class="separator:ga791a6d2cb20a3eadb744baab7ff94663"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe91a9d1ada7558d6b6d1fdf1a89a32a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gafe91a9d1ada7558d6b6d1fdf1a89a32a">PLLA_ID</a>&#160;&#160;&#160;0</td></tr>
<tr class="separator:gafe91a9d1ada7558d6b6d1fdf1a89a32a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad3ba2b53ea8a22c5ff8a67609a46dc03"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gad3ba2b53ea8a22c5ff8a67609a46dc03">PLLB_ID</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:gad3ba2b53ea8a22c5ff8a67609a46dc03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae317ae04a6e923f7c3934adc0b985a20"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gae317ae04a6e923f7c3934adc0b985a20">PLL_COUNT</a>&#160;&#160;&#160;0x3fU</td></tr>
<tr class="separator:gae317ae04a6e923f7c3934adc0b985a20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gacfb06d8fc0ffbe934077438884ae697f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a> { <a class="el" href="group__pll__group.xhtml#ggacfb06d8fc0ffbe934077438884ae697fa6c1cdb08cb18337a3034301e423d496b">PLL_SRC_SLCK_RC</a> = OSC_SLCK_32K_RC, 
<a class="el" href="group__pll__group.xhtml#ggacfb06d8fc0ffbe934077438884ae697fa4f1c956d20576dd8f460033ab3b47603">PLL_SRC_SLCK_XTAL</a> = OSC_SLCK_32K_XTAL, 
<a class="el" href="group__pll__group.xhtml#ggacfb06d8fc0ffbe934077438884ae697fa5020b47784b860efae2c423d33999dcc">PLL_NR_SOURCES</a>
 }<tr class="memdesc:gacfb06d8fc0ffbe934077438884ae697f"><td class="mdescLeft">&#160;</td><td class="mdescRight">PLL clock source.  <a href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:gacfb06d8fc0ffbe934077438884ae697f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga084e2aa7e13f6de6b87cb9722a24a9dd"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga084e2aa7e13f6de6b87cb9722a24a9dd">pll_config_init</a> (struct <a class="el" href="structpll__config.xhtml">pll_config</a> *p_cfg, enum <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a> e_src, uint32_t ul_div, uint32_t ul_mul)</td></tr>
<tr class="separator:ga084e2aa7e13f6de6b87cb9722a24a9dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0abfe01c560555995471ff12c71bb59"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gaa0abfe01c560555995471ff12c71bb59">pll_config_read</a> (struct <a class="el" href="structpll__config.xhtml">pll_config</a> *p_cfg, uint32_t ul_pll_id)</td></tr>
<tr class="separator:gaa0abfe01c560555995471ff12c71bb59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga81461ccaed08369e2c35d4796f4a8917"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga81461ccaed08369e2c35d4796f4a8917">pll_config_write</a> (const struct <a class="el" href="structpll__config.xhtml">pll_config</a> *p_cfg, uint32_t ul_pll_id)</td></tr>
<tr class="separator:ga81461ccaed08369e2c35d4796f4a8917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac963cb7ae2da65162dc3955129ff846c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gac963cb7ae2da65162dc3955129ff846c">pll_enable</a> (const struct <a class="el" href="structpll__config.xhtml">pll_config</a> *p_cfg, uint32_t ul_pll_id)</td></tr>
<tr class="separator:gac963cb7ae2da65162dc3955129ff846c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c855b2707f0d562c2054dda627e40d8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga0c855b2707f0d562c2054dda627e40d8">pll_disable</a> (uint32_t ul_pll_id)</td></tr>
<tr class="separator:ga0c855b2707f0d562c2054dda627e40d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3d87845545ede586b91f8427f5594685"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga3d87845545ede586b91f8427f5594685">pll_is_locked</a> (uint32_t ul_pll_id)</td></tr>
<tr class="separator:ga3d87845545ede586b91f8427f5594685"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Chip-specific PLL characteristics</h2></td></tr>
<tr class="memitem:ga23ebd75638f609ce613b82e773ea48a5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga23ebd75638f609ce613b82e773ea48a5">NR_PLLS</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:ga23ebd75638f609ce613b82e773ea48a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of on-chip PLLs.  <a href="#ga23ebd75638f609ce613b82e773ea48a5">More...</a><br /></td></tr>
<tr class="separator:ga23ebd75638f609ce613b82e773ea48a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
PLL configuration</h2></td></tr>
<tr class="memitem:ga2b9ba9ce6a7290303f6e8d41191fd0d8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga2b9ba9ce6a7290303f6e8d41191fd0d8">pll_config_defaults</a>(cfg,  pll_id)</td></tr>
<tr class="memdesc:ga2b9ba9ce6a7290303f6e8d41191fd0d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize PLL configuration using default parameters.  <a href="#ga2b9ba9ce6a7290303f6e8d41191fd0d8">More...</a><br /></td></tr>
<tr class="separator:ga2b9ba9ce6a7290303f6e8d41191fd0d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16c8db5e3f1a2c759a88371120579c4d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga16c8db5e3f1a2c759a88371120579c4d">pll_get_default_rate</a>(pll_id)</td></tr>
<tr class="memdesc:ga16c8db5e3f1a2c759a88371120579c4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the default rate in Hz of <em>pll_id</em>.  <a href="#ga16c8db5e3f1a2c759a88371120579c4d">More...</a><br /></td></tr>
<tr class="separator:ga16c8db5e3f1a2c759a88371120579c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Interaction with the PLL hardware</h2></td></tr>
<tr class="memitem:gaa10c871c499867b1db87f9cd1d37ef0f"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gaa10c871c499867b1db87f9cd1d37ef0f">pll_wait_for_lock</a> (unsigned int pll_id)</td></tr>
<tr class="memdesc:gaa10c871c499867b1db87f9cd1d37ef0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait for PLL <em>pll_id</em> to become locked.  <a href="#gaa10c871c499867b1db87f9cd1d37ef0f">More...</a><br /></td></tr>
<tr class="separator:gaa10c871c499867b1db87f9cd1d37ef0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4808844971419dcc305ad41a2104d0a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#gaf4808844971419dcc305ad41a2104d0a">pll_enable_source</a> (enum <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a> e_src)</td></tr>
<tr class="memdesc:gaf4808844971419dcc305ad41a2104d0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable the source of the pll.  <a href="#gaf4808844971419dcc305ad41a2104d0a">More...</a><br /></td></tr>
<tr class="separator:gaf4808844971419dcc305ad41a2104d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d2b476e97cb089063cb947f9337e647"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__pll__group.xhtml#ga6d2b476e97cb089063cb947f9337e647">pll_enable_config_defaults</a> (unsigned int ul_pll_id)</td></tr>
<tr class="memdesc:ga6d2b476e97cb089063cb947f9337e647"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable the pll with the default configuration.  <a href="#ga6d2b476e97cb089063cb947f9337e647">More...</a><br /></td></tr>
<tr class="separator:ga6d2b476e97cb089063cb947f9337e647"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This group contains functions and definitions related to configuring and enabling/disabling on-chip PLLs. </p>
<p>A PLL will take an input signal (the <em>source</em>), optionally divide the frequency by a configurable <em>divider</em>, and then multiply the frequency by a configurable <em>multiplier</em>.</p>
<p>Some devices don't support input dividers; specifying any other divisor than 1 on these devices will result in an assertion failure. Other devices may have various restrictions to the frequency range of the input and output signals.</p>
<dl class="section user"><dt>Example: Setting up PLL0 with default parameters</dt><dd></dd></dl>
<p>The following example shows how to configure and enable PLL0 using the default parameters specified using the configuration symbols listed above. </p><div class="fragment"><div class="line"><a class="code" href="group__pll__group.xhtml#ga6d2b476e97cb089063cb947f9337e647">pll_enable_config_defaults</a>(0); </div></div><!-- fragment --><p>To configure, enable PLL0 using the default parameters and to disable a specific feature like Wide Bandwidth Mode (a UC3A3-specific PLL option.), you can use this initialization process. </p><div class="fragment"><div class="line"><span class="keyword">struct </span><a class="code" href="structpll__config.xhtml">pll_config</a> pllcfg;</div><div class="line"><span class="keywordflow">if</span> (<a class="code" href="group__pll__group.xhtml#ga3d87845545ede586b91f8427f5594685">pll_is_locked</a>(pll_id)) {</div><div class="line">   <span class="keywordflow">return</span>; <span class="comment">// Pll already running</span></div><div class="line">}</div><div class="line"><a class="code" href="group__pll__group.xhtml#gaf4808844971419dcc305ad41a2104d0a">pll_enable_source</a>(<a class="code" href="conf__clock_8h.xhtml#a6ea6cd6d377a0bdc9eb60d33e21ee753">CONFIG_PLL0_SOURCE</a>);</div><div class="line"><a class="code" href="group__pll__group.xhtml#ga2b9ba9ce6a7290303f6e8d41191fd0d8">pll_config_defaults</a>(&amp;pllcfg, 0);</div><div class="line">pll_config_set_option(&amp;pllcfg, PLL_OPT_WBM_DISABLE);</div><div class="line"><a class="code" href="group__pll__group.xhtml#gac963cb7ae2da65162dc3955129ff846c">pll_enable</a>(&amp;pllcfg, 0);</div><div class="line"><a class="code" href="group__pll__group.xhtml#gaa10c871c499867b1db87f9cd1d37ef0f">pll_wait_for_lock</a>(0); </div></div><!-- fragment --><p>When the last function call returns, PLL0 is ready to be used as the main system clock source.</p>
<h1><a class="anchor" id="pll_group_config"></a>
Configuration Symbols</h1>
<p>Each PLL has a set of default parameters determined by the following configuration symbols in the application's configuration file:</p><ul>
<li><b>CONFIG_PLLn_SOURCE:</b> The default clock source connected to the input of PLL <em>n</em>. Must be one of the values defined by the <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f" title="PLL clock source. ">pll_source</a> enum.</li>
<li><b>CONFIG_PLLn_MUL:</b> The default multiplier (loop divider) of PLL <em>n</em>.</li>
<li><b>CONFIG_PLLn_DIV:</b> The default input divider of PLL <em>n</em>.</li>
</ul>
<p>These configuration symbols determine the result of calling <a class="el" href="group__pll__group.xhtml#ga2b9ba9ce6a7290303f6e8d41191fd0d8" title="Initialize PLL configuration using default parameters. ">pll_config_defaults()</a> and <a class="el" href="group__pll__group.xhtml#ga16c8db5e3f1a2c759a88371120579c4d" title="Get the default rate in Hz of pll_id. ">pll_get_default_rate()</a>. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga23ebd75638f609ce613b82e773ea48a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga23ebd75638f609ce613b82e773ea48a5">&sect;&nbsp;</a></span>NR_PLLS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define NR_PLLS&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of on-chip PLLs. </p>

</div>
</div>
<a id="ga2b9ba9ce6a7290303f6e8d41191fd0d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b9ba9ce6a7290303f6e8d41191fd0d8">&sect;&nbsp;</a></span>pll_config_defaults</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define pll_config_defaults</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cfg, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">pll_id&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="group__pll__group.xhtml#ga084e2aa7e13f6de6b87cb9722a24a9dd">pll_config_init</a>(cfg,                                                   \</div><div class="line">            CONFIG_PLL##pll_id##_SOURCE,                                   \</div><div class="line">            CONFIG_PLL##pll_id##_DIV,                                      \</div><div class="line">            CONFIG_PLL##pll_id##_MUL)</div><div class="ttc" id="group__pll__group_xhtml_ga084e2aa7e13f6de6b87cb9722a24a9dd"><div class="ttname"><a href="group__pll__group.xhtml#ga084e2aa7e13f6de6b87cb9722a24a9dd">pll_config_init</a></div><div class="ttdeci">static void pll_config_init(struct pll_config *p_cfg, enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)</div><div class="ttdef"><b>Definition:</b> pll.h:103</div></div>
</div><!-- fragment -->
<p>Initialize PLL configuration using default parameters. </p>
<p>After this function returns, <em>cfg</em> will contain a configuration which will make the PLL run at (CONFIG_PLLx_MUL / CONFIG_PLLx_DIV) times the frequency of CONFIG_PLLx_SOURCE.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The PLL configuration to be initialized. </td></tr>
    <tr><td class="paramname">pll_id</td><td>Use defaults for this PLL. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gae317ae04a6e923f7c3934adc0b985a20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae317ae04a6e923f7c3934adc0b985a20">&sect;&nbsp;</a></span>PLL_COUNT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PLL_COUNT&#160;&#160;&#160;0x3fU</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga16c8db5e3f1a2c759a88371120579c4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga16c8db5e3f1a2c759a88371120579c4d">&sect;&nbsp;</a></span>pll_get_default_rate</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define pll_get_default_rate</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">pll_id</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">((<a class="code" href="group__osc__group.xhtml#ga0bef482bf6349d0d118db2a3626aa828">osc_get_rate</a>(CONFIG_PLL##pll_id##_SOURCE)                            \</div><div class="line">            * CONFIG_PLL##pll_id##_MUL)                                    \</div><div class="line">            / CONFIG_PLL##pll_id##_DIV)</div><div class="ttc" id="group__osc__group_xhtml_ga0bef482bf6349d0d118db2a3626aa828"><div class="ttname"><a href="group__osc__group.xhtml#ga0bef482bf6349d0d118db2a3626aa828">osc_get_rate</a></div><div class="ttdeci">static uint32_t osc_get_rate(uint32_t ul_id)</div><div class="ttdef"><b>Definition:</b> osc.h:177</div></div>
</div><!-- fragment -->
<p>Get the default rate in Hz of <em>pll_id</em>. </p>

</div>
</div>
<a id="ga791a6d2cb20a3eadb744baab7ff94663"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga791a6d2cb20a3eadb744baab7ff94663">&sect;&nbsp;</a></span>PLL_INPUT_HZ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PLL_INPUT_HZ&#160;&#160;&#160;32768</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga363da838b48c30d86579684b1e168542"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga363da838b48c30d86579684b1e168542">&sect;&nbsp;</a></span>PLL_OUTPUT_MIN_HZ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PLL_OUTPUT_MIN_HZ&#160;&#160;&#160;24000000</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gafe91a9d1ada7558d6b6d1fdf1a89a32a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe91a9d1ada7558d6b6d1fdf1a89a32a">&sect;&nbsp;</a></span>PLLA_ID</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PLLA_ID&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gad3ba2b53ea8a22c5ff8a67609a46dc03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad3ba2b53ea8a22c5ff8a67609a46dc03">&sect;&nbsp;</a></span>PLLB_ID</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PLLB_ID&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gacfb06d8fc0ffbe934077438884ae697f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacfb06d8fc0ffbe934077438884ae697f">&sect;&nbsp;</a></span>pll_source</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>PLL clock source. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggacfb06d8fc0ffbe934077438884ae697fa6c1cdb08cb18337a3034301e423d496b"></a>PLL_SRC_SLCK_RC&#160;</td><td class="fielddoc"><p>Internal 32KHz RC oscillator. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggacfb06d8fc0ffbe934077438884ae697fa4f1c956d20576dd8f460033ab3b47603"></a>PLL_SRC_SLCK_XTAL&#160;</td><td class="fielddoc"><p>External 32kHz crystal oscillator. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggacfb06d8fc0ffbe934077438884ae697fa5020b47784b860efae2c423d33999dcc"></a>PLL_NR_SOURCES&#160;</td><td class="fielddoc"><p>Number of PLL sources. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga084e2aa7e13f6de6b87cb9722a24a9dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga084e2aa7e13f6de6b87cb9722a24a9dd">&sect;&nbsp;</a></span>pll_config_init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void pll_config_init </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpll__config.xhtml">pll_config</a> *&#160;</td>
          <td class="paramname"><em>p_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a>&#160;</td>
          <td class="paramname"><em>e_src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_div</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_mul</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section note"><dt>Note</dt><dd>The SAMG PLL hardware interprets mul as mul+1. For readability the hardware mul+1 is hidden in this implementation. Use mul as mul effective value. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga084e2aa7e13f6de6b87cb9722a24a9dd_cgraph.svg" width="256" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga084e2aa7e13f6de6b87cb9722a24a9dd_icgraph.svg" width="332" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaa0abfe01c560555995471ff12c71bb59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa0abfe01c560555995471ff12c71bb59">&sect;&nbsp;</a></span>pll_config_read()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void pll_config_read </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpll__config.xhtml">pll_config</a> *&#160;</td>
          <td class="paramname"><em>p_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pll_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga81461ccaed08369e2c35d4796f4a8917"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga81461ccaed08369e2c35d4796f4a8917">&sect;&nbsp;</a></span>pll_config_write()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void pll_config_write </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structpll__config.xhtml">pll_config</a> *&#160;</td>
          <td class="paramname"><em>p_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pll_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga81461ccaed08369e2c35d4796f4a8917_cgraph.svg" width="306" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga0c855b2707f0d562c2054dda627e40d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0c855b2707f0d562c2054dda627e40d8">&sect;&nbsp;</a></span>pll_disable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void pll_disable </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pll_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section note"><dt>Note</dt><dd>This will only disable the selected PLL, not the underlying oscillator (mainck). </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga0c855b2707f0d562c2054dda627e40d8_cgraph.svg" width="278" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gac963cb7ae2da65162dc3955129ff846c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac963cb7ae2da65162dc3955129ff846c">&sect;&nbsp;</a></span>pll_enable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void pll_enable </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structpll__config.xhtml">pll_config</a> *&#160;</td>
          <td class="paramname"><em>p_cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pll_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gac963cb7ae2da65162dc3955129ff846c_cgraph.svg" width="275" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gac963cb7ae2da65162dc3955129ff846c_icgraph.svg" width="312" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga6d2b476e97cb089063cb947f9337e647"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d2b476e97cb089063cb947f9337e647">&sect;&nbsp;</a></span>pll_enable_config_defaults()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pll_enable_config_defaults </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pll_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable the pll with the default configuration. </p>
<p>PLL is enabled, if the PLL is not already locked.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pll_id</td><td>The ID of the PLL to enable. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga6d2b476e97cb089063cb947f9337e647_cgraph.svg" width="359" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga6d2b476e97cb089063cb947f9337e647_icgraph.svg" width="383" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaf4808844971419dcc305ad41a2104d0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf4808844971419dcc305ad41a2104d0a">&sect;&nbsp;</a></span>pll_enable_source()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void pll_enable_source </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="group__pll__group.xhtml#gacfb06d8fc0ffbe934077438884ae697f">pll_source</a>&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable the source of the pll. </p>
<p>The source is enabled, if the source is not already running.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">src</td><td>The ID of the PLL source to enable. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gaf4808844971419dcc305ad41a2104d0a_cgraph.svg" width="298" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gaf4808844971419dcc305ad41a2104d0a_icgraph.svg" width="359" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga3d87845545ede586b91f8427f5594685"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d87845545ede586b91f8427f5594685">&sect;&nbsp;</a></span>pll_is_locked()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t pll_is_locked </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pll_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga3d87845545ede586b91f8427f5594685_cgraph.svg" width="307" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_ga3d87845545ede586b91f8427f5594685_icgraph.svg" width="330" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaa10c871c499867b1db87f9cd1d37ef0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa10c871c499867b1db87f9cd1d37ef0f">&sect;&nbsp;</a></span>pll_wait_for_lock()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int pll_wait_for_lock </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pll_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Wait for PLL <em>pll_id</em> to become locked. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pll_id</td><td>The ID of the PLL to wait for.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">STATUS_OK</td><td>The PLL is now locked. </td></tr>
    <tr><td class="paramname">ERR_TIMEOUT</td><td>Timed out waiting for PLL to become locked. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gaa10c871c499867b1db87f9cd1d37ef0f_cgraph.svg" width="274" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__pll__group_gaa10c871c499867b1db87f9cd1d37ef0f_icgraph.svg" width="307" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
