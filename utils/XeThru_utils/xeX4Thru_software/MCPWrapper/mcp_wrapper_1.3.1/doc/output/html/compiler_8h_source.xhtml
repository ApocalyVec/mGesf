<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: examples/atmel_samg55/src/ASF/sam/utils/compiler.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="dir_0e96b936377161858012b6f31c3bd790.xhtml">atmel_samg55</a></li><li class="navelem"><a class="el" href="dir_0ae219bfaa679f3dbaaacda5fb614d9c.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_67951177d7f5e66661a526635115739c.xhtml">ASF</a></li><li class="navelem"><a class="el" href="dir_48be2503ae6ae6de0698f11fb632640c.xhtml">sam</a></li><li class="navelem"><a class="el" href="dir_7f529e4fc6ea7f44596b5de9bf0437d9.xhtml">utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">compiler.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="compiler_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"> * Support and FAQ: visit &lt;a href=&quot;http://www.atmel.com/design-support/&quot;&gt;Atmel Support&lt;/a&gt;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#ifndef UTILS_COMPILER_H</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#define UTILS_COMPILER_H</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#if (defined __ICCARM__)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#  include &lt;intrinsics.h&gt;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="parts_8h.xhtml">parts.h</a>&gt;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="preprocessor_8h.xhtml">preprocessor.h</a>&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="io_8h.xhtml">io.h</a>&gt;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">//_____ D E C L A R A T I O N S ____________________________________________</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#ifndef __ASSEMBLY__ // Not defined for assembling.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#include &lt;stdbool.h&gt;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#ifdef __ICCARM__</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#define __asm__             asm</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#define __inline__          inline</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#define __volatile__</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gacce64924b686dd08a83042b35d0d1480">   91</a></span>&#160;<span class="preprocessor">#define FUNC_PTR                            void *</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gada67c62b1c57e07efa04431bc40b9238">   96</a></span>&#160;<span class="preprocessor">#define UNUSED(v)          (void)(v)</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga417dba7f63dde98dbebd6336d8af9d91">  102</a></span>&#160;<span class="preprocessor">#define unused(v)          do { (void)(v); } while(0)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga53290ac2df2384738b8769c76622f803">  108</a></span>&#160;<span class="preprocessor">#define barrier()          __DMB()</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga85a3ab5701281268521f109ed0078668">  116</a></span>&#160;<span class="preprocessor">#define COMPILER_PRAGMA(arg)            _Pragma(#arg)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gae2c02ff865ca6538b4b1bddbf2a6876c">  123</a></span>&#160;<span class="preprocessor">#define COMPILER_PACK_SET(alignment)   COMPILER_PRAGMA(pack(alignment))</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga38d28b622a4bc7b0f3fb2be2ef1e0086">  130</a></span>&#160;<span class="preprocessor">#define COMPILER_PACK_RESET()          COMPILER_PRAGMA(pack())</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#if (defined __GNUC__) || (defined __CC_ARM)</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#   define COMPILER_ALIGNED(a)    __attribute__((__aligned__(a)))</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#elif (defined __ICCARM__)</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#   define COMPILER_ALIGNED(a)    COMPILER_PRAGMA(data_alignment = a)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">#if (defined __GNUC__) || defined(__CC_ARM)</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">#define COMPILER_WORD_ALIGNED    __attribute__((__aligned__(4)))</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#elif (defined __ICCARM__)</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#define COMPILER_WORD_ALIGNED    COMPILER_PRAGMA(data_alignment = 4)</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">#if defined(__CC_ARM)</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#   define __always_inline   __forceinline</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#elif (defined __GNUC__)</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#ifdef __always_inline</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#   undef __always_inline</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#   define __always_inline   inline __attribute__((__always_inline__))</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#elif (defined __ICCARM__)</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#   define __always_inline   _Pragma(&quot;inline=forced&quot;)</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#if defined(__CC_ARM)</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#   define __no_inline   __attribute__((noinline))</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#elif (defined __GNUC__)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#   define __no_inline   __attribute__((__noinline__))</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#elif (defined __ICCARM__)</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#   define __no_inline   _Pragma(&quot;inline=never&quot;)</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#if defined(_ASSERT_ENABLE_)</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#  if defined(TEST_SUITE_DEFINE_ASSERT_MACRO)</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;     <span class="comment">// Assert() is defined in unit_test/suite.h</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#    include &quot;unit_test/suite.h&quot;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#  else</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#undef TEST_SUITE_DEFINE_ASSERT_MACRO</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#    define Assert(expr) \</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">    {\</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">        if (!(expr)) while (true);\</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor">#  endif</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaab1e54dcc40192f9704e8b252635450f">  206</a></span>&#160;<span class="preprocessor">#  define Assert(expr) ((void) 0)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">/* Define WEAK attribute */</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">#if defined   ( __CC_ARM   ) </span><span class="comment">/* Keil µVision 4 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">#   define WEAK __attribute__ ((weak))</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">#elif defined ( __ICCARM__ ) </span><span class="comment">/* IAR Ewarm 5.41+ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">#   define WEAK __weak</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#elif defined (  __GNUC__  ) </span><span class="comment">/* GCC CS3 2009q3-68 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="preprocessor">#   define WEAK __attribute__ ((weak))</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">/* Define NO_INIT attribute */</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#if defined   ( __CC_ARM   )</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">#   define NO_INIT __attribute__((zero_init))</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#elif defined ( __ICCARM__ )</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">#   define NO_INIT __no_init</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">#elif defined (  __GNUC__  )</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#   define NO_INIT __attribute__((section(&quot;.no_init&quot;)))</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">/* Define RAMFUNC attribute */</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">#if defined   ( __CC_ARM   ) </span><span class="comment">/* Keil µVision 4 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#   define RAMFUNC __attribute__ ((section(&quot;.ramfunc&quot;)))</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#elif defined ( __ICCARM__ ) </span><span class="comment">/* IAR Ewarm 5.41+ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#   define RAMFUNC __ramfunc</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">#elif defined (  __GNUC__  ) </span><span class="comment">/* GCC CS3 2009q3-68 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#   define RAMFUNC __attribute__ ((section(&quot;.ramfunc&quot;)))</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">/* Define OPTIMIZE_HIGH attribute */</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#if defined   ( __CC_ARM   ) </span><span class="comment">/* Keil µVision 4 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">#   define OPTIMIZE_HIGH _Pragma(&quot;O3&quot;) </span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#elif defined ( __ICCARM__ ) </span><span class="comment">/* IAR Ewarm 5.41+ */</span><span class="preprocessor"></span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#   define OPTIMIZE_HIGH _Pragma(&quot;optimize=high&quot;)</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#elif defined (  __GNUC__  ) </span><span class="comment">/* GCC CS3 2009q3-68 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#   define OPTIMIZE_HIGH __attribute__((optimize(s)))</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="interrupt_8h.xhtml">interrupt.h</a>&quot;</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>           <a class="code" href="group__group__sam__utils.xhtml#ga253b248072cfc8bd812c69acd0046eed">Bool</a>; </div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor">#ifndef __cplusplus</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#if !defined(__bool_true_false_are_defined)</span></div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">  253</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>           <a class="code" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a>; </div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">  256</a></span>&#160;<span class="keyword">typedef</span> int8_t                  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a> ;  </div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">  257</a></span>&#160;<span class="keyword">typedef</span> uint8_t                 <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a> ;  </div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">  258</a></span>&#160;<span class="keyword">typedef</span> int16_t                 <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a>;  </div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">  259</a></span>&#160;<span class="keyword">typedef</span> uint16_t                <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a>;  </div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadb35b8c1c002c23dcc87bdd8f520dd5f">  260</a></span>&#160;<span class="keyword">typedef</span> uint16_t                <a class="code" href="group__group__sam__utils.xhtml#gadb35b8c1c002c23dcc87bdd8f520dd5f">le16_t</a>;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadafc3ed99e530f27d0d954334c389748">  261</a></span>&#160;<span class="keyword">typedef</span> uint16_t                <a class="code" href="group__group__sam__utils.xhtml#gadafc3ed99e530f27d0d954334c389748">be16_t</a>;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">  262</a></span>&#160;<span class="keyword">typedef</span> int32_t                 <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a>;  </div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">  263</a></span>&#160;<span class="keyword">typedef</span> uint32_t                <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a>;  </div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga14351c68ce47837d05ce857cfff07c92">  264</a></span>&#160;<span class="keyword">typedef</span> uint32_t                <a class="code" href="group__group__sam__utils.xhtml#ga14351c68ce47837d05ce857cfff07c92">le32_t</a>;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga3410b85f2a5afdf8b35f5c7c3414fe2d">  265</a></span>&#160;<span class="keyword">typedef</span> uint32_t                <a class="code" href="group__group__sam__utils.xhtml#ga3410b85f2a5afdf8b35f5c7c3414fe2d">be32_t</a>;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">  266</a></span>&#160;<span class="keyword">typedef</span> int64_t                 <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a>;  </div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">  267</a></span>&#160;<span class="keyword">typedef</span> uint64_t                <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a>;  </div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga841d3674577a1e86afdc2f4845f46c4b">  268</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">float</span>                   <a class="code" href="group__group__sam__utils.xhtml#ga841d3674577a1e86afdc2f4845f46c4b">F32</a>;  </div><div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadc9896ee12db3bb116fc63b3464c72c7">  269</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">double</span>                  <a class="code" href="group__group__sam__utils.xhtml#gadc9896ee12db3bb116fc63b3464c72c7">F64</a>;  </div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2aa1108d10dcbee73bb35aefe25287c1">  270</a></span>&#160;<span class="keyword">typedef</span> uint32_t                <a class="code" href="group__group__sam__utils.xhtml#ga2aa1108d10dcbee73bb35aefe25287c1">iram_size_t</a>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">bool</span>                <a class="code" href="group__group__sam__utils.xhtml#ga971c8994d25f93d700ec2737c8c5f82e">Status_bool_t</a>;  </div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga65a9dca1465decb9b96bb02fde36b2b8">  278</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>                  <a class="code" href="group__group__sam__utils.xhtml#ga65a9dca1465decb9b96bb02fde36b2b8">Status_t</a>;       </div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="union_union16.xhtml">  287</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;{</div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="union_union16.xhtml#afefdb4bb60d553b514dc939a77ed454f">  289</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> <a class="code" href="union_union16.xhtml#afefdb4bb60d553b514dc939a77ed454f">s16</a>   ;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="union_union16.xhtml#a1d8ea8e71644d08735c240bca057ba72">  290</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> <a class="code" href="union_union16.xhtml#a1d8ea8e71644d08735c240bca057ba72">u16</a>   ;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="union_union16.xhtml#a65da903c0884ad6d9645a077e0fc3635">  291</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  s8 [2];</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="union_union16.xhtml#a51b422bf4eea40dcdf0b9162401d8f9c">  292</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  u8 [2];</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;} <a class="code" href="union_union16.xhtml">Union16</a>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="union_union32.xhtml">  296</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a435aab788ea7e552ed83572f419dbc07">  298</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> <a class="code" href="union_union32.xhtml#a435aab788ea7e552ed83572f419dbc07">s32</a>   ;</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a765d5f0ef4f6df6a2f9971a6f0694020">  299</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> <a class="code" href="union_union32.xhtml#a765d5f0ef4f6df6a2f9971a6f0694020">u32</a>   ;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a00d668a0687413baa854e1a24f6a86aa">  300</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> s16[2];</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a893c7c4421429d923cdff35493391082">  301</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> u16[2];</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a48c08c56f8a08b8fdf8d7be939c5dc47">  302</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  s8 [4];</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="union_union32.xhtml#a6b35f70d76300a6253140bb89cc619ac">  303</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  u8 [4];</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;} <a class="code" href="union_union32.xhtml">Union32</a>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="union_union64.xhtml">  307</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="union_union64.xhtml#a0d2ab3a488d93c2beed7987ef70e5628">  309</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> <a class="code" href="union_union64.xhtml#a0d2ab3a488d93c2beed7987ef70e5628">s64</a>   ;</div><div class="line"><a name="l00310"></a><span class="lineno"><a class="line" href="union_union64.xhtml#aac95b1d1211f52003bbc09498393ee0d">  310</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> <a class="code" href="union_union64.xhtml#aac95b1d1211f52003bbc09498393ee0d">u64</a>   ;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="union_union64.xhtml#ae890c7ae7f04f6c98b8b993798b4b786">  311</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> s32[2];</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="union_union64.xhtml#a416b86ab0cf38421987d45bee1000702">  312</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> u32[2];</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="union_union64.xhtml#a56c977487240706b5fa1aeb4012711cd">  313</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> s16[4];</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="union_union64.xhtml#a84d17166beaeb6ae79afa3909fc7955b">  314</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> u16[4];</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="union_union64.xhtml#a2e9bbd7e091680a8203e1239d62fd3b0">  315</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  s8 [8];</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="union_union64.xhtml#af6c6dafc0f068fe37b06e2f4c73184c4">  316</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  u8 [8];</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;} <a class="code" href="union_union64.xhtml">Union64</a>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml">  320</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a63f71a612f64662218512e29af1677c0">  322</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="union_union_ptr.xhtml#a63f71a612f64662218512e29af1677c0">s64ptr</a>;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#acf1a3f495e9659fe4577751425b6ce99">  323</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="union_union_ptr.xhtml#acf1a3f495e9659fe4577751425b6ce99">u64ptr</a>;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a57b84ed1151cc81432197efd46a88fdb">  324</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="union_union_ptr.xhtml#a57b84ed1151cc81432197efd46a88fdb">s32ptr</a>;</div><div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a2bf916009db91dc0bb39f0cbbecf77fd">  325</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="union_union_ptr.xhtml#a2bf916009db91dc0bb39f0cbbecf77fd">u32ptr</a>;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a593e40c713f698413d1e898f403e9bd2">  326</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="union_union_ptr.xhtml#a593e40c713f698413d1e898f403e9bd2">s16ptr</a>;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a0f6f6d7b3464a7c8aca80a1722fc3347">  327</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="union_union_ptr.xhtml#a0f6f6d7b3464a7c8aca80a1722fc3347">u16ptr</a>;</div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a757c9f34a8971c29d4883d86d1ce0bbe">  328</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="union_union_ptr.xhtml#a757c9f34a8971c29d4883d86d1ce0bbe">s8ptr</a> ;</div><div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="union_union_ptr.xhtml#a1f8c61121a2da0bb4e862a5ee54dcc44">  329</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="union_union_ptr.xhtml#a1f8c61121a2da0bb4e862a5ee54dcc44">u8ptr</a> ;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;} <a class="code" href="union_union_ptr.xhtml">UnionPtr</a>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml">  333</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;{</div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#acbf301cfdf3519e8240f785b15bcb07f">  335</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="union_union_v_ptr.xhtml#acbf301cfdf3519e8240f785b15bcb07f">s64ptr</a>;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#add94692ec8e633ed9efc32a0b4134a66">  336</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="union_union_v_ptr.xhtml#add94692ec8e633ed9efc32a0b4134a66">u64ptr</a>;</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#ad3980fc6efca2844b424b1c9bf17f935">  337</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="union_union_v_ptr.xhtml#ad3980fc6efca2844b424b1c9bf17f935">s32ptr</a>;</div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#a90ba923b94ad85780d169572d3e346ff">  338</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="union_union_v_ptr.xhtml#a90ba923b94ad85780d169572d3e346ff">u32ptr</a>;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#a17051fdc2ec05cca756353562a8e1078">  339</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="union_union_v_ptr.xhtml#a17051fdc2ec05cca756353562a8e1078">s16ptr</a>;</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#aabd260d7853cf121cb44b0e04e8550ae">  340</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="union_union_v_ptr.xhtml#aabd260d7853cf121cb44b0e04e8550ae">u16ptr</a>;</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#abcd674aaba4e93ab33e23fd1ed4e0326">  341</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="union_union_v_ptr.xhtml#abcd674aaba4e93ab33e23fd1ed4e0326">s8ptr</a> ;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="union_union_v_ptr.xhtml#adae0fe80c386b7283d072757309557f0">  342</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="union_union_v_ptr.xhtml#adae0fe80c386b7283d072757309557f0">u8ptr</a> ;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;} <a class="code" href="union_union_v_ptr.xhtml">UnionVPtr</a>;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml">  346</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a43192511976f0a6d92b0132aa0cb70f2">  348</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="union_union_c_ptr.xhtml#a43192511976f0a6d92b0132aa0cb70f2">s64ptr</a>;</div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a4a6cf88c8245ebf428b70955b6f07660">  349</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="union_union_c_ptr.xhtml#a4a6cf88c8245ebf428b70955b6f07660">u64ptr</a>;</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#abef0d7044879e7cb955fc9c03cfb8f50">  350</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="union_union_c_ptr.xhtml#abef0d7044879e7cb955fc9c03cfb8f50">s32ptr</a>;</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a4b439b888a79a28b144f009592b65acf">  351</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="union_union_c_ptr.xhtml#a4b439b888a79a28b144f009592b65acf">u32ptr</a>;</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a2cf792c052a8b758d4f577abb68b6da3">  352</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="union_union_c_ptr.xhtml#a2cf792c052a8b758d4f577abb68b6da3">s16ptr</a>;</div><div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a0937efe8d164fef35cc8f910374dd7f0">  353</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="union_union_c_ptr.xhtml#a0937efe8d164fef35cc8f910374dd7f0">u16ptr</a>;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#a579611a0e96c69ba201c64f5dd2ac402">  354</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="union_union_c_ptr.xhtml#a579611a0e96c69ba201c64f5dd2ac402">s8ptr</a> ;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="union_union_c_ptr.xhtml#ac9d23d7f791de03f4352e2e7f8f31601">  355</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="union_union_c_ptr.xhtml#ac9d23d7f791de03f4352e2e7f8f31601">u8ptr</a> ;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;} <a class="code" href="union_union_c_ptr.xhtml">UnionCPtr</a>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml">  359</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">union</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;{</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#a707d4e218dbb787604879e8f3e4b88a0">  361</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="union_union_c_v_ptr.xhtml#a707d4e218dbb787604879e8f3e4b88a0">s64ptr</a>;</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#a21c8e70e260cbcfa6b1bcd5e36a65cc9">  362</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="union_union_c_v_ptr.xhtml#a21c8e70e260cbcfa6b1bcd5e36a65cc9">u64ptr</a>;</div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#ab9a23c3b3b42b195d56982ff8219b6e5">  363</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="union_union_c_v_ptr.xhtml#ab9a23c3b3b42b195d56982ff8219b6e5">s32ptr</a>;</div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#a9ba5f88bb47b6b78703eebade217a8f8">  364</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="union_union_c_v_ptr.xhtml#a9ba5f88bb47b6b78703eebade217a8f8">u32ptr</a>;</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#aba2be4a121bf17fd4469f35bb63ac608">  365</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="union_union_c_v_ptr.xhtml#aba2be4a121bf17fd4469f35bb63ac608">s16ptr</a>;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#a1c3a68ddb0ecd1e210015e6f07ae3589">  366</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="union_union_c_v_ptr.xhtml#a1c3a68ddb0ecd1e210015e6f07ae3589">u16ptr</a>;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#ab5a1808ed01b80dd091bbd5a1f69532b">  367</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="union_union_c_v_ptr.xhtml#ab5a1808ed01b80dd091bbd5a1f69532b">s8ptr</a> ;</div><div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="union_union_c_v_ptr.xhtml#ae30b8d90cf4023021a2ae90829d783b9">  368</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="union_union_c_v_ptr.xhtml#ae30b8d90cf4023021a2ae90829d783b9">u8ptr</a> ;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;} <a class="code" href="union_union_c_v_ptr.xhtml">UnionCVPtr</a>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml">  372</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#a184a0d1b77988f8b31c1e44640539ae3">  374</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="struct_struct_ptr.xhtml#a184a0d1b77988f8b31c1e44640539ae3">s64ptr</a>;</div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#ad70dd1cc1f7c0862aea54bc6de347534">  375</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="struct_struct_ptr.xhtml#ad70dd1cc1f7c0862aea54bc6de347534">u64ptr</a>;</div><div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#aa0154c497f6e44b50f2f9d470a19edb7">  376</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="struct_struct_ptr.xhtml#aa0154c497f6e44b50f2f9d470a19edb7">s32ptr</a>;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#a2709554b2f9fcf0bb6f322ca8f6c0e00">  377</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="struct_struct_ptr.xhtml#a2709554b2f9fcf0bb6f322ca8f6c0e00">u32ptr</a>;</div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#af27893e4b9420c22e2aaa1d0a1ceb165">  378</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="struct_struct_ptr.xhtml#af27893e4b9420c22e2aaa1d0a1ceb165">s16ptr</a>;</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#ac3ff20d63a21109b06ddfc5d981d60a4">  379</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="struct_struct_ptr.xhtml#ac3ff20d63a21109b06ddfc5d981d60a4">u16ptr</a>;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#a95089abbb09b37f10838becaf891460c">  380</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="struct_struct_ptr.xhtml#a95089abbb09b37f10838becaf891460c">s8ptr</a> ;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="struct_struct_ptr.xhtml#a9727d8b94598f408a3631893ed44f273">  381</a></span>&#160;  <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="struct_struct_ptr.xhtml#a9727d8b94598f408a3631893ed44f273">u8ptr</a> ;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;} <a class="code" href="struct_struct_ptr.xhtml">StructPtr</a>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml">  385</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a8dc6099fe7124be876bb39ce2dbf0b4d">  387</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a8dc6099fe7124be876bb39ce2dbf0b4d">s64ptr</a>;</div><div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a191528bcd3c8787294df254b8afe1cb0">  388</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a191528bcd3c8787294df254b8afe1cb0">u64ptr</a>;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a5077596b4a3f411d721d2acff828b229">  389</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a5077596b4a3f411d721d2acff828b229">s32ptr</a>;</div><div class="line"><a name="l00390"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a3e510b4e1ddc03e1f0a84200a4641dc6">  390</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a3e510b4e1ddc03e1f0a84200a4641dc6">u32ptr</a>;</div><div class="line"><a name="l00391"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a14b9b38985dac215940243c4cfbbb4b0">  391</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a14b9b38985dac215940243c4cfbbb4b0">s16ptr</a>;</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a0e59b9de39e5c22af91b5470fdb5aec4">  392</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="struct_struct_v_ptr.xhtml#a0e59b9de39e5c22af91b5470fdb5aec4">u16ptr</a>;</div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a4b6384d064d24aad80d7d1e74d2407eb">  393</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="struct_struct_v_ptr.xhtml#a4b6384d064d24aad80d7d1e74d2407eb">s8ptr</a> ;</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="struct_struct_v_ptr.xhtml#a059e13e212713a7f29e1a34666041875">  394</a></span>&#160;  <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="struct_struct_v_ptr.xhtml#a059e13e212713a7f29e1a34666041875">u8ptr</a> ;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;} <a class="code" href="struct_struct_v_ptr.xhtml">StructVPtr</a>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml">  398</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div><div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#ab8f3c8cc59c0cc260d216bcd62a2b367">  400</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="struct_struct_c_ptr.xhtml#ab8f3c8cc59c0cc260d216bcd62a2b367">s64ptr</a>;</div><div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#a224ab50214c0299652bfab7ac8df4304">  401</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="struct_struct_c_ptr.xhtml#a224ab50214c0299652bfab7ac8df4304">u64ptr</a>;</div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#a1f7b9580c2afcee8403d3a85273eaf1f">  402</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="struct_struct_c_ptr.xhtml#a1f7b9580c2afcee8403d3a85273eaf1f">s32ptr</a>;</div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#a0c7d3f1b3de836e79a2b5a30d628e0ea">  403</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="struct_struct_c_ptr.xhtml#a0c7d3f1b3de836e79a2b5a30d628e0ea">u32ptr</a>;</div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#ae5cffdab3e2e13b6729ed7f3d164cce7">  404</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="struct_struct_c_ptr.xhtml#ae5cffdab3e2e13b6729ed7f3d164cce7">s16ptr</a>;</div><div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#a3ca52d2813ccddc625296b3e1a419610">  405</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="struct_struct_c_ptr.xhtml#a3ca52d2813ccddc625296b3e1a419610">u16ptr</a>;</div><div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#adf51b808c625ef854e381489d9f30565">  406</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="struct_struct_c_ptr.xhtml#adf51b808c625ef854e381489d9f30565">s8ptr</a> ;</div><div class="line"><a name="l00407"></a><span class="lineno"><a class="line" href="struct_struct_c_ptr.xhtml#a34c387e10262411049636a789d0a6a6e">  407</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="struct_struct_c_ptr.xhtml#a34c387e10262411049636a789d0a6a6e">u8ptr</a> ;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;} <a class="code" href="struct_struct_c_ptr.xhtml">StructCPtr</a>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml">  411</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;{</div><div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a19ef459699971931ad9ba2237a1e94b5">  413</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#a19ef459699971931ad9ba2237a1e94b5">s64ptr</a>;</div><div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#aac7addfa477ae9ae941add494152e94b">  414</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#aac7addfa477ae9ae941add494152e94b">u64ptr</a>;</div><div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a6967ea819f181d054e47b82319745be9">  415</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#a6967ea819f181d054e47b82319745be9">s32ptr</a>;</div><div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a8b3e4acbf9aa9e133195d9f3da7e1067">  416</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#a8b3e4acbf9aa9e133195d9f3da7e1067">u32ptr</a>;</div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a97657743440108335f1fe603e6160f25">  417</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#a97657743440108335f1fe603e6160f25">s16ptr</a>;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a7f767f45320067a836c24f092f133b1c">  418</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a> *<a class="code" href="struct_struct_c_v_ptr.xhtml#a7f767f45320067a836c24f092f133b1c">u16ptr</a>;</div><div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#a13457e86fece2ce730defcc94c91e4dc">  419</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a>  *<a class="code" href="struct_struct_c_v_ptr.xhtml#a13457e86fece2ce730defcc94c91e4dc">s8ptr</a> ;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="struct_struct_c_v_ptr.xhtml#aa3713e0a7260185261a205f121081aca">  420</a></span>&#160;  <span class="keyword">const</span> <span class="keyword">volatile</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>  *<a class="code" href="struct_struct_c_v_ptr.xhtml#aa3713e0a7260185261a205f121081aca">u8ptr</a> ;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;} <a class="code" href="struct_struct_c_v_ptr.xhtml">StructCVPtr</a>;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="preprocessor">#endif  // #ifndef __ASSEMBLY__</span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="preprocessor">#define DISABLE   0</span></div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga514ad415fb6125ba296793df7d1a468a">  431</a></span>&#160;<span class="preprocessor">#define ENABLE    1</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="preprocessor">#ifndef __cplusplus</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="preprocessor">#if !defined(__bool_true_false_are_defined)</span></div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga65e9886d74aaee76545e83dd09011727">  434</a></span>&#160;<span class="preprocessor">#define false     0</span></div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga41f9c5fb8b08eb5dc3edce4dcb37fee7">  435</a></span>&#160;<span class="preprocessor">#define true      1</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaba5c54fadff8d880b1945dde87496e31">  438</a></span>&#160;<span class="preprocessor">#define PASS      0</span></div><div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabb508ea8227673f419e9fe3a86c30d8e">  439</a></span>&#160;<span class="preprocessor">#define FAIL      1</span></div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab811d8c6ff3a505312d3276590444289">  440</a></span>&#160;<span class="preprocessor">#define LOW       0</span></div><div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5bb885982ff66a2e0a0a45a8ee9c35e2">  441</a></span>&#160;<span class="preprocessor">#define HIGH      1</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="preprocessor">#ifndef __ASSEMBLY__ // not for assembling.</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="preprocessor">#ifndef likely</span></div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac082df2dd9a1024f6e8d16a61855d989">  455</a></span>&#160;<span class="preprocessor">#   define likely(exp)    (exp)</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="preprocessor">#ifndef unlikely</span></div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1c0c89beb84d05c5ba0bc7ce527a3925">  463</a></span>&#160;<span class="preprocessor">#   define unlikely(exp)  (exp)</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="preprocessor">#if (defined __GNUC__) || (defined __CC_ARM)</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor">#   define is_constant(exp)       __builtin_constant_p(exp)</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga15892ad6884af110e5eaaa96994ebaa9">  477</a></span>&#160;<span class="preprocessor">#   define is_constant(exp)       (0)</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga53d9294b7065346ffa04d7991d2bc31e">  493</a></span>&#160;<span class="preprocessor">#define Rd_bits( value, mask)        ((value) &amp; (mask))</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga97b2bc0b5cdc7ec5293b7a5304cee0f0">  503</a></span>&#160;<span class="preprocessor">#define Wr_bits(lvalue, mask, bits)  ((lvalue) = ((lvalue) &amp; ~(mask)) |\</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="preprocessor">                                                 ((bits  ) &amp;  (mask)))</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab1e92741077b101e6b2df74880e71e96">  513</a></span>&#160;<span class="preprocessor">#define Tst_bits( value, mask)  (Rd_bits(value, mask) != 0)</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaffbccbb234075f838e181522c864605f">  522</a></span>&#160;<span class="preprocessor">#define Clr_bits(lvalue, mask)  ((lvalue) &amp;= ~(mask))</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga589436fa123e32e1063488ebd7fdc923">  531</a></span>&#160;<span class="preprocessor">#define Set_bits(lvalue, mask)  ((lvalue) |=  (mask))</span></div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga9f29d1e990286322697ae8d0f4e365e0">  540</a></span>&#160;<span class="preprocessor">#define Tgl_bits(lvalue, mask)  ((lvalue) ^=  (mask))</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa7ee388a5bd843e5e0ba3d194bc1d8a4">  549</a></span>&#160;<span class="preprocessor">#define Rd_bitfield( value, mask)           (Rd_bits( value, mask) &gt;&gt; ctz(mask))</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa2ede64db1455ec339cd8a3303647644">  559</a></span>&#160;<span class="preprocessor">#define Wr_bitfield(lvalue, mask, bitfield) (Wr_bits(lvalue, mask, (U32)(bitfield) &lt;&lt; ctz(mask)))</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="preprocessor">#if (defined __GNUC__) || (defined __CC_ARM)</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="preprocessor">#   define clz(u)              __builtin_clz(u)</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor">#elif (defined __ICCARM__)</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="preprocessor">#   define clz(u)              __CLZ(u)</span></div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00589"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga004f88903a09b9c23017e697eaf5a845">  589</a></span>&#160;<span class="preprocessor">#   define clz(u)              (((u) == 0)          ? 32 : \</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 31)) ?  0 : \</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 30)) ?  1 : \</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 29)) ?  2 : \</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 28)) ?  3 : \</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 27)) ?  4 : \</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 26)) ?  5 : \</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 25)) ?  6 : \</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 24)) ?  7 : \</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 23)) ?  8 : \</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 22)) ?  9 : \</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 21)) ? 10 : \</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 20)) ? 11 : \</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 19)) ? 12 : \</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 18)) ? 13 : \</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 17)) ? 14 : \</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 16)) ? 15 : \</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 15)) ? 16 : \</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 14)) ? 17 : \</span></div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 13)) ? 18 : \</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 12)) ? 19 : \</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 11)) ? 20 : \</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt; 10)) ? 21 : \</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  9)) ? 22 : \</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  8)) ? 23 : \</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  7)) ? 24 : \</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  6)) ? 25 : \</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  5)) ? 26 : \</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  4)) ? 27 : \</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  3)) ? 28 : \</span></div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  2)) ? 29 : \</span></div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="preprocessor">                                ((u) &amp; (1ul &lt;&lt;  1)) ? 30 : \</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="preprocessor">                                31)</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="preprocessor">#if (defined __GNUC__) || (defined __CC_ARM)</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="preprocessor">#   define ctz(u)              __builtin_ctz(u)</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00633"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab069bfec305db5213465d3b689836404">  633</a></span>&#160;<span class="preprocessor">#   define ctz(u)              ((u) &amp; (1ul &lt;&lt;  0) ?  0 : \</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  1) ?  1 : \</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  2) ?  2 : \</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  3) ?  3 : \</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  4) ?  4 : \</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  5) ?  5 : \</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  6) ?  6 : \</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  7) ?  7 : \</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  8) ?  8 : \</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt;  9) ?  9 : \</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 10) ? 10 : \</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 11) ? 11 : \</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 12) ? 12 : \</span></div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 13) ? 13 : \</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 14) ? 14 : \</span></div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 15) ? 15 : \</span></div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 16) ? 16 : \</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 17) ? 17 : \</span></div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 18) ? 18 : \</span></div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 19) ? 19 : \</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 20) ? 20 : \</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 21) ? 21 : \</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 22) ? 22 : \</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 23) ? 23 : \</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 24) ? 24 : \</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 25) ? 25 : \</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 26) ? 26 : \</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 27) ? 27 : \</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 28) ? 28 : \</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 29) ? 29 : \</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 30) ? 30 : \</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="preprocessor">                                (u) &amp; (1ul &lt;&lt; 31) ? 31 : \</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="preprocessor">                                32)</span></div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaef8832dcae9aaac78c5ebe91fc33084b">  681</a></span>&#160;<span class="preprocessor">#define bit_reverse8(u8)    ((U8)(bit_reverse32((U8)(u8)) &gt;&gt; 24))</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabab01124189eab03857671c05abfe377">  689</a></span>&#160;<span class="preprocessor">#define bit_reverse16(u16)  ((U16)(bit_reverse32((U16)(u16)) &gt;&gt; 16))</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaff755a5c107b5e28e5b846c5f122e69f">  697</a></span>&#160;<span class="preprocessor">#define bit_reverse32(u32)   __RBIT(u32)</span></div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div><div class="line"><a name="l00705"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga7f3f2d786440776bab3f688cbd1e8030">  705</a></span>&#160;<span class="preprocessor">#define bit_reverse64(u64)  ((U64)(((U64)bit_reverse32((U64)(u64) &gt;&gt; 32)) |\</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="preprocessor">                                   ((U64)bit_reverse32((U64)(u64)) &lt;&lt; 32)))</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad490b657cb147d3d1773f6559559b98b">  722</a></span>&#160;<span class="preprocessor">#define Test_align(val, n     ) (!Tst_bits( val, (n) - 1     )   )</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00731"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga526bddb313be14057f5d65e199f6d814">  731</a></span>&#160;<span class="preprocessor">#define Get_align( val, n     ) (  Rd_bits( val, (n) - 1     )   )</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad607b0e4ad3cf4cb5bd7a3619742f092">  741</a></span>&#160;<span class="preprocessor">#define Set_align(lval, n, alg) (  Wr_bits(lval, (n) - 1, alg)   )</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2bac987572902a9a7b69442541d78c42">  750</a></span>&#160;<span class="preprocessor">#define Align_up(  val, n     ) (((val) + ((n) - 1)) &amp; ~((n) - 1))</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div><div class="line"><a name="l00759"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1070d94a69b4e1955ac1723b4f382095">  759</a></span>&#160;<span class="preprocessor">#define Align_down(val, n     ) ( (val)              &amp; ~((n) - 1))</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00785"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gae56b0282c58a65969c092e1eeeedd6f5">  785</a></span>&#160;<span class="preprocessor">#define Abs(a)              (((a) &lt;  0 ) ? -(a) : (a))</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga9e04209162ea72f9985338596262b657">  796</a></span>&#160;<span class="preprocessor">#define Min(a, b)           (((a) &lt; (b)) ?  (a) : (b))</span></div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00807"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga4886a8f966a69949cefc46a6a3468006">  807</a></span>&#160;<span class="preprocessor">#define Max(a, b)           (((a) &gt; (b)) ?  (a) : (b))</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="comment">// abs() is already defined by stdlib.h</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00820"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac6afabdc09a49a433ee19d8a9486056d">  820</a></span>&#160;<span class="preprocessor">#define min(a, b)   Min(a, b)</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaffe776513b24d84b39af8ab0930fef7f">  831</a></span>&#160;<span class="preprocessor">#define max(a, b)   Max(a, b)</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5b759626f343cc1af9159cc02b763837">  847</a></span>&#160;<span class="preprocessor">#define Long_call(addr)                   ((*(void (*)(void))(addr))())</span></div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;<span class="preprocessor">#define  MSB(u16)       (((U8  *)&amp;(u16))[1]) </span></div><div class="line"><a name="l00855"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabd2fa7b756342ae251e3a7a66670c2fe">  855</a></span>&#160;<span class="preprocessor">#define  LSB(u16)       (((U8  *)&amp;(u16))[0]) </span></div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00857"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2e9046f49816ad27148660f5ba993696">  857</a></span>&#160;<span class="preprocessor">#define  MSH(u32)       (((U16 *)&amp;(u32))[1]) </span></div><div class="line"><a name="l00858"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gae79954742b5a668ce83ab79ac9d9804b">  858</a></span>&#160;<span class="preprocessor">#define  LSH(u32)       (((U16 *)&amp;(u32))[0]) </span></div><div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga25110f05bdb5b5ea3fcb2854a1a07d7a">  859</a></span>&#160;<span class="preprocessor">#define  MSB0W(u32)     (((U8  *)&amp;(u32))[3]) </span></div><div class="line"><a name="l00860"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0f90ecd0b0f0e15608a95b8367b77ece">  860</a></span>&#160;<span class="preprocessor">#define  MSB1W(u32)     (((U8  *)&amp;(u32))[2]) </span></div><div class="line"><a name="l00861"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0207e10a3c4bcca172463cd5e3ebd865">  861</a></span>&#160;<span class="preprocessor">#define  MSB2W(u32)     (((U8  *)&amp;(u32))[1]) </span></div><div class="line"><a name="l00862"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad6ab5ac6e3e95525d56d757c9718e352">  862</a></span>&#160;<span class="preprocessor">#define  MSB3W(u32)     (((U8  *)&amp;(u32))[0]) </span></div><div class="line"><a name="l00863"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga04e75e548b33b9cc22699b4249ff6c64">  863</a></span>&#160;<span class="preprocessor">#define  LSB3W(u32)     MSB0W(u32)           </span></div><div class="line"><a name="l00864"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad8fda97f8caa00fcfa84f712ee7627d6">  864</a></span>&#160;<span class="preprocessor">#define  LSB2W(u32)     MSB1W(u32)           </span></div><div class="line"><a name="l00865"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga84cbbcad1971cdb2987418e6ae6cb4ff">  865</a></span>&#160;<span class="preprocessor">#define  LSB1W(u32)     MSB2W(u32)           </span></div><div class="line"><a name="l00866"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2ca8582260a8ada6cdd457cf37ba37a7">  866</a></span>&#160;<span class="preprocessor">#define  LSB0W(u32)     MSB3W(u32)           </span></div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;<span class="preprocessor">        </span></div><div class="line"><a name="l00868"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad71e5e84d2cec4387415a55f5c62b01b">  868</a></span>&#160;<span class="preprocessor">#define  MSW(u64)       (((U32 *)&amp;(u64))[1]) </span></div><div class="line"><a name="l00869"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0633993fb1f2d96a56385f09beed7bc7">  869</a></span>&#160;<span class="preprocessor">#define  LSW(u64)       (((U32 *)&amp;(u64))[0]) </span></div><div class="line"><a name="l00870"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga280d6a94884872f6a5be80c873e8adc1">  870</a></span>&#160;<span class="preprocessor">#define  MSH0(u64)      (((U16 *)&amp;(u64))[3]) </span></div><div class="line"><a name="l00871"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga43de4fac62f938ff4eb448a87522ec0e">  871</a></span>&#160;<span class="preprocessor">#define  MSH1(u64)      (((U16 *)&amp;(u64))[2]) </span></div><div class="line"><a name="l00872"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5d32ec744212194c8106c51b89a5dfe9">  872</a></span>&#160;<span class="preprocessor">#define  MSH2(u64)      (((U16 *)&amp;(u64))[1]) </span></div><div class="line"><a name="l00873"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabb233f238b63c12d2ff361d9ddb3114b">  873</a></span>&#160;<span class="preprocessor">#define  MSH3(u64)      (((U16 *)&amp;(u64))[0]) </span></div><div class="line"><a name="l00874"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1ec33d340ef17c91cb0530d00ccb0ea8">  874</a></span>&#160;<span class="preprocessor">#define  LSH3(u64)      MSH0(u64)            </span></div><div class="line"><a name="l00875"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2efccfe683ebf7d89a972fbbdea2c26d">  875</a></span>&#160;<span class="preprocessor">#define  LSH2(u64)      MSH1(u64)            </span></div><div class="line"><a name="l00876"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac593b0be4555d883b4297b45cffc4168">  876</a></span>&#160;<span class="preprocessor">#define  LSH1(u64)      MSH2(u64)            </span></div><div class="line"><a name="l00877"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga3026b9288b45a9794fd3eb585cbe10bc">  877</a></span>&#160;<span class="preprocessor">#define  LSH0(u64)      MSH3(u64)            </span></div><div class="line"><a name="l00878"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5f24ecf381776ee415991a545a05e4c7">  878</a></span>&#160;<span class="preprocessor">#define  MSB0D(u64)     (((U8  *)&amp;(u64))[7]) </span></div><div class="line"><a name="l00879"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga97a0ab6790df95cb4d8021d8850487f8">  879</a></span>&#160;<span class="preprocessor">#define  MSB1D(u64)     (((U8  *)&amp;(u64))[6]) </span></div><div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad4ceacba543e7b8617ca4bd075abb146">  880</a></span>&#160;<span class="preprocessor">#define  MSB2D(u64)     (((U8  *)&amp;(u64))[5]) </span></div><div class="line"><a name="l00881"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaf7972d3282ec9ecb97afa34e848ede2c">  881</a></span>&#160;<span class="preprocessor">#define  MSB3D(u64)     (((U8  *)&amp;(u64))[4]) </span></div><div class="line"><a name="l00882"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1c891624c33b13808633af8dbcaafa5f">  882</a></span>&#160;<span class="preprocessor">#define  MSB4D(u64)     (((U8  *)&amp;(u64))[3]) </span></div><div class="line"><a name="l00883"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5e61db58aaf5cbb3051240cdcb1b5147">  883</a></span>&#160;<span class="preprocessor">#define  MSB5D(u64)     (((U8  *)&amp;(u64))[2]) </span></div><div class="line"><a name="l00884"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gacb8062d046ca06f5c28c9a015997494b">  884</a></span>&#160;<span class="preprocessor">#define  MSB6D(u64)     (((U8  *)&amp;(u64))[1]) </span></div><div class="line"><a name="l00885"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0cbce69964fa2dd7bf05911d0b99b014">  885</a></span>&#160;<span class="preprocessor">#define  MSB7D(u64)     (((U8  *)&amp;(u64))[0]) </span></div><div class="line"><a name="l00886"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga79fb849e13082fdd4adb02debbad7f1a">  886</a></span>&#160;<span class="preprocessor">#define  LSB7D(u64)     MSB0D(u64)           </span></div><div class="line"><a name="l00887"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab90afefaf3b5cb2507ab3c496d8f643c">  887</a></span>&#160;<span class="preprocessor">#define  LSB6D(u64)     MSB1D(u64)           </span></div><div class="line"><a name="l00888"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac379acb246797736332fa1b8ae481b34">  888</a></span>&#160;<span class="preprocessor">#define  LSB5D(u64)     MSB2D(u64)           </span></div><div class="line"><a name="l00889"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaab745f30b9b841f9ccd9ace0a5a1a9e5">  889</a></span>&#160;<span class="preprocessor">#define  LSB4D(u64)     MSB3D(u64)           </span></div><div class="line"><a name="l00890"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga99213c01b979c347950eba4277f0499a">  890</a></span>&#160;<span class="preprocessor">#define  LSB3D(u64)     MSB4D(u64)           </span></div><div class="line"><a name="l00891"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaba3bea07dcc4a37039b7effd4da03b9e">  891</a></span>&#160;<span class="preprocessor">#define  LSB2D(u64)     MSB5D(u64)           </span></div><div class="line"><a name="l00892"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga42179f159b798116eb615102a549aa85">  892</a></span>&#160;<span class="preprocessor">#define  LSB1D(u64)     MSB6D(u64)           </span></div><div class="line"><a name="l00893"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2e20f5ef87ccf0ad44c1d49d6ffd80a3">  893</a></span>&#160;<span class="preprocessor">#define  LSB0D(u64)     MSB7D(u64)           </span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l00895"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga34c0ccbaef341c224a18eb4dcaf44407">  895</a></span>&#160;<span class="preprocessor">#define  BE16(x)        Swap16(x)</span></div><div class="line"><a name="l00896"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga54d648861a1120a3f8d6255e9cf54125">  896</a></span>&#160;<span class="preprocessor">#define  LE16(x)        (x)</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div><div class="line"><a name="l00898"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga65e9510f535c1ee2f826d447471289fa">  898</a></span>&#160;<span class="preprocessor">#define  le16_to_cpu(x) (x)</span></div><div class="line"><a name="l00899"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaeda3065f344779edb9023e22d84d5f92">  899</a></span>&#160;<span class="preprocessor">#define  cpu_to_le16(x) (x)</span></div><div class="line"><a name="l00900"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa0da5576d76569d3a7452897a91ea0e6">  900</a></span>&#160;<span class="preprocessor">#define  LE16_TO_CPU(x) (x)</span></div><div class="line"><a name="l00901"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa3d310efe7cd6126823b8721852d7e56">  901</a></span>&#160;<span class="preprocessor">#define  CPU_TO_LE16(x) (x)</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;</div><div class="line"><a name="l00903"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga48f33ad7b3de0010e5c802ced48f8a7b">  903</a></span>&#160;<span class="preprocessor">#define  be16_to_cpu(x) Swap16(x)</span></div><div class="line"><a name="l00904"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaf42a6506135fe9e671c40973bacc849f">  904</a></span>&#160;<span class="preprocessor">#define  cpu_to_be16(x) Swap16(x)</span></div><div class="line"><a name="l00905"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac1d027e9e570b4714b2e7e7fbd4b1e9e">  905</a></span>&#160;<span class="preprocessor">#define  BE16_TO_CPU(x) Swap16(x)</span></div><div class="line"><a name="l00906"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaea91d96b724b4a83b28c7c91cd920db4">  906</a></span>&#160;<span class="preprocessor">#define  CPU_TO_BE16(x) Swap16(x)</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga48f527b00bc1d5e46366d720280a1039">  908</a></span>&#160;<span class="preprocessor">#define  le32_to_cpu(x) (x)</span></div><div class="line"><a name="l00909"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1d5ae0c36d519a1b0a789db69a598f28">  909</a></span>&#160;<span class="preprocessor">#define  cpu_to_le32(x) (x)</span></div><div class="line"><a name="l00910"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga488a93b151ee4920c0a117fe66cc2efb">  910</a></span>&#160;<span class="preprocessor">#define  LE32_TO_CPU(x) (x)</span></div><div class="line"><a name="l00911"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac904d01eec66efc89dba5a687749d5f5">  911</a></span>&#160;<span class="preprocessor">#define  CPU_TO_LE32(x) (x)</span></div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;</div><div class="line"><a name="l00913"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga650ecb20996a13e0c0bc530ba83fe5dc">  913</a></span>&#160;<span class="preprocessor">#define  be32_to_cpu(x) swap32(x)</span></div><div class="line"><a name="l00914"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gafd3274bb70aea7cf9be403940e001cc7">  914</a></span>&#160;<span class="preprocessor">#define  cpu_to_be32(x) swap32(x)</span></div><div class="line"><a name="l00915"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad6fd2e5e0a54fb6300fe98868141175e">  915</a></span>&#160;<span class="preprocessor">#define  BE32_TO_CPU(x) swap32(x)</span></div><div class="line"><a name="l00916"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabe5b68e77b7f6870895076278368d201">  916</a></span>&#160;<span class="preprocessor">#define  CPU_TO_BE32(x) swap32(x)</span></div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadc9a009f53db3e7c3294ee6bc1027dca">  940</a></span>&#160;<span class="preprocessor">#define Swap16(u16) ((U16)(((U16)(u16) &gt;&gt; 8) |\</span></div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="preprocessor">                           ((U16)(u16) &lt;&lt; 8)))</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;</div><div class="line"><a name="l00951"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5e9bc2e3b3e43eadc3210b02cab6ac64">  951</a></span>&#160;<span class="preprocessor">#define Swap32(u32) ((U32)(((U32)Swap16((U32)(u32) &gt;&gt; 16)) |\</span></div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="preprocessor">                           ((U32)Swap16((U32)(u32)) &lt;&lt; 16)))</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;</div><div class="line"><a name="l00962"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga33f3049d9b8374e8b93d5642bfe7f426">  962</a></span>&#160;<span class="preprocessor">#define Swap64(u64) ((U64)(((U64)Swap32((U64)(u64) &gt;&gt; 32)) |\</span></div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="preprocessor">                           ((U64)Swap32((U64)(u64)) &lt;&lt; 32)))</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;</div><div class="line"><a name="l00973"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga3067f71c33a89726a107430050253045">  973</a></span>&#160;<span class="preprocessor">#define swap16(u16) Swap16(u16)</span></div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;<span class="preprocessor">#if (defined __GNUC__)</span></div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;<span class="preprocessor">#   define swap32(u32) ((U32)__builtin_bswap32((U32)(u32)))</span></div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00986"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga46025d8a12ccc9f4268c84e56c457416">  986</a></span>&#160;<span class="preprocessor">#   define swap32(u32) Swap32(u32)</span></div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;<span class="preprocessor">#if (defined __GNUC__)</span></div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="preprocessor">#   define swap64(u64) ((U64)__builtin_bswap64((U64)(u64)))</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l01000"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga78484801bd5bea7d382b34a4ed1f345d"> 1000</a></span>&#160;<span class="preprocessor">#   define swap64(u64) ((U64)(((U64)swap32((U64)(u64) &gt;&gt; 32)) |\</span></div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;<span class="preprocessor">                           ((U64)swap32((U64)(u64)) &lt;&lt; 32)))</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01011"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad4d03be3b8f3d15ed804170a1311ec98"> 1011</a></span>&#160;<span class="preprocessor">#define _GLOBEXT_           extern      </span></div><div class="line"><a name="l01012"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga8e0d79d43ad9295d5193ca29f109a762"> 1012</a></span>&#160;<span class="preprocessor">#define _CONST_TYPE_        const       </span></div><div class="line"><a name="l01013"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga35d552e8456cfb2b810baa0a9212c98e"> 1013</a></span>&#160;<span class="preprocessor">#define _MEM_TYPE_SLOW_                 </span></div><div class="line"><a name="l01014"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadcd997c76f95854090b17513c4ef3891"> 1014</a></span>&#160;<span class="preprocessor">#define _MEM_TYPE_MEDFAST_              </span></div><div class="line"><a name="l01015"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabf669e579471cadcf68d9ffc440e68b1"> 1015</a></span>&#160;<span class="preprocessor">#define _MEM_TYPE_FAST_                 </span></div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01017"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5b4c52e7ace584fa8e8f079801831d29"> 1017</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a>                  <a class="code" href="group__group__sam__utils.xhtml#ga5b4c52e7ace584fa8e8f079801831d29">Byte</a>;       </div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;</div><div class="line"><a name="l01019"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga27819e952caa0a535a5901d2857834b7"> 1019</a></span>&#160;<span class="preprocessor">#define memcmp_ram2ram      memcmp      </span></div><div class="line"><a name="l01020"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab914bad47205a9b7afb9ac53ec71cb55"> 1020</a></span>&#160;<span class="preprocessor">#define memcmp_code2ram     memcmp      </span></div><div class="line"><a name="l01021"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga9a4ff08e7c4cf79135a3bcbab68472b7"> 1021</a></span>&#160;<span class="preprocessor">#define memcpy_ram2ram      memcpy      </span></div><div class="line"><a name="l01022"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga55724cc8f7d42eba122dac5bffa00024"> 1022</a></span>&#160;<span class="preprocessor">#define memcpy_code2ram     memcpy      </span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01024"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga844ec34df36feb927dc92007af14674a"> 1024</a></span>&#160;<span class="preprocessor">#define LSB0(u32)           LSB0W(u32)  </span></div><div class="line"><a name="l01025"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2d1e45154b07481f0579ecc725e4edff"> 1025</a></span>&#160;<span class="preprocessor">#define LSB1(u32)           LSB1W(u32)  </span></div><div class="line"><a name="l01026"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga8967f5ae0174b01ce44c502ebd14035a"> 1026</a></span>&#160;<span class="preprocessor">#define LSB2(u32)           LSB2W(u32)  </span></div><div class="line"><a name="l01027"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5d9ff393e7c8764112a1167db19b16b1"> 1027</a></span>&#160;<span class="preprocessor">#define LSB3(u32)           LSB3W(u32)  </span></div><div class="line"><a name="l01028"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaeeb8918fc580ce01d45f71863eebff90"> 1028</a></span>&#160;<span class="preprocessor">#define MSB3(u32)           MSB3W(u32)  </span></div><div class="line"><a name="l01029"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga8683254be29bcfe3cf2fa646890d3942"> 1029</a></span>&#160;<span class="preprocessor">#define MSB2(u32)           MSB2W(u32)  </span></div><div class="line"><a name="l01030"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga3facab9f8ebf70ad6e16038465e2bedc"> 1030</a></span>&#160;<span class="preprocessor">#define MSB1(u32)           MSB1W(u32)  </span></div><div class="line"><a name="l01031"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gafb81783b8186acd7182a971048b0c6b3"> 1031</a></span>&#160;<span class="preprocessor">#define MSB0(u32)           MSB0W(u32)  </span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="preprocessor"></span></div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01044"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga6d4ebd841bc96041a7f3a61e227c1fb2"> 1044</a></span>&#160;<span class="preprocessor">#define div_ceil(a, b)      (((a) + (b) - 1) / (b))</span></div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="preprocessor">#endif  // #ifndef __ASSEMBLY__</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor">#if defined(__ICCARM__)</span></div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="preprocessor">#define SHORTENUM           __packed</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="preprocessor">#elif defined(__GNUC__)</span></div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="preprocessor">#define SHORTENUM           __attribute__((packed))</span></div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="comment">/* No operation */</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;<span class="preprocessor">#if defined(__ICCARM__)</span></div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;<span class="preprocessor">#define nop()               __no_operation()</span></div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;<span class="preprocessor">#elif defined(__GNUC__)</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;<span class="preprocessor">#define nop()               (__NOP())</span></div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga9b84ecc6b34a71f797ceb8b8f7b8d384"> 1062</a></span>&#160;<span class="preprocessor">#define FLASH_DECLARE(x)  const x</span></div><div class="line"><a name="l01063"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaaef0fd990bb5bd9cdf11334f7c689fd7"> 1063</a></span>&#160;<span class="preprocessor">#define FLASH_EXTERN(x) extern const x</span></div><div class="line"><a name="l01064"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gafe9b83c73d4840986478ec67d3eb7718"> 1064</a></span>&#160;<span class="preprocessor">#define PGM_READ_BYTE(x) *(x)</span></div><div class="line"><a name="l01065"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga92576bffe51090dcb6d5c67e07b9eec7"> 1065</a></span>&#160;<span class="preprocessor">#define PGM_READ_WORD(x) *(x)</span></div><div class="line"><a name="l01066"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga75d06f2874e7e44289c05cfadb0940fd"> 1066</a></span>&#160;<span class="preprocessor">#define PGM_READ_DWORD(x) *(x)</span></div><div class="line"><a name="l01067"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga85a7d71a016789b1766f9b27d0530347"> 1067</a></span>&#160;<span class="preprocessor">#define MEMCPY_ENDIAN memcpy</span></div><div class="line"><a name="l01068"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga8900e4615b7d7143a6c38e2a39087538"> 1068</a></span>&#160;<span class="preprocessor">#define PGM_READ_BLOCK(dst, src, len) memcpy((dst), (src), (len))</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;<span class="comment">/*Defines the Flash Storage for the request and response of MAC*/</span></div><div class="line"><a name="l01071"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gabf2b95fa77301377cdcf79eb615551db"> 1071</a></span>&#160;<span class="preprocessor">#define CMD_ID_OCTET    (0)</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;<span class="comment">/* Converting of values from CPU endian to little endian. */</span></div><div class="line"><a name="l01074"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga7c15ca0f3159182efc4b80a00768c2c0"> 1074</a></span>&#160;<span class="preprocessor">#define CPU_ENDIAN_TO_LE16(x)   (x)</span></div><div class="line"><a name="l01075"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa2fd4bfb7af44220ce4205e2aa371017"> 1075</a></span>&#160;<span class="preprocessor">#define CPU_ENDIAN_TO_LE32(x)   (x)</span></div><div class="line"><a name="l01076"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga6f1e86f452c8f327f9ca96cbf6a65c81"> 1076</a></span>&#160;<span class="preprocessor">#define CPU_ENDIAN_TO_LE64(x)   (x)</span></div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="comment">/* Converting of values from little endian to CPU endian. */</span></div><div class="line"><a name="l01079"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaceb02fdef243c22d2559e260185fb579"> 1079</a></span>&#160;<span class="preprocessor">#define LE16_TO_CPU_ENDIAN(x)   (x)</span></div><div class="line"><a name="l01080"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2df63369ef525ba98832132ce5a43346"> 1080</a></span>&#160;<span class="preprocessor">#define LE32_TO_CPU_ENDIAN(x)   (x)</span></div><div class="line"><a name="l01081"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gab675071ce5a4644b205cdbc858417ccd"> 1081</a></span>&#160;<span class="preprocessor">#define LE64_TO_CPU_ENDIAN(x)   (x)</span></div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;<span class="comment">/* Converting of constants from little endian to CPU endian. */</span></div><div class="line"><a name="l01084"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga4ac6e032d1ce0ae6d2e460da93ce8732"> 1084</a></span>&#160;<span class="preprocessor">#define CLE16_TO_CPU_ENDIAN(x)  (x)</span></div><div class="line"><a name="l01085"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga3ff07a7496222efe8bc7d7b7b0342b0d"> 1085</a></span>&#160;<span class="preprocessor">#define CLE32_TO_CPU_ENDIAN(x)  (x)</span></div><div class="line"><a name="l01086"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gacbbba93256e2d892c748d56a42f00f9b"> 1086</a></span>&#160;<span class="preprocessor">#define CLE64_TO_CPU_ENDIAN(x)  (x)</span></div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;<span class="comment">/* Converting of constants from CPU endian to little endian. */</span></div><div class="line"><a name="l01089"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga5fd2d3ed2fc9234277b659b67d33bc64"> 1089</a></span>&#160;<span class="preprocessor">#define CCPU_ENDIAN_TO_LE16(x)  (x)</span></div><div class="line"><a name="l01090"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga1e3290451e5c7b98175911c9219b5123"> 1090</a></span>&#160;<span class="preprocessor">#define CCPU_ENDIAN_TO_LE32(x)  (x)</span></div><div class="line"><a name="l01091"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga00483bf27ea1e8a2143c6baf22b31f16"> 1091</a></span>&#160;<span class="preprocessor">#define CCPU_ENDIAN_TO_LE64(x)  (x)</span></div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gac4609178e5c825e815f44fa123dcaaf7"> 1093</a></span>&#160;<span class="preprocessor">#define ADDR_COPY_DST_SRC_16(dst, src)  ((dst) = (src))</span></div><div class="line"><a name="l01094"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga0454afa80924c2183c8c672c043440cc"> 1094</a></span>&#160;<span class="preprocessor">#define ADDR_COPY_DST_SRC_64(dst, src)  ((dst) = (src))</span></div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;</div><div class="line"><a name="l01103"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gadca7cebb159c7ed180d3d07cccb74245"> 1103</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__group__sam__utils.xhtml#gadca7cebb159c7ed180d3d07cccb74245">convert_64_bit_to_byte_array</a>(uint64_t value, uint8_t *data)</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;{</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    uint8_t val_index = 0;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    <span class="keywordflow">while</span> (val_index &lt; 8)</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    {</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;        data[val_index++] = value &amp; 0xFF;</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;        value = value &gt;&gt; 8;</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    }</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;}</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01121"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga2de8d131d6afca8b368486f56c911e75"> 1121</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__group__sam__utils.xhtml#ga2de8d131d6afca8b368486f56c911e75">convert_16_bit_to_byte_array</a>(uint16_t value, uint8_t *data)</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;{</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    data[0] = value &amp; 0xFF;</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    data[1] = (value &gt;&gt; 8) &amp; 0xFF;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;}</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="comment">/* Converts a 16-Bit value into a 2 Byte array */</span></div><div class="line"><a name="l01128"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gaa9724d81bfe44a06b0372d144cd98e36"> 1128</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__group__sam__utils.xhtml#gaa9724d81bfe44a06b0372d144cd98e36">convert_spec_16_bit_to_byte_array</a>(uint16_t value, uint8_t *data)</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;{</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    data[0] = value &amp; 0xFF;</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    data[1] = (value &gt;&gt; 8) &amp; 0xFF;</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;}</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;<span class="comment">/* Converts a 16-Bit value into a 2 Byte array */</span></div><div class="line"><a name="l01135"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga9634f2d7292e1209fe3b83254a66c450"> 1135</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="group__group__sam__utils.xhtml#ga9634f2d7292e1209fe3b83254a66c450">convert_16_bit_to_byte_address</a>(uint16_t value, uint8_t *data)</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;{</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;    data[0] = value &amp; 0xFF;</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    data[1] = (value &gt;&gt; 8) &amp; 0xFF;</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;}</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;<span class="comment"> * @brief Converts a 2 Byte array into a 16-Bit value</span></div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;<span class="comment"> * @param data Specifies the pointer to the 2 Byte array</span></div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;<span class="comment"> * @return 16-Bit value</span></div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;<span class="comment"> * @ingroup apiPalApi</span></div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01149"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#gad3726f56d0820acc7bae83993bd8897c"> 1149</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> uint16_t <a class="code" href="group__group__sam__utils.xhtml#gad3726f56d0820acc7bae83993bd8897c">convert_byte_array_to_16_bit</a>(uint8_t *data)</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;{</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    <span class="keywordflow">return</span> (data[0] | ((uint16_t)data[1] &lt;&lt; 8));</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;}</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;<span class="comment">/* Converts a 8 Byte array into a 32-Bit value */</span></div><div class="line"><a name="l01155"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga6e01ed4a4718b439d295b5124ede09e3"> 1155</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> uint32_t <a class="code" href="group__group__sam__utils.xhtml#ga6e01ed4a4718b439d295b5124ede09e3">convert_byte_array_to_32_bit</a>(uint8_t *data)</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;{</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    <span class="keyword">union</span></div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    {</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;        uint32_t u32;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;        uint8_t u8[8];</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    }long_addr;</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    uint8_t index;</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keywordflow">for</span> (index = 0; index &lt; 4; index++)</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    {</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;        long_addr.u8[index] = *data++;</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    }</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;    <span class="keywordflow">return</span> long_addr.u32;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;}</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;</div><div class="line"><a name="l01178"></a><span class="lineno"><a class="line" href="group__group__sam__utils.xhtml#ga45ffdbdc2d7a6d1dbf91b2fe8d880347"> 1178</a></span>&#160;<span class="keyword">static</span> <span class="keyword">inline</span> uint64_t <a class="code" href="group__group__sam__utils.xhtml#ga45ffdbdc2d7a6d1dbf91b2fe8d880347">convert_byte_array_to_64_bit</a>(uint8_t *data)</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;{</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    <span class="keyword">union</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    {</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        uint64_t u64;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;        uint8_t u8[8];</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    } long_addr;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;    uint8_t val_index;</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;    <span class="keywordflow">for</span> (val_index = 0; val_index &lt; 8; val_index++)</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    {</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;        long_addr.u8[val_index] = *data++;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    }</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    <span class="keywordflow">return</span> long_addr.u64;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;}</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* UTILS_COMPILER_H */</span><span class="preprocessor"></span></div><div class="ttc" id="union_union_c_ptr_xhtml_abef0d7044879e7cb955fc9c03cfb8f50"><div class="ttname"><a href="union_union_c_ptr.xhtml#abef0d7044879e7cb955fc9c03cfb8f50">UnionCPtr::s32ptr</a></div><div class="ttdeci">const S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:350</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a1f8c61121a2da0bb4e862a5ee54dcc44"><div class="ttname"><a href="union_union_ptr.xhtml#a1f8c61121a2da0bb4e862a5ee54dcc44">UnionPtr::u8ptr</a></div><div class="ttdeci">U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:329</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_acbf301cfdf3519e8240f785b15bcb07f"><div class="ttname"><a href="union_union_v_ptr.xhtml#acbf301cfdf3519e8240f785b15bcb07f">UnionVPtr::s64ptr</a></div><div class="ttdeci">volatile S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:335</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga1d293e5c494dd6826239b02f5fe98e7f"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga1d293e5c494dd6826239b02f5fe98e7f">S64</a></div><div class="ttdeci">int64_t S64</div><div class="ttdoc">64-bit signed integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:266</div></div>
<div class="ttc" id="union_union16_xhtml_a1d8ea8e71644d08735c240bca057ba72"><div class="ttname"><a href="union_union16.xhtml#a1d8ea8e71644d08735c240bca057ba72">Union16::u16</a></div><div class="ttdeci">U16 u16</div><div class="ttdef"><b>Definition:</b> compiler.h:290</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga3410b85f2a5afdf8b35f5c7c3414fe2d"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga3410b85f2a5afdf8b35f5c7c3414fe2d">be32_t</a></div><div class="ttdeci">uint32_t be32_t</div><div class="ttdef"><b>Definition:</b> compiler.h:265</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a0937efe8d164fef35cc8f910374dd7f0"><div class="ttname"><a href="union_union_c_ptr.xhtml#a0937efe8d164fef35cc8f910374dd7f0">UnionCPtr::u16ptr</a></div><div class="ttdeci">const U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:353</div></div>
<div class="ttc" id="preprocessor_8h_xhtml"><div class="ttname"><a href="preprocessor_8h.xhtml">preprocessor.h</a></div><div class="ttdoc">Preprocessor utils. </div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_a0c7d3f1b3de836e79a2b5a30d628e0ea"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#a0c7d3f1b3de836e79a2b5a30d628e0ea">StructCPtr::u32ptr</a></div><div class="ttdeci">const U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:403</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gadb35b8c1c002c23dcc87bdd8f520dd5f"><div class="ttname"><a href="group__group__sam__utils.xhtml#gadb35b8c1c002c23dcc87bdd8f520dd5f">le16_t</a></div><div class="ttdeci">uint16_t le16_t</div><div class="ttdef"><b>Definition:</b> compiler.h:260</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a13457e86fece2ce730defcc94c91e4dc"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a13457e86fece2ce730defcc94c91e4dc">StructCVPtr::s8ptr</a></div><div class="ttdeci">const volatile S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:419</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a97657743440108335f1fe603e6160f25"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a97657743440108335f1fe603e6160f25">StructCVPtr::s16ptr</a></div><div class="ttdeci">const volatile S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:417</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a593e40c713f698413d1e898f403e9bd2"><div class="ttname"><a href="union_union_ptr.xhtml#a593e40c713f698413d1e898f403e9bd2">UnionPtr::s16ptr</a></div><div class="ttdeci">S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:326</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga97a80ca1602ebf2303258971a2c938e2"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a></div><div class="ttdeci">unsigned char bool</div><div class="ttdoc">Boolean. </div><div class="ttdef"><b>Definition:</b> compiler.h:253</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_add94692ec8e633ed9efc32a0b4134a66"><div class="ttname"><a href="union_union_v_ptr.xhtml#add94692ec8e633ed9efc32a0b4134a66">UnionVPtr::u64ptr</a></div><div class="ttdeci">volatile U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:336</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gadc9896ee12db3bb116fc63b3464c72c7"><div class="ttname"><a href="group__group__sam__utils.xhtml#gadc9896ee12db3bb116fc63b3464c72c7">F64</a></div><div class="ttdeci">double F64</div><div class="ttdoc">64-bit floating-point number. </div><div class="ttdef"><b>Definition:</b> compiler.h:269</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_ad70dd1cc1f7c0862aea54bc6de347534"><div class="ttname"><a href="struct_struct_ptr.xhtml#ad70dd1cc1f7c0862aea54bc6de347534">StructPtr::u64ptr</a></div><div class="ttdeci">U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:375</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_ae5cffdab3e2e13b6729ed7f3d164cce7"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#ae5cffdab3e2e13b6729ed7f3d164cce7">StructCPtr::s16ptr</a></div><div class="ttdeci">const S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:404</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga2de8d131d6afca8b368486f56c911e75"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga2de8d131d6afca8b368486f56c911e75">convert_16_bit_to_byte_array</a></div><div class="ttdeci">static void convert_16_bit_to_byte_array(uint16_t value, uint8_t *data)</div><div class="ttdoc">Converts a 16-Bit value into a 2 Byte array. </div><div class="ttdef"><b>Definition:</b> compiler.h:1121</div></div>
<div class="ttc" id="union_union_ptr_xhtml_acf1a3f495e9659fe4577751425b6ce99"><div class="ttname"><a href="union_union_ptr.xhtml#acf1a3f495e9659fe4577751425b6ce99">UnionPtr::u64ptr</a></div><div class="ttdeci">U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:323</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a14b9b38985dac215940243c4cfbbb4b0"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a14b9b38985dac215940243c4cfbbb4b0">StructVPtr::s16ptr</a></div><div class="ttdeci">volatile S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:391</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga5b4c52e7ace584fa8e8f079801831d29"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga5b4c52e7ace584fa8e8f079801831d29">Byte</a></div><div class="ttdeci">U8 Byte</div><div class="ttdoc">8-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:1017</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_a3ca52d2813ccddc625296b3e1a419610"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#a3ca52d2813ccddc625296b3e1a419610">StructCPtr::u16ptr</a></div><div class="ttdeci">const U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:405</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gadca7cebb159c7ed180d3d07cccb74245"><div class="ttname"><a href="group__group__sam__utils.xhtml#gadca7cebb159c7ed180d3d07cccb74245">convert_64_bit_to_byte_array</a></div><div class="ttdeci">static void convert_64_bit_to_byte_array(uint64_t value, uint8_t *data)</div><div class="ttdoc">Converts a 64-Bit value into a 8 Byte array. </div><div class="ttdef"><b>Definition:</b> compiler.h:1103</div></div>
<div class="ttc" id="interrupt_8h_xhtml"><div class="ttname"><a href="interrupt_8h.xhtml">interrupt.h</a></div><div class="ttdoc">Global interrupt management for 8- and 32-bit AVR. </div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_a9727d8b94598f408a3631893ed44f273"><div class="ttname"><a href="struct_struct_ptr.xhtml#a9727d8b94598f408a3631893ed44f273">StructPtr::u8ptr</a></div><div class="ttdeci">U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:381</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml"><div class="ttname"><a href="struct_struct_c_ptr.xhtml">StructCPtr</a></div><div class="ttdoc">Structure of pointers to constant 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:398</div></div>
<div class="ttc" id="union_union64_xhtml_a0d2ab3a488d93c2beed7987ef70e5628"><div class="ttname"><a href="union_union64.xhtml#a0d2ab3a488d93c2beed7987ef70e5628">Union64::s64</a></div><div class="ttdeci">S64 s64</div><div class="ttdef"><b>Definition:</b> compiler.h:309</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga9634f2d7292e1209fe3b83254a66c450"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga9634f2d7292e1209fe3b83254a66c450">convert_16_bit_to_byte_address</a></div><div class="ttdeci">static void convert_16_bit_to_byte_address(uint16_t value, uint8_t *data)</div><div class="ttdef"><b>Definition:</b> compiler.h:1135</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a43192511976f0a6d92b0132aa0cb70f2"><div class="ttname"><a href="union_union_c_ptr.xhtml#a43192511976f0a6d92b0132aa0cb70f2">UnionCPtr::s64ptr</a></div><div class="ttdeci">const S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:348</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml"><div class="ttname"><a href="struct_struct_ptr.xhtml">StructPtr</a></div><div class="ttdoc">Structure of pointers to 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:372</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_a34c387e10262411049636a789d0a6a6e"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#a34c387e10262411049636a789d0a6a6e">StructCPtr::u8ptr</a></div><div class="ttdeci">const U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:407</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_a90ba923b94ad85780d169572d3e346ff"><div class="ttname"><a href="union_union_v_ptr.xhtml#a90ba923b94ad85780d169572d3e346ff">UnionVPtr::u32ptr</a></div><div class="ttdeci">volatile U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:338</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_ae30b8d90cf4023021a2ae90829d783b9"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#ae30b8d90cf4023021a2ae90829d783b9">UnionCVPtr::u8ptr</a></div><div class="ttdeci">const volatile U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:368</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a7f767f45320067a836c24f092f133b1c"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a7f767f45320067a836c24f092f133b1c">StructCVPtr::u16ptr</a></div><div class="ttdeci">const volatile U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:418</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gaf1475a0bb1962ef08dd1f78bd5dba87a"><div class="ttname"><a href="group__group__sam__utils.xhtml#gaf1475a0bb1962ef08dd1f78bd5dba87a">S8</a></div><div class="ttdeci">int8_t S8</div><div class="ttdoc">8-bit signed integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:256</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga6d241ad21a823c90d4835380787db5d4"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga6d241ad21a823c90d4835380787db5d4">S16</a></div><div class="ttdeci">int16_t S16</div><div class="ttdoc">16-bit signed integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:258</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_a95089abbb09b37f10838becaf891460c"><div class="ttname"><a href="struct_struct_ptr.xhtml#a95089abbb09b37f10838becaf891460c">StructPtr::s8ptr</a></div><div class="ttdeci">S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:380</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a19ef459699971931ad9ba2237a1e94b5"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a19ef459699971931ad9ba2237a1e94b5">StructCVPtr::s64ptr</a></div><div class="ttdeci">const volatile S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:413</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_ac9d23d7f791de03f4352e2e7f8f31601"><div class="ttname"><a href="union_union_c_ptr.xhtml#ac9d23d7f791de03f4352e2e7f8f31601">UnionCPtr::u8ptr</a></div><div class="ttdeci">const U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:355</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_a707d4e218dbb787604879e8f3e4b88a0"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#a707d4e218dbb787604879e8f3e4b88a0">UnionCVPtr::s64ptr</a></div><div class="ttdeci">const volatile S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:361</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml"><div class="ttname"><a href="union_union_c_ptr.xhtml">UnionCPtr</a></div><div class="ttdoc">Union of pointers to constant 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:346</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_aa3713e0a7260185261a205f121081aca"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#aa3713e0a7260185261a205f121081aca">StructCVPtr::u8ptr</a></div><div class="ttdeci">const volatile U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:420</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_abcd674aaba4e93ab33e23fd1ed4e0326"><div class="ttname"><a href="union_union_v_ptr.xhtml#abcd674aaba4e93ab33e23fd1ed4e0326">UnionVPtr::s8ptr</a></div><div class="ttdeci">volatile S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:341</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_aa0154c497f6e44b50f2f9d470a19edb7"><div class="ttname"><a href="struct_struct_ptr.xhtml#aa0154c497f6e44b50f2f9d470a19edb7">StructPtr::s32ptr</a></div><div class="ttdeci">S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:376</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a3e510b4e1ddc03e1f0a84200a4641dc6"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a3e510b4e1ddc03e1f0a84200a4641dc6">StructVPtr::u32ptr</a></div><div class="ttdeci">volatile U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:390</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga0a0a322d5fa4a546d293a77ba8b4a71f"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga0a0a322d5fa4a546d293a77ba8b4a71f">U16</a></div><div class="ttdeci">uint16_t U16</div><div class="ttdoc">16-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:259</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a8b3e4acbf9aa9e133195d9f3da7e1067"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a8b3e4acbf9aa9e133195d9f3da7e1067">StructCVPtr::u32ptr</a></div><div class="ttdeci">const volatile U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:416</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_a9ba5f88bb47b6b78703eebade217a8f8"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#a9ba5f88bb47b6b78703eebade217a8f8">UnionCVPtr::u32ptr</a></div><div class="ttdeci">const volatile U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:364</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a5077596b4a3f411d721d2acff828b229"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a5077596b4a3f411d721d2acff828b229">StructVPtr::s32ptr</a></div><div class="ttdeci">volatile S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:389</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a4a6cf88c8245ebf428b70955b6f07660"><div class="ttname"><a href="union_union_c_ptr.xhtml#a4a6cf88c8245ebf428b70955b6f07660">UnionCPtr::u64ptr</a></div><div class="ttdeci">const U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:349</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga971c8994d25f93d700ec2737c8c5f82e"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga971c8994d25f93d700ec2737c8c5f82e">Status_bool_t</a></div><div class="ttdeci">bool Status_bool_t</div><div class="ttdoc">Boolean status. </div><div class="ttdef"><b>Definition:</b> compiler.h:277</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a8dc6099fe7124be876bb39ce2dbf0b4d"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a8dc6099fe7124be876bb39ce2dbf0b4d">StructVPtr::s64ptr</a></div><div class="ttdeci">volatile S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:387</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a0e59b9de39e5c22af91b5470fdb5aec4"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a0e59b9de39e5c22af91b5470fdb5aec4">StructVPtr::u16ptr</a></div><div class="ttdeci">volatile U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:392</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gad3726f56d0820acc7bae83993bd8897c"><div class="ttname"><a href="group__group__sam__utils.xhtml#gad3726f56d0820acc7bae83993bd8897c">convert_byte_array_to_16_bit</a></div><div class="ttdeci">static uint16_t convert_byte_array_to_16_bit(uint8_t *data)</div><div class="ttdef"><b>Definition:</b> compiler.h:1149</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga253b248072cfc8bd812c69acd0046eed"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga253b248072cfc8bd812c69acd0046eed">Bool</a></div><div class="ttdeci">unsigned char Bool</div><div class="ttdoc">Boolean. </div><div class="ttdef"><b>Definition:</b> compiler.h:250</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a579611a0e96c69ba201c64f5dd2ac402"><div class="ttname"><a href="union_union_c_ptr.xhtml#a579611a0e96c69ba201c64f5dd2ac402">UnionCPtr::s8ptr</a></div><div class="ttdeci">const S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:354</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a57b84ed1151cc81432197efd46a88fdb"><div class="ttname"><a href="union_union_ptr.xhtml#a57b84ed1151cc81432197efd46a88fdb">UnionPtr::s32ptr</a></div><div class="ttdeci">S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:324</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_ab8f3c8cc59c0cc260d216bcd62a2b367"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#ab8f3c8cc59c0cc260d216bcd62a2b367">StructCPtr::s64ptr</a></div><div class="ttdeci">const S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:400</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gaa9724d81bfe44a06b0372d144cd98e36"><div class="ttname"><a href="group__group__sam__utils.xhtml#gaa9724d81bfe44a06b0372d144cd98e36">convert_spec_16_bit_to_byte_array</a></div><div class="ttdeci">static void convert_spec_16_bit_to_byte_array(uint16_t value, uint8_t *data)</div><div class="ttdef"><b>Definition:</b> compiler.h:1128</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga14351c68ce47837d05ce857cfff07c92"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga14351c68ce47837d05ce857cfff07c92">le32_t</a></div><div class="ttdeci">uint32_t le32_t</div><div class="ttdef"><b>Definition:</b> compiler.h:264</div></div>
<div class="ttc" id="io_8h_xhtml"><div class="ttname"><a href="io_8h.xhtml">io.h</a></div><div class="ttdoc">Arch file for SAM. </div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga2aa1108d10dcbee73bb35aefe25287c1"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga2aa1108d10dcbee73bb35aefe25287c1">iram_size_t</a></div><div class="ttdeci">uint32_t iram_size_t</div><div class="ttdef"><b>Definition:</b> compiler.h:270</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gadafc3ed99e530f27d0d954334c389748"><div class="ttname"><a href="group__group__sam__utils.xhtml#gadafc3ed99e530f27d0d954334c389748">be16_t</a></div><div class="ttdeci">uint16_t be16_t</div><div class="ttdef"><b>Definition:</b> compiler.h:261</div></div>
<div class="ttc" id="union_union32_xhtml_a765d5f0ef4f6df6a2f9971a6f0694020"><div class="ttname"><a href="union_union32.xhtml#a765d5f0ef4f6df6a2f9971a6f0694020">Union32::u32</a></div><div class="ttdeci">U32 u32</div><div class="ttdef"><b>Definition:</b> compiler.h:299</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_ac3ff20d63a21109b06ddfc5d981d60a4"><div class="ttname"><a href="struct_struct_ptr.xhtml#ac3ff20d63a21109b06ddfc5d981d60a4">StructPtr::u16ptr</a></div><div class="ttdeci">U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:379</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_a21c8e70e260cbcfa6b1bcd5e36a65cc9"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#a21c8e70e260cbcfa6b1bcd5e36a65cc9">UnionCVPtr::u64ptr</a></div><div class="ttdeci">const volatile U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:362</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a2bf916009db91dc0bb39f0cbbecf77fd"><div class="ttname"><a href="union_union_ptr.xhtml#a2bf916009db91dc0bb39f0cbbecf77fd">UnionPtr::u32ptr</a></div><div class="ttdeci">U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:325</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga696390429f2f3b644bde8d0322a24124"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga696390429f2f3b644bde8d0322a24124">U32</a></div><div class="ttdeci">uint32_t U32</div><div class="ttdoc">32-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:263</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_a17051fdc2ec05cca756353562a8e1078"><div class="ttname"><a href="union_union_v_ptr.xhtml#a17051fdc2ec05cca756353562a8e1078">UnionVPtr::s16ptr</a></div><div class="ttdeci">volatile S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:339</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_a224ab50214c0299652bfab7ac8df4304"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#a224ab50214c0299652bfab7ac8df4304">StructCPtr::u64ptr</a></div><div class="ttdeci">const U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:401</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_aba2be4a121bf17fd4469f35bb63ac608"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#aba2be4a121bf17fd4469f35bb63ac608">UnionCVPtr::s16ptr</a></div><div class="ttdeci">const volatile S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:365</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_adf51b808c625ef854e381489d9f30565"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#adf51b808c625ef854e381489d9f30565">StructCPtr::s8ptr</a></div><div class="ttdeci">const S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:406</div></div>
<div class="ttc" id="struct_struct_c_ptr_xhtml_a1f7b9580c2afcee8403d3a85273eaf1f"><div class="ttname"><a href="struct_struct_c_ptr.xhtml#a1f7b9580c2afcee8403d3a85273eaf1f">StructCPtr::s32ptr</a></div><div class="ttdeci">const S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:402</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga65a9dca1465decb9b96bb02fde36b2b8"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga65a9dca1465decb9b96bb02fde36b2b8">Status_t</a></div><div class="ttdeci">U8 Status_t</div><div class="ttdoc">8-bit-coded status. </div><div class="ttdef"><b>Definition:</b> compiler.h:278</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_a2709554b2f9fcf0bb6f322ca8f6c0e00"><div class="ttname"><a href="struct_struct_ptr.xhtml#a2709554b2f9fcf0bb6f322ca8f6c0e00">StructPtr::u32ptr</a></div><div class="ttdeci">U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:377</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_adae0fe80c386b7283d072757309557f0"><div class="ttname"><a href="union_union_v_ptr.xhtml#adae0fe80c386b7283d072757309557f0">UnionVPtr::u8ptr</a></div><div class="ttdeci">volatile U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:342</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_af27893e4b9420c22e2aaa1d0a1ceb165"><div class="ttname"><a href="struct_struct_ptr.xhtml#af27893e4b9420c22e2aaa1d0a1ceb165">StructPtr::s16ptr</a></div><div class="ttdeci">S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:378</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga25809e0734a149248fcf5831efa4e33d"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga25809e0734a149248fcf5831efa4e33d">U64</a></div><div class="ttdeci">uint64_t U64</div><div class="ttdoc">64-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:267</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a191528bcd3c8787294df254b8afe1cb0"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a191528bcd3c8787294df254b8afe1cb0">StructVPtr::u64ptr</a></div><div class="ttdeci">volatile U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:388</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_ad3980fc6efca2844b424b1c9bf17f935"><div class="ttname"><a href="union_union_v_ptr.xhtml#ad3980fc6efca2844b424b1c9bf17f935">UnionVPtr::s32ptr</a></div><div class="ttdeci">volatile S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:337</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga39c786017723555afb9e8b85accec0de"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga39c786017723555afb9e8b85accec0de">S32</a></div><div class="ttdeci">int32_t S32</div><div class="ttdoc">32-bit signed integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:262</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml">StructCVPtr</a></div><div class="ttdoc">Structure of pointers to constant volatile 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:411</div></div>
<div class="ttc" id="parts_8h_xhtml"><div class="ttname"><a href="parts_8h.xhtml">parts.h</a></div><div class="ttdoc">Atmel part identification macros. </div></div>
<div class="ttc" id="union_union_ptr_xhtml"><div class="ttname"><a href="union_union_ptr.xhtml">UnionPtr</a></div><div class="ttdoc">Union of pointers to 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:320</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a059e13e212713a7f29e1a34666041875"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a059e13e212713a7f29e1a34666041875">StructVPtr::u8ptr</a></div><div class="ttdeci">volatile U8 * u8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:394</div></div>
<div class="ttc" id="union_union16_xhtml_afefdb4bb60d553b514dc939a77ed454f"><div class="ttname"><a href="union_union16.xhtml#afefdb4bb60d553b514dc939a77ed454f">Union16::s16</a></div><div class="ttdeci">S16 s16</div><div class="ttdef"><b>Definition:</b> compiler.h:289</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_a1c3a68ddb0ecd1e210015e6f07ae3589"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#a1c3a68ddb0ecd1e210015e6f07ae3589">UnionCVPtr::u16ptr</a></div><div class="ttdeci">const volatile U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:366</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a4b439b888a79a28b144f009592b65acf"><div class="ttname"><a href="union_union_c_ptr.xhtml#a4b439b888a79a28b144f009592b65acf">UnionCPtr::u32ptr</a></div><div class="ttdeci">const U32 * u32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:351</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a63f71a612f64662218512e29af1677c0"><div class="ttname"><a href="union_union_ptr.xhtml#a63f71a612f64662218512e29af1677c0">UnionPtr::s64ptr</a></div><div class="ttdeci">S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:322</div></div>
<div class="ttc" id="union_union32_xhtml"><div class="ttname"><a href="union_union32.xhtml">Union32</a></div><div class="ttdoc">32-bit union. </div><div class="ttdef"><b>Definition:</b> compiler.h:296</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga6e01ed4a4718b439d295b5124ede09e3"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga6e01ed4a4718b439d295b5124ede09e3">convert_byte_array_to_32_bit</a></div><div class="ttdeci">static uint32_t convert_byte_array_to_32_bit(uint8_t *data)</div><div class="ttdef"><b>Definition:</b> compiler.h:1155</div></div>
<div class="ttc" id="union_union64_xhtml_aac95b1d1211f52003bbc09498393ee0d"><div class="ttname"><a href="union_union64.xhtml#aac95b1d1211f52003bbc09498393ee0d">Union64::u64</a></div><div class="ttdeci">U64 u64</div><div class="ttdef"><b>Definition:</b> compiler.h:310</div></div>
<div class="ttc" id="struct_struct_ptr_xhtml_a184a0d1b77988f8b31c1e44640539ae3"><div class="ttname"><a href="struct_struct_ptr.xhtml#a184a0d1b77988f8b31c1e44640539ae3">StructPtr::s64ptr</a></div><div class="ttdeci">S64 * s64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:374</div></div>
<div class="ttc" id="union_union32_xhtml_a435aab788ea7e552ed83572f419dbc07"><div class="ttname"><a href="union_union32.xhtml#a435aab788ea7e552ed83572f419dbc07">Union32::s32</a></div><div class="ttdeci">S32 s32</div><div class="ttdef"><b>Definition:</b> compiler.h:298</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_gaa63ef7b996d5487ce35a5a66601f3e73"><div class="ttname"><a href="group__group__sam__utils.xhtml#gaa63ef7b996d5487ce35a5a66601f3e73">U8</a></div><div class="ttdeci">uint8_t U8</div><div class="ttdoc">8-bit unsigned integer. </div><div class="ttdef"><b>Definition:</b> compiler.h:257</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a757c9f34a8971c29d4883d86d1ce0bbe"><div class="ttname"><a href="union_union_ptr.xhtml#a757c9f34a8971c29d4883d86d1ce0bbe">UnionPtr::s8ptr</a></div><div class="ttdeci">S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:328</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml_a4b6384d064d24aad80d7d1e74d2407eb"><div class="ttname"><a href="struct_struct_v_ptr.xhtml#a4b6384d064d24aad80d7d1e74d2407eb">StructVPtr::s8ptr</a></div><div class="ttdeci">volatile S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:393</div></div>
<div class="ttc" id="union_union_c_ptr_xhtml_a2cf792c052a8b758d4f577abb68b6da3"><div class="ttname"><a href="union_union_c_ptr.xhtml#a2cf792c052a8b758d4f577abb68b6da3">UnionCPtr::s16ptr</a></div><div class="ttdeci">const S16 * s16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:352</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga45ffdbdc2d7a6d1dbf91b2fe8d880347"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga45ffdbdc2d7a6d1dbf91b2fe8d880347">convert_byte_array_to_64_bit</a></div><div class="ttdeci">static uint64_t convert_byte_array_to_64_bit(uint8_t *data)</div><div class="ttdoc">Converts a 8 Byte array into a 64-Bit value. </div><div class="ttdef"><b>Definition:</b> compiler.h:1178</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_a6967ea819f181d054e47b82319745be9"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#a6967ea819f181d054e47b82319745be9">StructCVPtr::s32ptr</a></div><div class="ttdeci">const volatile S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:415</div></div>
<div class="ttc" id="union_union64_xhtml"><div class="ttname"><a href="union_union64.xhtml">Union64</a></div><div class="ttdoc">64-bit union. </div><div class="ttdef"><b>Definition:</b> compiler.h:307</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml"><div class="ttname"><a href="union_union_v_ptr.xhtml">UnionVPtr</a></div><div class="ttdoc">Union of pointers to volatile 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:333</div></div>
<div class="ttc" id="union_union_v_ptr_xhtml_aabd260d7853cf121cb44b0e04e8550ae"><div class="ttname"><a href="union_union_v_ptr.xhtml#aabd260d7853cf121cb44b0e04e8550ae">UnionVPtr::u16ptr</a></div><div class="ttdeci">volatile U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:340</div></div>
<div class="ttc" id="group__group__sam__utils_xhtml_ga841d3674577a1e86afdc2f4845f46c4b"><div class="ttname"><a href="group__group__sam__utils.xhtml#ga841d3674577a1e86afdc2f4845f46c4b">F32</a></div><div class="ttdeci">float F32</div><div class="ttdoc">32-bit floating-point number. </div><div class="ttdef"><b>Definition:</b> compiler.h:268</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_ab5a1808ed01b80dd091bbd5a1f69532b"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#ab5a1808ed01b80dd091bbd5a1f69532b">UnionCVPtr::s8ptr</a></div><div class="ttdeci">const volatile S8 * s8ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:367</div></div>
<div class="ttc" id="union_union_ptr_xhtml_a0f6f6d7b3464a7c8aca80a1722fc3347"><div class="ttname"><a href="union_union_ptr.xhtml#a0f6f6d7b3464a7c8aca80a1722fc3347">UnionPtr::u16ptr</a></div><div class="ttdeci">U16 * u16ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:327</div></div>
<div class="ttc" id="struct_struct_v_ptr_xhtml"><div class="ttname"><a href="struct_struct_v_ptr.xhtml">StructVPtr</a></div><div class="ttdoc">Structure of pointers to volatile 64-, 32-, 16- and 8-bit unsigned integers. </div><div class="ttdef"><b>Definition:</b> compiler.h:385</div></div>
<div class="ttc" id="union_union16_xhtml"><div class="ttname"><a href="union_union16.xhtml">Union16</a></div><div class="ttdoc">16-bit union. </div><div class="ttdef"><b>Definition:</b> compiler.h:287</div></div>
<div class="ttc" id="struct_struct_c_v_ptr_xhtml_aac7addfa477ae9ae941add494152e94b"><div class="ttname"><a href="struct_struct_c_v_ptr.xhtml#aac7addfa477ae9ae941add494152e94b">StructCVPtr::u64ptr</a></div><div class="ttdeci">const volatile U64 * u64ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:414</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml_ab9a23c3b3b42b195d56982ff8219b6e5"><div class="ttname"><a href="union_union_c_v_ptr.xhtml#ab9a23c3b3b42b195d56982ff8219b6e5">UnionCVPtr::s32ptr</a></div><div class="ttdeci">const volatile S32 * s32ptr</div><div class="ttdef"><b>Definition:</b> compiler.h:363</div></div>
<div class="ttc" id="union_union_c_v_ptr_xhtml"><div class="ttname"><a href="union_union_c_v_ptr.xhtml">UnionCVPtr</a></div><div class="ttdoc">Union of pointers to constant volatile 64-, 32-, 16- and 8-bit unsigned integers. ...</div><div class="ttdef"><b>Definition:</b> compiler.h:359</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
