<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: src/mcp/protocol_host_parser.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_ce4c810be13e606bdd57650e1ea2a14c.xhtml">mcp</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">protocol_host_parser.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="protocol__host__parser_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef PROTOCOL_HOST_PARSER_H</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define PROTOCOL_HOST_PARSER_H</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="xtserial__definitions_8h.xhtml">xtserial_definitions.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#ac0cc87fd8baf5f9e3e54b669fad7bd4e">   11</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#ac0cc87fd8baf5f9e3e54b669fad7bd4e">UNINITILIZED_ERROR_CODE</a> = 0xdeadbeef;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#afa85035c227e2eda46435019ace68e95">   12</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#afa85035c227e2eda46435019ace68e95">PARSE_OK</a> = 0;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a70a0ab50a6441399ec3240c81a97a9b8">   13</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#a70a0ab50a6441399ec3240c81a97a9b8">ERROR</a> = 1;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a8e9fbf2426b2475632a8a1341d431ac3">   14</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#a8e9fbf2426b2475632a8a1341d431ac3">ERROR_SHORT_DATA</a> = 2;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a2bfad4ac1f790406b0689f3acdbf0714">   15</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#a2bfad4ac1f790406b0689f3acdbf0714">ERROR_WRONG_CONTENT</a> = 3;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#aa22b1e0ab9b47187c9f1fd64c8283c22">   16</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#aa22b1e0ab9b47187c9f1fd64c8283c22">ERROR_UNKNOWN_PACKET</a> = 4;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a1eb904d7bb08a08310828d953f505b0d">   17</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> uint32_t <a class="code" href="protocol__host__parser_8h.xhtml#a1eb904d7bb08a08310828d953f505b0d">ERROR_NO_DATA</a> = 5;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="struct_error.xhtml">   20</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_error.xhtml">Error</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="struct_error.xhtml#a0832eb158486daacb41dd18228662d0d">   22</a></span>&#160;    uint32_t <a class="code" href="struct_error.xhtml#a0832eb158486daacb41dd18228662d0d">error_code</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;};</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="struct_ack.xhtml">   25</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="struct_ack.xhtml#a3936d53cc340bb201979aea5aa2b594c">   26</a></span>&#160;    <span class="keywordtype">char</span> <a class="code" href="struct_ack.xhtml#a3936d53cc340bb201979aea5aa2b594c">dummy</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;} <a class="code" href="struct_ack.xhtml">Ack</a>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="struct_reply.xhtml">   29</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a4266d6d9487747809c41b77c7664fbbd">   31</a></span>&#160;    <a class="code" href="xtserial__definitions_8h.xhtml#aa6c924dcdf2b8da0008172856abb2bb3">serial_protocol_response_datatype_t</a> <a class="code" href="struct_reply.xhtml#a4266d6d9487747809c41b77c7664fbbd">data_type</a>;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a3f508b3a1a5dd64e380a59c1e41aab37">   32</a></span>&#160;    uint32_t <a class="code" href="struct_reply.xhtml#a3f508b3a1a5dd64e380a59c1e41aab37">content_id</a>;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a5efb56bc642e92a97f7697bc2d364146">   33</a></span>&#160;    uint32_t <a class="code" href="struct_reply.xhtml#a5efb56bc642e92a97f7697bc2d364146">info</a>;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a66f8bf3ea954e9de3ec4c697ca07ca66">   34</a></span>&#160;    uint32_t <a class="code" href="struct_reply.xhtml#a66f8bf3ea954e9de3ec4c697ca07ca66">length</a>;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a82f1711c4a5aa9563e14f047a79e23f3">   35</a></span>&#160;    uint8_t* <a class="code" href="struct_reply.xhtml#a82f1711c4a5aa9563e14f047a79e23f3">data</a>;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="struct_reply.xhtml#a15433099b687ed570ffaf4053ba1b6c5">   36</a></span>&#160;    uint8_t <a class="code" href="struct_reply.xhtml#a15433099b687ed570ffaf4053ba1b6c5">data_size</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;} <a class="code" href="struct_reply.xhtml">Reply</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="struct_float_data__.xhtml">   40</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="struct_float_data__.xhtml">FloatData_</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="struct_float_data__.xhtml#a517ff7eb4861c38f39ff684be7fbb236">   42</a></span>&#160;    uint32_t <a class="code" href="struct_float_data__.xhtml#a517ff7eb4861c38f39ff684be7fbb236">content_id</a>;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="struct_float_data__.xhtml#ac9286c93520745ca5021ef708ebc4597">   43</a></span>&#160;    uint32_t <a class="code" href="struct_float_data__.xhtml#ac9286c93520745ca5021ef708ebc4597">info</a>;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="struct_float_data__.xhtml#ae5ccd120ae68ed16c324d61e31985a53">   44</a></span>&#160;    uint32_t <a class="code" href="struct_float_data__.xhtml#ae5ccd120ae68ed16c324d61e31985a53">length</a>;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="struct_float_data__.xhtml#a0470de3e6ecd65d2fa688f28f78744a7">   45</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_float_data__.xhtml#a0470de3e6ecd65d2fa688f28f78744a7">data</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}<a class="code" href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml">   49</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#a31e579c1c911fb99d1e48d93ef9902f8">   51</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_data.xhtml#a31e579c1c911fb99d1e48d93ef9902f8">frame_counter</a>;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#a64827acc38e46173720e77fc89652ab1">   52</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_data.xhtml#a64827acc38e46173720e77fc89652ab1">sensor_state</a>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#abdf9b806c74e9e154ce920fd48c36c65">   53</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_data.xhtml#abdf9b806c74e9e154ce920fd48c36c65">respiration_rate</a>;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#a9b684c95361825265e855cb711ed5aca">   54</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_respiration_data.xhtml#a9b684c95361825265e855cb711ed5aca">distance</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#ac542245508dadb3424948b138f269b2f">   55</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_respiration_data.xhtml#ac542245508dadb3424948b138f269b2f">movement</a>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="struct_respiration_data.xhtml#a874838f2d3add7da7946750054f197cf">   56</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_data.xhtml#a874838f2d3add7da7946750054f197cf">signal_quality</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;} <a class="code" href="struct_respiration_data.xhtml">RespirationData</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml">   60</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a1f7782633b414775869e4a4ad6d56909">   62</a></span>&#160;    uint32_t <a class="code" href="struct_sleep_data.xhtml#a1f7782633b414775869e4a4ad6d56909">frame_counter</a>;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a8817da2882b11f674d1c166eaadd7c7a">   63</a></span>&#160;    uint32_t <a class="code" href="struct_sleep_data.xhtml#a8817da2882b11f674d1c166eaadd7c7a">sensor_state</a>;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a06a132c3316871bec4745bf934d6fb13">   64</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_sleep_data.xhtml#a06a132c3316871bec4745bf934d6fb13">respiration_rate</a>;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#aeb9c6214077dfdede65ce73ee0ebed43">   65</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_sleep_data.xhtml#aeb9c6214077dfdede65ce73ee0ebed43">distance</a>;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a647e9c37d97ffd1c6d2a9bf004acd97d">   66</a></span>&#160;    uint32_t <a class="code" href="struct_sleep_data.xhtml#a647e9c37d97ffd1c6d2a9bf004acd97d">signal_quality</a>;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a3e888d0c9c3e39648d2c1084c78b3525">   67</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_sleep_data.xhtml#a3e888d0c9c3e39648d2c1084c78b3525">movement_slow</a>;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="struct_sleep_data.xhtml#a7fa1f382324213b5a6ba2b888e0056a3">   68</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_sleep_data.xhtml#a7fa1f382324213b5a6ba2b888e0056a3">movement_fast</a>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;} <a class="code" href="struct_sleep_data.xhtml">SleepData</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml">   72</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#a3a921c8e96ce820572713486f1437552">   74</a></span>&#160;    uint32_t <a class="code" href="struct_baseband_ap_data.xhtml#a3a921c8e96ce820572713486f1437552">frame_counter</a>;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#abad77df56545eb44030724487bf84f4d">   75</a></span>&#160;    uint32_t <a class="code" href="struct_baseband_ap_data.xhtml#abad77df56545eb44030724487bf84f4d">num_bins</a>;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#a8b255b8b7a3c795fb6a90cfd10612e12">   76</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_ap_data.xhtml#a8b255b8b7a3c795fb6a90cfd10612e12">bin_length</a>;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#adf19c268808ca82cba14389eec9dbbcf">   77</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_ap_data.xhtml#adf19c268808ca82cba14389eec9dbbcf">sample_frequency</a>;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#a7d171953901b9d0a1fdc2ef892f3b158">   78</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_ap_data.xhtml#a7d171953901b9d0a1fdc2ef892f3b158">carrier_frequency</a>;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#ababdd8a296135b7e98a83c82cc00fb01">   79</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_ap_data.xhtml#ababdd8a296135b7e98a83c82cc00fb01">range_offset</a>;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#aa78b20b2150ae70de1707f3a961ba438">   80</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_baseband_ap_data.xhtml#aa78b20b2150ae70de1707f3a961ba438">amplitude</a>;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="struct_baseband_ap_data.xhtml#a5db5375c74bc8fcef460656a6fc03b8b">   81</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_baseband_ap_data.xhtml#a5db5375c74bc8fcef460656a6fc03b8b">phase</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;} <a class="code" href="struct_baseband_ap_data.xhtml">BasebandApData</a>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml">   85</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#abe0b5f84ac688d7531c7bd51146029ef">   87</a></span>&#160;    uint32_t <a class="code" href="struct_baseband_iq_data.xhtml#abe0b5f84ac688d7531c7bd51146029ef">frame_counter</a>;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#a37c0510b554c623bbc2ec6befeeb58d0">   88</a></span>&#160;    uint32_t <a class="code" href="struct_baseband_iq_data.xhtml#a37c0510b554c623bbc2ec6befeeb58d0">num_bins</a>;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#a21cae89a8e5af855b7b07a06221c271d">   89</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_iq_data.xhtml#a21cae89a8e5af855b7b07a06221c271d">bin_length</a>;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#aeb10b8a165c6cbab8401fcaec80ff5fd">   90</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_iq_data.xhtml#aeb10b8a165c6cbab8401fcaec80ff5fd">sample_frequency</a>;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#a94811c82e744a4808df9c08dc8bd3124">   91</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_iq_data.xhtml#a94811c82e744a4808df9c08dc8bd3124">carrier_frequency</a>;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#a8e1b5d54db5376d6fd87a347dd226a89">   92</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_baseband_iq_data.xhtml#a8e1b5d54db5376d6fd87a347dd226a89">range_offset</a>;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#ab1418b03e1d4d13885516f07d8159168">   93</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_baseband_iq_data.xhtml#ab1418b03e1d4d13885516f07d8159168">i_data</a>;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="struct_baseband_iq_data.xhtml#ae84c9a3a1a8f473dc305819e4de9ba54">   94</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_baseband_iq_data.xhtml#ae84c9a3a1a8f473dc305819e4de9ba54">q_data</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;} <a class="code" href="struct_baseband_iq_data.xhtml">BasebandIqData</a>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="struct_system_status.xhtml">   98</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="struct_system_status.xhtml#afb4e215f22aa28dd00e8a81eb2deb1b7">  100</a></span>&#160;    uint32_t <a class="code" href="struct_system_status.xhtml#afb4e215f22aa28dd00e8a81eb2deb1b7">status</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;} <a class="code" href="struct_system_status.xhtml">SystemStatus</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml">  104</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml#a36fbf9ac3ad318237c3208c2bbcc2f32">  106</a></span>&#160;    uint32_t <a class="code" href="struct_presence_single_data.xhtml#a36fbf9ac3ad318237c3208c2bbcc2f32">frame_counter</a>;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml#a36dac5dafce9cf0598621a8ddb07cabb">  107</a></span>&#160;    uint32_t <a class="code" href="struct_presence_single_data.xhtml#a36dac5dafce9cf0598621a8ddb07cabb">presence_state</a>;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml#a50eeef4e20afe77873cae0db6fe90b73">  108</a></span>&#160;    <span class="keywordtype">float</span> <a class="code" href="struct_presence_single_data.xhtml#a50eeef4e20afe77873cae0db6fe90b73">distance</a>;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml#ae28aa1073123d08c39a5002eb7608ca8">  109</a></span>&#160;    uint8_t <a class="code" href="struct_presence_single_data.xhtml#ae28aa1073123d08c39a5002eb7608ca8">direction</a>;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="struct_presence_single_data.xhtml#ae6915c3b99e5ab080991403b5c2f6f1d">  110</a></span>&#160;    uint32_t <a class="code" href="struct_presence_single_data.xhtml#ae6915c3b99e5ab080991403b5c2f6f1d">signal_quality</a>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;} <a class="code" href="struct_presence_single_data.xhtml">PresenceSingleData</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml">  114</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#a1cc021ae8237c3c609abd65dbcba5014">  116</a></span>&#160;    uint32_t <a class="code" href="struct_presence_moving_list_data.xhtml#a1cc021ae8237c3c609abd65dbcba5014">frame_counter</a>;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#a1e01003ed5d727eeaa057e35bb122b03">  117</a></span>&#160;    uint32_t <a class="code" href="struct_presence_moving_list_data.xhtml#a1e01003ed5d727eeaa057e35bb122b03">presence_state</a>;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#a729a7087c1ae0791557609670f1968c3">  118</a></span>&#160;    uint32_t <a class="code" href="struct_presence_moving_list_data.xhtml#a729a7087c1ae0791557609670f1968c3">interval_count</a>;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#a624ce19a0165e31ea32248f5f64e59b7">  119</a></span>&#160;    uint32_t <a class="code" href="struct_presence_moving_list_data.xhtml#a624ce19a0165e31ea32248f5f64e59b7">detection_count</a>;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#ab172796caadc58d212cf3f595a1a6c5d">  120</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_presence_moving_list_data.xhtml#ab172796caadc58d212cf3f595a1a6c5d">movement_slow_items</a>;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#aecb6e3d4ea1242d7806c69c3b85e4473">  121</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_presence_moving_list_data.xhtml#aecb6e3d4ea1242d7806c69c3b85e4473">movement_fast_items</a>;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#aff1648c6c9151a66b9ae09b01ee8be68">  122</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_presence_moving_list_data.xhtml#aff1648c6c9151a66b9ae09b01ee8be68">detection_distance_items</a>;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#aeda8323f2ac9d6e7451358246357dac7">  123</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_presence_moving_list_data.xhtml#aeda8323f2ac9d6e7451358246357dac7">radar_cross_section_items</a>;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="struct_presence_moving_list_data.xhtml#a6b9662279676a1d3f2554e234a41679b">  124</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_presence_moving_list_data.xhtml#a6b9662279676a1d3f2554e234a41679b">detection_velocity_items</a>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;} <a class="code" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="struct_respiration_moving_list_data.xhtml">  128</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="struct_respiration_moving_list_data.xhtml#aa02a2d90806ff9f434c700f3c35c4150">  130</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_moving_list_data.xhtml#aa02a2d90806ff9f434c700f3c35c4150">counter</a>;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="struct_respiration_moving_list_data.xhtml#a3c6c54e275b0fa7b6ebda7506281bae3">  131</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_moving_list_data.xhtml#a3c6c54e275b0fa7b6ebda7506281bae3">interval_count</a>;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="struct_respiration_moving_list_data.xhtml#a144466a4a1e390f05236185362a24da0">  132</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_respiration_moving_list_data.xhtml#a144466a4a1e390f05236185362a24da0">movement_slow_items</a>;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="struct_respiration_moving_list_data.xhtml#a14210d005563caf46de50eff11aed476">  133</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> * <a class="code" href="struct_respiration_moving_list_data.xhtml#a14210d005563caf46de50eff11aed476">movement_fast_items</a>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;} <a class="code" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml">  138</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml#a93cd88d7aeed947f292f1e898f942139">  140</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_detection_list_data.xhtml#a93cd88d7aeed947f292f1e898f942139">counter</a>;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml#aa982633b62914742820f0da9242cec56">  141</a></span>&#160;    uint32_t <a class="code" href="struct_respiration_detection_list_data.xhtml#aa982633b62914742820f0da9242cec56">detection_count</a>;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml#a5ee7d91278a09d2e33774b3731d6061e">  142</a></span>&#160;    <span class="keywordtype">float</span> * <a class="code" href="struct_respiration_detection_list_data.xhtml#a5ee7d91278a09d2e33774b3731d6061e">detection_distance_items</a>;</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml#ae1a195c98346e32300f6e6ec5c467a2d">  143</a></span>&#160;    <span class="keywordtype">float</span> * <a class="code" href="struct_respiration_detection_list_data.xhtml#ae1a195c98346e32300f6e6ec5c467a2d">detection_radar_cross_section_items</a>;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="struct_respiration_detection_list_data.xhtml#ad8c0bf40b16470ffacec4f2140051cfd">  144</a></span>&#160;    <span class="keywordtype">float</span> * <a class="code" href="struct_respiration_detection_list_data.xhtml#ad8c0bf40b16470ffacec4f2140051cfd">detection_velocity_items</a>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;} <a class="code" href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a80810e682ea79392587186e35b50b3fb">  148</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a80810e682ea79392587186e35b50b3fb">McpPongCallback</a>)(uint32_t pong, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#af218e95105cb9f80b781b2c160341833">  149</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#af218e95105cb9f80b781b2c160341833">McpErrorCallback</a>)(uint32_t data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a5464b52e316a86c02a361c18bb1e2acb">  150</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a5464b52e316a86c02a361c18bb1e2acb">McpDataFloatCallback</a>)(<a class="code" href="struct_float_data__.xhtml">FloatData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#ac3963d12dedea925e1a5824f90a60fae">  151</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#ac3963d12dedea925e1a5824f90a60fae">McpAckCallback</a>)(<a class="code" href="struct_ack.xhtml">Ack</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#abe7a79957e6c5b46e654ead9b33f1d77">  152</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#abe7a79957e6c5b46e654ead9b33f1d77">McpReplyCallback</a>)(<a class="code" href="struct_reply.xhtml">Reply</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a9c2c6646c474d6d02b1dd10699f7d04c">  153</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a9c2c6646c474d6d02b1dd10699f7d04c">McpRespirationDataCallback</a>)(<a class="code" href="struct_respiration_data.xhtml">RespirationData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a2cb2f5d3689032fab7112d4143ee676f">  154</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a2cb2f5d3689032fab7112d4143ee676f">McpSleepDataCallback</a>)(<a class="code" href="struct_sleep_data.xhtml">SleepData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#ad7d5925360da064c20ec9ab53156942d">  155</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#ad7d5925360da064c20ec9ab53156942d">McpBasebandApDataCallback</a>)(<a class="code" href="struct_baseband_ap_data.xhtml">BasebandApData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a31d0f4e0f27d7bc7fa386665f4d7e225">  156</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a31d0f4e0f27d7bc7fa386665f4d7e225">McpBasebandIqDataCallback</a>)(<a class="code" href="struct_baseband_iq_data.xhtml">BasebandIqData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#abe85ff7d8054885787c15e2b4dbd03a4">  157</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#abe85ff7d8054885787c15e2b4dbd03a4">McpPresenceSingleCallback</a>)(<a class="code" href="struct_presence_single_data.xhtml">PresenceSingleData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#adcd79c5ff8816c34849e176a4432b30a">  158</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#adcd79c5ff8816c34849e176a4432b30a">McpPresenceMovingListCallback</a>)(<a class="code" href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a7dd5784cb5c77815ac7a4412448190cf">  159</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a7dd5784cb5c77815ac7a4412448190cf">McpSystemStatusCallback</a>)(<a class="code" href="struct_system_status.xhtml">SystemStatus</a> ss, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#a76d5860c42b7ce9de9897206b7ee8055">  160</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#a76d5860c42b7ce9de9897206b7ee8055">McpRespirationMovingListCallback</a>)(<a class="code" href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="protocol__host__parser_8h.xhtml#adeef4b5aecf28e9f8c81882f6e7cdaf8">  161</a></span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="protocol__host__parser_8h.xhtml#adeef4b5aecf28e9f8c81882f6e7cdaf8">McpRespirationDetectionListCallback</a>)(<a class="code" href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a> data, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml">  164</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a422ab20fff97f91a0050770f1e10e116">  166</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a80810e682ea79392587186e35b50b3fb">McpPongCallback</a> <a class="code" href="struct_host_parser.xhtml#a422ab20fff97f91a0050770f1e10e116">pong</a>;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#ab7c6d3a0e4d622c2047a94bf7b3fe6f3">  167</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#af218e95105cb9f80b781b2c160341833">McpErrorCallback</a> <a class="code" href="struct_host_parser.xhtml#ab7c6d3a0e4d622c2047a94bf7b3fe6f3">error</a>;</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a233e1bf1289814914309ccf115e0932c">  168</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#ac3963d12dedea925e1a5824f90a60fae">McpAckCallback</a> <a class="code" href="struct_host_parser.xhtml#a233e1bf1289814914309ccf115e0932c">ack</a>;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#aaa06104c0a4736c87954dacae715f32f">  169</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a5464b52e316a86c02a361c18bb1e2acb">McpDataFloatCallback</a> <a class="code" href="struct_host_parser.xhtml#aaa06104c0a4736c87954dacae715f32f">data_float</a>;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a5462feeaa716dce175ffe6614e1fba6a">  170</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#abe7a79957e6c5b46e654ead9b33f1d77">McpReplyCallback</a> <a class="code" href="struct_host_parser.xhtml#a5462feeaa716dce175ffe6614e1fba6a">reply</a>;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#acc860d8644da15dc20b07f444c01467a">  171</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a9c2c6646c474d6d02b1dd10699f7d04c">McpRespirationDataCallback</a> <a class="code" href="struct_host_parser.xhtml#acc860d8644da15dc20b07f444c01467a">respiration</a>;</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a8e2cf63edb9e2de27f7433470ae1f444">  172</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a2cb2f5d3689032fab7112d4143ee676f">McpSleepDataCallback</a> <a class="code" href="struct_host_parser.xhtml#a8e2cf63edb9e2de27f7433470ae1f444">sleep</a>;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#ad4c3a66952e76e6bf06c30469475b101">  173</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#ad7d5925360da064c20ec9ab53156942d">McpBasebandApDataCallback</a> <a class="code" href="struct_host_parser.xhtml#ad4c3a66952e76e6bf06c30469475b101">baseband_ap</a>;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#aaf0f83261a6ffebd47137d4860ef0bb7">  174</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a31d0f4e0f27d7bc7fa386665f4d7e225">McpBasebandIqDataCallback</a> <a class="code" href="struct_host_parser.xhtml#aaf0f83261a6ffebd47137d4860ef0bb7">baseband_iq</a>;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#aa4d890241638bb9f1c1f231afdb719a8">  175</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#abe85ff7d8054885787c15e2b4dbd03a4">McpPresenceSingleCallback</a> <a class="code" href="struct_host_parser.xhtml#aa4d890241638bb9f1c1f231afdb719a8">presence_single</a>;</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#ac07ecfdada786f0bb0277123b94fc059">  176</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#adcd79c5ff8816c34849e176a4432b30a">McpPresenceMovingListCallback</a> <a class="code" href="struct_host_parser.xhtml#ac07ecfdada786f0bb0277123b94fc059">presence_movinglist</a>;</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a6c3eaf1620fdaeaec4995ceddb40948d">  177</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a7dd5784cb5c77815ac7a4412448190cf">McpSystemStatusCallback</a> <a class="code" href="struct_host_parser.xhtml#a6c3eaf1620fdaeaec4995ceddb40948d">system_status</a>;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#a90d5c9a43be3bc900db78558691dbd1c">  178</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#a76d5860c42b7ce9de9897206b7ee8055">McpRespirationMovingListCallback</a> <a class="code" href="struct_host_parser.xhtml#a90d5c9a43be3bc900db78558691dbd1c">respiration_movinglist</a>;</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="struct_host_parser.xhtml#ad46862a63f25f87f90b6a7739f7c8ac1">  179</a></span>&#160;    <a class="code" href="protocol__host__parser_8h.xhtml#adeef4b5aecf28e9f8c81882f6e7cdaf8">McpRespirationDetectionListCallback</a> <a class="code" href="struct_host_parser.xhtml#ad46862a63f25f87f90b6a7739f7c8ac1">respiration_detectionlist</a>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;} <a class="code" href="struct_host_parser.xhtml">HostParser</a>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">void</span> <a class="code" href="protocol__host__parser_8h.xhtml#a021a1230fb55217f2a2557aa06dc7eb4">init_host_parser</a>(<a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a0b5643fd0436b763ffe4bea3aa04cf7f">parse</a>(<a class="code" href="struct_host_parser.xhtml">HostParser</a> * p, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length, <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#ab42e614cd70a7fccebc588a0a76d6a5f">parse_error</a>(</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a51f8047652585b173cb71a6ad0c42f03">parse_system_status</a>(</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a7203ea3951462b2d1b41d65f67e8615a">parse_baseband_ap</a>(</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a49dc96ded8bdab7fa0c66df331f7dce3">parse_baseband_iq</a>(</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#aa5664de178367c7faa1ee945dbc71761">parse_respiration_status</a>(</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a1d7a9c5ebdff244e0aeda763a574f2c6">parse_sleep_status</a>(</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a5cb524c783a12d4f511964c575a448e7">parse_data_float</a>(</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#ab0449ccfb97711fa6182fbbe9b973c9c">parse_data</a>(</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a64a723819df191ca88b9817334617f00">parse_appdata</a>(</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a3abc1513380e55752613579094dd0e6c">parse_ack</a>(</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a4dc0786463a2d56827181aa2df7eb5cd">parse_reply</a>(</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a83f756678f447cc05bf25b980ad960e9">parse_pong</a>(</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a43f3732f9f5adc9b7fe409391edb9749">parse_presence_single</a>(</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * p,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#ad924540c85994179fc947cd380114366">parse_presence_movinglist</a>(</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a8d71237f11a46b84563dd3552ac10f01">parse_respiration_movinglist</a>(</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keywordtype">int</span> <a class="code" href="protocol__host__parser_8h.xhtml#a29fc9ab5dcf4f3fbe947c31370311945">parse_respiration_detectionlist</a>(</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="struct_host_parser.xhtml">HostParser</a> * parser,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * data,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> length,</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordtype">void</span> * user_data);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __cplusplus */</span><span class="preprocessor"></span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="protocol__host__parser_8h_xhtml_ab0449ccfb97711fa6182fbbe9b973c9c"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ab0449ccfb97711fa6182fbbe9b973c9c">parse_data</a></div><div class="ttdeci">int parse_data(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:226</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_abe7a79957e6c5b46e654ead9b33f1d77"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#abe7a79957e6c5b46e654ead9b33f1d77">McpReplyCallback</a></div><div class="ttdeci">void(* McpReplyCallback)(Reply data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:152</div></div>
<div class="ttc" id="struct_float_data___xhtml_a0470de3e6ecd65d2fa688f28f78744a7"><div class="ttname"><a href="struct_float_data__.xhtml#a0470de3e6ecd65d2fa688f28f78744a7">FloatData_::data</a></div><div class="ttdeci">const float * data</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:45</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_ac542245508dadb3424948b138f269b2f"><div class="ttname"><a href="struct_respiration_data.xhtml#ac542245508dadb3424948b138f269b2f">RespirationData::movement</a></div><div class="ttdeci">float movement</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:55</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a29fc9ab5dcf4f3fbe947c31370311945"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a29fc9ab5dcf4f3fbe947c31370311945">parse_respiration_detectionlist</a></div><div class="ttdeci">int parse_respiration_detectionlist(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:637</div></div>
<div class="ttc" id="struct_reply_xhtml_a82f1711c4a5aa9563e14f047a79e23f3"><div class="ttname"><a href="struct_reply.xhtml#a82f1711c4a5aa9563e14f047a79e23f3">Reply::data</a></div><div class="ttdeci">uint8_t * data</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:35</div></div>
<div class="ttc" id="struct_reply_xhtml_a4266d6d9487747809c41b77c7664fbbd"><div class="ttname"><a href="struct_reply.xhtml#a4266d6d9487747809c41b77c7664fbbd">Reply::data_type</a></div><div class="ttdeci">serial_protocol_response_datatype_t data_type</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:31</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_ababdd8a296135b7e98a83c82cc00fb01"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#ababdd8a296135b7e98a83c82cc00fb01">BasebandApData::range_offset</a></div><div class="ttdeci">float range_offset</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:79</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a647e9c37d97ffd1c6d2a9bf004acd97d"><div class="ttname"><a href="struct_sleep_data.xhtml#a647e9c37d97ffd1c6d2a9bf004acd97d">SleepData::signal_quality</a></div><div class="ttdeci">uint32_t signal_quality</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:66</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a76d5860c42b7ce9de9897206b7ee8055"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a76d5860c42b7ce9de9897206b7ee8055">McpRespirationMovingListCallback</a></div><div class="ttdeci">void(* McpRespirationMovingListCallback)(RespirationMovingListData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:160</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a7dd5784cb5c77815ac7a4412448190cf"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a7dd5784cb5c77815ac7a4412448190cf">McpSystemStatusCallback</a></div><div class="ttdeci">void(* McpSystemStatusCallback)(SystemStatus ss, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:159</div></div>
<div class="ttc" id="struct_float_data___xhtml_ac9286c93520745ca5021ef708ebc4597"><div class="ttname"><a href="struct_float_data__.xhtml#ac9286c93520745ca5021ef708ebc4597">FloatData_::info</a></div><div class="ttdeci">uint32_t info</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:43</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_a1cc021ae8237c3c609abd65dbcba5014"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#a1cc021ae8237c3c609abd65dbcba5014">PresenceMovingListData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:116</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_a6b9662279676a1d3f2554e234a41679b"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#a6b9662279676a1d3f2554e234a41679b">PresenceMovingListData::detection_velocity_items</a></div><div class="ttdeci">const float * detection_velocity_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:124</div></div>
<div class="ttc" id="struct_error_xhtml_a0832eb158486daacb41dd18228662d0d"><div class="ttname"><a href="struct_error.xhtml#a0832eb158486daacb41dd18228662d0d">Error::error_code</a></div><div class="ttdeci">uint32_t error_code</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:22</div></div>
<div class="ttc" id="struct_host_parser_xhtml_ad46862a63f25f87f90b6a7739f7c8ac1"><div class="ttname"><a href="struct_host_parser.xhtml#ad46862a63f25f87f90b6a7739f7c8ac1">HostParser::respiration_detectionlist</a></div><div class="ttdeci">McpRespirationDetectionListCallback respiration_detectionlist</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:179</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a49dc96ded8bdab7fa0c66df331f7dce3"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a49dc96ded8bdab7fa0c66df331f7dce3">parse_baseband_iq</a></div><div class="ttdeci">int parse_baseband_iq(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:349</div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml_aa982633b62914742820f0da9242cec56"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml#aa982633b62914742820f0da9242cec56">RespirationDetectionListData::detection_count</a></div><div class="ttdeci">uint32_t detection_count</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:141</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml"><div class="ttname"><a href="struct_baseband_ap_data.xhtml">BasebandApData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:72</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_adcd79c5ff8816c34849e176a4432b30a"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#adcd79c5ff8816c34849e176a4432b30a">McpPresenceMovingListCallback</a></div><div class="ttdeci">void(* McpPresenceMovingListCallback)(PresenceMovingListData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:158</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a0b5643fd0436b763ffe4bea3aa04cf7f"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a0b5643fd0436b763ffe4bea3aa04cf7f">parse</a></div><div class="ttdeci">int parse(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:680</div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml_a5ee7d91278a09d2e33774b3731d6061e"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml#a5ee7d91278a09d2e33774b3731d6061e">RespirationDetectionListData::detection_distance_items</a></div><div class="ttdeci">float * detection_distance_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:142</div></div>
<div class="ttc" id="xtserial__definitions_8h_xhtml_aa6c924dcdf2b8da0008172856abb2bb3"><div class="ttname"><a href="xtserial__definitions_8h.xhtml#aa6c924dcdf2b8da0008172856abb2bb3">serial_protocol_response_datatype_t</a></div><div class="ttdeci">enum serial_protocol_response_datatype_en serial_protocol_response_datatype_t</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_abe85ff7d8054885787c15e2b4dbd03a4"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#abe85ff7d8054885787c15e2b4dbd03a4">McpPresenceSingleCallback</a></div><div class="ttdeci">void(* McpPresenceSingleCallback)(PresenceSingleData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:157</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml_ae28aa1073123d08c39a5002eb7608ca8"><div class="ttname"><a href="struct_presence_single_data.xhtml#ae28aa1073123d08c39a5002eb7608ca8">PresenceSingleData::direction</a></div><div class="ttdeci">uint8_t direction</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:109</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_abe0b5f84ac688d7531c7bd51146029ef"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#abe0b5f84ac688d7531c7bd51146029ef">BasebandIqData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:87</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_aeb10b8a165c6cbab8401fcaec80ff5fd"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#aeb10b8a165c6cbab8401fcaec80ff5fd">BasebandIqData::sample_frequency</a></div><div class="ttdeci">float sample_frequency</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:90</div></div>
<div class="ttc" id="struct_reply_xhtml_a3f508b3a1a5dd64e380a59c1e41aab37"><div class="ttname"><a href="struct_reply.xhtml#a3f508b3a1a5dd64e380a59c1e41aab37">Reply::content_id</a></div><div class="ttdeci">uint32_t content_id</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:32</div></div>
<div class="ttc" id="struct_float_data___xhtml_a517ff7eb4861c38f39ff684be7fbb236"><div class="ttname"><a href="struct_float_data__.xhtml#a517ff7eb4861c38f39ff684be7fbb236">FloatData_::content_id</a></div><div class="ttdeci">uint32_t content_id</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:42</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_a5db5375c74bc8fcef460656a6fc03b8b"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#a5db5375c74bc8fcef460656a6fc03b8b">BasebandApData::phase</a></div><div class="ttdeci">const float * phase</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:81</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_a729a7087c1ae0791557609670f1968c3"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#a729a7087c1ae0791557609670f1968c3">PresenceMovingListData::interval_count</a></div><div class="ttdeci">uint32_t interval_count</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:118</div></div>
<div class="ttc" id="xtserial__definitions_8h_xhtml"><div class="ttname"><a href="xtserial__definitions_8h.xhtml">xtserial_definitions.h</a></div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml">RespirationDetectionListData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:138</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a6c3eaf1620fdaeaec4995ceddb40948d"><div class="ttname"><a href="struct_host_parser.xhtml#a6c3eaf1620fdaeaec4995ceddb40948d">HostParser::system_status</a></div><div class="ttdeci">McpSystemStatusCallback system_status</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:177</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a2cb2f5d3689032fab7112d4143ee676f"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a2cb2f5d3689032fab7112d4143ee676f">McpSleepDataCallback</a></div><div class="ttdeci">void(* McpSleepDataCallback)(SleepData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:154</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a80810e682ea79392587186e35b50b3fb"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a80810e682ea79392587186e35b50b3fb">McpPongCallback</a></div><div class="ttdeci">void(* McpPongCallback)(uint32_t pong, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:148</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a51f8047652585b173cb71a6ad0c42f03"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a51f8047652585b173cb71a6ad0c42f03">parse_system_status</a></div><div class="ttdeci">int parse_system_status(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:136</div></div>
<div class="ttc" id="struct_sleep_data_xhtml"><div class="ttname"><a href="struct_sleep_data.xhtml">SleepData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:60</div></div>
<div class="ttc" id="struct_reply_xhtml"><div class="ttname"><a href="struct_reply.xhtml">Reply</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:29</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_adeef4b5aecf28e9f8c81882f6e7cdaf8"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#adeef4b5aecf28e9f8c81882f6e7cdaf8">McpRespirationDetectionListCallback</a></div><div class="ttdeci">void(* McpRespirationDetectionListCallback)(RespirationDetectionListData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:161</div></div>
<div class="ttc" id="struct_system_status_xhtml_afb4e215f22aa28dd00e8a81eb2deb1b7"><div class="ttname"><a href="struct_system_status.xhtml#afb4e215f22aa28dd00e8a81eb2deb1b7">SystemStatus::status</a></div><div class="ttdeci">uint32_t status</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:100</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_aa5664de178367c7faa1ee945dbc71761"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#aa5664de178367c7faa1ee945dbc71761">parse_respiration_status</a></div><div class="ttdeci">int parse_respiration_status(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:497</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_ae84c9a3a1a8f473dc305819e4de9ba54"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#ae84c9a3a1a8f473dc305819e4de9ba54">BasebandIqData::q_data</a></div><div class="ttdeci">const float * q_data</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:94</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a7fa1f382324213b5a6ba2b888e0056a3"><div class="ttname"><a href="struct_sleep_data.xhtml#a7fa1f382324213b5a6ba2b888e0056a3">SleepData::movement_fast</a></div><div class="ttdeci">float movement_fast</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:68</div></div>
<div class="ttc" id="struct_host_parser_xhtml_aaf0f83261a6ffebd47137d4860ef0bb7"><div class="ttname"><a href="struct_host_parser.xhtml#aaf0f83261a6ffebd47137d4860ef0bb7">HostParser::baseband_iq</a></div><div class="ttdeci">McpBasebandIqDataCallback baseband_iq</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:174</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a1f7782633b414775869e4a4ad6d56909"><div class="ttname"><a href="struct_sleep_data.xhtml#a1f7782633b414775869e4a4ad6d56909">SleepData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:62</div></div>
<div class="ttc" id="struct_host_parser_xhtml_ad4c3a66952e76e6bf06c30469475b101"><div class="ttname"><a href="struct_host_parser.xhtml#ad4c3a66952e76e6bf06c30469475b101">HostParser::baseband_ap</a></div><div class="ttdeci">McpBasebandApDataCallback baseband_ap</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:173</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml_ae6915c3b99e5ab080991403b5c2f6f1d"><div class="ttname"><a href="struct_presence_single_data.xhtml#ae6915c3b99e5ab080991403b5c2f6f1d">PresenceSingleData::signal_quality</a></div><div class="ttdeci">uint32_t signal_quality</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:110</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_a8b255b8b7a3c795fb6a90cfd10612e12"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#a8b255b8b7a3c795fb6a90cfd10612e12">BasebandApData::bin_length</a></div><div class="ttdeci">float bin_length</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:76</div></div>
<div class="ttc" id="struct_respiration_moving_list_data_xhtml_aa02a2d90806ff9f434c700f3c35c4150"><div class="ttname"><a href="struct_respiration_moving_list_data.xhtml#aa02a2d90806ff9f434c700f3c35c4150">RespirationMovingListData::counter</a></div><div class="ttdeci">uint32_t counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:130</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml"><div class="ttname"><a href="struct_presence_single_data.xhtml">PresenceSingleData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:104</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a1d7a9c5ebdff244e0aeda763a574f2c6"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a1d7a9c5ebdff244e0aeda763a574f2c6">parse_sleep_status</a></div><div class="ttdeci">int parse_sleep_status(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:454</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a4dc0786463a2d56827181aa2df7eb5cd"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a4dc0786463a2d56827181aa2df7eb5cd">parse_reply</a></div><div class="ttdeci">int parse_reply(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:160</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_a1e01003ed5d727eeaa057e35bb122b03"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#a1e01003ed5d727eeaa057e35bb122b03">PresenceMovingListData::presence_state</a></div><div class="ttdeci">uint32_t presence_state</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:117</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_a8e1b5d54db5376d6fd87a347dd226a89"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#a8e1b5d54db5376d6fd87a347dd226a89">BasebandIqData::range_offset</a></div><div class="ttdeci">float range_offset</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:92</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_aeda8323f2ac9d6e7451358246357dac7"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#aeda8323f2ac9d6e7451358246357dac7">PresenceMovingListData::radar_cross_section_items</a></div><div class="ttdeci">const float * radar_cross_section_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:123</div></div>
<div class="ttc" id="struct_error_xhtml"><div class="ttname"><a href="struct_error.xhtml">Error</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:20</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_ac3963d12dedea925e1a5824f90a60fae"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ac3963d12dedea925e1a5824f90a60fae">McpAckCallback</a></div><div class="ttdeci">void(* McpAckCallback)(Ack data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:151</div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml_a93cd88d7aeed947f292f1e898f942139"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml#a93cd88d7aeed947f292f1e898f942139">RespirationDetectionListData::counter</a></div><div class="ttdeci">uint32_t counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:140</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a70a0ab50a6441399ec3240c81a97a9b8"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a70a0ab50a6441399ec3240c81a97a9b8">ERROR</a></div><div class="ttdeci">static const uint32_t ERROR</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:13</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_abad77df56545eb44030724487bf84f4d"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#abad77df56545eb44030724487bf84f4d">BasebandApData::num_bins</a></div><div class="ttdeci">uint32_t num_bins</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:75</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_a37c0510b554c623bbc2ec6befeeb58d0"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#a37c0510b554c623bbc2ec6befeeb58d0">BasebandIqData::num_bins</a></div><div class="ttdeci">uint32_t num_bins</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:88</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a83f756678f447cc05bf25b980ad960e9"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a83f756678f447cc05bf25b980ad960e9">parse_pong</a></div><div class="ttdeci">int parse_pong(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:200</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_ab42e614cd70a7fccebc588a0a76d6a5f"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ab42e614cd70a7fccebc588a0a76d6a5f">parse_error</a></div><div class="ttdeci">int parse_error(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:58</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a5464b52e316a86c02a361c18bb1e2acb"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a5464b52e316a86c02a361c18bb1e2acb">McpDataFloatCallback</a></div><div class="ttdeci">void(* McpDataFloatCallback)(FloatData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:150</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_a3a921c8e96ce820572713486f1437552"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#a3a921c8e96ce820572713486f1437552">BasebandApData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:74</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a64a723819df191ca88b9817334617f00"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a64a723819df191ca88b9817334617f00">parse_appdata</a></div><div class="ttdeci">int parse_appdata(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:537</div></div>
<div class="ttc" id="struct_host_parser_xhtml_aa4d890241638bb9f1c1f231afdb719a8"><div class="ttname"><a href="struct_host_parser.xhtml#aa4d890241638bb9f1c1f231afdb719a8">HostParser::presence_single</a></div><div class="ttdeci">McpPresenceSingleCallback presence_single</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:175</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a5cb524c783a12d4f511964c575a448e7"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a5cb524c783a12d4f511964c575a448e7">parse_data_float</a></div><div class="ttdeci">int parse_data_float(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:79</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_aeb9c6214077dfdede65ce73ee0ebed43"><div class="ttname"><a href="struct_sleep_data.xhtml#aeb9c6214077dfdede65ce73ee0ebed43">SleepData::distance</a></div><div class="ttdeci">float distance</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:65</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a06a132c3316871bec4745bf934d6fb13"><div class="ttname"><a href="struct_sleep_data.xhtml#a06a132c3316871bec4745bf934d6fb13">SleepData::respiration_rate</a></div><div class="ttdeci">float respiration_rate</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:64</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_a9b684c95361825265e855cb711ed5aca"><div class="ttname"><a href="struct_respiration_data.xhtml#a9b684c95361825265e855cb711ed5aca">RespirationData::distance</a></div><div class="ttdeci">float distance</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:54</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a69db8eb68ff782ce5a59f1b3ac34dc37"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a69db8eb68ff782ce5a59f1b3ac34dc37">FloatData</a></div><div class="ttdeci">struct FloatData_ FloatData</div></div>
<div class="ttc" id="struct_float_data___xhtml_ae5ccd120ae68ed16c324d61e31985a53"><div class="ttname"><a href="struct_float_data__.xhtml#ae5ccd120ae68ed16c324d61e31985a53">FloatData_::length</a></div><div class="ttdeci">uint32_t length</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:44</div></div>
<div class="ttc" id="struct_host_parser_xhtml_acc860d8644da15dc20b07f444c01467a"><div class="ttname"><a href="struct_host_parser.xhtml#acc860d8644da15dc20b07f444c01467a">HostParser::respiration</a></div><div class="ttdeci">McpRespirationDataCallback respiration</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:171</div></div>
<div class="ttc" id="struct_reply_xhtml_a66f8bf3ea954e9de3ec4c697ca07ca66"><div class="ttname"><a href="struct_reply.xhtml#a66f8bf3ea954e9de3ec4c697ca07ca66">Reply::length</a></div><div class="ttdeci">uint32_t length</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:34</div></div>
<div class="ttc" id="struct_host_parser_xhtml_ab7c6d3a0e4d622c2047a94bf7b3fe6f3"><div class="ttname"><a href="struct_host_parser.xhtml#ab7c6d3a0e4d622c2047a94bf7b3fe6f3">HostParser::error</a></div><div class="ttdeci">McpErrorCallback error</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:167</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a422ab20fff97f91a0050770f1e10e116"><div class="ttname"><a href="struct_host_parser.xhtml#a422ab20fff97f91a0050770f1e10e116">HostParser::pong</a></div><div class="ttdeci">McpPongCallback pong</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:166</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_ad7d5925360da064c20ec9ab53156942d"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ad7d5925360da064c20ec9ab53156942d">McpBasebandApDataCallback</a></div><div class="ttdeci">void(* McpBasebandApDataCallback)(BasebandApData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:155</div></div>
<div class="ttc" id="struct_reply_xhtml_a15433099b687ed570ffaf4053ba1b6c5"><div class="ttname"><a href="struct_reply.xhtml#a15433099b687ed570ffaf4053ba1b6c5">Reply::data_size</a></div><div class="ttdeci">uint8_t data_size</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:36</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_aa78b20b2150ae70de1707f3a961ba438"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#aa78b20b2150ae70de1707f3a961ba438">BasebandApData::amplitude</a></div><div class="ttdeci">const float * amplitude</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:80</div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml_ae1a195c98346e32300f6e6ec5c467a2d"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml#ae1a195c98346e32300f6e6ec5c467a2d">RespirationDetectionListData::detection_radar_cross_section_items</a></div><div class="ttdeci">float * detection_radar_cross_section_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:143</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a3e888d0c9c3e39648d2c1084c78b3525"><div class="ttname"><a href="struct_sleep_data.xhtml#a3e888d0c9c3e39648d2c1084c78b3525">SleepData::movement_slow</a></div><div class="ttdeci">float movement_slow</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:67</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_ab1418b03e1d4d13885516f07d8159168"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#ab1418b03e1d4d13885516f07d8159168">BasebandIqData::i_data</a></div><div class="ttdeci">const float * i_data</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:93</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_a624ce19a0165e31ea32248f5f64e59b7"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#a624ce19a0165e31ea32248f5f64e59b7">PresenceMovingListData::detection_count</a></div><div class="ttdeci">uint32_t detection_count</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:119</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_ad924540c85994179fc947cd380114366"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ad924540c85994179fc947cd380114366">parse_presence_movinglist</a></div><div class="ttdeci">int parse_presence_movinglist(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:247</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml_a36dac5dafce9cf0598621a8ddb07cabb"><div class="ttname"><a href="struct_presence_single_data.xhtml#a36dac5dafce9cf0598621a8ddb07cabb">PresenceSingleData::presence_state</a></div><div class="ttdeci">uint32_t presence_state</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:107</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_a21cae89a8e5af855b7b07a06221c271d"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#a21cae89a8e5af855b7b07a06221c271d">BasebandIqData::bin_length</a></div><div class="ttdeci">float bin_length</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:89</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_a874838f2d3add7da7946750054f197cf"><div class="ttname"><a href="struct_respiration_data.xhtml#a874838f2d3add7da7946750054f197cf">RespirationData::signal_quality</a></div><div class="ttdeci">uint32_t signal_quality</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:56</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_a7d171953901b9d0a1fdc2ef892f3b158"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#a7d171953901b9d0a1fdc2ef892f3b158">BasebandApData::carrier_frequency</a></div><div class="ttdeci">float carrier_frequency</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:78</div></div>
<div class="ttc" id="struct_baseband_ap_data_xhtml_adf19c268808ca82cba14389eec9dbbcf"><div class="ttname"><a href="struct_baseband_ap_data.xhtml#adf19c268808ca82cba14389eec9dbbcf">BasebandApData::sample_frequency</a></div><div class="ttdeci">float sample_frequency</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:77</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a233e1bf1289814914309ccf115e0932c"><div class="ttname"><a href="struct_host_parser.xhtml#a233e1bf1289814914309ccf115e0932c">HostParser::ack</a></div><div class="ttdeci">McpAckCallback ack</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:168</div></div>
<div class="ttc" id="struct_respiration_moving_list_data_xhtml_a14210d005563caf46de50eff11aed476"><div class="ttname"><a href="struct_respiration_moving_list_data.xhtml#a14210d005563caf46de50eff11aed476">RespirationMovingListData::movement_fast_items</a></div><div class="ttdeci">const float * movement_fast_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:133</div></div>
<div class="ttc" id="struct_ack_xhtml"><div class="ttname"><a href="struct_ack.xhtml">Ack</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:25</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a8e9fbf2426b2475632a8a1341d431ac3"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a8e9fbf2426b2475632a8a1341d431ac3">ERROR_SHORT_DATA</a></div><div class="ttdeci">static const uint32_t ERROR_SHORT_DATA</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:14</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a90d5c9a43be3bc900db78558691dbd1c"><div class="ttname"><a href="struct_host_parser.xhtml#a90d5c9a43be3bc900db78558691dbd1c">HostParser::respiration_movinglist</a></div><div class="ttdeci">McpRespirationMovingListCallback respiration_movinglist</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:178</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_a64827acc38e46173720e77fc89652ab1"><div class="ttname"><a href="struct_respiration_data.xhtml#a64827acc38e46173720e77fc89652ab1">RespirationData::sensor_state</a></div><div class="ttdeci">uint32_t sensor_state</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:52</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml"><div class="ttname"><a href="struct_baseband_iq_data.xhtml">BasebandIqData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:85</div></div>
<div class="ttc" id="struct_host_parser_xhtml"><div class="ttname"><a href="struct_host_parser.xhtml">HostParser</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:164</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a3abc1513380e55752613579094dd0e6c"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a3abc1513380e55752613579094dd0e6c">parse_ack</a></div><div class="ttdeci">int parse_ack(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:116</div></div>
<div class="ttc" id="struct_baseband_iq_data_xhtml_a94811c82e744a4808df9c08dc8bd3124"><div class="ttname"><a href="struct_baseband_iq_data.xhtml#a94811c82e744a4808df9c08dc8bd3124">BasebandIqData::carrier_frequency</a></div><div class="ttdeci">float carrier_frequency</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:91</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml_a36fbf9ac3ad318237c3208c2bbcc2f32"><div class="ttname"><a href="struct_presence_single_data.xhtml#a36fbf9ac3ad318237c3208c2bbcc2f32">PresenceSingleData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:106</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_aff1648c6c9151a66b9ae09b01ee8be68"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#aff1648c6c9151a66b9ae09b01ee8be68">PresenceMovingListData::detection_distance_items</a></div><div class="ttdeci">const float * detection_distance_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:122</div></div>
<div class="ttc" id="struct_float_data___xhtml"><div class="ttname"><a href="struct_float_data__.xhtml">FloatData_</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:40</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a8e2cf63edb9e2de27f7433470ae1f444"><div class="ttname"><a href="struct_host_parser.xhtml#a8e2cf63edb9e2de27f7433470ae1f444">HostParser::sleep</a></div><div class="ttdeci">McpSleepDataCallback sleep</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:172</div></div>
<div class="ttc" id="struct_system_status_xhtml"><div class="ttname"><a href="struct_system_status.xhtml">SystemStatus</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:98</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a2bfad4ac1f790406b0689f3acdbf0714"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a2bfad4ac1f790406b0689f3acdbf0714">ERROR_WRONG_CONTENT</a></div><div class="ttdeci">static const uint32_t ERROR_WRONG_CONTENT</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:15</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a021a1230fb55217f2a2557aa06dc7eb4"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a021a1230fb55217f2a2557aa06dc7eb4">init_host_parser</a></div><div class="ttdeci">void init_host_parser(HostParser *parser)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:39</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a7203ea3951462b2d1b41d65f67e8615a"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a7203ea3951462b2d1b41d65f67e8615a">parse_baseband_ap</a></div><div class="ttdeci">int parse_baseband_ap(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:401</div></div>
<div class="ttc" id="struct_sleep_data_xhtml_a8817da2882b11f674d1c166eaadd7c7a"><div class="ttname"><a href="struct_sleep_data.xhtml#a8817da2882b11f674d1c166eaadd7c7a">SleepData::sensor_state</a></div><div class="ttdeci">uint32_t sensor_state</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:63</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a9c2c6646c474d6d02b1dd10699f7d04c"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a9c2c6646c474d6d02b1dd10699f7d04c">McpRespirationDataCallback</a></div><div class="ttdeci">void(* McpRespirationDataCallback)(RespirationData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:153</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a31d0f4e0f27d7bc7fa386665f4d7e225"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a31d0f4e0f27d7bc7fa386665f4d7e225">McpBasebandIqDataCallback</a></div><div class="ttdeci">void(* McpBasebandIqDataCallback)(BasebandIqData data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:156</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_afa85035c227e2eda46435019ace68e95"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#afa85035c227e2eda46435019ace68e95">PARSE_OK</a></div><div class="ttdeci">static const uint32_t PARSE_OK</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:12</div></div>
<div class="ttc" id="struct_reply_xhtml_a5efb56bc642e92a97f7697bc2d364146"><div class="ttname"><a href="struct_reply.xhtml#a5efb56bc642e92a97f7697bc2d364146">Reply::info</a></div><div class="ttdeci">uint32_t info</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:33</div></div>
<div class="ttc" id="struct_respiration_detection_list_data_xhtml_ad8c0bf40b16470ffacec4f2140051cfd"><div class="ttname"><a href="struct_respiration_detection_list_data.xhtml#ad8c0bf40b16470ffacec4f2140051cfd">RespirationDetectionListData::detection_velocity_items</a></div><div class="ttdeci">float * detection_velocity_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:144</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_ac0cc87fd8baf5f9e3e54b669fad7bd4e"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#ac0cc87fd8baf5f9e3e54b669fad7bd4e">UNINITILIZED_ERROR_CODE</a></div><div class="ttdeci">static const uint32_t UNINITILIZED_ERROR_CODE</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:11</div></div>
<div class="ttc" id="struct_host_parser_xhtml_a5462feeaa716dce175ffe6614e1fba6a"><div class="ttname"><a href="struct_host_parser.xhtml#a5462feeaa716dce175ffe6614e1fba6a">HostParser::reply</a></div><div class="ttdeci">McpReplyCallback reply</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:170</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_abdf9b806c74e9e154ce920fd48c36c65"><div class="ttname"><a href="struct_respiration_data.xhtml#abdf9b806c74e9e154ce920fd48c36c65">RespirationData::respiration_rate</a></div><div class="ttdeci">uint32_t respiration_rate</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:53</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_aa22b1e0ab9b47187c9f1fd64c8283c22"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#aa22b1e0ab9b47187c9f1fd64c8283c22">ERROR_UNKNOWN_PACKET</a></div><div class="ttdeci">static const uint32_t ERROR_UNKNOWN_PACKET</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:16</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_af218e95105cb9f80b781b2c160341833"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#af218e95105cb9f80b781b2c160341833">McpErrorCallback</a></div><div class="ttdeci">void(* McpErrorCallback)(uint32_t data, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:149</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a1eb904d7bb08a08310828d953f505b0d"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a1eb904d7bb08a08310828d953f505b0d">ERROR_NO_DATA</a></div><div class="ttdeci">static const uint32_t ERROR_NO_DATA</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:17</div></div>
<div class="ttc" id="struct_respiration_moving_list_data_xhtml"><div class="ttname"><a href="struct_respiration_moving_list_data.xhtml">RespirationMovingListData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:128</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a8d71237f11a46b84563dd3552ac10f01"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a8d71237f11a46b84563dd3552ac10f01">parse_respiration_movinglist</a></div><div class="ttdeci">int parse_respiration_movinglist(HostParser *parser, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:582</div></div>
<div class="ttc" id="struct_host_parser_xhtml_ac07ecfdada786f0bb0277123b94fc059"><div class="ttname"><a href="struct_host_parser.xhtml#ac07ecfdada786f0bb0277123b94fc059">HostParser::presence_movinglist</a></div><div class="ttdeci">McpPresenceMovingListCallback presence_movinglist</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:176</div></div>
<div class="ttc" id="struct_respiration_moving_list_data_xhtml_a144466a4a1e390f05236185362a24da0"><div class="ttname"><a href="struct_respiration_moving_list_data.xhtml#a144466a4a1e390f05236185362a24da0">RespirationMovingListData::movement_slow_items</a></div><div class="ttdeci">const float * movement_slow_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:132</div></div>
<div class="ttc" id="struct_respiration_data_xhtml_a31e579c1c911fb99d1e48d93ef9902f8"><div class="ttname"><a href="struct_respiration_data.xhtml#a31e579c1c911fb99d1e48d93ef9902f8">RespirationData::frame_counter</a></div><div class="ttdeci">uint32_t frame_counter</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:51</div></div>
<div class="ttc" id="struct_respiration_data_xhtml"><div class="ttname"><a href="struct_respiration_data.xhtml">RespirationData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:49</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml">PresenceMovingListData</a></div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:114</div></div>
<div class="ttc" id="struct_presence_single_data_xhtml_a50eeef4e20afe77873cae0db6fe90b73"><div class="ttname"><a href="struct_presence_single_data.xhtml#a50eeef4e20afe77873cae0db6fe90b73">PresenceSingleData::distance</a></div><div class="ttdeci">float distance</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:108</div></div>
<div class="ttc" id="struct_respiration_moving_list_data_xhtml_a3c6c54e275b0fa7b6ebda7506281bae3"><div class="ttname"><a href="struct_respiration_moving_list_data.xhtml#a3c6c54e275b0fa7b6ebda7506281bae3">RespirationMovingListData::interval_count</a></div><div class="ttdeci">uint32_t interval_count</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:131</div></div>
<div class="ttc" id="struct_host_parser_xhtml_aaa06104c0a4736c87954dacae715f32f"><div class="ttname"><a href="struct_host_parser.xhtml#aaa06104c0a4736c87954dacae715f32f">HostParser::data_float</a></div><div class="ttdeci">McpDataFloatCallback data_float</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:169</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_aecb6e3d4ea1242d7806c69c3b85e4473"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#aecb6e3d4ea1242d7806c69c3b85e4473">PresenceMovingListData::movement_fast_items</a></div><div class="ttdeci">const float * movement_fast_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:121</div></div>
<div class="ttc" id="struct_ack_xhtml_a3936d53cc340bb201979aea5aa2b594c"><div class="ttname"><a href="struct_ack.xhtml#a3936d53cc340bb201979aea5aa2b594c">Ack::dummy</a></div><div class="ttdeci">char dummy</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:26</div></div>
<div class="ttc" id="protocol__host__parser_8h_xhtml_a43f3732f9f5adc9b7fe409391edb9749"><div class="ttname"><a href="protocol__host__parser_8h.xhtml#a43f3732f9f5adc9b7fe409391edb9749">parse_presence_single</a></div><div class="ttdeci">int parse_presence_single(HostParser *p, const unsigned char *data, unsigned int length, void *user_data)</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.c:305</div></div>
<div class="ttc" id="struct_presence_moving_list_data_xhtml_ab172796caadc58d212cf3f595a1a6c5d"><div class="ttname"><a href="struct_presence_moving_list_data.xhtml#ab172796caadc58d212cf3f595a1a6c5d">PresenceMovingListData::movement_slow_items</a></div><div class="ttdeci">const float * movement_slow_items</div><div class="ttdef"><b>Definition:</b> protocol_host_parser.h:120</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
