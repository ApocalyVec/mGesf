<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Global interrupt management</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Global interrupt management</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a driver for global enabling and disabling of interrupts.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for Global interrupt management:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group.svg" width="387" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__interrupt__deprecated__group"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__deprecated__group.xhtml">Deprecated interrupt definitions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2b5f1a58b98aea52fbe094636054d910"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga2b5f1a58b98aea52fbe094636054d910">cpu_irq_enter_critical</a> (void)</td></tr>
<tr class="separator:ga2b5f1a58b98aea52fbe094636054d910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad9a7e953e4e3eb6bde58eb1c81092b43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gad9a7e953e4e3eb6bde58eb1c81092b43">cpu_irq_leave_critical</a> (void)</td></tr>
<tr class="separator:gad9a7e953e4e3eb6bde58eb1c81092b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga18a272af1cdb2009183461e1647f4e86"><td class="memItemLeft" align="right" valign="top">volatile <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga18a272af1cdb2009183461e1647f4e86">g_interrupt_enabled</a></td></tr>
<tr class="separator:ga18a272af1cdb2009183461e1647f4e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga95fbf1e7bfa9b76eb83d87c8f217b303"><td class="memItemLeft" align="right" valign="top">static volatile uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga95fbf1e7bfa9b76eb83d87c8f217b303">cpu_irq_critical_section_counter</a></td></tr>
<tr class="separator:ga95fbf1e7bfa9b76eb83d87c8f217b303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72ad25cfbc62300764240b6f38505b56"><td class="memItemLeft" align="right" valign="top">static volatile <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga72ad25cfbc62300764240b6f38505b56">cpu_irq_prev_interrupt_state</a></td></tr>
<tr class="separator:ga72ad25cfbc62300764240b6f38505b56"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Interrupt Service Routine definition</h2></td></tr>
<tr class="memitem:ga0da0a19156773eca7070722f26ff66a6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga0da0a19156773eca7070722f26ff66a6">ISR</a>(func)&#160;&#160;&#160;void func (void)</td></tr>
<tr class="memdesc:ga0da0a19156773eca7070722f26ff66a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define service routine.  <a href="#ga0da0a19156773eca7070722f26ff66a6">More...</a><br /></td></tr>
<tr class="separator:ga0da0a19156773eca7070722f26ff66a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga931b667f6490ad3d8905fa25bebb24b1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga931b667f6490ad3d8905fa25bebb24b1">irq_initialize_vectors</a>()</td></tr>
<tr class="memdesc:ga931b667f6490ad3d8905fa25bebb24b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize interrupt vectors.  <a href="#ga931b667f6490ad3d8905fa25bebb24b1">More...</a><br /></td></tr>
<tr class="separator:ga931b667f6490ad3d8905fa25bebb24b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa746642b1132af054826fb169f541965"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gaa746642b1132af054826fb169f541965">irq_register_handler</a>(int_num,  int_prio)</td></tr>
<tr class="memdesc:gaa746642b1132af054826fb169f541965"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register handler for interrupt.  <a href="#gaa746642b1132af054826fb169f541965">More...</a><br /></td></tr>
<tr class="separator:gaa746642b1132af054826fb169f541965"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Global interrupt flags</h2></td></tr>
<tr class="memitem:ga9aa1f52defc97531b6343233abeea613"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a></td></tr>
<tr class="memdesc:ga9aa1f52defc97531b6343233abeea613"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type used for holding state of interrupt flag.  <a href="#ga9aa1f52defc97531b6343233abeea613">More...</a><br /></td></tr>
<tr class="separator:ga9aa1f52defc97531b6343233abeea613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5992cb015c55a0f4ed563e66a8793771"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga5992cb015c55a0f4ed563e66a8793771">cpu_irq_save</a> (void)</td></tr>
<tr class="memdesc:ga5992cb015c55a0f4ed563e66a8793771"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get and clear the global interrupt flags.  <a href="#ga5992cb015c55a0f4ed563e66a8793771">More...</a><br /></td></tr>
<tr class="separator:ga5992cb015c55a0f4ed563e66a8793771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4dffd77dae2b3b3c5bce2612db656e48"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga4dffd77dae2b3b3c5bce2612db656e48">cpu_irq_is_enabled_flags</a> (<a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a> flags)</td></tr>
<tr class="memdesc:ga4dffd77dae2b3b3c5bce2612db656e48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if interrupts are globally enabled in supplied flags.  <a href="#ga4dffd77dae2b3b3c5bce2612db656e48">More...</a><br /></td></tr>
<tr class="separator:ga4dffd77dae2b3b3c5bce2612db656e48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga428178bc346431936fddf52ad1ebd6fa"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga428178bc346431936fddf52ad1ebd6fa">cpu_irq_restore</a> (<a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a> flags)</td></tr>
<tr class="memdesc:ga428178bc346431936fddf52ad1ebd6fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restore global interrupt flags.  <a href="#ga428178bc346431936fddf52ad1ebd6fa">More...</a><br /></td></tr>
<tr class="separator:ga428178bc346431936fddf52ad1ebd6fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4922a4bd8ba4150211fbc7f2302403c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gae4922a4bd8ba4150211fbc7f2302403c">cpu_irq_enable</a>()</td></tr>
<tr class="memdesc:gae4922a4bd8ba4150211fbc7f2302403c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable interrupts globally.  <a href="#gae4922a4bd8ba4150211fbc7f2302403c">More...</a><br /></td></tr>
<tr class="separator:gae4922a4bd8ba4150211fbc7f2302403c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b77391ed86e2e027f9ee1dd99a06980"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#ga7b77391ed86e2e027f9ee1dd99a06980">cpu_irq_disable</a>()</td></tr>
<tr class="memdesc:ga7b77391ed86e2e027f9ee1dd99a06980"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable interrupts globally.  <a href="#ga7b77391ed86e2e027f9ee1dd99a06980">More...</a><br /></td></tr>
<tr class="separator:ga7b77391ed86e2e027f9ee1dd99a06980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae1545a2473614564550b9c4015c94978"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__interrupt__group.xhtml#gae1545a2473614564550b9c4015c94978">cpu_irq_is_enabled</a>()&#160;&#160;&#160;(__get_PRIMASK() == 0)</td></tr>
<tr class="memdesc:gae1545a2473614564550b9c4015c94978"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if interrupts are globally enabled.  <a href="#gae1545a2473614564550b9c4015c94978">More...</a><br /></td></tr>
<tr class="separator:gae1545a2473614564550b9c4015c94978"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>This is a driver for global enabling and disabling of interrupts. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ga7b77391ed86e2e027f9ee1dd99a06980"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b77391ed86e2e027f9ee1dd99a06980">&sect;&nbsp;</a></span>cpu_irq_disable</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_irq_disable</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> {                                       \</div><div class="line">        __disable_irq();                       \</div><div class="line">        __DMB();                               \</div><div class="line">        g_interrupt_enabled = <span class="keyword">false</span>;           \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div></div><!-- fragment -->
<p>Disable interrupts globally. </p>

</div>
</div>
<a id="gae4922a4bd8ba4150211fbc7f2302403c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae4922a4bd8ba4150211fbc7f2302403c">&sect;&nbsp;</a></span>cpu_irq_enable</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_irq_enable</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> {                                       \</div><div class="line">        g_interrupt_enabled = <span class="keyword">true</span>;            \</div><div class="line">        __DMB();                               \</div><div class="line">        __enable_irq();                        \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div></div><!-- fragment -->
<p>Enable interrupts globally. </p>

</div>
</div>
<a id="gae1545a2473614564550b9c4015c94978"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae1545a2473614564550b9c4015c94978">&sect;&nbsp;</a></span>cpu_irq_is_enabled</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_irq_is_enabled</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;(__get_PRIMASK() == 0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if interrupts are globally enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if interrupts are enabled. </dd></dl>

</div>
</div>
<a id="ga931b667f6490ad3d8905fa25bebb24b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga931b667f6490ad3d8905fa25bebb24b1">&sect;&nbsp;</a></span>irq_initialize_vectors</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define irq_initialize_vectors</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> {                             \</div><div class="line">    } <span class="keywordflow">while</span>(0)</div></div><!-- fragment -->
<p>Initialize interrupt vectors. </p>
<p>For NVIC the interrupt vectors are put in vector table. So nothing to do to initialize them, except defined the vector function with right name.</p>
<p>This must be called prior to <a class="el" href="group__interrupt__group.xhtml#gaa746642b1132af054826fb169f541965">irq_register_handler</a>. </p>

</div>
</div>
<a id="gaa746642b1132af054826fb169f541965"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa746642b1132af054826fb169f541965">&sect;&nbsp;</a></span>irq_register_handler</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define irq_register_handler</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">int_num, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">int_prio&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="group___c_m_s_i_s___core___n_v_i_c_functions.xhtml#ga332e10ef9605dc6eb10b9e14511930f8">NVIC_ClearPendingIRQ</a>(    (<a class="code" href="group___s_a_m_g55_g18__cmsis.xhtml#gac3af4a32370fb28c4ade8bf2add80251">IRQn_Type</a>)int_num);                      \</div><div class="line">    NVIC_SetPriority(    (<a class="code" href="group___s_a_m_g55_g18__cmsis.xhtml#gac3af4a32370fb28c4ade8bf2add80251">IRQn_Type</a>)int_num, int_prio);                \</div><div class="line">    NVIC_EnableIRQ(      (<a class="code" href="group___s_a_m_g55_g18__cmsis.xhtml#gac3af4a32370fb28c4ade8bf2add80251">IRQn_Type</a>)int_num);                          \</div><div class="ttc" id="group___s_a_m_g55_g18__cmsis_xhtml_gac3af4a32370fb28c4ade8bf2add80251"><div class="ttname"><a href="group___s_a_m_g55_g18__cmsis.xhtml#gac3af4a32370fb28c4ade8bf2add80251">IRQn_Type</a></div><div class="ttdeci">enum IRQn IRQn_Type</div><div class="ttdoc">&lt; Interrupt Number Definition </div></div>
<div class="ttc" id="group___c_m_s_i_s___core___n_v_i_c_functions_xhtml_ga332e10ef9605dc6eb10b9e14511930f8"><div class="ttname"><a href="group___c_m_s_i_s___core___n_v_i_c_functions.xhtml#ga332e10ef9605dc6eb10b9e14511930f8">NVIC_ClearPendingIRQ</a></div><div class="ttdeci">__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)</div><div class="ttdoc">Clear Pending Interrupt. </div><div class="ttdef"><b>Definition:</b> core_cm4.h:1547</div></div>
</div><!-- fragment -->
<p>Register handler for interrupt. </p>
<p>For NVIC the interrupt vectors are put in vector table. So nothing to do to register them, except defined the vector function with right name.</p>
<p>Usage: </p><div class="fragment"><div class="line"><a class="code" href="group__interrupt__group.xhtml#ga931b667f6490ad3d8905fa25bebb24b1">irq_initialize_vectors</a>();</div><div class="line"><a class="code" href="group__interrupt__group.xhtml#gaa746642b1132af054826fb169f541965">irq_register_handler</a>(foo_irq_handler);</div></div><!-- fragment --><dl class="section note"><dt>Note</dt><dd>The function <em>func</em> must be defined with the <a class="el" href="group__interrupt__group.xhtml#ga0da0a19156773eca7070722f26ff66a6">ISR</a> macro. </dd>
<dd>
The functions prototypes can be found in the device exception header files (exceptions.h). </dd></dl>

</div>
</div>
<a id="ga0da0a19156773eca7070722f26ff66a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga0da0a19156773eca7070722f26ff66a6">&sect;&nbsp;</a></span>ISR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ISR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func</td><td>)</td>
          <td>&#160;&#160;&#160;void func (void)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Define service routine. </p>
<dl class="section note"><dt>Note</dt><dd>For NVIC devices the interrupt service routines are predefined to add to vector table in binary generation, so there is no service register at run time. The routine collections are in exceptions.h.</dd></dl>
<p>Usage: </p><div class="fragment"><div class="line"><a class="code" href="group__interrupt__group.xhtml#ga0da0a19156773eca7070722f26ff66a6">ISR</a>(foo_irq_handler)</div><div class="line">{</div><div class="line">     <span class="comment">// Function definition</span></div><div class="line">     ...</div><div class="line">}</div></div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">func</td><td>Name for the function. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga9aa1f52defc97531b6343233abeea613"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9aa1f52defc97531b6343233abeea613">&sect;&nbsp;</a></span>irqflags_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type used for holding state of interrupt flag. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga2b5f1a58b98aea52fbe094636054d910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2b5f1a58b98aea52fbe094636054d910">&sect;&nbsp;</a></span>cpu_irq_enter_critical()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cpu_irq_enter_critical </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_ga2b5f1a58b98aea52fbe094636054d910_icgraph.svg" width="315" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga4dffd77dae2b3b3c5bce2612db656e48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4dffd77dae2b3b3c5bce2612db656e48">&sect;&nbsp;</a></span>cpu_irq_is_enabled_flags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a> cpu_irq_is_enabled_flags </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a>&#160;</td>
          <td class="paramname"><em>flags</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if interrupts are globally enabled in supplied flags. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">flags</td><td>Currents state of interrupt flags.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if interrupts are enabled. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_ga4dffd77dae2b3b3c5bce2612db656e48_icgraph.svg" width="303" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gad9a7e953e4e3eb6bde58eb1c81092b43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad9a7e953e4e3eb6bde58eb1c81092b43">&sect;&nbsp;</a></span>cpu_irq_leave_critical()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cpu_irq_leave_critical </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_gad9a7e953e4e3eb6bde58eb1c81092b43_icgraph.svg" width="315" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga428178bc346431936fddf52ad1ebd6fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga428178bc346431936fddf52ad1ebd6fa">&sect;&nbsp;</a></span>cpu_irq_restore()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cpu_irq_restore </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a>&#160;</td>
          <td class="paramname"><em>flags</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restore global interrupt flags. </p>
<p>Use in conjunction with <a class="el" href="group__interrupt__group.xhtml#ga5992cb015c55a0f4ed563e66a8793771">cpu_irq_save</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">flags</td><td>State to set interrupt flag to. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_ga428178bc346431936fddf52ad1ebd6fa_cgraph.svg" width="315" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_ga428178bc346431936fddf52ad1ebd6fa_icgraph.svg" width="328" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga5992cb015c55a0f4ed563e66a8793771"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5992cb015c55a0f4ed563e66a8793771">&sect;&nbsp;</a></span>cpu_irq_save()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__interrupt__group.xhtml#ga9aa1f52defc97531b6343233abeea613">irqflags_t</a> cpu_irq_save </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get and clear the global interrupt flags. </p>
<p>Use in conjunction with <a class="el" href="group__interrupt__group.xhtml#ga428178bc346431936fddf52ad1ebd6fa">cpu_irq_restore</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>Current state of interrupt flags.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function leaves interrupts disabled. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__interrupt__group_ga5992cb015c55a0f4ed563e66a8793771_icgraph.svg" width="315" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="ga95fbf1e7bfa9b76eb83d87c8f217b303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga95fbf1e7bfa9b76eb83d87c8f217b303">&sect;&nbsp;</a></span>cpu_irq_critical_section_counter</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">volatile uint32_t cpu_irq_critical_section_counter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga72ad25cfbc62300764240b6f38505b56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga72ad25cfbc62300764240b6f38505b56">&sect;&nbsp;</a></span>cpu_irq_prev_interrupt_state</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">volatile <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a> cpu_irq_prev_interrupt_state</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ga18a272af1cdb2009183461e1647f4e86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga18a272af1cdb2009183461e1647f4e86">&sect;&nbsp;</a></span>g_interrupt_enabled</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">volatile <a class="el" href="group__group__sam__utils.xhtml#ga97a80ca1602ebf2303258971a2c938e2">bool</a> g_interrupt_enabled</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
