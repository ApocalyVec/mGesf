<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Power Management Controller (PMC)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Power Management Controller (PMC)</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9f1d415fc4e96a8ac144e6ea44c426eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga9f1d415fc4e96a8ac144e6ea44c426eb">pmc_mck_set_prescaler</a> (uint32_t ul_pres)</td></tr>
<tr class="memdesc:ga9f1d415fc4e96a8ac144e6ea44c426eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the prescaler of the MCK.  <a href="#ga9f1d415fc4e96a8ac144e6ea44c426eb">More...</a><br /></td></tr>
<tr class="separator:ga9f1d415fc4e96a8ac144e6ea44c426eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5c765cb31e5915b5708079d7b59332b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga5c765cb31e5915b5708079d7b59332b3">pmc_mck_set_source</a> (uint32_t ul_source)</td></tr>
<tr class="memdesc:ga5c765cb31e5915b5708079d7b59332b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the source of the MCK.  <a href="#ga5c765cb31e5915b5708079d7b59332b3">More...</a><br /></td></tr>
<tr class="separator:ga5c765cb31e5915b5708079d7b59332b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f3a71843695a5e6efe5873aba666117"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga2f3a71843695a5e6efe5873aba666117">pmc_switch_mck_to_sclk</a> (uint32_t ul_pres)</td></tr>
<tr class="memdesc:ga2f3a71843695a5e6efe5873aba666117"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch master clock source selection to slow clock.  <a href="#ga2f3a71843695a5e6efe5873aba666117">More...</a><br /></td></tr>
<tr class="separator:ga2f3a71843695a5e6efe5873aba666117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7fba210cacac382d9f74a3142ad3e61"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gab7fba210cacac382d9f74a3142ad3e61">pmc_switch_mck_to_mainck</a> (uint32_t ul_pres)</td></tr>
<tr class="memdesc:gab7fba210cacac382d9f74a3142ad3e61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch master clock source selection to main clock.  <a href="#gab7fba210cacac382d9f74a3142ad3e61">More...</a><br /></td></tr>
<tr class="separator:gab7fba210cacac382d9f74a3142ad3e61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacdf65ad3a7eb3e950385b58d33aa1290"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gacdf65ad3a7eb3e950385b58d33aa1290">pmc_switch_mck_to_pllack</a> (uint32_t ul_pres)</td></tr>
<tr class="memdesc:gacdf65ad3a7eb3e950385b58d33aa1290"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch master clock source selection to PLLA clock.  <a href="#gacdf65ad3a7eb3e950385b58d33aa1290">More...</a><br /></td></tr>
<tr class="separator:gacdf65ad3a7eb3e950385b58d33aa1290"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf0bfe7345422ac59a95b4df85ed5c140"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaf0bfe7345422ac59a95b4df85ed5c140">pmc_switch_sclk_to_32kxtal</a> (uint32_t ul_bypass)</td></tr>
<tr class="memdesc:gaf0bfe7345422ac59a95b4df85ed5c140"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch slow clock source selection to external 32k (Xtal or Bypass).  <a href="#gaf0bfe7345422ac59a95b4df85ed5c140">More...</a><br /></td></tr>
<tr class="separator:gaf0bfe7345422ac59a95b4df85ed5c140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62611f411b9ab2ad6d2f00f3a6386b40"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga62611f411b9ab2ad6d2f00f3a6386b40">pmc_osc_is_ready_32kxtal</a> (void)</td></tr>
<tr class="memdesc:ga62611f411b9ab2ad6d2f00f3a6386b40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the external 32k Xtal is ready.  <a href="#ga62611f411b9ab2ad6d2f00f3a6386b40">More...</a><br /></td></tr>
<tr class="separator:ga62611f411b9ab2ad6d2f00f3a6386b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga99fe80ceb242a783b01fa3e68d75f4e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga99fe80ceb242a783b01fa3e68d75f4e6">pmc_switch_mainck_to_fastrc</a> (uint32_t ul_moscrcf)</td></tr>
<tr class="memdesc:ga99fe80ceb242a783b01fa3e68d75f4e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch main clock source selection to internal fast RC.  <a href="#ga99fe80ceb242a783b01fa3e68d75f4e6">More...</a><br /></td></tr>
<tr class="separator:ga99fe80ceb242a783b01fa3e68d75f4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb92bc965e4d033032feb6fdebff4cb9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaeb92bc965e4d033032feb6fdebff4cb9">pmc_osc_enable_fastrc</a> (uint32_t ul_rc)</td></tr>
<tr class="memdesc:gaeb92bc965e4d033032feb6fdebff4cb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable fast RC oscillator.  <a href="#gaeb92bc965e4d033032feb6fdebff4cb9">More...</a><br /></td></tr>
<tr class="separator:gaeb92bc965e4d033032feb6fdebff4cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga22da673e4e4efb59981693bdaf96b218"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga22da673e4e4efb59981693bdaf96b218">pmc_osc_disable_fastrc</a> (void)</td></tr>
<tr class="memdesc:ga22da673e4e4efb59981693bdaf96b218"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the internal fast RC.  <a href="#ga22da673e4e4efb59981693bdaf96b218">More...</a><br /></td></tr>
<tr class="separator:ga22da673e4e4efb59981693bdaf96b218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafb7f310eba15089ba2f22f3cd0490703"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gafb7f310eba15089ba2f22f3cd0490703">pmc_osc_is_ready_fastrc</a> (void)</td></tr>
<tr class="memdesc:gafb7f310eba15089ba2f22f3cd0490703"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the main fastrc is ready.  <a href="#gafb7f310eba15089ba2f22f3cd0490703">More...</a><br /></td></tr>
<tr class="separator:gafb7f310eba15089ba2f22f3cd0490703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48c78094d33006fce942f4296573b7af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga48c78094d33006fce942f4296573b7af">pmc_osc_enable_main_xtal</a> (uint32_t ul_xtal_startup_time)</td></tr>
<tr class="memdesc:ga48c78094d33006fce942f4296573b7af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable main XTAL oscillator.  <a href="#ga48c78094d33006fce942f4296573b7af">More...</a><br /></td></tr>
<tr class="separator:ga48c78094d33006fce942f4296573b7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e3be211499e254fa8a510c5cbd76cef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga3e3be211499e254fa8a510c5cbd76cef">pmc_osc_bypass_main_xtal</a> (void)</td></tr>
<tr class="memdesc:ga3e3be211499e254fa8a510c5cbd76cef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bypass main XTAL.  <a href="#ga3e3be211499e254fa8a510c5cbd76cef">More...</a><br /></td></tr>
<tr class="separator:ga3e3be211499e254fa8a510c5cbd76cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa95f349a8c937c8a9983f204c92bb2a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaa95f349a8c937c8a9983f204c92bb2a2">pmc_osc_disable_main_xtal</a> (void)</td></tr>
<tr class="memdesc:gaa95f349a8c937c8a9983f204c92bb2a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the main Xtal.  <a href="#gaa95f349a8c937c8a9983f204c92bb2a2">More...</a><br /></td></tr>
<tr class="separator:gaa95f349a8c937c8a9983f204c92bb2a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d0eee3455601c06be74672177dd8394"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga8d0eee3455601c06be74672177dd8394">pmc_osc_is_bypassed_main_xtal</a> (void)</td></tr>
<tr class="memdesc:ga8d0eee3455601c06be74672177dd8394"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the main crystal is bypassed.  <a href="#ga8d0eee3455601c06be74672177dd8394">More...</a><br /></td></tr>
<tr class="separator:ga8d0eee3455601c06be74672177dd8394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1befd6a758cf6fe4c9e377e1ad34ac89"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga1befd6a758cf6fe4c9e377e1ad34ac89">pmc_osc_is_ready_main_xtal</a> (void)</td></tr>
<tr class="memdesc:ga1befd6a758cf6fe4c9e377e1ad34ac89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the main crystal is ready.  <a href="#ga1befd6a758cf6fe4c9e377e1ad34ac89">More...</a><br /></td></tr>
<tr class="separator:ga1befd6a758cf6fe4c9e377e1ad34ac89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14a6910f902d5838ac1efdb29d933c45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga14a6910f902d5838ac1efdb29d933c45">pmc_switch_mainck_to_xtal</a> (uint32_t ul_bypass, uint32_t ul_xtal_startup_time)</td></tr>
<tr class="memdesc:ga14a6910f902d5838ac1efdb29d933c45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch main clock source selection to external Xtal/Bypass.  <a href="#ga14a6910f902d5838ac1efdb29d933c45">More...</a><br /></td></tr>
<tr class="separator:ga14a6910f902d5838ac1efdb29d933c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacb73b3a585abfdd6b02b82850adb97eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gacb73b3a585abfdd6b02b82850adb97eb">pmc_osc_disable_xtal</a> (uint32_t ul_bypass)</td></tr>
<tr class="memdesc:gacb73b3a585abfdd6b02b82850adb97eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the external Xtal.  <a href="#gacb73b3a585abfdd6b02b82850adb97eb">More...</a><br /></td></tr>
<tr class="separator:gacb73b3a585abfdd6b02b82850adb97eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44895850facd3429788967b68105d4fc"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga44895850facd3429788967b68105d4fc">pmc_osc_is_ready_mainck</a> (void)</td></tr>
<tr class="memdesc:ga44895850facd3429788967b68105d4fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the MAINCK is ready.  <a href="#ga44895850facd3429788967b68105d4fc">More...</a><br /></td></tr>
<tr class="separator:ga44895850facd3429788967b68105d4fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8f8dd6034db8195b7aefb17713baf39"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaf8f8dd6034db8195b7aefb17713baf39">pmc_mainck_osc_select</a> (uint32_t ul_xtal_rc)</td></tr>
<tr class="memdesc:gaf8f8dd6034db8195b7aefb17713baf39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select Main Crystal or internal RC as main clock source.  <a href="#gaf8f8dd6034db8195b7aefb17713baf39">More...</a><br /></td></tr>
<tr class="separator:gaf8f8dd6034db8195b7aefb17713baf39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3528f3a4d76b718543a0b4154c56d263"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga3528f3a4d76b718543a0b4154c56d263">pmc_enable_pllack</a> (uint32_t mula, uint32_t pllacount, uint32_t diva)</td></tr>
<tr class="memdesc:ga3528f3a4d76b718543a0b4154c56d263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable PLLA clock.  <a href="#ga3528f3a4d76b718543a0b4154c56d263">More...</a><br /></td></tr>
<tr class="separator:ga3528f3a4d76b718543a0b4154c56d263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga900acad46d606030709e13d0ad5cd524"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga900acad46d606030709e13d0ad5cd524">pmc_disable_pllack</a> (void)</td></tr>
<tr class="memdesc:ga900acad46d606030709e13d0ad5cd524"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable PLLA clock.  <a href="#ga900acad46d606030709e13d0ad5cd524">More...</a><br /></td></tr>
<tr class="separator:ga900acad46d606030709e13d0ad5cd524"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6464976854ab9c8c9b4967a79cd99ba8"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga6464976854ab9c8c9b4967a79cd99ba8">pmc_is_locked_pllack</a> (void)</td></tr>
<tr class="memdesc:ga6464976854ab9c8c9b4967a79cd99ba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is PLLA locked?  <a href="#ga6464976854ab9c8c9b4967a79cd99ba8">More...</a><br /></td></tr>
<tr class="separator:ga6464976854ab9c8c9b4967a79cd99ba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad09de55bb493f4ebdd92305f24f27d62"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gad09de55bb493f4ebdd92305f24f27d62">pmc_enable_periph_clk</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:gad09de55bb493f4ebdd92305f24f27d62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable the specified peripheral clock.  <a href="#gad09de55bb493f4ebdd92305f24f27d62">More...</a><br /></td></tr>
<tr class="separator:gad09de55bb493f4ebdd92305f24f27d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga05fddac6c4c6a749b242f45e1a222772"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga05fddac6c4c6a749b242f45e1a222772">pmc_disable_periph_clk</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:ga05fddac6c4c6a749b242f45e1a222772"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the specified peripheral clock.  <a href="#ga05fddac6c4c6a749b242f45e1a222772">More...</a><br /></td></tr>
<tr class="separator:ga05fddac6c4c6a749b242f45e1a222772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga59bf88cd2b693d82e32049dfe9ea7558"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga59bf88cd2b693d82e32049dfe9ea7558">pmc_enable_all_periph_clk</a> (void)</td></tr>
<tr class="memdesc:ga59bf88cd2b693d82e32049dfe9ea7558"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable all peripheral clocks.  <a href="#ga59bf88cd2b693d82e32049dfe9ea7558">More...</a><br /></td></tr>
<tr class="separator:ga59bf88cd2b693d82e32049dfe9ea7558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf91ebaa3b8de63cda5bb881bb54383a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gabf91ebaa3b8de63cda5bb881bb54383a">pmc_disable_all_periph_clk</a> (void)</td></tr>
<tr class="memdesc:gabf91ebaa3b8de63cda5bb881bb54383a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable all peripheral clocks.  <a href="#gabf91ebaa3b8de63cda5bb881bb54383a">More...</a><br /></td></tr>
<tr class="separator:gabf91ebaa3b8de63cda5bb881bb54383a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac9827930caf3ed60a604b5d3d09a4575"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gac9827930caf3ed60a604b5d3d09a4575">pmc_is_periph_clk_enabled</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:gac9827930caf3ed60a604b5d3d09a4575"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the specified peripheral clock is enabled.  <a href="#gac9827930caf3ed60a604b5d3d09a4575">More...</a><br /></td></tr>
<tr class="separator:gac9827930caf3ed60a604b5d3d09a4575"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0309a168eefd576d6403de1eaba4418"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gac0309a168eefd576d6403de1eaba4418">pmc_pck_set_prescaler</a> (uint32_t ul_id, uint32_t ul_pres)</td></tr>
<tr class="memdesc:gac0309a168eefd576d6403de1eaba4418"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the prescaler for the specified programmable clock.  <a href="#gac0309a168eefd576d6403de1eaba4418">More...</a><br /></td></tr>
<tr class="separator:gac0309a168eefd576d6403de1eaba4418"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga09deb3d31bf0fa8a62504d94be6cc414"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga09deb3d31bf0fa8a62504d94be6cc414">pmc_pck_set_source</a> (uint32_t ul_id, uint32_t ul_source)</td></tr>
<tr class="memdesc:ga09deb3d31bf0fa8a62504d94be6cc414"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the source oscillator for the specified programmable clock.  <a href="#ga09deb3d31bf0fa8a62504d94be6cc414">More...</a><br /></td></tr>
<tr class="separator:ga09deb3d31bf0fa8a62504d94be6cc414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9749eb62855eb66f55f43758bb9f219"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gae9749eb62855eb66f55f43758bb9f219">pmc_switch_pck_to_sclk</a> (uint32_t ul_id, uint32_t ul_pres)</td></tr>
<tr class="memdesc:gae9749eb62855eb66f55f43758bb9f219"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch programmable clock source selection to slow clock.  <a href="#gae9749eb62855eb66f55f43758bb9f219">More...</a><br /></td></tr>
<tr class="separator:gae9749eb62855eb66f55f43758bb9f219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf20e61a58635d9e84bd9aa64d52b4376"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaf20e61a58635d9e84bd9aa64d52b4376">pmc_switch_pck_to_mainck</a> (uint32_t ul_id, uint32_t ul_pres)</td></tr>
<tr class="memdesc:gaf20e61a58635d9e84bd9aa64d52b4376"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch programmable clock source selection to main clock.  <a href="#gaf20e61a58635d9e84bd9aa64d52b4376">More...</a><br /></td></tr>
<tr class="separator:gaf20e61a58635d9e84bd9aa64d52b4376"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8d946f7739384b3f955ffb756c8f6c48"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga8d946f7739384b3f955ffb756c8f6c48">pmc_switch_pck_to_pllack</a> (uint32_t ul_id, uint32_t ul_pres)</td></tr>
<tr class="memdesc:ga8d946f7739384b3f955ffb756c8f6c48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch programmable clock source selection to PLLA clock.  <a href="#ga8d946f7739384b3f955ffb756c8f6c48">More...</a><br /></td></tr>
<tr class="separator:ga8d946f7739384b3f955ffb756c8f6c48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa8c77b73e5ab3a77009cfbbd0a2b92ec"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaa8c77b73e5ab3a77009cfbbd0a2b92ec">pmc_switch_pck_to_mck</a> (uint32_t ul_id, uint32_t ul_pres)</td></tr>
<tr class="memdesc:gaa8c77b73e5ab3a77009cfbbd0a2b92ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch programmable clock source selection to mck.  <a href="#gaa8c77b73e5ab3a77009cfbbd0a2b92ec">More...</a><br /></td></tr>
<tr class="separator:gaa8c77b73e5ab3a77009cfbbd0a2b92ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1c092ebde01d9748165bf3f556d82a57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga1c092ebde01d9748165bf3f556d82a57">pmc_enable_pck</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:ga1c092ebde01d9748165bf3f556d82a57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable the specified programmable clock.  <a href="#ga1c092ebde01d9748165bf3f556d82a57">More...</a><br /></td></tr>
<tr class="separator:ga1c092ebde01d9748165bf3f556d82a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e708501aef19f46552e20ee28c1efc9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga1e708501aef19f46552e20ee28c1efc9">pmc_disable_pck</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:ga1e708501aef19f46552e20ee28c1efc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the specified programmable clock.  <a href="#ga1e708501aef19f46552e20ee28c1efc9">More...</a><br /></td></tr>
<tr class="separator:ga1e708501aef19f46552e20ee28c1efc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ec1cb8fe8face1eb38171810419f904"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga4ec1cb8fe8face1eb38171810419f904">pmc_enable_all_pck</a> (void)</td></tr>
<tr class="memdesc:ga4ec1cb8fe8face1eb38171810419f904"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable all programmable clocks.  <a href="#ga4ec1cb8fe8face1eb38171810419f904">More...</a><br /></td></tr>
<tr class="separator:ga4ec1cb8fe8face1eb38171810419f904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36788eaf561b947a9309c9822e660533"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga36788eaf561b947a9309c9822e660533">pmc_disable_all_pck</a> (void)</td></tr>
<tr class="memdesc:ga36788eaf561b947a9309c9822e660533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable all programmable clocks.  <a href="#ga36788eaf561b947a9309c9822e660533">More...</a><br /></td></tr>
<tr class="separator:ga36788eaf561b947a9309c9822e660533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafca0371b3ab39b73557a74a685d80fa7"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gafca0371b3ab39b73557a74a685d80fa7">pmc_is_pck_enabled</a> (uint32_t ul_id)</td></tr>
<tr class="memdesc:gafca0371b3ab39b73557a74a685d80fa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the specified programmable clock is enabled.  <a href="#gafca0371b3ab39b73557a74a685d80fa7">More...</a><br /></td></tr>
<tr class="separator:gafca0371b3ab39b73557a74a685d80fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d2a268c28753bc320e1e498b21034ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga5d2a268c28753bc320e1e498b21034ec">pmc_enable_interrupt</a> (uint32_t ul_sources)</td></tr>
<tr class="memdesc:ga5d2a268c28753bc320e1e498b21034ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable PMC interrupts.  <a href="#ga5d2a268c28753bc320e1e498b21034ec">More...</a><br /></td></tr>
<tr class="separator:ga5d2a268c28753bc320e1e498b21034ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada62f4f24defcf62da3c132c5696efe1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gada62f4f24defcf62da3c132c5696efe1">pmc_disable_interrupt</a> (uint32_t ul_sources)</td></tr>
<tr class="memdesc:gada62f4f24defcf62da3c132c5696efe1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable PMC interrupts.  <a href="#gada62f4f24defcf62da3c132c5696efe1">More...</a><br /></td></tr>
<tr class="separator:gada62f4f24defcf62da3c132c5696efe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dd65e95092d344369433eaa279e3961"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga9dd65e95092d344369433eaa279e3961">pmc_get_interrupt_mask</a> (void)</td></tr>
<tr class="memdesc:ga9dd65e95092d344369433eaa279e3961"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get PMC interrupt mask.  <a href="#ga9dd65e95092d344369433eaa279e3961">More...</a><br /></td></tr>
<tr class="separator:ga9dd65e95092d344369433eaa279e3961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f5d030e575a5ad9ef63e718679ab107"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga1f5d030e575a5ad9ef63e718679ab107">pmc_get_status</a> (void)</td></tr>
<tr class="memdesc:ga1f5d030e575a5ad9ef63e718679ab107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get current status.  <a href="#ga1f5d030e575a5ad9ef63e718679ab107">More...</a><br /></td></tr>
<tr class="separator:ga1f5d030e575a5ad9ef63e718679ab107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4bcdcf38948ffaff3e94fc90d1ff63c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga4bcdcf38948ffaff3e94fc90d1ff63c1">pmc_set_fast_startup_input</a> (uint32_t ul_inputs)</td></tr>
<tr class="memdesc:ga4bcdcf38948ffaff3e94fc90d1ff63c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the wake-up inputs for fast startup mode registers (event generation).  <a href="#ga4bcdcf38948ffaff3e94fc90d1ff63c1">More...</a><br /></td></tr>
<tr class="separator:ga4bcdcf38948ffaff3e94fc90d1ff63c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaae27458969657ae32b81934771daeb7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaae27458969657ae32b81934771daeb7e">pmc_clr_fast_startup_input</a> (uint32_t ul_inputs)</td></tr>
<tr class="memdesc:gaae27458969657ae32b81934771daeb7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the wake-up inputs for fast startup mode registers (remove event generation).  <a href="#gaae27458969657ae32b81934771daeb7e">More...</a><br /></td></tr>
<tr class="separator:gaae27458969657ae32b81934771daeb7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3771318f6dcf951222b739363e8960ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga3771318f6dcf951222b739363e8960ba">pmc_enable_sleepmode</a> (uint8_t uc_type)</td></tr>
<tr class="memdesc:ga3771318f6dcf951222b739363e8960ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Sleep Mode.  <a href="#ga3771318f6dcf951222b739363e8960ba">More...</a><br /></td></tr>
<tr class="separator:ga3771318f6dcf951222b739363e8960ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8663b7c70694822a8e5bb9fad49e37d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gac8663b7c70694822a8e5bb9fad49e37d">pmc_enable_waitmode</a> (void)</td></tr>
<tr class="memdesc:gac8663b7c70694822a8e5bb9fad49e37d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Wait Mode.  <a href="#gac8663b7c70694822a8e5bb9fad49e37d">More...</a><br /></td></tr>
<tr class="separator:gac8663b7c70694822a8e5bb9fad49e37d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae33291d281a86ae2a6542960460087b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gae33291d281a86ae2a6542960460087b6">pmc_enable_backupmode</a> (void)</td></tr>
<tr class="memdesc:gae33291d281a86ae2a6542960460087b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Backup Mode.  <a href="#gae33291d281a86ae2a6542960460087b6">More...</a><br /></td></tr>
<tr class="separator:gae33291d281a86ae2a6542960460087b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga546d737d9675d591d1fcc5559c543cc7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#ga546d737d9675d591d1fcc5559c543cc7">pmc_enable_clock_failure_detector</a> (void)</td></tr>
<tr class="memdesc:ga546d737d9675d591d1fcc5559c543cc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable Clock Failure Detector.  <a href="#ga546d737d9675d591d1fcc5559c543cc7">More...</a><br /></td></tr>
<tr class="separator:ga546d737d9675d591d1fcc5559c543cc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac257d25824f421a403dedd42e7a2bbc4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gac257d25824f421a403dedd42e7a2bbc4">pmc_disable_clock_failure_detector</a> (void)</td></tr>
<tr class="memdesc:gac257d25824f421a403dedd42e7a2bbc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable Clock Failure Detector.  <a href="#gac257d25824f421a403dedd42e7a2bbc4">More...</a><br /></td></tr>
<tr class="separator:gac257d25824f421a403dedd42e7a2bbc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf4a6531a439a458a39e38d17627da505"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gaf4a6531a439a458a39e38d17627da505">pmc_set_writeprotect</a> (uint32_t ul_enable)</td></tr>
<tr class="memdesc:gaf4a6531a439a458a39e38d17627da505"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable write protect of PMC registers.  <a href="#gaf4a6531a439a458a39e38d17627da505">More...</a><br /></td></tr>
<tr class="separator:gaf4a6531a439a458a39e38d17627da505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae496987cbab66994e0d54c4a10718be9"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__pmc__group.xhtml#gae496987cbab66994e0d54c4a10718be9">pmc_get_writeprotect_status</a> (void)</td></tr>
<tr class="memdesc:gae496987cbab66994e0d54c4a10718be9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return write protect status.  <a href="#gae496987cbab66994e0d54c4a10718be9">More...</a><br /></td></tr>
<tr class="separator:gae496987cbab66994e0d54c4a10718be9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<dl class="section user"><dt>Purpose</dt><dd></dd></dl>
<p>The Power Management Controller (PMC) optimizes power consumption by controlling all system and user peripheral clocks. The PMC enables/disables the clock inputs to many of the peripherals and the Cortex-M Processor. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaae27458969657ae32b81934771daeb7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaae27458969657ae32b81934771daeb7e">&sect;&nbsp;</a></span>pmc_clr_fast_startup_input()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_clr_fast_startup_input </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_inputs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the wake-up inputs for fast startup mode registers (remove event generation). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_inputs</td><td>Wake up inputs to disable. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga36788eaf561b947a9309c9822e660533"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga36788eaf561b947a9309c9822e660533">&sect;&nbsp;</a></span>pmc_disable_all_pck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_all_pck </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable all programmable clocks. </p>

</div>
</div>
<a id="gabf91ebaa3b8de63cda5bb881bb54383a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabf91ebaa3b8de63cda5bb881bb54383a">&sect;&nbsp;</a></span>pmc_disable_all_periph_clk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_all_periph_clk </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable all peripheral clocks. </p>

</div>
</div>
<a id="gac257d25824f421a403dedd42e7a2bbc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac257d25824f421a403dedd42e7a2bbc4">&sect;&nbsp;</a></span>pmc_disable_clock_failure_detector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_clock_failure_detector </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable Clock Failure Detector. </p>

</div>
</div>
<a id="gada62f4f24defcf62da3c132c5696efe1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gada62f4f24defcf62da3c132c5696efe1">&sect;&nbsp;</a></span>pmc_disable_interrupt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_interrupt </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_sources</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable PMC interrupts. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_sources</td><td>Interrupt sources bit map. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1e708501aef19f46552e20ee28c1efc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1e708501aef19f46552e20ee28c1efc9">&sect;&nbsp;</a></span>pmc_disable_pck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_pck </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the specified programmable clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga1e708501aef19f46552e20ee28c1efc9_icgraph.svg" width="296" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga05fddac6c4c6a749b242f45e1a222772"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga05fddac6c4c6a749b242f45e1a222772">&sect;&nbsp;</a></span>pmc_disable_periph_clk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_disable_periph_clk </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the specified peripheral clock. </p>
<dl class="section note"><dt>Note</dt><dd>The ID must NOT be shifted (i.e., 1 &lt;&lt; ID_xxx).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Peripheral ID (ID_xxx).</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Invalid parameter. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga05fddac6c4c6a749b242f45e1a222772_icgraph.svg" width="391" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga900acad46d606030709e13d0ad5cd524"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga900acad46d606030709e13d0ad5cd524">&sect;&nbsp;</a></span>pmc_disable_pllack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_disable_pllack </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable PLLA clock. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga900acad46d606030709e13d0ad5cd524_icgraph.svg" width="328" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga4ec1cb8fe8face1eb38171810419f904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ec1cb8fe8face1eb38171810419f904">&sect;&nbsp;</a></span>pmc_enable_all_pck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_all_pck </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable all programmable clocks. </p>

</div>
</div>
<a id="ga59bf88cd2b693d82e32049dfe9ea7558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga59bf88cd2b693d82e32049dfe9ea7558">&sect;&nbsp;</a></span>pmc_enable_all_periph_clk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_all_periph_clk </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable all peripheral clocks. </p>

</div>
</div>
<a id="gae33291d281a86ae2a6542960460087b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae33291d281a86ae2a6542960460087b6">&sect;&nbsp;</a></span>pmc_enable_backupmode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_backupmode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Backup Mode. </p>
<p>Enter condition: WFE/(VROFF bit = 1) + (SLEEPDEEP bit = 1) </p>

</div>
</div>
<a id="ga546d737d9675d591d1fcc5559c543cc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga546d737d9675d591d1fcc5559c543cc7">&sect;&nbsp;</a></span>pmc_enable_clock_failure_detector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_clock_failure_detector </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Clock Failure Detector. </p>

</div>
</div>
<a id="ga5d2a268c28753bc320e1e498b21034ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5d2a268c28753bc320e1e498b21034ec">&sect;&nbsp;</a></span>pmc_enable_interrupt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_interrupt </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_sources</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable PMC interrupts. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_sources</td><td>Interrupt sources bit map. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1c092ebde01d9748165bf3f556d82a57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1c092ebde01d9748165bf3f556d82a57">&sect;&nbsp;</a></span>pmc_enable_pck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_pck </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable the specified programmable clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga1c092ebde01d9748165bf3f556d82a57_icgraph.svg" width="291" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gad09de55bb493f4ebdd92305f24f27d62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad09de55bb493f4ebdd92305f24f27d62">&sect;&nbsp;</a></span>pmc_enable_periph_clk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_enable_periph_clk </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable the specified peripheral clock. </p>
<dl class="section note"><dt>Note</dt><dd>The ID must NOT be shifted (i.e., 1 &lt;&lt; ID_xxx).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Peripheral ID (ID_xxx).</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Invalid parameter. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gad09de55bb493f4ebdd92305f24f27d62_icgraph.svg" width="386" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga3528f3a4d76b718543a0b4154c56d263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3528f3a4d76b718543a0b4154c56d263">&sect;&nbsp;</a></span>pmc_enable_pllack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_pllack </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>mula</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>pllacount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>diva</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable PLLA clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mula</td><td>PLLA multiplier. </td></tr>
    <tr><td class="paramname">pllacount</td><td>PLLA counter. </td></tr>
    <tr><td class="paramname">diva</td><td>Divider. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga3528f3a4d76b718543a0b4154c56d263_cgraph.svg" width="328" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga3771318f6dcf951222b739363e8960ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3771318f6dcf951222b739363e8960ba">&sect;&nbsp;</a></span>pmc_enable_sleepmode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_sleepmode </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>uc_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Sleep Mode. </p>
<p>Enter condition: (WFE or WFI) + (SLEEPDEEP bit = 0) + (LPM bit = 0)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uc_type</td><td>0 for wait for interrupt, 1 for wait for event. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>For SAM4S, SAM4C, SAM4CM, SAM4CP, SAMV71 and SAM4E series, since only WFI is effective, uc_type = 1 will be treated as uc_type = 0. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga3771318f6dcf951222b739363e8960ba_cgraph.svg" width="376" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gac8663b7c70694822a8e5bb9fad49e37d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac8663b7c70694822a8e5bb9fad49e37d">&sect;&nbsp;</a></span>pmc_enable_waitmode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_enable_waitmode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable Wait Mode. </p>
<p>Enter condition: WFE + (SLEEPDEEP bit = 0) + (LPM bit = 1) </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gac8663b7c70694822a8e5bb9fad49e37d_icgraph.svg" width="376" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga9dd65e95092d344369433eaa279e3961"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9dd65e95092d344369433eaa279e3961">&sect;&nbsp;</a></span>pmc_get_interrupt_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_get_interrupt_mask </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get PMC interrupt mask. </p>
<dl class="section return"><dt>Returns</dt><dd>The interrupt mask value. </dd></dl>

</div>
</div>
<a id="ga1f5d030e575a5ad9ef63e718679ab107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1f5d030e575a5ad9ef63e718679ab107">&sect;&nbsp;</a></span>pmc_get_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_get_status </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get current status. </p>
<dl class="section return"><dt>Returns</dt><dd>The current PMC status. </dd></dl>

</div>
</div>
<a id="gae496987cbab66994e0d54c4a10718be9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae496987cbab66994e0d54c4a10718be9">&sect;&nbsp;</a></span>pmc_get_writeprotect_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_get_writeprotect_status </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return write protect status. </p>
<dl class="section return"><dt>Returns</dt><dd>Return write protect status. </dd></dl>

</div>
</div>
<a id="ga6464976854ab9c8c9b4967a79cd99ba8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6464976854ab9c8c9b4967a79cd99ba8">&sect;&nbsp;</a></span>pmc_is_locked_pllack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_is_locked_pllack </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is PLLA locked? </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Not locked. </td></tr>
    <tr><td class="paramname">1</td><td>Locked. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga6464976854ab9c8c9b4967a79cd99ba8_icgraph.svg" width="307" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gafca0371b3ab39b73557a74a685d80fa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafca0371b3ab39b73557a74a685d80fa7">&sect;&nbsp;</a></span>pmc_is_pck_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_is_pck_enabled </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the specified programmable clock is enabled. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Programmable clock is disabled or unknown. </td></tr>
    <tr><td class="paramname">1</td><td>Programmable clock is enabled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac9827930caf3ed60a604b5d3d09a4575"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac9827930caf3ed60a604b5d3d09a4575">&sect;&nbsp;</a></span>pmc_is_periph_clk_enabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_is_periph_clk_enabled </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the specified peripheral clock is enabled. </p>
<dl class="section note"><dt>Note</dt><dd>The ID must NOT be shifted (i.e., 1 &lt;&lt; ID_xxx).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Peripheral ID (ID_xxx).</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Peripheral clock is disabled or unknown. </td></tr>
    <tr><td class="paramname">1</td><td>Peripheral clock is enabled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf8f8dd6034db8195b7aefb17713baf39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf8f8dd6034db8195b7aefb17713baf39">&sect;&nbsp;</a></span>pmc_mainck_osc_select()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_mainck_osc_select </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_xtal_rc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Select Main Crystal or internal RC as main clock source. </p>
<dl class="section note"><dt>Note</dt><dd>This function will not enable/disable RC or Main Crystal.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_xtal_rc</td><td>0 internal RC is selected, otherwise Main Crystal. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga9f1d415fc4e96a8ac144e6ea44c426eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9f1d415fc4e96a8ac144e6ea44c426eb">&sect;&nbsp;</a></span>pmc_mck_set_prescaler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_mck_set_prescaler </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the prescaler of the MCK. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_pres</td><td>Prescaler value. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga9f1d415fc4e96a8ac144e6ea44c426eb_icgraph.svg" width="375" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga5c765cb31e5915b5708079d7b59332b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5c765cb31e5915b5708079d7b59332b3">&sect;&nbsp;</a></span>pmc_mck_set_source()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_mck_set_source </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the source of the MCK. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_source</td><td>Source selection value. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga5c765cb31e5915b5708079d7b59332b3_icgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga3e3be211499e254fa8a510c5cbd76cef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3e3be211499e254fa8a510c5cbd76cef">&sect;&nbsp;</a></span>pmc_osc_bypass_main_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_bypass_main_xtal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bypass main XTAL. </p>

</div>
</div>
<a id="ga22da673e4e4efb59981693bdaf96b218"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga22da673e4e4efb59981693bdaf96b218">&sect;&nbsp;</a></span>pmc_osc_disable_fastrc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_disable_fastrc </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the internal fast RC. </p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga22da673e4e4efb59981693bdaf96b218_icgraph.svg" width="312" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaa95f349a8c937c8a9983f204c92bb2a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa95f349a8c937c8a9983f204c92bb2a2">&sect;&nbsp;</a></span>pmc_osc_disable_main_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_disable_main_xtal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the main Xtal. </p>

</div>
</div>
<a id="gacb73b3a585abfdd6b02b82850adb97eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacb73b3a585abfdd6b02b82850adb97eb">&sect;&nbsp;</a></span>pmc_osc_disable_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_disable_xtal </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_bypass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the external Xtal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_bypass</td><td>0 for Xtal, 1 for bypass. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gacb73b3a585abfdd6b02b82850adb97eb_icgraph.svg" width="300" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaeb92bc965e4d033032feb6fdebff4cb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaeb92bc965e4d033032feb6fdebff4cb9">&sect;&nbsp;</a></span>pmc_osc_enable_fastrc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_enable_fastrc </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_rc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable fast RC oscillator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_rc</td><td>Fast RC oscillator(4/8/12Mhz). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga48c78094d33006fce942f4296573b7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga48c78094d33006fce942f4296573b7af">&sect;&nbsp;</a></span>pmc_osc_enable_main_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_osc_enable_main_xtal </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_xtal_startup_time</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable main XTAL oscillator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_xtal_startup_time</td><td>Xtal start-up time, in number of slow clocks. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga8d0eee3455601c06be74672177dd8394"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8d0eee3455601c06be74672177dd8394">&sect;&nbsp;</a></span>pmc_osc_is_bypassed_main_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_osc_is_bypassed_main_xtal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the main crystal is bypassed. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Xtal is bypassed, otherwise not. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga62611f411b9ab2ad6d2f00f3a6386b40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga62611f411b9ab2ad6d2f00f3a6386b40">&sect;&nbsp;</a></span>pmc_osc_is_ready_32kxtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_osc_is_ready_32kxtal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the external 32k Xtal is ready. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">1</td><td>External 32k Xtal is ready. </td></tr>
    <tr><td class="paramname">0</td><td>External 32k Xtal is not ready. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga62611f411b9ab2ad6d2f00f3a6386b40_icgraph.svg" width="338" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gafb7f310eba15089ba2f22f3cd0490703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafb7f310eba15089ba2f22f3cd0490703">&sect;&nbsp;</a></span>pmc_osc_is_ready_fastrc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_osc_is_ready_fastrc </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the main fastrc is ready. </p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Xtal is not ready, otherwise ready. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1befd6a758cf6fe4c9e377e1ad34ac89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1befd6a758cf6fe4c9e377e1ad34ac89">&sect;&nbsp;</a></span>pmc_osc_is_ready_main_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_osc_is_ready_main_xtal </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the main crystal is ready. </p>
<dl class="section note"><dt>Note</dt><dd>If main crystal is bypassed, it's always ready.</dd></dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>main crystal is not ready, otherwise ready. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga44895850facd3429788967b68105d4fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga44895850facd3429788967b68105d4fc">&sect;&nbsp;</a></span>pmc_osc_is_ready_mainck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_osc_is_ready_mainck </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if the MAINCK is ready. </p>
<p>Depending on MOSCEL, MAINCK can be one of Xtal, bypass or internal RC.</p>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">1</td><td>Xtal is ready. </td></tr>
    <tr><td class="paramname">0</td><td>Xtal is not ready. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga44895850facd3429788967b68105d4fc_icgraph.svg" width="338" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gac0309a168eefd576d6403de1eaba4418"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac0309a168eefd576d6403de1eaba4418">&sect;&nbsp;</a></span>pmc_pck_set_prescaler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_pck_set_prescaler </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the prescaler for the specified programmable clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Peripheral ID. </td></tr>
    <tr><td class="paramname">ul_pres</td><td>Prescaler value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga09deb3d31bf0fa8a62504d94be6cc414"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga09deb3d31bf0fa8a62504d94be6cc414">&sect;&nbsp;</a></span>pmc_pck_set_source()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_pck_set_source </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the source oscillator for the specified programmable clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Peripheral ID. </td></tr>
    <tr><td class="paramname">ul_source</td><td>Source selection value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga4bcdcf38948ffaff3e94fc90d1ff63c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4bcdcf38948ffaff3e94fc90d1ff63c1">&sect;&nbsp;</a></span>pmc_set_fast_startup_input()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_set_fast_startup_input </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_inputs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the wake-up inputs for fast startup mode registers (event generation). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_inputs</td><td>Wake up inputs to enable. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf4a6531a439a458a39e38d17627da505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf4a6531a439a458a39e38d17627da505">&sect;&nbsp;</a></span>pmc_set_writeprotect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_set_writeprotect </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable or disable write protect of PMC registers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_enable</td><td>1 to enable, 0 to disable. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga99fe80ceb242a783b01fa3e68d75f4e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga99fe80ceb242a783b01fa3e68d75f4e6">&sect;&nbsp;</a></span>pmc_switch_mainck_to_fastrc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_switch_mainck_to_fastrc </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_moscrcf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch main clock source selection to internal fast RC. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_moscrcf</td><td>Fast RC oscillator(4/8/12Mhz).</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
    <tr><td class="paramname">2</td><td>Invalid frequency. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga99fe80ceb242a783b01fa3e68d75f4e6_icgraph.svg" width="306" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga14a6910f902d5838ac1efdb29d933c45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga14a6910f902d5838ac1efdb29d933c45">&sect;&nbsp;</a></span>pmc_switch_mainck_to_xtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_switch_mainck_to_xtal </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_bypass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_xtal_startup_time</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch main clock source selection to external Xtal/Bypass. </p>
<dl class="section note"><dt>Note</dt><dd>The function may switch MCK to SCLK if MCK source is MAINCK to avoid any system crash.</dd>
<dd>
If used in Xtal mode, the Xtal is automatically enabled.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_bypass</td><td>0 for Xtal, 1 for bypass.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga14a6910f902d5838ac1efdb29d933c45_icgraph.svg" width="334" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gab7fba210cacac382d9f74a3142ad3e61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab7fba210cacac382d9f74a3142ad3e61">&sect;&nbsp;</a></span>pmc_switch_mck_to_mainck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_mck_to_mainck </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch master clock source selection to main clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_pres</td><td>Processor clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gab7fba210cacac382d9f74a3142ad3e61_icgraph.svg" width="334" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gacdf65ad3a7eb3e950385b58d33aa1290"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacdf65ad3a7eb3e950385b58d33aa1290">&sect;&nbsp;</a></span>pmc_switch_mck_to_pllack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_mck_to_pllack </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch master clock source selection to PLLA clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_pres</td><td>Processor clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gacdf65ad3a7eb3e950385b58d33aa1290_icgraph.svg" width="326" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga2f3a71843695a5e6efe5873aba666117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f3a71843695a5e6efe5873aba666117">&sect;&nbsp;</a></span>pmc_switch_mck_to_sclk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_mck_to_sclk </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch master clock source selection to slow clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_pres</td><td>Processor clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_ga2f3a71843695a5e6efe5873aba666117_icgraph.svg" width="315" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gaf20e61a58635d9e84bd9aa64d52b4376"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf20e61a58635d9e84bd9aa64d52b4376">&sect;&nbsp;</a></span>pmc_switch_pck_to_mainck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_pck_to_mainck </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch programmable clock source selection to main clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
    <tr><td class="paramname">ul_pres</td><td>Programmable clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaa8c77b73e5ab3a77009cfbbd0a2b92ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa8c77b73e5ab3a77009cfbbd0a2b92ec">&sect;&nbsp;</a></span>pmc_switch_pck_to_mck()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_pck_to_mck </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch programmable clock source selection to mck. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
    <tr><td class="paramname">ul_pres</td><td>Programmable clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gaa8c77b73e5ab3a77009cfbbd0a2b92ec_icgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga8d946f7739384b3f955ffb756c8f6c48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8d946f7739384b3f955ffb756c8f6c48">&sect;&nbsp;</a></span>pmc_switch_pck_to_pllack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_pck_to_pllack </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch programmable clock source selection to PLLA clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
    <tr><td class="paramname">ul_pres</td><td>Programmable clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gae9749eb62855eb66f55f43758bb9f219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae9749eb62855eb66f55f43758bb9f219">&sect;&nbsp;</a></span>pmc_switch_pck_to_sclk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t pmc_switch_pck_to_sclk </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_pres</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch programmable clock source selection to slow clock. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_id</td><td>Id of the programmable clock. </td></tr>
    <tr><td class="paramname">ul_pres</td><td>Programmable clock prescaler.</td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">0</td><td>Success. </td></tr>
    <tr><td class="paramname">1</td><td>Timeout error. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf0bfe7345422ac59a95b4df85ed5c140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf0bfe7345422ac59a95b4df85ed5c140">&sect;&nbsp;</a></span>pmc_switch_sclk_to_32kxtal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pmc_switch_sclk_to_32kxtal </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_bypass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switch slow clock source selection to external 32k (Xtal or Bypass). </p>
<dl class="section note"><dt>Note</dt><dd>Switching SCLK back to 32krc is only possible by shutting down the VDDIO power supply.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_bypass</td><td>0 for Xtal, 1 for bypass. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__pmc__group_gaf0bfe7345422ac59a95b4df85ed5c140_icgraph.svg" width="287" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
