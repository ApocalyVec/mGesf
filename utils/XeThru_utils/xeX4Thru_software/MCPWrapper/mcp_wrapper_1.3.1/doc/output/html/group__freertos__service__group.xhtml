<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: FreeRTOS Peripheral Control</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#groups">Modules</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">FreeRTOS Peripheral Control</div>  </div>
</div><!--header-->
<div class="contents">

<p>ASF specific FreeRTOS functionality that integrates ASF driver libraries with FreeRTOS services to provide a set of highly efficient peripheral interface functions.  
<a href="#details">More...</a></p>
<div class="dynheader">
Collaboration diagram for FreeRTOS Peripheral Control:</div>
<div class="dyncontent">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__freertos__service__group.svg" width="395" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem:group__freertos__usart__peripheral__control__group"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__usart__peripheral__control__group.xhtml">FreeRTOS USART peripheral</a></td></tr>
<tr class="memdesc:group__freertos__usart__peripheral__control__group"><td class="mdescLeft">&#160;</td><td class="mdescRight">control <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfreertos__peripheral__options.xhtml">freertos_peripheral_options</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define the behaviour of FreeRTOS ASF read and write functions for a peripheral.  <a href="structfreertos__peripheral__options.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga7b561ac8cc7885c509a96b323759995f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#ga7b561ac8cc7885c509a96b323759995f">USE_TX_ACCESS_MUTEX</a>&#160;&#160;&#160;0x01</td></tr>
<tr class="memdesc:ga7b561ac8cc7885c509a96b323759995f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that writes to the peripheral being initialized must be thread aware.  <a href="#ga7b561ac8cc7885c509a96b323759995f">More...</a><br /></td></tr>
<tr class="separator:ga7b561ac8cc7885c509a96b323759995f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8d7e8bbe75921b4ffbe61b27201a2e0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#gaf8d7e8bbe75921b4ffbe61b27201a2e0">USE_RX_ACCESS_MUTEX</a>&#160;&#160;&#160;0x02</td></tr>
<tr class="memdesc:gaf8d7e8bbe75921b4ffbe61b27201a2e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that reads from the peripheral being initialized must be thread aware.  <a href="#gaf8d7e8bbe75921b4ffbe61b27201a2e0">More...</a><br /></td></tr>
<tr class="separator:gaf8d7e8bbe75921b4ffbe61b27201a2e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dad2bf070548a64bd6f3d7ef45286e2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#ga1dad2bf070548a64bd6f3d7ef45286e2">WAIT_TX_COMPLETE</a>&#160;&#160;&#160;0x04</td></tr>
<tr class="memdesc:ga1dad2bf070548a64bd6f3d7ef45286e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that a task writing to the peripheral must be held in the FreeRTOS Blocked state until the write has completed.  <a href="#ga1dad2bf070548a64bd6f3d7ef45286e2">More...</a><br /></td></tr>
<tr class="separator:ga1dad2bf070548a64bd6f3d7ef45286e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabff6789c5b5497e3960214505a543680"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#gabff6789c5b5497e3960214505a543680">WAIT_RX_COMPLETE</a>&#160;&#160;&#160;0x08</td></tr>
<tr class="memdesc:gabff6789c5b5497e3960214505a543680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that a task reading from the peripheral must be held in the FreeRTOS Blocked state until the read has completed.  <a href="#gabff6789c5b5497e3960214505a543680">More...</a><br /></td></tr>
<tr class="separator:gabff6789c5b5497e3960214505a543680"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gae311acbb26b7f10405c6e9f29ef9281b"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structfreertos__peripheral__options.xhtml">freertos_peripheral_options</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#gae311acbb26b7f10405c6e9f29ef9281b">freertos_peripheral_options_t</a></td></tr>
<tr class="memdesc:gae311acbb26b7f10405c6e9f29ef9281b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define the behaviour of FreeRTOS ASF read and write functions for a peripheral.  <a href="#gae311acbb26b7f10405c6e9f29ef9281b">More...</a><br /></td></tr>
<tr class="separator:gae311acbb26b7f10405c6e9f29ef9281b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gafa87234f31b645f304545b3def15582c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__freertos__service__group.xhtml#gafa87234f31b645f304545b3def15582c">peripheral_operation_mode</a> { <br />
&#160;&#160;<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582ca44220316be7f6ea4f321e7e42a9c5e22">USART_RS232</a> = 0, 
<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582ca6fee17e5182fd2505ed987e10d749e1f">UART_RS232</a>, 
<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582ca84379dc90398ca075038c8d5ee465f6a">SPI_MASTER</a>, 
<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582ca62eccda64f3a741a863194fe69728595">TWI_I2C_MASTER</a>, 
<br />
&#160;&#160;<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582caf78dbafec7534e396b641be633847a58">TWIHS_I2C_MASTER</a>, 
<a class="el" href="group__freertos__service__group.xhtml#ggafa87234f31b645f304545b3def15582ca9bf1138c8c1f4519e5b814514b750ca3">NOT_SUPPORTED</a>
<br />
 }<tr class="memdesc:gafa87234f31b645f304545b3def15582c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the operating modes that can be specified in a freertos_peripheral_options_t structure.  <a href="group__freertos__service__group.xhtml#gafa87234f31b645f304545b3def15582c">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:gafa87234f31b645f304545b3def15582c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>ASF specific FreeRTOS functionality that integrates ASF driver libraries with FreeRTOS services to provide a set of highly efficient peripheral interface functions. </p>
<p>The FreeRTOS ASF functions use the peripheral DMA controller (PDC) to send and receive data with practically no processing overhead, and use the FreeRTOS multi-tasking services to ensure the microcontroller can continue executing application code at all times, even when one thread of execution has to wait for a transmit or receive to complete.</p>
<p>Peripherals can be initialized to execute is standard mode or fully asynchronous mode. In standard mode, the API functions used to transmit to or receive from a peripheral do not return until the entire transmit or receive operation has completed. Other FreeRTOS tasks exeucte while the data transfer is in progress. In fully asynchronous mode, the API functions used to transmit to or receive from a peripheral return immediately, which may be while the data transfer is still in progress - the task calling the transmit or receive function is then notified by FreeRTOS when the data transfer has completed.</p>
<p>The FreeRTOS ASF drivers are supported by an application note, executable examples within the ASF distribution, and example use cases in this documentation set.</p>
<p>The following functions are provided for the USART peripheral</p>
<ul>
<li><a class="el" href="group__freertos__usart__peripheral__control__group.xhtml#ga09bccd303f0eafa482a0ffb56d0438b8" title="Initializes the FreeRTOS ASF USART driver for the specified USART port. ">freertos_usart_serial_init()</a></li>
<li><a class="el" href="group__freertos__usart__peripheral__control__group.xhtml#ga2925311f072889cff22626013ef87310" title="Initiate a multi-byte write operation on an USART peripheral. ">freertos_usart_write_packet()</a></li>
<li><a class="el" href="group__freertos__usart__peripheral__control__group.xhtml#ga4f47ec231efeccf8f159c5a14124d0ff" title="Initiate a completely asynchronous multi-byte write operation on a USART peripheral. ">freertos_usart_write_packet_async()</a></li>
<li><a class="el" href="group__freertos__usart__peripheral__control__group.xhtml#ga9f4de374d2019244881290bf4943cb81" title="Initiate a completely multi-byte read operation on a USART peripheral. ">freertos_usart_serial_read_packet()</a></li>
</ul>
<p>See <a class="el" href="freertos_usart_peripheral_control_quick_start.xhtml">Quick start guide for</a></p>
<p>The following functions are provided for the UART peripheral</p>
<ul>
<li>freertos_uart_serial_init()</li>
<li>freertos_uart_write_packet()</li>
<li>freertos_uart_write_packet_async()</li>
<li>freertos_uart_serial_read_packet()</li>
</ul>
<p>See freertos_uart_peripheral_control_quick_start</p>
<p>The following functions are provided for the TWI peripheral</p>
<ul>
<li>freertos_twi_master_init()</li>
<li>freertos_twi_write_packet()</li>
<li>freertos_twi_write_packet_async()</li>
<li>freertos_twi_read_packet()</li>
<li>freertos_twi_read_packet_async()</li>
</ul>
<p>See freertos_twi_peripheral_control_quick_start</p>
<p>The following functions are provided for the TWIHS peripheral</p>
<ul>
<li>freertos_twihs_master_init()</li>
<li>freertos_twihs_write_packet()</li>
<li>freertos_twihs_write_packet_async()</li>
<li>freertos_twihs_read_packet()</li>
<li>freertos_twihs_read_packet_async()</li>
</ul>
<p>See freertos_twihs_peripheral_control_quick_start</p>
<p>The following functions are provided for the SPI peripheral</p>
<ul>
<li>freertos_spi_master_init()</li>
<li>freertos_spi_write_packet()</li>
<li>freertos_spi_write_packet_async()</li>
<li>freertos_spi_read_packet()</li>
<li>freertos_spi_read_packet_async()</li>
</ul>
<p>See freertos_spi_peripheral_control_quick_start </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="gaf8d7e8bbe75921b4ffbe61b27201a2e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf8d7e8bbe75921b4ffbe61b27201a2e0">&sect;&nbsp;</a></span>USE_RX_ACCESS_MUTEX</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USE_RX_ACCESS_MUTEX&#160;&#160;&#160;0x02</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that reads from the peripheral being initialized must be thread aware. </p>
<p>When this bit is set the FreeRTOS peripheral driver will use a mutex (internally within the driver) to ensure only one FreeRTOS task can perform a read from the peripheral at any one time. Examples use cases are provided in the FreeRTOS peripheral control examples that are included in the Atmel ASF distribution, in the application not that accompanies the FreeRTOS peripheral control drivers, and in the quick start references for the FreeRTOS peripheral control initialization functions in this online documentation. </p>

</div>
</div>
<a id="ga7b561ac8cc7885c509a96b323759995f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b561ac8cc7885c509a96b323759995f">&sect;&nbsp;</a></span>USE_TX_ACCESS_MUTEX</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define USE_TX_ACCESS_MUTEX&#160;&#160;&#160;0x01</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that writes to the peripheral being initialized must be thread aware. </p>
<p>When this bit is set the FreeRTOS peripheral driver will use a mutex (internally within the driver) to ensure only one FreeRTOS task can perform a write to the peripheral at any one time. Examples use cases are provided in the FreeRTOS peripheral control examples that are included in the Atmel ASF distribution, in the application not that accompanies the FreeRTOS peripheral control drivers, and in the quick start references for the FreeRTOS peripheral control initialization functions in this online documentation. </p>

</div>
</div>
<a id="gabff6789c5b5497e3960214505a543680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabff6789c5b5497e3960214505a543680">&sect;&nbsp;</a></span>WAIT_RX_COMPLETE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WAIT_RX_COMPLETE&#160;&#160;&#160;0x08</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that a task reading from the peripheral must be held in the FreeRTOS Blocked state until the read has completed. </p>
<p>FreeRTOS peripheral read functions often have two version, one where the function name ends with '_async', and one where the '_async' is omitted. This bit must be clear to use the _async version, and set to use the version where _async omitted. See the documentation for the FreeRTOS peripheral read functions for more information. Examples use cases are provided in the FreeRTOS peripheral control examples that are included in the Atmel ASF distribution, in the application not that accompanies the FreeRTOS peripheral control drivers, and in the quick start references for the FreeRTOS peripheral control initialization functions in this online documentation. </p>

</div>
</div>
<a id="ga1dad2bf070548a64bd6f3d7ef45286e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1dad2bf070548a64bd6f3d7ef45286e2">&sect;&nbsp;</a></span>WAIT_TX_COMPLETE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define WAIT_TX_COMPLETE&#160;&#160;&#160;0x04</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bit definition used in the options_flags member of a freertos_peripheral_options_t structure passed as a parameter to an initialization function to indicate that a task writing to the peripheral must be held in the FreeRTOS Blocked state until the write has completed. </p>
<p>FreeRTOS peripheral write functions often have two version, one where the function name ends with '_async', and one where the '_async' is omitted. This bit must be clear to use the _async version, and set to use the version where _async omitted. See the documentation for the FreeRTOS peripheral write functions for more information. Examples use cases are provided in the FreeRTOS peripheral control examples that are included in the Atmel ASF distribution, in the application not that accompanies the FreeRTOS peripheral control drivers, and in the quick start references for the FreeRTOS peripheral control initialization functions in this online documentation. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="gae311acbb26b7f10405c6e9f29ef9281b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae311acbb26b7f10405c6e9f29ef9281b">&sect;&nbsp;</a></span>freertos_peripheral_options_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structfreertos__peripheral__options.xhtml">freertos_peripheral_options</a>  <a class="el" href="group__freertos__service__group.xhtml#gae311acbb26b7f10405c6e9f29ef9281b">freertos_peripheral_options_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Define the behaviour of FreeRTOS ASF read and write functions for a peripheral. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gafa87234f31b645f304545b3def15582c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafa87234f31b645f304545b3def15582c">&sect;&nbsp;</a></span>peripheral_operation_mode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__freertos__service__group.xhtml#gafa87234f31b645f304545b3def15582c">peripheral_operation_mode</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the operating modes that can be specified in a freertos_peripheral_options_t structure. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582ca44220316be7f6ea4f321e7e42a9c5e22"></a>USART_RS232&#160;</td><td class="fielddoc"><p>Valid only for USART peripheral. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582ca6fee17e5182fd2505ed987e10d749e1f"></a>UART_RS232&#160;</td><td class="fielddoc"><p>Valid only for UART peripheral. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582ca84379dc90398ca075038c8d5ee465f6a"></a>SPI_MASTER&#160;</td><td class="fielddoc"><p>Valid only for the SPI peripheral. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582ca62eccda64f3a741a863194fe69728595"></a>TWI_I2C_MASTER&#160;</td><td class="fielddoc"><p>Valid only for the TWI peripheral. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582caf78dbafec7534e396b641be633847a58"></a>TWIHS_I2C_MASTER&#160;</td><td class="fielddoc"><p>Valid only for the TWIHS peripheral. </p>
</td></tr>
<tr><td class="fieldname"><a id="ggafa87234f31b645f304545b3def15582ca9bf1138c8c1f4519e5b814514b750ca3"></a>NOT_SUPPORTED&#160;</td><td class="fielddoc"><p>No other values can be used. </p>
</td></tr>
</table>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
