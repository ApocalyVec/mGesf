<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Enhanced Embedded Flash Controller (EEFC)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Enhanced Embedded Flash Controller (EEFC)</div>  </div>
</div><!--header-->
<div class="contents">

<p>The Enhanced Embedded Flash Controller ensures the interface of the Flash block with the 32-bit internal bus.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:gae250375e15d0272fd945616a2a9e70f4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gae250375e15d0272fd945616a2a9e70f4">FWP_KEY</a>&#160;&#160;&#160;0x5Au</td></tr>
<tr class="separator:gae250375e15d0272fd945616a2a9e70f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa2400119769b137bceaf60724b9ca1a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gaaa2400119769b137bceaf60724b9ca1a">EEFC_ERROR_FLAGS</a>&#160;&#160;&#160;(<a class="el" href="group___s_a_m_g55___e_f_c.xhtml#ga40fc1ef211a4097e57cf517a828065a3">EEFC_FSR_FLOCKE</a> | <a class="el" href="group___s_a_m_g55___e_f_c.xhtml#gafa4b771801b64fa8a455e2ed1e967795">EEFC_FSR_FCMDE</a>)</td></tr>
<tr class="separator:gaaa2400119769b137bceaf60724b9ca1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f0b35382ab6b7d6816785779f0190b4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga2f0b35382ab6b7d6816785779f0190b4">EEFC_FCR_FKEY_PASSWD</a>&#160;&#160;&#160;EEFC_FCR_FKEY(<a class="el" href="group__sam__drivers__efc__group.xhtml#gae250375e15d0272fd945616a2a9e70f4">FWP_KEY</a>)</td></tr>
<tr class="separator:ga2f0b35382ab6b7d6816785779f0190b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3107655bd6525e135e2d89faa4e45a87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga3107655bd6525e135e2d89faa4e45a87">efc_write_fmr</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_fmr)</td></tr>
<tr class="memdesc:ga3107655bd6525e135e2d89faa4e45a87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set mode register.  <a href="#ga3107655bd6525e135e2d89faa4e45a87">More...</a><br /></td></tr>
<tr class="separator:ga3107655bd6525e135e2d89faa4e45a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1eca9d39607dadbaa19e33b0dd6097c"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gab1eca9d39607dadbaa19e33b0dd6097c">efc_perform_fcr</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_fcr)</td></tr>
<tr class="memdesc:gab1eca9d39607dadbaa19e33b0dd6097c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform command.  <a href="#gab1eca9d39607dadbaa19e33b0dd6097c">More...</a><br /></td></tr>
<tr class="separator:gab1eca9d39607dadbaa19e33b0dd6097c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4388e032f274942c2e1c59ad87dd7e6d"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga4388e032f274942c2e1c59ad87dd7e6d">efc_init</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_access_mode, uint32_t ul_fws)</td></tr>
<tr class="memdesc:ga4388e032f274942c2e1c59ad87dd7e6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the EFC controller.  <a href="#ga4388e032f274942c2e1c59ad87dd7e6d">More...</a><br /></td></tr>
<tr class="separator:ga4388e032f274942c2e1c59ad87dd7e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac1a5521f329d65b0dc260e53be5e4d0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gac1a5521f329d65b0dc260e53be5e4d0b">efc_enable_frdy_interrupt</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:gac1a5521f329d65b0dc260e53be5e4d0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable the flash ready interrupt.  <a href="#gac1a5521f329d65b0dc260e53be5e4d0b">More...</a><br /></td></tr>
<tr class="separator:gac1a5521f329d65b0dc260e53be5e4d0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa93a0ef4163a379c7cb82a034e6efe53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gaa93a0ef4163a379c7cb82a034e6efe53">efc_disable_frdy_interrupt</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:gaa93a0ef4163a379c7cb82a034e6efe53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disable the flash ready interrupt.  <a href="#gaa93a0ef4163a379c7cb82a034e6efe53">More...</a><br /></td></tr>
<tr class="separator:gaa93a0ef4163a379c7cb82a034e6efe53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a18fdc2e202f2ce5337f0e0a4f6eecd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga7a18fdc2e202f2ce5337f0e0a4f6eecd">efc_set_flash_access_mode</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_mode)</td></tr>
<tr class="memdesc:ga7a18fdc2e202f2ce5337f0e0a4f6eecd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set flash access mode.  <a href="#ga7a18fdc2e202f2ce5337f0e0a4f6eecd">More...</a><br /></td></tr>
<tr class="separator:ga7a18fdc2e202f2ce5337f0e0a4f6eecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga586cd8bae75edd13ee8a782fd0d880d0"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga586cd8bae75edd13ee8a782fd0d880d0">efc_get_flash_access_mode</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:ga586cd8bae75edd13ee8a782fd0d880d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get flash access mode.  <a href="#ga586cd8bae75edd13ee8a782fd0d880d0">More...</a><br /></td></tr>
<tr class="separator:ga586cd8bae75edd13ee8a782fd0d880d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad128919fd18ca8f30155820220012deb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#gad128919fd18ca8f30155820220012deb">efc_set_wait_state</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_fws)</td></tr>
<tr class="memdesc:gad128919fd18ca8f30155820220012deb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set flash wait state.  <a href="#gad128919fd18ca8f30155820220012deb">More...</a><br /></td></tr>
<tr class="separator:gad128919fd18ca8f30155820220012deb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga39dabea6b691034d904c06cb08d60d36"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga39dabea6b691034d904c06cb08d60d36">efc_get_wait_state</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:ga39dabea6b691034d904c06cb08d60d36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get flash wait state.  <a href="#ga39dabea6b691034d904c06cb08d60d36">More...</a><br /></td></tr>
<tr class="separator:ga39dabea6b691034d904c06cb08d60d36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48f3f38debde0c03c936f777aef6cc2e"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga48f3f38debde0c03c936f777aef6cc2e">efc_perform_command</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_command, uint32_t ul_argument)</td></tr>
<tr class="memdesc:ga48f3f38debde0c03c936f777aef6cc2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform the given command and wait until its completion (or an error).  <a href="#ga48f3f38debde0c03c936f777aef6cc2e">More...</a><br /></td></tr>
<tr class="separator:ga48f3f38debde0c03c936f777aef6cc2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7aab8a8f06394d62ac43f36a502d98db"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga7aab8a8f06394d62ac43f36a502d98db">efc_get_status</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:ga7aab8a8f06394d62ac43f36a502d98db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current status of the EEFC.  <a href="#ga7aab8a8f06394d62ac43f36a502d98db">More...</a><br /></td></tr>
<tr class="separator:ga7aab8a8f06394d62ac43f36a502d98db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d1b951eb5f4d3f280d25fa6ad01ff4c"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga9d1b951eb5f4d3f280d25fa6ad01ff4c">efc_get_result</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc)</td></tr>
<tr class="memdesc:ga9d1b951eb5f4d3f280d25fa6ad01ff4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the result of the last executed command.  <a href="#ga9d1b951eb5f4d3f280d25fa6ad01ff4c">More...</a><br /></td></tr>
<tr class="separator:ga9d1b951eb5f4d3f280d25fa6ad01ff4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b1c3c24eedff837a898ce28174c1431"><td class="memItemLeft" align="right" valign="top">__no_inline RAMFUNC uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__sam__drivers__efc__group.xhtml#ga7b1c3c24eedff837a898ce28174c1431">efc_perform_read_sequence</a> (<a class="el" href="struct_efc.xhtml">Efc</a> *p_efc, uint32_t ul_cmd_st, uint32_t ul_cmd_sp, uint32_t *p_ul_buf, uint32_t ul_size)</td></tr>
<tr class="memdesc:ga7b1c3c24eedff837a898ce28174c1431"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform read sequence.  <a href="#ga7b1c3c24eedff837a898ce28174c1431">More...</a><br /></td></tr>
<tr class="separator:ga7b1c3c24eedff837a898ce28174c1431"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The Enhanced Embedded Flash Controller ensures the interface of the Flash block with the 32-bit internal bus. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="gaaa2400119769b137bceaf60724b9ca1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaaa2400119769b137bceaf60724b9ca1a">&sect;&nbsp;</a></span>EEFC_ERROR_FLAGS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EEFC_ERROR_FLAGS&#160;&#160;&#160;(<a class="el" href="group___s_a_m_g55___e_f_c.xhtml#ga40fc1ef211a4097e57cf517a828065a3">EEFC_FSR_FLOCKE</a> | <a class="el" href="group___s_a_m_g55___e_f_c.xhtml#gafa4b771801b64fa8a455e2ed1e967795">EEFC_FSR_FCMDE</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga2f0b35382ab6b7d6816785779f0190b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga2f0b35382ab6b7d6816785779f0190b4">&sect;&nbsp;</a></span>EEFC_FCR_FKEY_PASSWD</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EEFC_FCR_FKEY_PASSWD&#160;&#160;&#160;EEFC_FCR_FKEY(<a class="el" href="group__sam__drivers__efc__group.xhtml#gae250375e15d0272fd945616a2a9e70f4">FWP_KEY</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="gae250375e15d0272fd945616a2a9e70f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae250375e15d0272fd945616a2a9e70f4">&sect;&nbsp;</a></span>FWP_KEY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FWP_KEY&#160;&#160;&#160;0x5Au</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaa93a0ef4163a379c7cb82a034e6efe53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa93a0ef4163a379c7cb82a034e6efe53">&sect;&nbsp;</a></span>efc_disable_frdy_interrupt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efc_disable_frdy_interrupt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disable the flash ready interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_gaa93a0ef4163a379c7cb82a034e6efe53_cgraph.svg" width="327" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gac1a5521f329d65b0dc260e53be5e4d0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac1a5521f329d65b0dc260e53be5e4d0b">&sect;&nbsp;</a></span>efc_enable_frdy_interrupt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efc_enable_frdy_interrupt </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enable the flash ready interrupt. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_gac1a5521f329d65b0dc260e53be5e4d0b_cgraph.svg" width="324" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga586cd8bae75edd13ee8a782fd0d880d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga586cd8bae75edd13ee8a782fd0d880d0">&sect;&nbsp;</a></span>efc_get_flash_access_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_get_flash_access_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get flash access mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 for 128-bit or EEFC_FMR_FAM for 64-bit. </dd></dl>

</div>
</div>
<a id="ga9d1b951eb5f4d3f280d25fa6ad01ff4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9d1b951eb5f4d3f280d25fa6ad01ff4c">&sect;&nbsp;</a></span>efc_get_result()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_get_result </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the result of the last executed command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The result of the last executed command. </dd></dl>

</div>
</div>
<a id="ga7aab8a8f06394d62ac43f36a502d98db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7aab8a8f06394d62ac43f36a502d98db">&sect;&nbsp;</a></span>efc_get_status()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_get_status </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current status of the EEFC. </p>
<dl class="section note"><dt>Note</dt><dd>This function clears the value of some status bits (FLOCKE, FCMDE).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The current status. </dd></dl>

</div>
</div>
<a id="ga39dabea6b691034d904c06cb08d60d36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga39dabea6b691034d904c06cb08d60d36">&sect;&nbsp;</a></span>efc_get_wait_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_get_wait_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get flash wait state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of wait states in cycle (no shift). </dd></dl>

</div>
</div>
<a id="ga4388e032f274942c2e1c59ad87dd7e6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4388e032f274942c2e1c59ad87dd7e6d">&sect;&nbsp;</a></span>efc_init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_access_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_fws</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the EFC controller. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ul_access_mode</td><td>0 for 128-bit, EEFC_FMR_FAM for 64-bit. </td></tr>
    <tr><td class="paramname">ul_fws</td><td>The number of wait states in cycle (no shift).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if successful. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_ga4388e032f274942c2e1c59ad87dd7e6d_cgraph.svg" width="220" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga48f3f38debde0c03c936f777aef6cc2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga48f3f38debde0c03c936f777aef6cc2e">&sect;&nbsp;</a></span>efc_perform_command()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t efc_perform_command </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_command</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_argument</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform the given command and wait until its completion (or an error). </p>
<dl class="section note"><dt>Note</dt><dd>Unique ID commands are not supported, use efc_perform_read_sequence.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_command</td><td>Command to perform. </td></tr>
    <tr><td class="paramname">ul_argument</td><td>Optional command argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This function will automatically choose to use IAP function.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>0 if successful, otherwise returns an error code. </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_ga48f3f38debde0c03c936f777aef6cc2e_cgraph.svg" width="323" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gab1eca9d39607dadbaa19e33b0dd6097c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab1eca9d39607dadbaa19e33b0dd6097c">&sect;&nbsp;</a></span>efc_perform_fcr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__no_inline RAMFUNC uint32_t efc_perform_fcr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_fcr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_fcr</td><td>Flash command.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The current status. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_gab1eca9d39607dadbaa19e33b0dd6097c_icgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga7b1c3c24eedff837a898ce28174c1431"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7b1c3c24eedff837a898ce28174c1431">&sect;&nbsp;</a></span>efc_perform_read_sequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__no_inline RAMFUNC uint32_t efc_perform_read_sequence </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_cmd_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_cmd_sp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>p_ul_buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform read sequence. </p>
<p>Supported sequences are read Unique ID and read User Signature</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_cmd_st</td><td>Start command to perform. </td></tr>
    <tr><td class="paramname">ul_cmd_sp</td><td>Stop command to perform. </td></tr>
    <tr><td class="paramname">p_ul_buf</td><td>Pointer to an data buffer. </td></tr>
    <tr><td class="paramname">ul_size</td><td>Buffer size.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if successful, otherwise returns an error code. </dd></dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_ga7b1c3c24eedff837a898ce28174c1431_icgraph.svg" width="327" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga7a18fdc2e202f2ce5337f0e0a4f6eecd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7a18fdc2e202f2ce5337f0e0a4f6eecd">&sect;&nbsp;</a></span>efc_set_flash_access_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efc_set_flash_access_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set flash access mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_mode</td><td>0 for 128-bit, EEFC_FMR_FAM for 64-bit. </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_ga7a18fdc2e202f2ce5337f0e0a4f6eecd_cgraph.svg" width="344" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="gad128919fd18ca8f30155820220012deb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad128919fd18ca8f30155820220012deb">&sect;&nbsp;</a></span>efc_set_wait_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void efc_set_wait_state </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_fws</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set flash wait state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_fws</td><td>The number of wait states in cycle (no shift). </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_gad128919fd18ca8f30155820220012deb_cgraph.svg" width="288" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ga3107655bd6525e135e2d89faa4e45a87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3107655bd6525e135e2d89faa4e45a87">&sect;&nbsp;</a></span>efc_write_fmr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__no_inline RAMFUNC void efc_write_fmr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_efc.xhtml">Efc</a> *&#160;</td>
          <td class="paramname"><em>p_efc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>ul_fmr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set mode register. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p_efc</td><td>Pointer to an EFC instance. </td></tr>
    <tr><td class="paramname">ul_fmr</td><td>Value of mode register </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__sam__drivers__efc__group_ga3107655bd6525e135e2d89faa4e45a87_icgraph.svg" width="344" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
