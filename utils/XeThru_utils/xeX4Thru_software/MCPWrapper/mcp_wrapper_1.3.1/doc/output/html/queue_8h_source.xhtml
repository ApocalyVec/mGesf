<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: examples/atmel_samg55/src/ASF/thirdparty/freertos/freertos-7.0.0/source/include/queue.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d28a4824dc47e487b107a5db32ef43c4.xhtml">examples</a></li><li class="navelem"><a class="el" href="dir_0e96b936377161858012b6f31c3bd790.xhtml">atmel_samg55</a></li><li class="navelem"><a class="el" href="dir_0ae219bfaa679f3dbaaacda5fb614d9c.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_67951177d7f5e66661a526635115739c.xhtml">ASF</a></li><li class="navelem"><a class="el" href="dir_2ebaa83b9a80a062a45c97b62e911ab2.xhtml">thirdparty</a></li><li class="navelem"><a class="el" href="dir_d4fc68e8089e8b200ed8404bd11d9cbc.xhtml">freertos</a></li><li class="navelem"><a class="el" href="dir_dc107d22e5a3efad33abbabba5eee61e.xhtml">freertos-7.0.0</a></li><li class="navelem"><a class="el" href="dir_7676a97cf995c7f6012a96736129d95f.xhtml">source</a></li><li class="navelem"><a class="el" href="dir_63f54b98461c1e9b6e74b1aecf4fc76e.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">queue.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="queue_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">    FreeRTOS V7.0.0 - Copyright (C) 2011 Real Time Engineers Ltd.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    FreeRTOS supports many tools and architectures. V7.0.0 is sponsored by:</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    Atollic AB - Atollic provides professional embedded systems development</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    tools for C/C++ development, code analysis and test automation.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">    See http://www.atollic.com</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    ***************************************************************************</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">     *                                                                       *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">     *    FreeRTOS tutorial books are available in pdf and paperback.        *</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">     *    Complete, revised, and edited pdf reference manuals are also       *</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     *    available.                                                         *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     *                                                                       *</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">     *    Purchasing FreeRTOS documentation will not only help you, by       *</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">     *    ensuring you get running as quickly as possible and with an        *</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">     *    in-depth knowledge of how to use FreeRTOS, it will also help       *</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">     *    the FreeRTOS project to continue with its mission of providing     *</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">     *    professional grade, cross platform, de facto standard solutions    *</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">     *    for microcontrollers - completely free of charge!                  *</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">     *                                                                       *</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">     *    &gt;&gt;&gt; See http://www.FreeRTOS.org/Documentation for details. &lt;&lt;&lt;     *</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">     *                                                                       *</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">     *    Thank you for using FreeRTOS, and thank you for your support!      *</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">     *                                                                       *</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    ***************************************************************************</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">    This file is part of the FreeRTOS distribution.</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">    FreeRTOS is free software; you can redistribute it and/or modify it under</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">    the terms of the GNU General Public License (version 2) as published by the</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">    Free Software Foundation AND MODIFIED BY the FreeRTOS exception.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">    &gt;&gt;&gt;NOTE&lt;&lt;&lt; The modification to the GPL is included to allow you to</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">    distribute a combined work that includes FreeRTOS without being obliged to</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    provide the source code for proprietary components outside of the FreeRTOS</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">    kernel.  FreeRTOS is distributed in the hope that it will be useful, but</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    more details. You should have received a copy of the GNU General Public</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    License and the FreeRTOS license exception along with FreeRTOS; if not it</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">    can be viewed here: http://www.freertos.org/a00114.html and also obtained</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    by writing to Richard Barry, contact details for whom are available on the</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">    FreeRTOS WEB site.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">    1 tab == 4 spaces!</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">    http://www.FreeRTOS.org - Documentation, latest information, license and</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    contact details.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    http://www.SafeRTOS.com - A version that is certified for use in safety</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    critical systems.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    http://www.OpenRTOS.com - Commercial support, development, porting,</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">    licensing and training services.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">*/</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#ifndef QUEUE_H</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#define QUEUE_H</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#ifndef INC_FREERTOS_H</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">    #error &quot;#include FreeRTOS.h&quot; must appear in source files before &quot;#include queue.h&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mpu__wrappers_8h.xhtml">mpu_wrappers.h</a>&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a229037f755b756156e34a440ce134b8b">   80</a></span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">void</span> * <a class="code" href="queue_8h.xhtml#a229037f755b756156e34a440ce134b8b">xQueueHandle</a>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">/* For internal use only. */</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a4d78fa863fbeb90425a2dda08fae8b12">   84</a></span>&#160;<span class="preprocessor">#define queueSEND_TO_BACK   ( 0 )</span></div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a6bae395a00f1a4455f0e7fe3c9e76c14">   85</a></span>&#160;<span class="preprocessor">#define queueSEND_TO_FRONT  ( 1 )</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;xQueueHandle <a class="code" href="queue_8h.xhtml#ab3b70d2ace0dea373bc8057dc2718046">xQueueCreate</a>( <span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> uxQueueLength, <span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> uxItemSize );</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#aa612fcc2b1ceee0200f34b942e300b41">  226</a></span>&#160;<span class="preprocessor">#define xQueueSendToFront( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_FRONT )</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a81d24a2c1199d58efb76fbee15853112">  308</a></span>&#160;<span class="preprocessor">#define xQueueSendToBack( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#af7eb49d3249351176992950d9185abe9">  392</a></span>&#160;<span class="preprocessor">#define xQueueSend( xQueue, pvItemToQueue, xTicksToWait ) xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a20cce4e7bd234116d67ebcdbe4ef2f3a">xQueueGenericSend</a>( xQueueHandle pxQueue, <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> pvItemToQueue, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait, <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xCopyPosition );</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a2df70733bb875477cd9614c5b3446257">  574</a></span>&#160;<span class="preprocessor">#define xQueuePeek( xQueue, pvBuffer, xTicksToWait ) xQueueGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdTRUE )</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#af1549eac0e7f05694a59a0b967c80be3">  667</a></span>&#160;<span class="preprocessor">#define xQueueReceive( xQueue, pvBuffer, xTicksToWait ) xQueueGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdFALSE )</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#ab6c30bf884a19b31acb4158d04c9c3f0">xQueueGenericReceive</a>( xQueueHandle xQueue, <span class="keywordtype">void</span> * <span class="keyword">const</span> pvBuffer, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait, <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xJustPeek );</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#aceeba9457d0f30b2a1c438e14352d7c2">uxQueueMessagesWaiting</a>( <span class="keyword">const</span> xQueueHandle xQueue );</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;<span class="keywordtype">void</span> <a class="code" href="queue_8h.xhtml#a6b327259567005ab6f12a02feb8fdc7b">vQueueDelete</a>( xQueueHandle pxQueue );</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00865"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a849dd669e72bfb12314f4445157c9a04">  865</a></span>&#160;<span class="preprocessor">#define xQueueSendToFrontFromISR( pxQueue, pvItemToQueue, pxHigherPriorityTaskWoken ) xQueueGenericSendFromISR( ( pxQueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ), queueSEND_TO_FRONT )</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00936"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a5a4b46fc55ab9f63b89878b37352f521">  936</a></span>&#160;<span class="preprocessor">#define xQueueSendToBackFromISR( pxQueue, pvItemToQueue, pxHigherPriorityTaskWoken ) xQueueGenericSendFromISR( ( pxQueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ), queueSEND_TO_BACK )</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a2e8236e9af01eedcbc8b67a9cb56b1db"> 1010</a></span>&#160;<span class="preprocessor">#define xQueueSendFromISR( pxQueue, pvItemToQueue, pxHigherPriorityTaskWoken ) xQueueGenericSendFromISR( ( pxQueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ), queueSEND_TO_BACK )</span></div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a5f3e29eed8f166215648bc6465ebdb04">xQueueGenericSendFromISR</a>( xQueueHandle pxQueue, <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> pvItemToQueue, <span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> *pxHigherPriorityTaskWoken, <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xCopyPosition );</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a38afa09a1f9a629cbf0f7d6929984fe3">xQueueReceiveFromISR</a>( xQueueHandle pxQueue, <span class="keywordtype">void</span> * <span class="keyword">const</span> pvBuffer, <span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> *pxTaskWoken );</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;<span class="comment"> * Utilities to query queue that are safe to use from an ISR.  These utilities</span></div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;<span class="comment"> * should be used only from witin an ISR, or within a critical section.</span></div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#adfc1100da88cb404d40359ea591eeb76">xQueueIsQueueEmptyFromISR</a>( <span class="keyword">const</span> xQueueHandle pxQueue );</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#ab257893a91f0fba462405b19614cb405">xQueueIsQueueFullFromISR</a>( <span class="keyword">const</span> xQueueHandle pxQueue );</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a576ba04bf4abcd971cf784693f485b33">uxQueueMessagesWaitingFromISR</a>( <span class="keyword">const</span> xQueueHandle pxQueue );</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;<span class="comment"> * xQueueAltGenericSend() is an alternative version of xQueueGenericSend().</span></div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;<span class="comment"> * Likewise xQueueAltGenericReceive() is an alternative version of</span></div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;<span class="comment"> * xQueueGenericReceive().</span></div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;<span class="comment"> * The source code that implements the alternative (Alt) API is much</span></div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;<span class="comment"> * simpler  because it executes everything from within a critical section.</span></div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;<span class="comment"> * This is  the approach taken by many other RTOSes, but FreeRTOS.org has the</span></div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;<span class="comment"> * preferred fully featured API too.  The fully featured API has more</span></div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;<span class="comment"> * complex  code that takes longer to execute, but makes much less use of</span></div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;<span class="comment"> * critical sections.  Therefore the alternative API sacrifices interrupt</span></div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="comment"> * responsiveness to gain execution speed, whereas the fully featured API</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="comment"> * sacrifices execution speed to ensure better interrupt responsiveness.</span></div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#aa9bff76f92251533d45348165c082de7">xQueueAltGenericSend</a>( xQueueHandle pxQueue, <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span> pvItemToQueue, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait, <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xCopyPosition );</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#adf2034938c08ce4ac68edf290e2d6971">xQueueAltGenericReceive</a>( xQueueHandle pxQueue, <span class="keywordtype">void</span> * <span class="keyword">const</span> pvBuffer, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait, <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xJustPeeking );</div><div class="line"><a name="l01204"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#ae45934bb36e02340278a65cf238b9083"> 1204</a></span>&#160;<span class="preprocessor">#define xQueueAltSendToFront( xQueue, pvItemToQueue, xTicksToWait ) xQueueAltGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_FRONT )</span></div><div class="line"><a name="l01205"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a2e290abdf4d43a7142be16bda4279f68"> 1205</a></span>&#160;<span class="preprocessor">#define xQueueAltSendToBack( xQueue, pvItemToQueue, xTicksToWait ) xQueueAltGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTicksToWait ), queueSEND_TO_BACK )</span></div><div class="line"><a name="l01206"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#a4f50206223e1f88f458a3aea4131608d"> 1206</a></span>&#160;<span class="preprocessor">#define xQueueAltReceive( xQueue, pvBuffer, xTicksToWait ) xQueueAltGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdFALSE )</span></div><div class="line"><a name="l01207"></a><span class="lineno"><a class="line" href="queue_8h.xhtml#af6c605882aa8f9133dc2e98a02f55e62"> 1207</a></span>&#160;<span class="preprocessor">#define xQueueAltPeek( xQueue, pvBuffer, xTicksToWait ) xQueueAltGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdTRUE )</span></div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;<span class="comment"> * The functions defined above are for passing data to and from tasks.  The</span></div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;<span class="comment"> * functions below are the equivalents for passing data to and from</span></div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;<span class="comment"> * co-routines.</span></div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="comment"> * These functions are called from the co-routine macro implementation and</span></div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="comment"> * should not be called directly from application code.  Instead use the macro</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;<span class="comment"> * wrappers defined within croutine.h.</span></div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a6336db3a8d0a267780f59163c75fdf74">xQueueCRSendFromISR</a>( xQueueHandle pxQueue, <span class="keyword">const</span> <span class="keywordtype">void</span> *pvItemToQueue, <span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> xCoRoutinePreviouslyWoken );</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a05f3267ee4737d7929dd485423205c74">xQueueCRReceiveFromISR</a>( xQueueHandle pxQueue, <span class="keywordtype">void</span> *pvBuffer, <span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> *pxTaskWoken );</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a1d939f7ea1d10b19a57d41143c62adc0">xQueueCRSend</a>( xQueueHandle pxQueue, <span class="keyword">const</span> <span class="keywordtype">void</span> *pvItemToQueue, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait );</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;<span class="keywordtype">signed</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#ac683e1a6f46a9b01fe0f3c464240562b">xQueueCRReceive</a>( xQueueHandle pxQueue, <span class="keywordtype">void</span> *pvBuffer, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait );</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;<span class="comment"> * For internal use only.  Use xSemaphoreCreateMutex() or</span></div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;<span class="comment"> * xSemaphoreCreateCounting() instead of calling these functions directly.</span></div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;xQueueHandle <a class="code" href="queue_8h.xhtml#a637daee588a12cec8db050f7ef3f7fa3">xQueueCreateMutex</a>( <span class="keywordtype">void</span> );</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;xQueueHandle <a class="code" href="queue_8h.xhtml#a778792256d17b532c0e8d180258b19a5">xQueueCreateCountingSemaphore</a>( <span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> uxCountValue, <span class="keywordtype">unsigned</span> <a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> uxInitialCount );</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;<span class="comment"> * For internal use only.  Use xSemaphoreTakeMutexRecursive() or</span></div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;<span class="comment"> * xSemaphoreGiveMutexRecursive() instead of calling these functions directly.</span></div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;<a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#a53bfd3d3de22ee9e9e48deab9df6ab4c">xQueueTakeMutexRecursive</a>( xQueueHandle pxMutex, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xBlockTime );</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;<a class="code" href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a> <a class="code" href="queue_8h.xhtml#ab1d683ce771aee4e65d2bc205d81a645">xQueueGiveMutexRecursive</a>( xQueueHandle pxMutex );</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;<span class="comment"> * The registry is provided as a means for kernel aware debuggers to</span></div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;<span class="comment"> * locate queues, semaphores and mutexes.  Call vQueueAddToRegistry() add</span></div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;<span class="comment"> * a queue, semaphore or mutex handle to the registry if you want the handle</span></div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;<span class="comment"> * to be available to a kernel aware debugger.  If you are not using a kernel</span></div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;<span class="comment"> * aware debugger then this function can be ignored.</span></div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;<span class="comment"> * configQUEUE_REGISTRY_SIZE defines the maximum number of handles the</span></div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;<span class="comment"> * registry can hold.  configQUEUE_REGISTRY_SIZE must be greater than 0</span></div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;<span class="comment"> * within FreeRTOSConfig.h for the registry to be available.  Its value</span></div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;<span class="comment"> * does not effect the number of queues, semaphores and mutexes that can be</span></div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;<span class="comment"> * created - just the number that the registry can hold.</span></div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;<span class="comment"> * @param xQueue The handle of the queue being added to the registry.  This</span></div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;<span class="comment"> * is the handle returned by a call to xQueueCreate().  Semaphore and mutex</span></div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;<span class="comment"> * handles can also be passed in here.</span></div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;<span class="comment"> * @param pcName The name to be associated with the handle.  This is the</span></div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;<span class="comment"> * name that the kernel aware debugger will display.</span></div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;<span class="preprocessor">#if configQUEUE_REGISTRY_SIZE &gt; 0U</span></div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="_free_r_t_o_s_8h.xhtml#a3e103eedd5088f5f30bc55e55820a9e3">vQueueAddToRegistry</a>( xQueueHandle xQueue, <span class="keywordtype">signed</span> <span class="keywordtype">char</span> *pcName );</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;<span class="comment">/* Not a public API function, hence the &#39;Restricted&#39; in the name. */</span></div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;<span class="keywordtype">void</span> <a class="code" href="queue_8h.xhtml#a3d9e3bc0d64cffa182ddaa6f23a421b1">vQueueWaitForMessageRestricted</a>( xQueueHandle pxQueue, <a class="code" href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a> xTicksToWait );</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;<span class="preprocessor">#ifdef __cplusplus</span></div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;}</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* QUEUE_H */</span><span class="preprocessor"></span></div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;</div><div class="ttc" id="queue_8h_xhtml_a778792256d17b532c0e8d180258b19a5"><div class="ttname"><a href="queue_8h.xhtml#a778792256d17b532c0e8d180258b19a5">xQueueCreateCountingSemaphore</a></div><div class="ttdeci">xQueueHandle xQueueCreateCountingSemaphore(unsigned portBASE_TYPE uxCountValue, unsigned portBASE_TYPE uxInitialCount)</div></div>
<div class="ttc" id="queue_8h_xhtml_a637daee588a12cec8db050f7ef3f7fa3"><div class="ttname"><a href="queue_8h.xhtml#a637daee588a12cec8db050f7ef3f7fa3">xQueueCreateMutex</a></div><div class="ttdeci">xQueueHandle xQueueCreateMutex(void)</div><div class="ttdef"><b>Definition:</b> queue.c:144</div></div>
<div class="ttc" id="queue_8h_xhtml_ab6c30bf884a19b31acb4158d04c9c3f0"><div class="ttname"><a href="queue_8h.xhtml#ab6c30bf884a19b31acb4158d04c9c3f0">xQueueGenericReceive</a></div><div class="ttdeci">signed portBASE_TYPE xQueueGenericReceive(xQueueHandle xQueue, void *const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeek)</div><div class="ttdef"><b>Definition:</b> queue.c:849</div></div>
<div class="ttc" id="portmacro_8h_xhtml_a1ebe82d24d764ae4e352f7c3a9f92c01"><div class="ttname"><a href="portmacro_8h.xhtml#a1ebe82d24d764ae4e352f7c3a9f92c01">portBASE_TYPE</a></div><div class="ttdeci">#define portBASE_TYPE</div><div class="ttdef"><b>Definition:</b> portmacro.h:134</div></div>
<div class="ttc" id="queue_8h_xhtml_ab3b70d2ace0dea373bc8057dc2718046"><div class="ttname"><a href="queue_8h.xhtml#ab3b70d2ace0dea373bc8057dc2718046">xQueueCreate</a></div><div class="ttdeci">xQueueHandle xQueueCreate(unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize)</div></div>
<div class="ttc" id="queue_8h_xhtml_a38afa09a1f9a629cbf0f7d6929984fe3"><div class="ttname"><a href="queue_8h.xhtml#a38afa09a1f9a629cbf0f7d6929984fe3">xQueueReceiveFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueReceiveFromISR(xQueueHandle pxQueue, void *const pvBuffer, signed portBASE_TYPE *pxTaskWoken)</div><div class="ttdef"><b>Definition:</b> queue.c:999</div></div>
<div class="ttc" id="queue_8h_xhtml_ac683e1a6f46a9b01fe0f3c464240562b"><div class="ttname"><a href="queue_8h.xhtml#ac683e1a6f46a9b01fe0f3c464240562b">xQueueCRReceive</a></div><div class="ttdeci">signed portBASE_TYPE xQueueCRReceive(xQueueHandle pxQueue, void *pvBuffer, portTickType xTicksToWait)</div></div>
<div class="ttc" id="queue_8h_xhtml_a3d9e3bc0d64cffa182ddaa6f23a421b1"><div class="ttname"><a href="queue_8h.xhtml#a3d9e3bc0d64cffa182ddaa6f23a421b1">vQueueWaitForMessageRestricted</a></div><div class="ttdeci">void vQueueWaitForMessageRestricted(xQueueHandle pxQueue, portTickType xTicksToWait)</div></div>
<div class="ttc" id="queue_8h_xhtml_a6b327259567005ab6f12a02feb8fdc7b"><div class="ttname"><a href="queue_8h.xhtml#a6b327259567005ab6f12a02feb8fdc7b">vQueueDelete</a></div><div class="ttdeci">void vQueueDelete(xQueueHandle pxQueue)</div><div class="ttdef"><b>Definition:</b> queue.c:1080</div></div>
<div class="ttc" id="queue_8h_xhtml_adf2034938c08ce4ac68edf290e2d6971"><div class="ttname"><a href="queue_8h.xhtml#adf2034938c08ce4ac68edf290e2d6971">xQueueAltGenericReceive</a></div><div class="ttdeci">signed portBASE_TYPE xQueueAltGenericReceive(xQueueHandle pxQueue, void *const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking)</div></div>
<div class="ttc" id="queue_8h_xhtml_a576ba04bf4abcd971cf784693f485b33"><div class="ttname"><a href="queue_8h.xhtml#a576ba04bf4abcd971cf784693f485b33">uxQueueMessagesWaitingFromISR</a></div><div class="ttdeci">unsigned portBASE_TYPE uxQueueMessagesWaitingFromISR(const xQueueHandle pxQueue)</div><div class="ttdef"><b>Definition:</b> queue.c:1068</div></div>
<div class="ttc" id="_free_r_t_o_s_8h_xhtml_a3e103eedd5088f5f30bc55e55820a9e3"><div class="ttname"><a href="_free_r_t_o_s_8h.xhtml#a3e103eedd5088f5f30bc55e55820a9e3">vQueueAddToRegistry</a></div><div class="ttdeci">#define vQueueAddToRegistry(xQueue, pcName)</div><div class="ttdef"><b>Definition:</b> FreeRTOS.h:233</div></div>
<div class="ttc" id="portmacro_8h_xhtml_a4d746b2ff8fafc490b764c66411ec457"><div class="ttname"><a href="portmacro_8h.xhtml#a4d746b2ff8fafc490b764c66411ec457">portTickType</a></div><div class="ttdeci">unsigned portLONG portTickType</div><div class="ttdef"><b>Definition:</b> portmacro.h:140</div></div>
<div class="ttc" id="queue_8h_xhtml_a20cce4e7bd234116d67ebcdbe4ef2f3a"><div class="ttname"><a href="queue_8h.xhtml#a20cce4e7bd234116d67ebcdbe4ef2f3a">xQueueGenericSend</a></div><div class="ttdeci">signed portBASE_TYPE xQueueGenericSend(xQueueHandle pxQueue, const void *const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition)</div><div class="ttdef"><b>Definition:</b> queue.c:467</div></div>
<div class="ttc" id="queue_8h_xhtml_a53bfd3d3de22ee9e9e48deab9df6ab4c"><div class="ttname"><a href="queue_8h.xhtml#a53bfd3d3de22ee9e9e48deab9df6ab4c">xQueueTakeMutexRecursive</a></div><div class="ttdeci">portBASE_TYPE xQueueTakeMutexRecursive(xQueueHandle pxMutex, portTickType xBlockTime)</div></div>
<div class="ttc" id="queue_8h_xhtml_a1d939f7ea1d10b19a57d41143c62adc0"><div class="ttname"><a href="queue_8h.xhtml#a1d939f7ea1d10b19a57d41143c62adc0">xQueueCRSend</a></div><div class="ttdeci">signed portBASE_TYPE xQueueCRSend(xQueueHandle pxQueue, const void *pvItemToQueue, portTickType xTicksToWait)</div></div>
<div class="ttc" id="queue_8h_xhtml_a05f3267ee4737d7929dd485423205c74"><div class="ttname"><a href="queue_8h.xhtml#a05f3267ee4737d7929dd485423205c74">xQueueCRReceiveFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueCRReceiveFromISR(xQueueHandle pxQueue, void *pvBuffer, signed portBASE_TYPE *pxTaskWoken)</div></div>
<div class="ttc" id="mpu__wrappers_8h_xhtml"><div class="ttname"><a href="mpu__wrappers_8h.xhtml">mpu_wrappers.h</a></div></div>
<div class="ttc" id="queue_8h_xhtml_a6336db3a8d0a267780f59163c75fdf74"><div class="ttname"><a href="queue_8h.xhtml#a6336db3a8d0a267780f59163c75fdf74">xQueueCRSendFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueCRSendFromISR(xQueueHandle pxQueue, const void *pvItemToQueue, signed portBASE_TYPE xCoRoutinePreviouslyWoken)</div></div>
<div class="ttc" id="queue_8h_xhtml_adfc1100da88cb404d40359ea591eeb76"><div class="ttname"><a href="queue_8h.xhtml#adfc1100da88cb404d40359ea591eeb76">xQueueIsQueueEmptyFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueIsQueueEmptyFromISR(const xQueueHandle pxQueue)</div><div class="ttdef"><b>Definition:</b> queue.c:1219</div></div>
<div class="ttc" id="queue_8h_xhtml_aceeba9457d0f30b2a1c438e14352d7c2"><div class="ttname"><a href="queue_8h.xhtml#aceeba9457d0f30b2a1c438e14352d7c2">uxQueueMessagesWaiting</a></div><div class="ttdeci">unsigned portBASE_TYPE uxQueueMessagesWaiting(const xQueueHandle xQueue)</div><div class="ttdef"><b>Definition:</b> queue.c:1054</div></div>
<div class="ttc" id="queue_8h_xhtml_a229037f755b756156e34a440ce134b8b"><div class="ttname"><a href="queue_8h.xhtml#a229037f755b756156e34a440ce134b8b">xQueueHandle</a></div><div class="ttdeci">void * xQueueHandle</div><div class="ttdoc">Type by which queues are referenced. </div><div class="ttdef"><b>Definition:</b> queue.h:80</div></div>
<div class="ttc" id="queue_8h_xhtml_aa9bff76f92251533d45348165c082de7"><div class="ttname"><a href="queue_8h.xhtml#aa9bff76f92251533d45348165c082de7">xQueueAltGenericSend</a></div><div class="ttdeci">signed portBASE_TYPE xQueueAltGenericSend(xQueueHandle pxQueue, const void *const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition)</div></div>
<div class="ttc" id="queue_8h_xhtml_ab257893a91f0fba462405b19614cb405"><div class="ttname"><a href="queue_8h.xhtml#ab257893a91f0fba462405b19614cb405">xQueueIsQueueFullFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueIsQueueFullFromISR(const xQueueHandle pxQueue)</div><div class="ttdef"><b>Definition:</b> queue.c:1242</div></div>
<div class="ttc" id="queue_8h_xhtml_ab1d683ce771aee4e65d2bc205d81a645"><div class="ttname"><a href="queue_8h.xhtml#ab1d683ce771aee4e65d2bc205d81a645">xQueueGiveMutexRecursive</a></div><div class="ttdeci">portBASE_TYPE xQueueGiveMutexRecursive(xQueueHandle pxMutex)</div></div>
<div class="ttc" id="queue_8h_xhtml_a5f3e29eed8f166215648bc6465ebdb04"><div class="ttname"><a href="queue_8h.xhtml#a5f3e29eed8f166215648bc6465ebdb04">xQueueGenericSendFromISR</a></div><div class="ttdeci">signed portBASE_TYPE xQueueGenericSendFromISR(xQueueHandle pxQueue, const void *const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition)</div><div class="ttdef"><b>Definition:</b> queue.c:792</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
