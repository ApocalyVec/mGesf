<!-- HTML header for doxygen 1.8.12-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Module Communication Protocol Wrapper - MCPW: Mem2mem Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
  <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
    <!-- Platform title -->
    <div class="page-title-bar container-fluid">
      <div id="projectalign" class="row">
        <div id="projectname" class="col-sm-12">Module Communication Protocol Wrapper - MCPW
        </div>
        <div id="projectbrief" class="col-sm-12">Host side implementation of MCP</div>
      </div>
    </div>
    <div class="topbar">
      <div class="container">
        <div id="titlearea">
          <div class="xethru-logo">
            <img src="xethru-logo_220x55HD.png" alt="Novelda XeThru web site" id="logo-image" />
          </div>
        </div>
        <!-- end header part -->
        <!-- Generated by Doxygen 1.8.12 -->
        <!--BEGIN MAIN-NAV AND SEARCHENGINE-->
        <div id="main-nav"></div>
        <!--END MAIN-NAV AND SEARCHENGINE-->
      </div>
    </div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_mem2mem-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mem2mem Struct Reference<div class="ingroups"><a class="el" href="group___s_a_m_g55___m_e_m2_m_e_m.xhtml">Memory to Memory</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> hardware registers.  
 <a href="struct_mem2mem.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="component_2mem2mem_8h_source.xhtml">mem2mem.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a966a7af0089500081c6ebb438b49b903"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a966a7af0089500081c6ebb438b49b903">MEM2MEM_THR</a></td></tr>
<tr class="memdesc:a966a7af0089500081c6ebb438b49b903"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x00) Memory to Memory Transfer Holding Register  <a href="#a966a7af0089500081c6ebb438b49b903">More...</a><br /></td></tr>
<tr class="separator:a966a7af0089500081c6ebb438b49b903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ed32c26d04096d15f4a60423c8134df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a1ed32c26d04096d15f4a60423c8134df">MEM2MEM_MR</a></td></tr>
<tr class="memdesc:a1ed32c26d04096d15f4a60423c8134df"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x04) Memory to Memory Mode Register  <a href="#a1ed32c26d04096d15f4a60423c8134df">More...</a><br /></td></tr>
<tr class="separator:a1ed32c26d04096d15f4a60423c8134df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84025cc2d1fc516d9c5670a79ff04d44"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a84025cc2d1fc516d9c5670a79ff04d44">MEM2MEM_IER</a></td></tr>
<tr class="memdesc:a84025cc2d1fc516d9c5670a79ff04d44"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x08) Memory to Memory Interrupt Enable Register  <a href="#a84025cc2d1fc516d9c5670a79ff04d44">More...</a><br /></td></tr>
<tr class="separator:a84025cc2d1fc516d9c5670a79ff04d44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f478317d8ede8dd689281a71dc2194b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a4f478317d8ede8dd689281a71dc2194b">MEM2MEM_IDR</a></td></tr>
<tr class="memdesc:a4f478317d8ede8dd689281a71dc2194b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x0C) Memory to Memory Interrupt Disable Register  <a href="#a4f478317d8ede8dd689281a71dc2194b">More...</a><br /></td></tr>
<tr class="separator:a4f478317d8ede8dd689281a71dc2194b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f835758ca19c2968ba31f11d65cd37"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a42f835758ca19c2968ba31f11d65cd37">MEM2MEM_IMR</a></td></tr>
<tr class="memdesc:a42f835758ca19c2968ba31f11d65cd37"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x10) Memory to Memory Interrupt Mask Register  <a href="#a42f835758ca19c2968ba31f11d65cd37">More...</a><br /></td></tr>
<tr class="separator:a42f835758ca19c2968ba31f11d65cd37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dc45404e318c8963d06b986644b4d30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a7dc45404e318c8963d06b986644b4d30">MEM2MEM_ISR</a></td></tr>
<tr class="memdesc:a7dc45404e318c8963d06b986644b4d30"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x14) Memory to Memory Interrupt Status Register  <a href="#a7dc45404e318c8963d06b986644b4d30">More...</a><br /></td></tr>
<tr class="separator:a7dc45404e318c8963d06b986644b4d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53572952776aea6127af32ec1e620d56"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a53572952776aea6127af32ec1e620d56">Reserved1</a> [58]</td></tr>
<tr class="separator:a53572952776aea6127af32ec1e620d56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6857b872176d5534c4109180d42450ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a6857b872176d5534c4109180d42450ed">MEM2MEM_RPR</a></td></tr>
<tr class="memdesc:a6857b872176d5534c4109180d42450ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x100) Receive Pointer Register  <a href="#a6857b872176d5534c4109180d42450ed">More...</a><br /></td></tr>
<tr class="separator:a6857b872176d5534c4109180d42450ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52e57e44d2e64667ada11214f699932d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a52e57e44d2e64667ada11214f699932d">MEM2MEM_RCR</a></td></tr>
<tr class="memdesc:a52e57e44d2e64667ada11214f699932d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x104) Receive Counter Register  <a href="#a52e57e44d2e64667ada11214f699932d">More...</a><br /></td></tr>
<tr class="separator:a52e57e44d2e64667ada11214f699932d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9fae6a670c593e2f9bac9485ff9dc5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#aa9fae6a670c593e2f9bac9485ff9dc5b">MEM2MEM_TPR</a></td></tr>
<tr class="memdesc:aa9fae6a670c593e2f9bac9485ff9dc5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x108) Transmit Pointer Register  <a href="#aa9fae6a670c593e2f9bac9485ff9dc5b">More...</a><br /></td></tr>
<tr class="separator:aa9fae6a670c593e2f9bac9485ff9dc5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc4581bc1cf28ee5ad4a1b0eac633006"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#abc4581bc1cf28ee5ad4a1b0eac633006">MEM2MEM_TCR</a></td></tr>
<tr class="memdesc:abc4581bc1cf28ee5ad4a1b0eac633006"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x10C) Transmit Counter Register  <a href="#abc4581bc1cf28ee5ad4a1b0eac633006">More...</a><br /></td></tr>
<tr class="separator:abc4581bc1cf28ee5ad4a1b0eac633006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521315cb82a0b257a34f12b9e3b8f580"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a521315cb82a0b257a34f12b9e3b8f580">MEM2MEM_RNPR</a></td></tr>
<tr class="memdesc:a521315cb82a0b257a34f12b9e3b8f580"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x110) Receive Next Pointer Register  <a href="#a521315cb82a0b257a34f12b9e3b8f580">More...</a><br /></td></tr>
<tr class="separator:a521315cb82a0b257a34f12b9e3b8f580"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4706a8d550ce64c60a2ee050cc6e5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a2e4706a8d550ce64c60a2ee050cc6e5d">MEM2MEM_RNCR</a></td></tr>
<tr class="memdesc:a2e4706a8d550ce64c60a2ee050cc6e5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x114) Receive Next Counter Register  <a href="#a2e4706a8d550ce64c60a2ee050cc6e5d">More...</a><br /></td></tr>
<tr class="separator:a2e4706a8d550ce64c60a2ee050cc6e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f3bfae9b4b170e250bb297862c6ca66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a5f3bfae9b4b170e250bb297862c6ca66">MEM2MEM_TNPR</a></td></tr>
<tr class="memdesc:a5f3bfae9b4b170e250bb297862c6ca66"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x118) Transmit Next Pointer Register  <a href="#a5f3bfae9b4b170e250bb297862c6ca66">More...</a><br /></td></tr>
<tr class="separator:a5f3bfae9b4b170e250bb297862c6ca66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37d1457b65b9cd5f9c913e5751a31cd5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a37d1457b65b9cd5f9c913e5751a31cd5">MEM2MEM_TNCR</a></td></tr>
<tr class="memdesc:a37d1457b65b9cd5f9c913e5751a31cd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x11C) Transmit Next Counter Register  <a href="#a37d1457b65b9cd5f9c913e5751a31cd5">More...</a><br /></td></tr>
<tr class="separator:a37d1457b65b9cd5f9c913e5751a31cd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efd98b13597b2ad9b0741cf9bb36b0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a0efd98b13597b2ad9b0741cf9bb36b0e">MEM2MEM_PTCR</a></td></tr>
<tr class="memdesc:a0efd98b13597b2ad9b0741cf9bb36b0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x120) Transfer Control Register  <a href="#a0efd98b13597b2ad9b0741cf9bb36b0e">More...</a><br /></td></tr>
<tr class="separator:a0efd98b13597b2ad9b0741cf9bb36b0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3a96202393dc0bf705a9fad71c78bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mem2mem.xhtml#a3a3a96202393dc0bf705a9fad71c78bc">MEM2MEM_PTSR</a></td></tr>
<tr class="memdesc:a3a3a96202393dc0bf705a9fad71c78bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x124) Transfer Status Register  <a href="#a3a3a96202393dc0bf705a9fad71c78bc">More...</a><br /></td></tr>
<tr class="separator:a3a3a96202393dc0bf705a9fad71c78bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> hardware registers. </p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="a4f478317d8ede8dd689281a71dc2194b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f478317d8ede8dd689281a71dc2194b">&sect;&nbsp;</a></span>MEM2MEM_IDR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Mem2mem::MEM2MEM_IDR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x0C) Memory to Memory Interrupt Disable Register </p>

</div>
</div>
<a id="a84025cc2d1fc516d9c5670a79ff04d44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84025cc2d1fc516d9c5670a79ff04d44">&sect;&nbsp;</a></span>MEM2MEM_IER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Mem2mem::MEM2MEM_IER</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x08) Memory to Memory Interrupt Enable Register </p>

</div>
</div>
<a id="a42f835758ca19c2968ba31f11d65cd37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f835758ca19c2968ba31f11d65cd37">&sect;&nbsp;</a></span>MEM2MEM_IMR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Mem2mem::MEM2MEM_IMR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x10) Memory to Memory Interrupt Mask Register </p>

</div>
</div>
<a id="a7dc45404e318c8963d06b986644b4d30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dc45404e318c8963d06b986644b4d30">&sect;&nbsp;</a></span>MEM2MEM_ISR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Mem2mem::MEM2MEM_ISR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x14) Memory to Memory Interrupt Status Register </p>

</div>
</div>
<a id="a1ed32c26d04096d15f4a60423c8134df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ed32c26d04096d15f4a60423c8134df">&sect;&nbsp;</a></span>MEM2MEM_MR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_MR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x04) Memory to Memory Mode Register </p>

</div>
</div>
<a id="a0efd98b13597b2ad9b0741cf9bb36b0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0efd98b13597b2ad9b0741cf9bb36b0e">&sect;&nbsp;</a></span>MEM2MEM_PTCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#a7e25d9380f9ef903923964322e71f2f6">__O</a> uint32_t Mem2mem::MEM2MEM_PTCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x120) Transfer Control Register </p>

</div>
</div>
<a id="a3a3a96202393dc0bf705a9fad71c78bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a3a96202393dc0bf705a9fad71c78bc">&sect;&nbsp;</a></span>MEM2MEM_PTSR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Mem2mem::MEM2MEM_PTSR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x124) Transfer Status Register </p>

</div>
</div>
<a id="a52e57e44d2e64667ada11214f699932d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52e57e44d2e64667ada11214f699932d">&sect;&nbsp;</a></span>MEM2MEM_RCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_RCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x104) Receive Counter Register </p>

</div>
</div>
<a id="a2e4706a8d550ce64c60a2ee050cc6e5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e4706a8d550ce64c60a2ee050cc6e5d">&sect;&nbsp;</a></span>MEM2MEM_RNCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_RNCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x114) Receive Next Counter Register </p>

</div>
</div>
<a id="a521315cb82a0b257a34f12b9e3b8f580"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a521315cb82a0b257a34f12b9e3b8f580">&sect;&nbsp;</a></span>MEM2MEM_RNPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_RNPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x110) Receive Next Pointer Register </p>

</div>
</div>
<a id="a6857b872176d5534c4109180d42450ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6857b872176d5534c4109180d42450ed">&sect;&nbsp;</a></span>MEM2MEM_RPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_RPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x100) Receive Pointer Register </p>

</div>
</div>
<a id="abc4581bc1cf28ee5ad4a1b0eac633006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc4581bc1cf28ee5ad4a1b0eac633006">&sect;&nbsp;</a></span>MEM2MEM_TCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_TCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x10C) Transmit Counter Register </p>

</div>
</div>
<a id="a966a7af0089500081c6ebb438b49b903"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a966a7af0089500081c6ebb438b49b903">&sect;&nbsp;</a></span>MEM2MEM_THR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_THR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x00) Memory to Memory Transfer Holding Register </p>

</div>
</div>
<a id="a37d1457b65b9cd5f9c913e5751a31cd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37d1457b65b9cd5f9c913e5751a31cd5">&sect;&nbsp;</a></span>MEM2MEM_TNCR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_TNCR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x11C) Transmit Next Counter Register </p>

</div>
</div>
<a id="a5f3bfae9b4b170e250bb297862c6ca66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f3bfae9b4b170e250bb297862c6ca66">&sect;&nbsp;</a></span>MEM2MEM_TNPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_TNPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x118) Transmit Next Pointer Register </p>

</div>
</div>
<a id="aa9fae6a670c593e2f9bac9485ff9dc5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9fae6a670c593e2f9bac9485ff9dc5b">&sect;&nbsp;</a></span>MEM2MEM_TPR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#aec43007d9998a0a0e01faede4133d6be">__IO</a> uint32_t Mem2mem::MEM2MEM_TPR</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(<a class="el" href="struct_mem2mem.xhtml" title="Mem2mem hardware registers. ">Mem2mem</a> Offset: 0x108) Transmit Pointer Register </p>

</div>
</div>
<a id="a53572952776aea6127af32ec1e620d56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53572952776aea6127af32ec1e620d56">&sect;&nbsp;</a></span>Reserved1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="core__cm4_8h.xhtml#af63697ed9952cc71e1225efe205f6cd3">__I</a> uint32_t Mem2mem::Reserved1[58]</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>examples/atmel_samg55/src/ASF/sam/utils/cmsis/samg/samg55/include/component/<a class="el" href="component_2mem2mem_8h_source.xhtml">mem2mem.h</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.12-->
<!-- start footer part -->
<hr class="footer"/>
 <address class="footer">
 Copyright &copy; 2016 Novelda AS - <a href="http://www.xethru.com">www.xehtru.com</a><br />
 <small>
  Generated by &#160;<a href="http://www.doxygen.org/index.html">
  <img class="footer" src="doxygen.png" alt="doxygen"/>
  </a> 1.8.12
 </small>
 </address>
</body>
</html>
